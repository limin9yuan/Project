<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.contract.dao.AdditionalRecordsDao">

	<select id="get" resultType="com.bootdo.contract.domain.AdditionalRecordsDO">
		select `Record_ID`,`Contract_ID`,`Record_Name`,`Record_Bulid_Company`,`Record_Total_Price`,`Record_Description`,`Record_Reason`,
		`Record_Sales`,`Record_Attachment`,`Record_Related_Contract_ID`,`Record_Hardware_Equipment_List`,`Record_Software_Function_List`,`Record_Remarks`,`Record_Approval_Status`,`Record_Operator`,
		date_format(Record_Commit_Time,'%Y-%m-%d') `Record_Commit_Time`,
		date_format(Pre_Invoice_Date,'%Y-%m-%d') `Pre_Invoice_Date`,
		`Contract_Name`
		from contract_additional_records where Record_ID = #{value}
	</select>

	<select id="view" resultType="com.bootdo.contract.domain.AdditionalRecordsDO">
		select `Record_ID`,a.`Contract_ID`,b.Employee_Name as `Record_Name`,
		`Record_Bulid_Company`,
		`Record_Total_Price`,`Record_Description`,`Record_Reason`,
		c.Employee_Name as `Record_Sales`,`Record_Attachment`,
		d.Contract_Name as `Record_Related_Contract_ID`,
		`Record_Hardware_Equipment_List`,`Record_Software_Function_List`,
		`Record_Remarks`,`Record_Approval_Status`,`Record_Operator`,
		date_format(Record_Commit_Time,'%Y-%m-%d') `Record_Commit_Time`,
		date_format(Pre_Invoice_Date,'%Y-%m-%d') `Pre_Invoice_Date`,
		a.`Contract_Name`
		from contract_additional_records a
		LEFT JOIN inner_org_employee b on a.Record_Name = b.Employee_ID
		LEFT JOIN inner_org_employee c on a.Record_Sales = c.Employee_ID
		LEFT JOIN contract d on a.Record_Related_Contract_ID = d.Contract_ID
		where Record_ID = #{value}
	</select>

	<select id="list" resultType="com.bootdo.contract.domain.AdditionalRecordsDO">
		select distinct `Record_ID`,a.`Contract_ID`,`Record_Name`,u.Employee_Name as Contract_Record_Name,
		`Record_Bulid_Company`,`Record_Total_Price`,`Record_Description`,`Record_Reason`,
		`Record_Sales`,d.Employee_Name as Record_Sales_Name,`Record_Attachment`,
		`Record_Related_Contract_ID`,
		e.`Contract_Type` as `Contract_Type`,
		e.`Contract_Category` as `Contract_Category`,
		f.`Customer_Name` as `Customer_Name`,
		g.`Business_Name` as `Business_Name`,
		c.`Project_Name` as `Project_Name`,
		`Record_Hardware_Equipment_List`,`Record_Software_Function_List`,`Record_Remarks`,`Record_Approval_Status`,
		`Record_Operator`,`Record_Commit_Time`,a.`Contract_Name`,`Pre_Invoice_Date` ,
		u2.name as Record_Operator_Name, a.PROCESS_INSTANCE_ID
		from contract_additional_records a
		left join inner_org_employee u on a.`Record_Name`=u.`Employee_ID`
		left join sys_user u2 on a.`Record_Operator`=u2.`user_id`
		left join contract e on a.`Contract_ID`=e.`Contract_ID`
		left join inner_org_employee d on e.`Contract_Sales`=d.`Employee_ID`
		left join sales_company_customer f on e.`Customer_ID`=f.`Customer_ID`
		left join sales_business g on e.`Business_ID`=g.`Business_ID`
		left join(select `Project_ID`,`Project_Name` from pre_sales_project a where not exists(select 1 from development_project where Project_ID=a.Project_ID)
         UNION ALL
         select `Project_ID`,`Project_Name` from development_project
        )c on e.`Project_ID`=c.`Project_ID`
        <where>  
		  		  <if test="recordId != null and recordId != ''"> and Record_ID = #{recordId} </if>
		  		  <if test="contractId != null and contractId != ''"> and Contract_ID = #{contractId} </if>
		  		  <if test="recordName != null and recordName != ''"> and Record_Name = #{recordName} </if>
		  		  <if test="recordBulidCompany != null and recordBulidCompany != ''"> and Record_Bulid_Company = #{recordBulidCompany} </if>
		  		  <if test="recordTotalPrice != null and recordTotalPrice != ''"> and Record_Total_Price = #{recordTotalPrice} </if>
		  		  <if test="recordDescription != null and recordDescription != ''"> and Record_Description = #{recordDescription} </if>
		  		  <if test="recordReason != null and recordReason != ''"> and Record_Reason = #{recordReason} </if>
		  		  <if test="recordSales != null and recordSales != ''"> and Record_Sales = #{recordSales} </if>
		  		  <if test="recordAttachment != null and recordAttachment != ''"> and Record_Attachment = #{recordAttachment} </if>
		  		  <if test="recordRelatedContractId != null and recordRelatedContractId != ''"> and Record_Related_Contract_ID = #{recordRelatedContractId} </if>
		  		  <if test="recordHardwareEquipmentList != null and recordHardwareEquipmentList != ''"> and Record_Hardware_Equipment_List = #{recordHardwareEquipmentList} </if>
		  		  <if test="recordSoftwareFunctionList != null and recordSoftwareFunctionList != ''"> and Record_Software_Function_List = #{recordSoftwareFunctionList} </if>
		  		  <if test="recordRemarks != null and recordRemarks != ''"> and Record_Remarks = #{recordRemarks} </if>
		  		  <if test="recordApprovalStatus != null and recordApprovalStatus != ''"> and Record_Approval_Status = #{recordApprovalStatus} </if>
				<if test="userId != null and userId != ''"> and (a.Record_Operator = #{userId}
					OR EXISTS(SELECT 1
					FROM main_and_copy_person h
					LEFT JOIN inner_org_employee i on h.Employee_ID = i.Employee_ID
					WHERE i.Inner_User_ID = #{userName} and h.Table_Name = #{tableName} AND h.t_id = a.Record_ID)
					OR EXISTS(SELECT 1 from sys_user WHERE user_id = #{userId} and Identification = '1')) </if>
					<if test="recordCommitTime != null and recordCommitTime != ''"> and Record_Commit_Time = #{recordCommitTime} </if>
		  		  <if test="contractName != null and contractName != ''"> and Contract_Name = #{contractName} </if>
		  		  <if test="preInvoiceDate != null and preInvoiceDate != ''"> and Pre_Invoice_Date = #{preInvoiceDate} </if>
		  		  
		  		  <if test="customerId != null and customerId != ''"> and e.`Customer_ID` = #{customerId} </if>
		  		  <if test="businessId != null and businessId != ''"> and e.`Business_ID` = #{businessId} </if>
		  		  <if test="projectId != null and projectId != ''"> and e.Project_ID = #{projectId} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by Record_ID desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) 
        from contract_additional_records a
		left join inner_org_employee u on a.`Record_Name`=u.`Employee_ID`
		left join sys_user u2 on a.`Record_Operator`=u2.`user_id`
		left join contract e on a.`Contract_ID`=e.`Contract_ID`
		left join inner_org_employee d on e.`Contract_Sales`=d.`Employee_ID`
		left join sales_company_customer f on e.`Customer_ID`=f.`Customer_ID`
		left join sales_business g on e.`Business_ID`=g.`Business_ID`
		left join pre_sales_project c on e.`Project_ID`=c.`Project_ID`
		 <where>  
		  		  <if test="recordId != null and recordId != ''"> and Record_ID = #{recordId} </if>
		  		  <if test="contractId != null and contractId != ''"> and Contract_ID = #{contractId} </if>
		  		  <if test="recordName != null and recordName != ''"> and Record_Name = #{recordName} </if>
		  		  <if test="recordBulidCompany != null and recordBulidCompany != ''"> and Record_Bulid_Company = #{recordBulidCompany} </if>
		  		  <if test="recordTotalPrice != null and recordTotalPrice != ''"> and Record_Total_Price = #{recordTotalPrice} </if>
		  		  <if test="recordDescription != null and recordDescription != ''"> and Record_Description = #{recordDescription} </if>
		  		  <if test="recordReason != null and recordReason != ''"> and Record_Reason = #{recordReason} </if>
		  		  <if test="recordSales != null and recordSales != ''"> and Record_Sales = #{recordSales} </if>
		  		  <if test="recordAttachment != null and recordAttachment != ''"> and Record_Attachment = #{recordAttachment} </if>
		  		  <if test="recordRelatedContractId != null and recordRelatedContractId != ''"> and Record_Related_Contract_ID = #{recordRelatedContractId} </if>
		  		  <if test="recordHardwareEquipmentList != null and recordHardwareEquipmentList != ''"> and Record_Hardware_Equipment_List = #{recordHardwareEquipmentList} </if>
		  		  <if test="recordSoftwareFunctionList != null and recordSoftwareFunctionList != ''"> and Record_Software_Function_List = #{recordSoftwareFunctionList} </if>
		  		  <if test="recordRemarks != null and recordRemarks != ''"> and Record_Remarks = #{recordRemarks} </if>
		  		  <if test="recordApprovalStatus != null and recordApprovalStatus != ''"> and Record_Approval_Status = #{recordApprovalStatus} </if>
		  		  <if test="recordOperator != null and recordOperator != ''"> and Record_Operator = #{recordOperator} </if>
		  		  <if test="recordCommitTime != null and recordCommitTime != ''"> and Record_Commit_Time = #{recordCommitTime} </if>
		  		  <if test="contractName != null and contractName != ''"> and Contract_Name = #{contractName} </if>
		  		  <if test="preInvoiceDate != null and preInvoiceDate != ''"> and Pre_Invoice_Date = #{preInvoiceDate} </if>
		  		  
		  		  <if test="customerId != null and customerId != ''"> and e.`Customer_ID` = #{customerId} </if>
		  		  <if test="businessId != null and businessId != ''"> and e.`Business_ID` = #{businessId} </if>
		  		  <if test="projectId != null and projectId != ''"> and e.Project_ID = #{projectId} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.contract.domain.AdditionalRecordsDO" useGeneratedKeys="true" keyProperty="recordId">
		insert into contract_additional_records
		(
			`Record_ID`, 
			`Contract_ID`, 
			`Record_Name`, 
			`Record_Bulid_Company`, 
			`Record_Total_Price`, 
			`Record_Description`, 
			`Record_Reason`, 
			`Record_Sales`, 
			`Record_Attachment`, 
			`Record_Related_Contract_ID`, 
			`Record_Hardware_Equipment_List`, 
			`Record_Software_Function_List`, 
			`Record_Remarks`, 
			`Record_Approval_Status`, 
			`Record_Operator`, 
			`Record_Commit_Time`, 
			`Contract_Name`, 
			`Pre_Invoice_Date`
		)
		values
		(
			#{recordId}, 
			#{recordRelatedContractId}, 
			#{recordName}, 
			#{recordBulidCompany}, 
			#{recordTotalPrice}, 
			#{recordDescription}, 
			#{recordReason}, 
			#{recordSales}, 
			#{recordAttachment}, 
			#{recordRelatedContractId}, 
			#{recordHardwareEquipmentList}, 
			#{recordSoftwareFunctionList}, 
			#{recordRemarks}, 
			#{recordApprovalStatus}, 
			#{recordOperator}, 
			#{recordCommitTime}, 
			#{contractName}, 
			#{preInvoiceDate}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.contract.domain.AdditionalRecordsDO">
		update contract_additional_records 
		<set>
			<if test="contractId != null">`Contract_ID` = #{contractId}, </if>
			<if test="recordName != null">`Record_Name` = #{recordName}, </if>
			<if test="recordBulidCompany != null">`Record_Bulid_Company` = #{recordBulidCompany}, </if>
			<if test="recordTotalPrice != null">`Record_Total_Price` = #{recordTotalPrice}, </if>
			<if test="recordDescription != null">`Record_Description` = #{recordDescription}, </if>
			<if test="recordReason != null">`Record_Reason` = #{recordReason}, </if>
			<if test="recordSales != null">`Record_Sales` = #{recordSales}, </if>
			<if test="recordAttachment != null">`Record_Attachment` = #{recordAttachment}, </if>
			<if test="recordRelatedContractId != null">`Record_Related_Contract_ID` = #{recordRelatedContractId}, </if>
			<if test="recordHardwareEquipmentList != null">`Record_Hardware_Equipment_List` = #{recordHardwareEquipmentList}, </if>
			<if test="recordSoftwareFunctionList != null">`Record_Software_Function_List` = #{recordSoftwareFunctionList}, </if>
			<if test="recordRemarks != null">`Record_Remarks` = #{recordRemarks}, </if>
			<if test="recordApprovalStatus != null">`Record_Approval_Status` = #{recordApprovalStatus}, </if>
			<if test="recordOperator != null">`Record_Operator` = #{recordOperator}, </if>
			<if test="recordCommitTime != null">`Record_Commit_Time` = #{recordCommitTime}, </if>
			<if test="contractName != null">`Contract_Name` = #{contractName}, </if>
			<if test="preInvoiceDate != null">`Pre_Invoice_Date` = #{preInvoiceDate},</if>
			<if test="processInstanceId != null">`PROCESS_INSTANCE_ID` = #{processInstanceId}</if>
		</set>
		where Record_ID = #{recordId}
	</update>
	
	<delete id="remove">
		delete from contract_additional_records where Record_ID = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from contract_additional_records where Record_ID in 
		<foreach item="recordId" collection="array" open="(" separator="," close=")">
			#{recordId}
		</foreach>
	</delete>

</mapper>