<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.sales.dao.SalesProjectDao">

	<select id="countAllProject" resultType="int">
		select count(*)
		from
		(select a.`Project_Name`,a.`Project_Create_Time`,a.`Project_Operate_Time`,b.`name` as `Project_Creator_Name`,a.`Project_Operator`,a.`Project_Business`,
     c.Business_Name as `Project_Busines_Name`,d.Employee_Name as `Project_Sales_Name`,e.Employee_Name as `Project_Manager_Name`,a.`Project_Begin_Date`,a.`Project_End_Date`,a.					`Project_Gategory`,a.`Project_Phase`
		from pre_sales_project a
		LEFT JOIN sys_user b on a.`Project_Creator`=b.`user_id`
    left join sales_business c on a.`Project_Business`=c.`Business_ID`
		left join inner_org_employee d on a.`Project_Sales`=d.`Employee_ID`
		left join inner_org_employee e on a.`Project_Manager`=e.`Employee_ID`
		WHERE not exists (select 1 from development_project where Project_ID=a.Project_ID)
         UNION ALL
         select a.Project_Name,a.Project_Create_Time,a.Project_Operate_Time,d.`name` as Project_Creator_Name,a.Project_Operator,b.Project_Business,
				  c.Business_Name as `Project_Busines_Name`, e.Employee_Name as `Project_Sales_Name`,f.Employee_Name as `Project_Manager_Name`, b.Project_Begin_Date, b.Project_End_Date,
					b.Project_Gategory, b.Project_Phase
					from development_project a
					LEFT JOIN pre_sales_project b on a.Project_ID = b.Project_ID
					LEFT JOIN sales_business c on b.Project_Business = c.Business_ID
					LEFT JOIN sys_user d on a.Project_Creator = d.user_id
					LEFT JOIN inner_org_employee e on b.Project_Sales = e.Employee_ID
					LEFT JOIN inner_org_employee f on b.Project_Sales = f.Employee_ID)a
	</select>

	<select id="listAllProject" resultType="com.bootdo.sales.domain.SalesProjectDO">
		select
		a.Project_ID,a.`Project_Name`,a.`Project_Create_Time`,a.`Project_Operate_Time`,a.`Project_Creator_Name`,a.`Project_Operator`,a.`Project_Business`,
		a.`Project_Busines_Name`,a.`Project_Sales_Name`,a.`Project_Manager_Name`,a.`Project_Begin_Date`,a.`Project_End_Date`,a.`Project_Gategory`,a.`Project_Phase`

		from
		(select a.Project_ID,a.`Project_Name`,a.`Project_Create_Time`,a.`Project_Operate_Time`,b.`name` as `Project_Creator_Name`,a.`Project_Operator`,a.`Project_Business`,
		c.Business_Name as `Project_Busines_Name`,d.Employee_Name as `Project_Sales_Name`,e.Employee_Name as `Project_Manager_Name`,a.`Project_Begin_Date`,a.`Project_End_Date`,a.					`Project_Gategory`,a.`Project_Phase`
		from pre_sales_project a
		LEFT JOIN sys_user b on a.`Project_Creator`=b.`user_id`
		left join sales_business c on a.`Project_Business`=c.`Business_ID`
		left join inner_org_employee d on a.`Project_Sales`=d.`Employee_ID`
		left join inner_org_employee e on a.`Project_Manager`=e.`Employee_ID`
		WHERE not exists (select 1 from development_project where Project_ID=a.Project_ID)
		UNION ALL
		select a.Project_ID,a.Project_Name,a.Project_Create_Time,a.Project_Operate_Time,d.`name` as Project_Creator_Name,a.Project_Operator,b.Project_Business,
		c.Business_Name as `Project_Busines_Name`, e.Employee_Name as `Project_Sales_Name`,f.Employee_Name as `Project_Manager_Name`, b.Project_Begin_Date, b.Project_End_Date,
		b.Project_Gategory, b.Project_Phase
		from development_project a
		LEFT JOIN pre_sales_project b on a.Project_ID = b.Project_ID
		LEFT JOIN sales_business c on b.Project_Business = c.Business_ID
		LEFT JOIN sys_user d on a.Project_Creator = d.user_id
		LEFT JOIN inner_org_employee e on b.Project_Sales = e.Employee_ID
		LEFT JOIN inner_org_employee f on b.Project_Sales = f.Employee_ID)a
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by a.Project_ID desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="get" resultType="com.bootdo.sales.domain.SalesProjectDO">
		select `Project_ID`,`Project_Business`,`Project_Creator`,`Customer_ID`,`Project_Name`,`Project_Sales`,
		date_format(Project_Begin_Date,'%Y-%m-%d') `Project_Begin_Date`,
		date_format(Project_End_Date,'%Y-%m-%d') `Project_End_Date`,
		`Project_Manager`,`Project_Gategory`,`Project_Phase`,`Project_Description`,
		`Project_Old_ID`,`Project_Remarks`,`Project_Create_Time`,`Project_Operator`,`Project_Operate_Time`
		from pre_sales_project
		where Project_ID = #{value}
	</select>

	<select id="getProjectId" resultType="String">
		select case when bid is null then CONCAT(#{projectBusiness},'001')
			        else bid end v from (select max(project_id)+1 bid
								         from pre_sales_project
								         where project_business=#{projectBusiness}) a
	</select>

	<select id="list" resultType="com.bootdo.sales.domain.SalesProjectDO">
		select `Project_ID`,
		a.`Project_Business`,b.`Business_Name` as `Project_Busines_Name`,
		a.`Project_Creator`,
		e.`name` as `Project_Creator_Name`,
		a.`Customer_ID`,
		`Project_Name`,`Project_Sales`,
		`Project_Begin_Date`,`Project_End_Date`,`Project_Manager`,
		 c.Employee_Name as `Project_Sales_Name`,
		 d.Employee_Name as `Project_Manager_Name`,
		`Project_Gategory`,
		`Project_Phase`,`Project_Description`,`Project_Old_ID`,`Project_Remarks`,
		`Project_Create_Time`,e.name as `Project_Operator`,
		f.name as Project_Operator_Name,`Project_Operate_Time` 
		from pre_sales_project a
		left join sales_business b on a.`Project_Business`=b.`Business_ID`
		left join inner_org_employee c on a.`Project_Sales`=c.`Employee_ID`
		left join inner_org_employee d on a.`Project_Manager`=d.`Employee_ID`
		left join sys_user e on a.`Project_Creator`=e.`user_id`
		left join sys_user f on a.`Project_Operator`=f.`user_id`
		left join sales_company_customer g on a.`Customer_ID`=g.`Customer_ID`
        <where>  
        		  <if test="projectOperator !=null and projectOperator !=''">and ( a.Project_Operator = #{projectOperator}
OR EXISTS( SELECT 1 FROM main_and_copy_person f LEFT JOIN inner_org_employee g ON f.Employee_ID = g.Employee_ID WHERE g.Inner_User_ID = #{userName} AND f.Table_Name = 'pre_sales_project' AND f.T_ID =a.Project_ID) 
OR EXISTS(SELECT 1 FROM sys_user WHERE user_id = #{projectOperator} AND Identification = 1))</if>
		  		  <if test="projectId != null and projectId != ''"> and Project_ID = #{projectId} </if>
		  		  <if test="projectBusiness != null and projectBusiness != ''"> and Project_Business = #{projectBusiness} </if>
		  		  <if test="projectCreator != null and projectCreator != ''"> and Project_Creator = #{projectCreator} </if>
		  		  <if test="customerId != null and customerId != ''"> and Customer_ID = #{customerId} </if>
		  		  <if test="projectBeginDate != null and projectBeginDate != ''"> and Project_Begin_Date = #{projectBeginDate} </if>
		  		  <if test="projectEndDate != null and projectEndDate != ''"> and Project_End_Date = #{projectEndDate} </if>
		  		  <if test="projectManager != null and projectManager != ''"> and Project_Manager = #{projectManager} </if>
		  		  <if test="projectGategory != null and projectGategory != ''"> and Project_Gategory = #{projectGategory} </if>
		  		  <if test="projectPhase != null and projectPhase != ''"> and Project_Phase = #{projectPhase} </if>
		  		  <if test="projectDescription != null and projectDescription != ''"> and Project_Description = #{projectDescription} </if>
		  		  <if test="projectOldId != null and projectOldId != ''"> and Project_Old_ID = #{projectOldId} </if>
		  		  <if test="projectRemarks != null and projectRemarks != ''"> and Project_Remarks = #{projectRemarks} </if>
		  		  <if test="projectCreateTime != null and projectCreateTime != ''"> and Project_Create_Time = #{projectCreateTime} </if>
		  		  <if test="projectOperateTime != null and projectOperateTime != ''"> and Project_Operate_Time = #{projectOperateTime} </if>
		  		  
		  		  <if test="province != null and province != ''"> and g.Customer_Province = #{province} </if>
		  		  <if test="city != null and city != ''"> and g.Customer_City = #{city} </if>
		  		  <if test="area != null and area != ''"> and g.Customer_County = #{area} </if>
		  		  <if test="projectName != null and projectName != ''"> and Project_Name = #{projectName} </if>
		  		  <if test="projectSales != null and projectSales != ''"> and Project_Sales = #{projectSales} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by Project_ID desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) 
        from pre_sales_project a
		left join sales_business b on a.`Project_Business`=b.`Business_ID`
		left join inner_org_employee c on a.`Project_Sales`=c.`Employee_ID`
		left join inner_org_employee d on a.`Project_Manager`=d.`Employee_ID`
		left join sys_user e on a.`Project_Creator`=e.`user_id`
		left join sys_user f on a.`Project_Operator`=f.`user_id`
		left join sales_company_customer g on a.`Customer_ID`=g.`Customer_ID`
		<where>  
				  <if test="projectOperator !=null and projectOperator !=''">and ( a.Project_Operator = #{projectOperator}
OR EXISTS( SELECT 1 FROM main_and_copy_person f LEFT JOIN inner_org_employee g ON f.Employee_ID = g.Employee_ID WHERE g.Inner_User_ID = #{userName} AND f.Table_Name = 'pre_sales_project' AND f.T_ID =a.Project_ID) 
OR EXISTS(SELECT 1 FROM sys_user WHERE user_id = #{projectOperator} AND Identification = 1))</if>
		  		  <if test="projectId != null and projectId != ''"> and Project_ID = #{projectId} </if>
		  		  <if test="projectBusiness != null and projectBusiness != ''"> and Project_Business = #{projectBusiness} </if>
		  		  <if test="projectCreator != null and projectCreator != ''"> and Project_Creator = #{projectCreator} </if>
		  		  <if test="customerId != null and customerId != ''"> and Customer_ID = #{customerId} </if>
		  		  <if test="projectBeginDate != null and projectBeginDate != ''"> and Project_Begin_Date = #{projectBeginDate} </if>
		  		  <if test="projectEndDate != null and projectEndDate != ''"> and Project_End_Date = #{projectEndDate} </if>
		  		  <if test="projectManager != null and projectManager != ''"> and Project_Manager = #{projectManager} </if>
		  		  <if test="projectGategory != null and projectGategory != ''"> and Project_Gategory = #{projectGategory} </if>
		  		  <if test="projectPhase != null and projectPhase != ''"> and Project_Phase = #{projectPhase} </if>
		  		  <if test="projectDescription != null and projectDescription != ''"> and Project_Description = #{projectDescription} </if>
		  		  <if test="projectOldId != null and projectOldId != ''"> and Project_Old_ID = #{projectOldId} </if>
		  		  <if test="projectRemarks != null and projectRemarks != ''"> and Project_Remarks = #{projectRemarks} </if>
		  		  <if test="projectCreateTime != null and projectCreateTime != ''"> and Project_Create_Time = #{projectCreateTime} </if>
		  		  <if test="projectOperateTime != null and projectOperateTime != ''"> and Project_Operate_Time = #{projectOperateTime} </if>
		  		  
		  		  <if test="province != null and province != ''"> and g.Customer_Province = #{province} </if>
		  		  <if test="city != null and city != ''"> and g.Customer_City = #{city} </if>
		  		  <if test="area != null and area != ''"> and g.Customer_County = #{area} </if>
		  		  <if test="projectName != null and projectName != ''"> and Project_Name = #{projectName} </if>
		  		  <if test="projectSales != null and projectSales != ''"> and Project_Sales = #{projectSales} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.sales.domain.SalesProjectDO" useGeneratedKeys="true" keyProperty="projectId">
		insert into pre_sales_project
		(
			`Project_ID`, 
			`Project_Business`, 
			`Customer_ID`, 
			`Project_Name`, 
			`Project_Sales`, 
			`Project_Begin_Date`, 
			`Project_End_Date`, 
			`Project_Manager`, 
			`Project_Gategory`, 
			`Project_Phase`, 
			`Project_Description`, 
			`Project_Old_ID`, 
			`Project_Remarks`,
			`Project_Creator`,
			`Project_Create_Time`,
			`Project_Operator`
		)
		values
		(
			#{projectId},
			#{projectBusiness}, 
			(select Customer_ID from sales_business where business_id=#{projectBusiness}),
			#{projectName}, 
			#{projectSales}, 
			#{projectBeginDate}, 
			#{projectEndDate}, 
			#{projectManager}, 
			#{projectGategory}, 
			#{projectPhase}, 
			#{projectDescription}, 
			#{projectOldId}, 
			#{projectRemarks},
			#{projectCreator}, 
			DATE_FORMAT(SYSDATE(),'%Y-%m-%d %H:%i:%s'),
			#{projectOperator}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.sales.domain.SalesProjectDO">
		update pre_sales_project 
		<set>
		    <if test="projectBusiness != null">`Project_Business` = #{projectBusiness}, </if>
			<if test="projectBusiness != null">`Customer_ID` = (select Customer_ID from sales_business where business_id=#{projectBusiness}), </if>
			<if test="projectName != null">`Project_Name` = #{projectName}, </if>
			<if test="projectSales != null">`Project_Sales` = #{projectSales}, </if>
			<if test="projectBeginDate != null">`Project_Begin_Date` = #{projectBeginDate}, </if>
			<if test="projectEndDate != null">`Project_End_Date` = #{projectEndDate}, </if>
			<if test="projectManager != null">`Project_Manager` = #{projectManager}, </if>
			<if test="projectGategory != null">`Project_Gategory` = #{projectGategory}, </if>
			<if test="projectPhase != null">`Project_Phase` = #{projectPhase}, </if>
			<if test="projectDescription != null">`Project_Description` = #{projectDescription}, </if>
			<if test="projectOldId != null">`Project_Old_ID` = #{projectOldId}, </if>
			<if test="projectRemarks != null">`Project_Remarks` = #{projectRemarks}, </if>
			<if test="projectOperator != null">`Project_Operator` = #{projectOperator}, </if>
			`Project_Operate_Time` = CURRENT_TIMESTAMP()
		</set>
		where Project_ID = #{projectId}
	</update>
	
	<delete id="remove">
		delete from pre_sales_project where Project_ID = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from pre_sales_project where Project_ID in 
		<foreach item="projectId" collection="array" open="(" separator="," close=")">
			#{projectId}
		</foreach>
	</delete>
	
	<select id="listDic" resultType="com.bootdo.common.domain.DictDO">
		select `Project_ID` value,concat(`Project_ID`,' ',`Project_Name`) name
		from pre_sales_project
	</select>
	
	<select id="listAllDic" resultType="com.bootdo.common.domain.DictDO">
		
         select value,name
		from
		(select `Project_ID` value,concat(`Project_ID`,' ',`Project_Name`) name from pre_sales_project a
		WHERE not exists (select 1 from development_project where Project_ID=a.Project_ID)
         UNION ALL
         select `Project_ID` value,concat(`Project_ID`,' ',`Project_Name`) name from development_project)a
	</select>
	
	<select id="listAllDicByArea" resultType="com.bootdo.common.domain.DictDO">

         select value,name
		from
		(select `Project_ID` value,concat(`Project_ID`,' ',`Project_Name`) name from pre_sales_project
		left join 
         UNION ALL
         select `Project_ID` value,concat(`Project_ID`,' ',`Project_Name`) name from development_project)a
	</select>
	
	<insert id="saveTemplate" parameterType="com.bootdo.sales.domain.SalesProjectDO" useGeneratedKeys="true" keyProperty="projectId">
		insert into pre_sales_project
		(
			`Project_ID`, 
			`Project_Business`, 
			`Customer_ID`, 
			`Project_Name`, 
			`Project_Sales`, 
			`Project_Begin_Date`, 
			`Project_End_Date`, 
			`Project_Manager`, 
			`Project_Gategory`, 
			`Project_Phase`, 
			`Project_Description`, 
			`Project_Old_ID`, 
			`Project_Remarks`,
			`Project_Creator`,
			`Project_Create_Time`,
			`Project_Operator`
		)
		values
		(
			#{projectId},
			#{projectBusiness}, 
			(select Customer_ID from sales_company_customer where Customer_Name=#{customerId}),
			#{projectName}, 
			(select Employee_ID from inner_org_employee where Employee_Name=#{projectSales}), 
			#{projectBeginDate}, 
			#{projectEndDate}, 
			(select Employee_ID from inner_org_employee where Employee_Name=#{projectManager}), 
			(select name from sys_dict where value=#{projectGategory} and type='sales_project_gategory'), 
			#{projectPhase}, 
			#{projectDescription}, 
			#{projectOldId}, 
			#{projectRemarks},
			#{projectCreator}, 
			DATE_FORMAT(SYSDATE(),'%Y-%m-%d %H:%i:%s'),
			#{projectOperator}
		)
	</insert>
	
</mapper>