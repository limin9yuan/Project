<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.system.dao.UserDao">

	<select id="get" resultType="com.bootdo.system.domain.UserDO">
		select
		`user_id`,`username`,`name`,`password`,`dept_id`,`email`,
		`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,Identification
		from sys_user where user_id = #{value}
	</select>

	<select id="getErrorCount" resultType="com.bootdo.system.domain.UserDO">
		select
		login_error_count
		from sys_user where username = #{value}
	</select>

	<select id="list" resultType="com.bootdo.system.domain.UserDO">
		select
		`user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,Identification
		from sys_user
		<where>
			<if test="Identification !=null and Identification !=''"> and Identification=#{Identification}</if>
			<if test="userId != null and userId != ''"> and user_id = #{userId} </if>
			<if test="username != null and username != ''"> and username = #{username} </if>
			<if test="name != null and name != ''"> and name like #{name} </if>
			<if test="password != null and password != ''"> and password = #{password} </if>
			<if test="deptId != null and deptId != ''"> and find_in_set(dept_id, getChildLst(#{deptId})) </if>
			<if test="email != null and email != ''"> and email = #{email} </if>
			<if test="mobile != null and mobile != ''"> and mobile = #{mobile} </if>
			<if test="status != null and status != ''"> and status = #{status} </if>
			<if test="userIdCreate != null and userIdCreate != ''"> and user_id_create = #{userIdCreate} </if>
			<if test="gmtCreate != null and gmtCreate != ''"> and gmt_create = #{gmtCreate} </if>
			<if test="gmtModified != null and gmtModified != ''"> and gmt_modified = #{gmtModified} </if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by user_id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="count" resultType="int">
		select count(*) from sys_user
		<where>
		<if test="Identification !=null and Identification !=''"> and Identification=#{Identification}</if>
			<if test="userId != null and userId != ''"> and user_id = #{userId} </if>
			<if test="username != null and username != ''"> and username = #{username} </if>
			<if test="name != null and name != ''"> and name = #{name} </if>
			<if test="password != null and password != ''"> and password = #{password} </if>
			<if test="deptId != null and deptId != ''"> and find_in_set(dept_id, getChildLst(#{deptId})) </if>
			<if test="email != null and email != ''"> and email = #{email} </if>
			<if test="mobile != null and mobile != ''"> and mobile = #{mobile} </if>
			<if test="status != null and status != ''"> and status = #{status} </if>
			<if test="userIdCreate != null and userIdCreate != ''"> and user_id_create = #{userIdCreate} </if>
			<if test="gmtCreate != null and gmtCreate != ''"> and gmt_create = #{gmtCreate} </if>
			<if test="gmtModified != null and gmtModified != ''"> and gmt_modified = #{gmtModified} </if>
		</where>
	</select>

	<insert id="save" parameterType="com.bootdo.system.domain.UserDO"
		useGeneratedKeys="true" keyProperty="userId">
		insert into sys_user
		(
		`username`,
		`name`,
		`password`,
		`dept_id`,
		`email`,
		`mobile`,
		`status`,
		`user_id_create`,
		`gmt_create`,
		Identification
		)
		values
		(
		#{username},
		#{name},
		#{password},
		#{deptId},
		#{email},
		#{mobile},
		#{status},
		#{userIdCreate},
		now(),
		#{Identification}
		)
	</insert>

	<update id="update" parameterType="com.bootdo.system.domain.UserDO">
		update sys_user
		<set> 
			 `gmt_modified`=now(),
			<if test="username != null">`username` = #{username}, </if>
			<if test="name != null">`name` = #{name}, </if>
			<if test="password != null">`password` = #{password}, </if>
			<if test="deptId != null">`dept_id` = #{deptId}, </if>
			<if test="email != null">`email` = #{email}, </if>
			<if test="mobile != null">`mobile` = #{mobile}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="userIdCreate != null">`user_id_create` = #{userIdCreate}, </if>
			<if test="gmtModified != null">`gmt_modified` = #{gmtModified},</if>
			<if test="Identification !=null">Identification=#{Identification},</if>
			<if test="loginErrorCount !=null">login_error_count=#{loginErrorCount}</if>
		</set>
		where user_id = #{userId}
	</update>

	<update id="updateErrorCount" parameterType="com.bootdo.system.domain.UserDO">
		update sys_user
		<set>
			`gmt_modified`=now(),
			login_error_count=login_error_count+1
		</set>
		where username = #{username}
	</update>

	<update id="resetErrorCount" parameterType="com.bootdo.system.domain.UserDO">
		update sys_user
		<set>
			`gmt_modified`=now(),
			login_error_count=0
		</set>
		where username = #{username}
	</update>

	<delete id="remove">
		delete from sys_user where user_id = #{value}
	</delete>

	<delete id="batchRemove">
		delete from sys_user where user_id in
		<foreach item="userId" collection="array" open="(" separator=","
			close=")">
			#{userId}
		</foreach>
	</delete>

	<select id="listAllDept" resultType="Long">
		select DISTINCT dept_id from sys_user
	</select>
	
	<!-- 申請人 -->
	<select id="listDic" resultType="com.bootdo.common.domain.DictDO">
		select `user_id` value,concat(`user_id`,' ',`name`) name
		from sys_user
	</select>
	
	<select id="getByUsername" resultType="com.bootdo.system.domain.UserDO">
		select
		`user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`
		from sys_user where username = #{value}
	</select>
</mapper>