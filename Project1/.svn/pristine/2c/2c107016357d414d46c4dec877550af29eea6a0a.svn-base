<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.payment.dao.ProjectExpenditureDao">
	<select id="get" resultType="com.bootdo.payment.domain.ProjectExpenditureDO">
		select a.Project_ID,a.Customer_ID,Collection_ID, a.Project_Name,a.Project_Sales,
		a.Project_Begin_Date,
		a.Project_End_Date,a.Project_Owner, a.Project_Manager,Project_Development_Begin_Date,
		Project_Development_End_Date,a.Project_Gategory, a.Project_Phase,a.Project_Description,
		a.Project_Old_ID, a.Project_Remarks,a.Project_Operator,a.Project_Operate_Time,
		Customer_Name,Dept_Name,
		u.name as projectOperatorName, b.Budget_Profit_Rate,h.Business_ID
		FROM development_project a
		left join sales_company_customer s on a.Customer_ID = s.Customer_ID
		left join project_project_dept p on a.Project_ID = p.Project_ID
		left join inner_org_dept i on p.Dept_ID = i.Dept_ID
		left join sys_user u ON a.Project_Operator = u.user_id
		left join (SELECT Project_ID, MAX(Budget_Profit_Rate)as Budget_Profit_Rate from project_budget) b on a.Project_ID = b.Project_ID
		left join pre_sales_project g on a.Project_Related_ID = g.Project_ID
		left join sales_business h on g.Project_Business = h.Business_ID
		where a.Project_ID = #{value}
	</select>

	<select id="listTotalIncome" resultType="com.bootdo.payment.domain.ProjectExpenditureDO">
		SELECT (sum(IFNULL(TimeSheet_Normal,0)+IFNULL(TimeSheet_Overtime,0))*c.Employee_Salary_Hour) as laborCost,
		IFNULL(f.Received_Price,0)as rPrice,
		IFNULL((g.Expenses_Normal_Price + h.Expenses_Travel_Pay_Price),0) as totalExpenses,
		(IFNULL(f.Received_Price,0) - (IFNULL((g.Expenses_Normal_Price + h.Expenses_Travel_Pay_Price),0) + (sum(IFNULL(TimeSheet_Normal,0)+IFNULL(TimeSheet_Overtime,0))*c.Employee_Salary_Hour) +  IFNULL(i.Purchase_Total_Price,0)))as profit,
		IFNULL(i.Purchase_Total_Price,0)as pTotalPrice, IFNULL(j.Budget_Profit_Rate,0)as predictProfitRate,
		IFNULL(((IFNULL(f.Received_Price,0) - (IFNULL((g.Expenses_Normal_Price + h.Expenses_Travel_Pay_Price),0) + (sum(IFNULL(TimeSheet_Normal,0)+IFNULL(TimeSheet_Overtime,0))*c.Employee_Salary_Hour) +  IFNULL(i.Purchase_Total_Price,0)))/IFNULL(f.Received_Price,0)),0)as actualProfitRate
		FROM development_project a
		LEFT JOIN timesheet b on a.Project_ID = b.Project_ID
		LEFT JOIN inner_org_employee c on b.Employee_ID = c.Employee_ID
		LEFT JOIN (SELECT d.Received_Price,e.Project_ID
							 FROM payment_received d
							 LEFT JOIN contract e on d.Contract_ID= e.Contract_ID
							 WHERE e.Project_ID = #{projectId} and e.Contract_Approval_Status = 1) as f on a.Project_ID = f.Project_ID
		LEFT JOIN approval_expenses_normal g on a.Project_ID = g.Project_ID
		LEFT JOIN approval_expenses__travel h on a.Project_ID = h.Project_ID
		LEFT JOIN purchase i on a.Project_ID = i.Project_ID
		LEFT JOIN project_budget j on a.Project_ID = j.Project_ID
		where a.Project_ID = #{projectId}
		GROUP BY a.Project_ID
	</select>

	<select id="countTotalIncome" resultType="int">
		SELECT COUNT(DISTINCT a.Project_ID)
		FROM development_project a
		LEFT JOIN timesheet b on a.Project_ID = b.Project_ID
		LEFT JOIN inner_org_employee c on b.Employee_ID = c.Employee_ID
		LEFT JOIN (SELECT d.Received_Price,e.Project_ID
							 FROM payment_received d
							 LEFT JOIN contract e on d.Contract_ID= e.Contract_ID
							 WHERE e.Project_ID = #{projectId} and e.Contract_Approval_Status = 1) as f on a.Project_ID = f.Project_ID
		LEFT JOIN approval_expenses_normal g on a.Project_ID = g.Project_ID
		LEFT JOIN approval_expenses__travel h on a.Project_ID = h.Project_ID
		LEFT JOIN purchase i on a.Project_ID = i.Project_ID
		LEFT JOIN project_budget j on a.Project_ID = j.Project_ID
		where a.Project_ID = #{projectId}
	</select>

	<select id="listReceive" resultType="com.bootdo.payment.domain.ProjectExpenditureDO">
		SELECT Received_ID as Id, Received_Time as rTime, Received_Price as rPrice, Received_Type as rType,
		Receivable_Price as receivablePrice
		FROM payment_received a
		LEFT JOIN contract b on a.Contract_ID = b.Contract_ID
		WHERE b.Project_ID = #{projectId}
	</select>

	<select id="countReceive" resultType="int">
		SELECT COUNT(b.Project_ID)
		FROM payment_received a
		LEFT JOIN contract b on a.Contract_ID = b.Contract_ID
		WHERE b.Project_ID = #{projectId}
	</select>

	<select id="sumReceive" resultType="com.bootdo.payment.domain.ProjectExpenditureDO">
		SELECT sum(a.Received_Price) as sumReceive
		FROM payment_received a
		LEFT JOIN contract b on a.Contract_ID = b.Contract_ID
		WHERE b.Project_ID = #{projectId}
	</select>

	<select id="listPurchase" resultType="com.bootdo.payment.domain.ProjectExpenditureDO">
		SELECT Purchase_ID as Id, Purchase_Name as pName, Purchase_TIme as pTime, b.Employee_Name as pPerson, Purchase_Total_Price as pTotalPrice
		FROM purchase a
		LEFT JOIN inner_org_employee b on a.Purchase_Person = b.Employee_ID
		WHERE a.Project_ID = #{projectId}
	</select>

	<select id="countPurchase" resultType="int">
		SELECT COUNT(Project_ID)
		FROM purchase
		WHERE Project_ID = #{projectId}
	</select>

	<select id="sumPurchase" resultType="com.bootdo.payment.domain.ProjectExpenditureDO">
		SELECT sum(Purchase_Total_Price) as sumPurchase
		FROM purchase
		WHERE Project_ID = #{projectId}
	</select>

	<select id="listExpenses" resultType="com.bootdo.payment.domain.ProjectExpenditureDO">
		SELECT Expenses_Normal as Id, '普通报销'as Table_Name, Expenses_Normal_Approval_Time as Approval_Time, b.Employee_Name as Apply_Name,Expenses_Normal_Price as Apply_Money
		FROM approval_expenses_normal a
		LEFT JOIN inner_org_employee b on a.Expenses_Normal_Name = b.Employee_ID
		WHERE a.Project_ID = #{projectId} and Expenses_Normal_Status = 1
		UNION ALL
		SELECT Expenses_Travel_ID as Id,'差旅报销'as Table_Name, Expenses_Travel_Approval_Time, b.Employee_Name ,Expenses_Travel_Pay_Price
		FROM approval_expenses__travel a
		LEFT JOIN inner_org_employee b on a.Expenses_Travel_Name = b.Employee_ID
		WHERE a.Project_ID = #{projectId} and Expenses_Travel_Status = 1
	</select>

	<select id="countExpenses" resultType="int">
		SELECT SUM(c.num )
		FROM (SELECT COUNT(a.Project_ID) as num
			  FROM approval_expenses_normal a
			  WHERE a.Project_ID = #{projectId} AND Expenses_Normal_Status = 1
              union all
			  SELECT COUNT(b.Project_ID) as num
			  FROM approval_expenses__travel b
			  WHERE b.Project_ID = #{projectId} and Expenses_Travel_Status = 1) as c
	</select>

	<select id="sumExpenses" resultType="com.bootdo.payment.domain.ProjectExpenditureDO">
		SELECT SUM(c.Apply_Money ) as sumExpenses
		FROM (SELECT sum(a.Expenses_Normal_Price) as Apply_Money
			  FROM approval_expenses_normal a
			  WHERE a.Project_ID = #{projectId} AND Expenses_Normal_Status = 1
              union all
			  SELECT sum(b.Expenses_Travel_Pay_Price) as Apply_Money
			  FROM approval_expenses__travel b
			  WHERE b.Project_ID = #{projectId} and Expenses_Travel_Status = 1) as c
	</select>

	<select id="listLaborCost" resultType="com.bootdo.payment.domain.ProjectExpenditureDO">
		SELECT Project_ID, a.Employee_ID, TimeSheet_Name, b.Employee_Level, b.Employee_Salary_Hour, MIN(TimeSheet_Date) as startDate, MAX(TimeSheet_Date) as endDate,
			 (MAX(TimeSheet_Date) -MIN(TimeSheet_Date)) as totalDay,
				(sum(IFNULL(TimeSheet_Normal,0)+IFNULL(TimeSheet_Overtime,0))/sum(work_hours)) as workPercent,sum(IFNULL(TimeSheet_Normal,0)+IFNULL(TimeSheet_Overtime,0))as totalWorkTime,
				(sum(IFNULL(TimeSheet_Normal,0)+IFNULL(TimeSheet_Overtime,0))*b.Employee_Salary_Hour) as laborCost
		FROM timesheet a
		LEFT JOIN inner_org_employee b on a.Employee_ID = b.Employee_ID
		LEFT JOIN (SELECT b.Employee_ID,count(Work_Id)*8 work_hours
					from Work_Day a
					left join timesheet b  on a.work_day = b.TimeSheet_Date
					where b.Project_ID=#{projectId} group by b.Employee_ID ) c on a.Employee_ID = c.Employee_ID
		where Project_ID = #{projectId}
		group by  Project_ID, a.Employee_ID, TimeSheet_Name, b.Employee_Level, b.Employee_Salary_Hour
	</select>

	<select id="countLaborCost" resultType="int">
		SELECT count(DISTINCT a.Project_ID)
		FROM timesheet a
		LEFT JOIN inner_org_employee b on a.Employee_ID = b.Employee_ID
		LEFT JOIN (SELECT b.Employee_ID,count(Work_Id)*8 work_hours
								from Work_Day a
								left join timesheet b  on a.work_day = b.TimeSheet_Date
								where b.Project_ID=#{projectId} group by b.Employee_ID ) c on a.Employee_ID = c.Employee_ID
		WHERE a.Project_ID=#{projectId}
	</select>

	<select id="list" resultType="com.bootdo.payment.domain.ProjectExpenditureDO">
		select DISTINCT a.Project_ID,a.Customer_ID,Collection_ID,
		a.Project_Name,a.Project_Sales,a.Project_Begin_Date,
		a.Project_End_Date,a.Project_Owner,
		a.Project_Manager,Project_Development_Begin_Date,
		Project_Development_End_Date,a.Project_Gategory,
		a.Project_Phase,a.Project_Description,a.Project_Old_ID,
		a.Project_Remarks,a.Project_Operator,a.Project_Operate_Time,Customer_Name,Dept_Name,u.name as projectOperatorName,
		b.Budget_Profit_Rate,h.Business_ID
		FROM development_project a
		left join sales_company_customer s on a.Customer_ID = s.Customer_ID
		left join project_project_dept p on a.Project_ID = p.Project_ID
		left join inner_org_dept i on p.Dept_ID = i.Dept_ID
		left join sys_user u ON a.Project_Operator = u.user_id
		left join project_budget b on a.Project_ID = b.Project_ID
		left join pre_sales_project g on a.Project_Related_ID = g.Project_ID
		left join sales_business h on g.Project_Business = h.Business_ID
        <where>		
        		  <if test="projectOperator !=null and projectOperator !=''">and a.Project_Operator=#{projectOperator}   or exists (select 1 from main_and_copy_person where Employee_ID = a.Project_Operator and Table_Name='development_project')
																						or exists (select 1 from sys_user  where Identification=#{Identification} and user_id=#{projectOperator} )</if>
		  		  <if test="projectName != null and projectName != ''"> and a.Project_ID = #{projectName} </if>
		  		  <if test="projectManager != null and projectManager != ''"> and a.Project_Manager like #{projectManager} </if>
		  		  <if test="projectSales != null and projectSales != ''"> and a.Project_Sales = #{projectSales} </if>
		  		  <if test="businessId != null and businessId != ''"> and h.Business_ID = #{businessId} </if>
			      <if test="beginDate != null and beginDate != ''"> and a.Project_Begin_Date &gt;= #{beginDate}</if>
			      <if test="endDate != null and endDate !=''">and a.Project_Begin_Date &lt;= #{endDate}</if>
			      <if test="projectId != null and projectId != ''"> and a.Project_ID = #{projectId} </if>
		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by Project_ID desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(DISTINCT a.Project_ID) from development_project a
		left join sales_company_customer s on a.Customer_ID = s.Customer_ID
		left join project_project_dept p on a.Project_ID = p.Project_ID
		left join inner_org_dept i on p.Dept_ID = i.Dept_ID
		left join sys_user u on a.Project_Operator = u.user_id
		 <where>
		 		<if test="projectOperator !=null and projectOperator !=''">and a.Project_Operator=#{projectOperator}   or exists (select 1 from main_and_copy_person where Employee_ID = a.Project_Operator and Table_Name='development_project')
																						or exists (select 1 from sys_user  where Identification=#{Identification} and user_id=#{projectOperator} )</if>
		  		  <if test="projectId != null and projectId != ''"> and a.Project_ID = #{projectId} </if>
		  		  <if test="customerId != null and customerId != ''"> and Customer_ID = #{customerId} </if>
		  		  <if test="collectionId != null and collectionId != ''"> and Collection_ID = #{collectionId} </if>
		  		  <if test="projectName != null and projectName != ''"> and Project_Name = #{projectName} </if>
		  		  <if test="projectSales != null and projectSales != ''"> and Project_Sales = #{projectSales} </if>
		  		  <if test="projectBeginDate != null and projectBeginDate != ''"> and Project_Begin_Date = #{projectBeginDate} </if>
		  		  <if test="projectEndDate != null and projectEndDate != ''"> and Project_End_Date = #{projectEndDate} </if>
		  		  <if test="projectOwner != null and projectOwner != ''"> and Project_Owner = #{projectOwner} </if>
		  		  <if test="projectDevelopmentBeginDate != null and projectDevelopmentBeginDate != ''"> and Project_Development_Begin_Date = #{projectDevelopmentBeginDate} </if>
		  		  <if test="projectDevelopmentEndDate != null and projectDevelopmentEndDate != ''"> and Project_Development_End_Date = #{projectDevelopmentEndDate} </if>
		  		  <if test="projectGategory != null and projectGategory != ''"> and a.Project_Gategory = #{projectGategory} </if>
		  		  <if test="projectPhase != null and projectPhase != ''"> and Project_Phase = #{projectPhase} </if>
		  		  <if test="projectDescription != null and projectDescription != ''"> and Project_Description = #{projectDescription} </if>
		  		  <if test="projectOldId != null and projectOldId != ''"> and Project_Old_ID = #{projectOldId} </if>
		  		  <if test="projectRemarks != null and projectRemarks != ''"> and Project_Remarks = #{projectRemarks} </if>
		  		  <if test="projectOperateTime != null and projectOperateTime != ''"> and Project_Operate_Time = #{projectOperateTime} </if>
		  		  
		  		  <if test="projectManager != null and projectManager != ''"> and Project_Manager like #{projectManager} </if>
		  		  <if test="businessId != null and businessId != ''"> and h.Business_ID = #{businessId} </if>
		  		</where>
	</select>
	<insert id="save" parameterType="com.bootdo.payment.domain.ProjectExpenditureDO">
		insert into development_project
		(
			`Project_ID`, 
			`Customer_ID`, 
			`Collection_ID`, 
			`Project_Name`, 
			`Project_Sales`, 
			`Project_Begin_Date`, 
			`Project_End_Date`, 
			`Project_Owner`, 
			`Project_Manager`, 
			`Project_Development_Begin_Date`, 
			`Project_Development_End_Date`, 
			`Project_Gategory`, 
			`Project_Phase`, 
			`Project_Description`, 
			`Project_Old_ID`, 
			`Project_Remarks`, 
			`Project_Operator`, 
			`Project_Operate_Time`
		)
		values
		(
			#{projectId}, 
			#{customerId}, 
			#{collectionId}, 
			#{projectName}, 
			#{projectSales}, 
			#{projectBeginDate}, 
			#{projectEndDate}, 
			#{projectOwner}, 
			#{projectManager}, 
			#{projectDevelopmentBeginDate}, 
			#{projectDevelopmentEndDate}, 
			#{projectGategory}, 
			#{projectPhase}, 
			#{projectDescription}, 
			#{projectOldId}, 
			#{projectRemarks}, 
			#{projectOperator}, 
			#{projectOperateTime}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.payment.domain.ProjectExpenditureDO">
			update development_project 
		<set>
			<if test="customerId != null">`Customer_ID` = #{customerId}, </if>
			<if test="collectionId != null">`Collection_ID` = #{collectionId}, </if>
			<if test="projectName != null">`Project_Name` = #{projectName}, </if>
			<if test="projectSales != null">`Project_Sales` = #{projectSales}, </if>
			<if test="projectBeginDate != null">`Project_Begin_Date` = #{projectBeginDate}, </if>
			<if test="projectEndDate != null">`Project_End_Date` = #{projectEndDate}, </if>
			<if test="projectOwner != null">`Project_Owner` = #{projectOwner}, </if>
			<if test="projectManager != null">`Project_Manager` = #{projectManager}, </if>
			<if test="projectDevelopmentBeginDate != null">`Project_Development_Begin_Date` = #{projectDevelopmentBeginDate}, </if>
			<if test="projectDevelopmentEndDate != null">`Project_Development_End_Date` = #{projectDevelopmentEndDate}, </if>
			<if test="projectGategory != null">`Project_Gategory` = #{projectGategory}, </if>
			<if test="projectPhase != null">`Project_Phase` = #{projectPhase}, </if>
			<if test="projectDescription != null">`Project_Description` = #{projectDescription}, </if>
			<if test="projectOldId != null">`Project_Old_ID` = #{projectOldId}, </if>
			<if test="projectRemarks != null">`Project_Remarks` = #{projectRemarks}, </if>
			<if test="projectOperator != null">`Project_Operator` = #{projectOperator}, </if>
			<if test="projectOperateTime != null">`Project_Operate_Time` = #{projectOperateTime}</if>
		</set>
		where Project_ID = #{projectId}
	</update>
	
	<delete id="remove">
		delete from development_project where Project_ID = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from development_project where Project_ID in 
		<foreach item="projectId" collection="array" open="(" separator="," close=")">
			#{projectId}
		</foreach>
	</delete>
	
	<!-- 项目主管 -->
	<select id="listDic" resultType="com.bootdo.common.domain.DictDO">
		select Project_ID value,concat(Project_ID,' ',Project_Owner) name
		from development_project
	</select> 
	
	<!-- 项目经理 -->
	<select id="listDicManager" resultType="com.bootdo.common.domain.DictDO">
		select Project_ID value,concat(Project_ID,' ',Project_Manager) name
		from development_project
	</select>
</mapper>