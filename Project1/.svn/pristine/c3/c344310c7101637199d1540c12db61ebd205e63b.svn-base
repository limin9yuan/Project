<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.sales.dao.CompanyCustomerDao">

	<select id="getcustomerId" resultType="String">
		select case when bid is 
		null then CONCAT(#{area},'001') else bid end v from
		(select max(Customer_ID)+1 bid from sales_company_customer where
		Customer_County=#{area}) a
	</select>
	
	<select id="getcustomerIdImport" resultType="String">
		select case when bid is 
		null then CONCAT((select Area_Id from sales_city_area where Area_Name=#{customerCounty}),'001') else bid end v from
		(select max(Customer_ID)+1 bid from sales_company_customer where
		Customer_County=(select Area_Id from sales_city_area where Area_Name=#{customerCounty})) a
	</select>
	
	<select id="get" resultType="com.bootdo.sales.domain.CompanyCustomerDO">
		select
		`Customer_ID`,`Customer_Province`,`Customer_City`,`Customer_County`,`Customer_Name`,
		`Customer_Simple_Name`,`Customer_Owner`,`Customer_Sales`,`Customer_Product`,`Customer_Req_Des`,
		`Customer_Attachment`,`Customer_Category`,`Customer_Character`,`Customer_Status`,`Customer_Level`,
		`Customer_Sale_Phase`,`Customer_Inner_Phase`,`Customer_Source`,`Customer_Industry`,`Customer_Staff_Size`,
		`Customer_Credit_Rank`,`Customer_Potential`,`Customer_Emp_Number`,`Customer_Parent`,`Customer_Introduction`,
		`Customer_Visit_Mode`,`Customer_Old_ID`,`Customer_Child_Company`,`Customer_Hot`,`Customer_Hot_Rank`,
		`Customer_Hot_Classif`,`Customer_Volume`,`Customer_Hot_Desc`,`Customer_Invoice_Name`,`Customer_Tax_Number`,
		`Customer_Bank`,`Customer_Account_Num`,`Customer_Contact_Sta`,`Customer_Address`,`Customer_Phone_Num`,
		`Customer_Fax`,`Customer_MailBox`,`Customer_URL`,`Customer_Postcode`,`Customer_Leader`,`Customer_Job_Title`,
		`Customer_Payment_Rate`,`Customer_Heating_Share`,`Customer_Complaint_Rate`,`Customer_Heating_Area`,
		`Customer_Heating_Source_Number`,`Customer_Steam_Area`,`Customer_Hot_Water_Area`,`Customer_Own_Heating_Source`,
		`Customer_Out_Heating_Source`,`Customer_Heat_Loss`,`Customer_Water_Loss`,`Customer_Electrick_Loss`,
		`Customer_Plan_One_Year`,`Customer_Plan_Tow_Year`,`Customer_Plan_Three_Year`,`Customer_Remarks`,
		`Customer_Operator`,`Customer_Operate_Time`,`Opponent_Company`,`Opponent_Project_Type`,`Opponent_Product_Type`,
		`Opponent_Product_Price`
		from sales_company_customer
		where Customer_ID =
		#{value}
	</select>

	<select id="list" resultType="com.bootdo.sales.domain.CompanyCustomerDO">
		select DISTINCT a.`Customer_ID`,sp.Province_Name
		as`Customer_Province`,spc.City_Name as `Customer_City`,sca.Area_Name
		as `Customer_County`,`Customer_Name`,
		case when (select
		count(contact_id)
		from sales_customer_contact
		where
		Customer_ID=a.Customer_ID)>1 then 1 else 0 end Customer_Contact_Many,
		case when (select count(contact_id)
		from sales_customer_contact
		where
		Customer_ID=a.Customer_ID)>1 then '联系人' else f.`Contact_Name` end
		Contact_Name,
		case when (select count(business_id)
		from sales_business
		where Customer_ID=a.Customer_ID)>1 then 1 else 0 end business_Many,
		case
		when (select count(business_id)
		from sales_business
		where
		Customer_ID=a.Customer_ID)>1 then '详细信息' else g.`Business_Name` end
		Business_Name,
		case when (select count(Project_id)
		from
		development_project
		where Customer_ID=a.Customer_ID)>1 then 1 else 0
		end project_Many,
		case when
		(select count(Project_id)
		from
		development_project
		where Customer_ID=a.Customer_ID)>1 then '详细信息' else
		p.`Project_Name` end
		Project_Name,
		<!-- case when (select count(Customer_Dept_ID) -->
		<!-- from sales_customer_dept -->
		<!-- where Customer_ID=a.Customer_ID)>1 then 1 else 0 end customer_dept_Many, -->
		<!-- case when (select count(Customer_Dept_ID) -->
		<!-- from sales_customer_dept -->
		<!-- where Customer_ID=a.Customer_ID)>1 then '查看' else ss.`Customer_Dept_Name` 
			end Customer_Dept_Name, -->
		`Customer_Simple_Name`,
		m.Employee_Name as Customer_Owner,
		q.Employee_Name as `Customer_Sales`,
		`Customer_Product`,`Customer_Req_Des`,`Customer_Attachment`,`Customer_Category`,
		`Customer_Character`,`Customer_Status`, e.name as Customer_Level_Name,
		`Customer_Sale_Phase`,`Customer_Inner_Phase`,`Customer_Source`,`Customer_Industry`,`Customer_Staff_Size`,
		d.name as
		Customer_Credit_Rank_Name,`Customer_Potential`,`Customer_Emp_Number`,
		`Customer_Parent`,`Customer_Introduction`,`Customer_Visit_Mode`,`Customer_Old_ID`,`Customer_Child_Company`,
		CASE `Customer_Hot` when '1' then '是' when '0' then '否' ELSE '0' END
		AS 'Customer_Hot',
		`Customer_Hot_Rank`,`Customer_Hot_Classif`,`Customer_Volume`,`Customer_Hot_Desc`,
		`Customer_Invoice_Name`,`Customer_Tax_Number`,`Customer_Bank`,`Customer_Account_Num`,
		`Customer_Contact_Sta`,`Customer_Address`,`Customer_Phone_Num`,`Customer_Fax`,`Customer_MailBox`,
		`Customer_URL`,`Customer_Postcode`,`Customer_Leader`,`Customer_Job_Title`,`Customer_Payment_Rate`,
		`Customer_Heating_Share`,`Customer_Complaint_Rate`,`Customer_Heating_Area`,`Customer_Heating_Source_Number`,
		`Customer_Steam_Area`,`Customer_Hot_Water_Area`,`Customer_Own_Heating_Source`,`Customer_Out_Heating_Source`,
		`Customer_Heat_Loss`,`Customer_Water_Loss`,`Customer_Electrick_Loss`,`Customer_Plan_One_Year`,
		`Customer_Plan_Tow_Year`,`Customer_Plan_Three_Year`,`Customer_Remarks`,

		s.name as customerOwnerName,

		`Customer_Operate_Time`,`Opponent_Company`,`Opponent_Project_Type`,`Opponent_Product_Type`,
		`Opponent_Product_Price`,e.name as
		Customer_Level,f.Contact_Name,g.Business_Name,p.Project_Name,
		s.name AS
		Customer_Operator,a. Customer_Create_Time

		from sales_company_customer a
		<!-- 省 -->
		left join sales_province sp on a.Customer_Province = sp.Province_Id
		<!-- 市 -->
		left join sales_province_city spc on a.Customer_City=spc.City_Id
		<!-- 区 -->
		left join sales_city_area sca on a.Customer_County = sca.Area_Id
		<!-- 信用等级 -->
		left join sys_dict d on d.type='sales_customer_credit_Rank' and
		d.value=a.Customer_Credit_Rank
		<!-- 客户级别 -->
		left join sys_dict e on e.type='sales_customer_level' and
		a.Customer_Level=e.value
		left join sys_dict chc on
		chc.type='sales_Customer_Hot_Classif' and
		chc.value=a.Customer_Hot_Classif
		left join
		( select
		Customer_ID,Contact_Name from sales_customer_contact
		where case when
		#{contactName} !='' then contact_Name else #{contactName}
		end like
		#{contactName}
		group by Customer_ID having
		count(Contact_id)=1) f on
		a.Customer_ID=f.Customer_ID
		left join
		( select Customer_ID,Business_Name
		from sales_business
		where case when #{businessName} !='' then
		Business_Name else
		#{businessName} end like #{businessName}
		group by
		Customer_ID having
		count(Business_ID)=1)
		g on
		a.Customer_ID=g.Customer_ID
		left join
		( select Customer_ID,Project_Name
		from development_project
		where case when #{projectName} !='' then
		project_Name else #{projectName}
		end like #{projectName}
		group by
		Customer_ID having
		count(Project_ID)=1)
		p on a.Customer_ID=p.Customer_ID
		<!-- left join -->
		<!-- ( select Customer_ID,Customer_Dept_Name from sales_customer_dept -->
		<!-- where case when #{customerDeptName} !='' then Customer_Dept_Name else 
			#{customerDeptName} end like #{customerDeptName} -->
		<!-- group by Customer_ID having count(Customer_Dept_ID)=1) ss on a.Customer_ID=ss.Customer_ID -->
		<!-- left join sys_dict dic on a.customer_level=dic.value and dic.type 
			= 'sales_customer_level' -->
		left join inner_org_employee m on a.Customer_Owner=m.Employee_ID
		left
		join inner_org_employee q on a.Customer_Sales=q.Employee_ID
		left join
		sys_user s on a.Customer_Operator=s.user_id
		left join
		sales_customer_dept de on a.Customer_ID=de.Customer_ID
		LEFT JOIN
		main_and_copy_person ma on a.Customer_ID=ma.T_ID

		<where>
			<if test="customerOperator !=null and customerOperator !=''">and (a.Customer_Operator=#{customerOperator} or exists (
				select 1 from main_and_copy_person am
				left join inner_org_employee oe
				on am.Employee_ID=oe.Employee_ID
				where oe.Inner_User_ID=#{userName}
				and
				Table_Name='sales_company_customer') and
				s.user_id=#{customerOperator}
				or exists (select 1 from sys_user su
				where
				su.user_id=#{customerOperator} and Identification=1))
			</if>
			<if test="customerName !=null and customerName !=''">and a.Customer_Name like #{customerName}</if>
			<if test="customerId != null and customerId != ''"> and a.Customer_ID like #{customerId} or
				a.Customer_Simple_Name like #{customerId}
			</if>
			<if test="contactName != null and contactName !=''"> and f.Contact_Name like #{contactName} </if>
			<if test="businessName !=null and businessName !=''"> and g.Business_Name like #{businessName}</if>
			<if test="projectName !=null and projectName !=''"> and p.Project_Name like #{projectName}</if>


			<if test="customerSales != null and customerSales != ''"> and Customer_Sales = #{customerSales} </if>
			<if test="customerLevel != null and customerLevel != ''"> and Customer_Level = #{customerLevel} </if>
			<if test="province != null and province != ''"> and Customer_Province = #{province} </if>
			<if test="city != null and city != ''"> and Customer_City = #{city} </if>
			<if test="area != null and area != ''"> and Customer_County = #{area} </if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by Customer_Create_Time desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="count" resultType="int">
		select count(DISTINCT a.Customer_ID)
		from sales_company_customer a
		left
		join sys_user u on a.Customer_Operator = u.user_id
		left join sys_dict d
		on d.type='sales_customer_credit_Rank' and
		d.value=a.Customer_Credit_Rank
		left join sys_dict e on
		e.type='sales_customer_level' and e.value=a.Customer_Level
		left join
		sys_dict chc on chc.type='sales_Customer_Hot_Classif' and
		chc.value=a.Customer_Hot_Classif
		left join
		( select
		Customer_ID,Contact_Name from sales_customer_contact
		where case when
		#{contactName} !='' then contact_Name else #{contactName}
		end like
		#{contactName}
		group by Customer_ID having
		count(Contact_id)=1) f on
		a.Customer_ID=f.Customer_ID
		left join
		( select Customer_ID,Business_Name
		from sales_business
		where case when #{businessName} !='' then
		Business_Name else
		#{businessName} end like #{businessName}
		group by
		Customer_ID having
		count(Business_ID)=1)
		g on
		a.Customer_ID=g.Customer_ID
		left join
		( select Customer_ID,Project_Name
		from development_project
		where case when #{projectName} !='' then
		project_Name else #{projectName}
		end like #{projectName}
		group by
		Customer_ID having
		count(Project_ID)=1)
		p on a.Customer_ID=p.Customer_ID
		left join
		( select Customer_ID,Customer_Dept_Name from
		sales_customer_dept
		where case when #{customerDeptName} !='' then
		Customer_Dept_Name else
		#{customerDeptName} end like
		#{customerDeptName}
		group by Customer_ID
		having
		count(Customer_Dept_ID)=1) ss on a.Customer_ID=ss.Customer_ID

		left join
		inner_org_employee m on a.Customer_Owner=m.Employee_ID
		left join
		inner_org_employee q on a.Customer_Sales=q.Employee_ID
		left join
		sys_user s on a.Customer_Operator=s.user_id
		left join
		sales_customer_dept de on a.Customer_ID=de.Customer_ID
		LEFT JOIN
		main_and_copy_person ma on a.Customer_ID=ma.T_ID
		<where>
			<if test="customerOperator !=null and customerOperator !=''">and (a.Customer_Operator=#{customerOperator}
				or exists (
				select 1 from main_and_copy_person am
				left join inner_org_employee oe
				on am.Employee_ID=oe.Employee_ID
				where oe.Inner_User_ID=#{userName}
				and
				Table_Name='sales_company_customer') and
				s.user_id=#{customerOperator}
				or exists (select 1 from sys_user su
				where
				su.user_id=#{customerOperator} and Identification=1))
			</if>
			<if test="customerName !=null and customerName !=''">and a.Customer_Name like #{customerName}</if>
			<if test="customerId != null and customerId != ''"> and a.Customer_ID like #{customerId} or
				a.Customer_Simple_Name like #{customerId}
			</if>
			<if test="contactName != null and contactName !=''"> and f.Contact_Name like #{contactName} </if>
			<if test="businessName !=null and businessName !=''"> and g.Business_Name like #{businessName}</if>
			<if test="projectName !=null and projectName !=''"> and p.Project_Name like #{projectName}</if>


			<if test="customerSales != null and customerSales != ''"> and Customer_Sales = #{customerSales} </if>
			<if test="customerLevel != null and customerLevel != ''"> and Customer_Level = #{customerLevel} </if>
			<if test="province != null and province != ''"> and Customer_Province = #{province} </if>
			<if test="city != null and city != ''"> and Customer_City = #{city} </if>
			<if test="area != null and area != ''"> and Customer_County = #{area} </if>
		</where>
	</select>

	<!--****************************************************************************************************** -->
	<!-- 新客户 -->
	<select id="newCustomer" resultType="com.bootdo.sales.domain.CompanyCustomerDO">
		select *
		from sales_company_customer a
		where a.Customer_Old_ID='' and
		a.Customer_Old_ID is not null

		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	<!-- 新客户数量 -->
	<select id="countNewCustomer" resultType="int">
		SELECT count(*)
		FROM sales_company_customer a
		where a.Customer_Old_ID=''
		and a.Customer_Old_ID is not null
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	<!--****************************************************************************************************** -->
	<!-- 旧客户 -->
	<select id="oldCustomer" resultType="com.bootdo.sales.domain.CompanyCustomerDO">
		select *
		from sales_company_customer a
		where a.Customer_Old_ID!=''

		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	<!-- 旧客户数量 -->
	<select id="countOldCustomer" resultType="int">
		select count(*)
		from sales_company_customer a
		where
		a.Customer_Old_ID!=''
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	<!--****************************************************************************************************** -->
	<select id="listHot" resultType="com.bootdo.sales.domain.CompanyCustomerDO">
		select a.Customer_Name,a.Customer_Old_ID
		from sales_company_customer a
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	<insert id="save" parameterType="com.bootdo.sales.domain.CompanyCustomerDO"
		useGeneratedKeys="true" keyProperty="customerId">
		insert into sales_company_customer
		(
		`Customer_ID`,
		`Customer_Province`,
		`Customer_City`,
		`Customer_County`,
		`Customer_Name`,
		`Customer_Simple_Name`,
		`Customer_Owner`,
		`Customer_Sales`,
		`Customer_Product`,
		`Customer_Req_Des`,
		`Customer_Attachment`,
		`Customer_Category`,
		`Customer_Character`,
		`Customer_Status`,
		`Customer_Level`,
		`Customer_Sale_Phase`,
		`Customer_Inner_Phase`,
		`Customer_Source`,
		`Customer_Industry`,
		`Customer_Staff_Size`,
		`Customer_Credit_Rank`,
		`Customer_Potential`,
		`Customer_Emp_Number`,
		`Customer_Introduction`,
		`Customer_Visit_Mode`,
		`Customer_Old_ID`,
		`Customer_Child_Company`,
		`Customer_Hot`,
		`Customer_Hot_Rank`,
		`Customer_Hot_Classif`,
		`Customer_Volume`,
		`Customer_Hot_Desc`,
		`Customer_Invoice_Name`,
		`Customer_Tax_Number`,
		`Customer_Bank`,
		`Customer_Account_Num`,
		`Customer_Contact_Sta`,
		`Customer_Address`,
		`Customer_Phone_Num`,
		`Customer_Fax`,
		`Customer_MailBox`,
		`Customer_URL`,
		`Customer_Postcode`,
		`Customer_Leader`,
		`Customer_Job_Title`,
		`Customer_Payment_Rate`,
		`Customer_Heating_Share`,
		`Customer_Complaint_Rate`,
		`Customer_Heating_Area`,
		`Customer_Heating_Source_Number`,
		`Customer_Steam_Area`,
		`Customer_Hot_Water_Area`,
		`Customer_Own_Heating_Source`,
		`Customer_Out_Heating_Source`,
		`Customer_Heat_Loss`,
		`Customer_Water_Loss`,
		`Customer_Electrick_Loss`,
		`Customer_Plan_One_Year`,
		`Customer_Plan_Tow_Year`,
		`Customer_Plan_Three_Year`,
		`Customer_Remarks`,
		`Customer_Operator`,
		`Opponent_Company`,
		`Opponent_Project_Type`,
		`Opponent_Product_Type`,
		`Opponent_Product_Price`,
		Customer_Create_Time
		)
		values
		(
		#{customerId},
		#{province},
		#{city},
		#{area},
		#{customerName},
		#{customerSimpleName},
		#{customerOwner},
		#{customerSales},
		#{customerProduct},
		#{customerReqDes},
		#{customerAttachment},
		#{customerCategory},
		#{customerCharacter},
		#{customerStatus},
		#{customerLevel},
		#{customerSalePhase},
		#{customerInnerPhase},
		#{customerSource},
		#{customerIndustry},
		#{customerStaffSize},
		#{customerCreditRank},
		#{customerPotential},
		#{customerEmpNumber},
		#{customerIntroduction},
		#{customerVisitMode},
		#{customerOldId},
		#{customerChildCompany},
		CASE
		#{customerHot} when '是' then '1' when '否' then '0' ELSE '0' END ,
		#{customerHotRank},
		#{customerHotClassif},
		#{customerVolume},
		#{customerHotDesc},
		#{customerInvoiceName},
		#{customerTaxNumber},
		#{customerBank},
		#{customerAccountNum},
		#{customerContactSta},
		#{customerAddress},
		#{customerPhoneNum},
		#{customerFax},
		#{customerMailbox},
		#{customerUrl},
		#{customerPostcode},
		#{customerLeader},
		#{customerJobTitle},
		#{customerPaymentRate},
		#{customerHeatingShare},
		#{customerComplaintRate},
		#{customerHeatingArea},
		#{customerHeatingSourceNumber},
		#{customerSteamArea},
		#{customerHotWaterArea},
		#{customerOwnHeatingSource},
		#{customerOutHeatingSource},
		#{customerHeatLoss},
		#{customerWaterLoss},
		#{customerElectrickLoss},
		#{customerPlanOneYear},
		#{customerPlanTowYear},
		#{customerPlanThreeYear},
		#{customerRemarks},
		#{customerOperator},
		#{opponentCompany},
		#{opponentProjectType},
		#{opponentProductType},
		#{opponentProductPrice},
		now()
		)
	</insert>

	<update id="update" parameterType="com.bootdo.sales.domain.CompanyCustomerDO">
		update sales_company_customer a
		<set>
			a.Customer_Operate_Time=now(),
			<if test="customerProvince != null">`Customer_Province` = #{customerProvince}, </if>
			<if test="customerCity != null">`Customer_City` = #{customerCity}, </if>
			<if test="customerCounty != null">`Customer_County` = #{customerCounty}, </if>
			<if test="customerName != null">`Customer_Name` = #{customerName}, </if>
			<if test="customerSimpleName != null">`Customer_Simple_Name` = #{customerSimpleName}, </if>
			<if test="customerOwner != null">`Customer_Owner` = #{customerOwner}, </if>
			<if test="customerSales != null">`Customer_Sales` = #{customerSales}, </if>
			<if test="customerProduct != null">`Customer_Product` = #{customerProduct}, </if>
			<if test="customerReqDes != null">`Customer_Req_Des` = #{customerReqDes}, </if>
			<if test="customerAttachment != null">`Customer_Attachment` = #{customerAttachment}, </if>
			<if test="customerCategory != null">`Customer_Category` = #{customerCategory}, </if>
			<if test="customerCharacter != null">`Customer_Character` = #{customerCharacter}, </if>
			<if test="customerStatus != null">`Customer_Status` = #{customerStatus}, </if>
			<if test="customerLevel != null">`Customer_Level` = #{customerLevel}, </if>
			<if test="customerSalePhase != null">`Customer_Sale_Phase` = #{customerSalePhase}, </if>
			<if test="customerInnerPhase != null">`Customer_Inner_Phase` = #{customerInnerPhase}, </if>
			<if test="customerSource != null">`Customer_Source` = #{customerSource}, </if>
			<if test="customerIndustry != null">`Customer_Industry` = #{customerIndustry}, </if>
			<if test="customerStaffSize != null">`Customer_Staff_Size` = #{customerStaffSize}, </if>
			<if test="customerCreditRank != null">`Customer_Credit_Rank` = #{customerCreditRank}, </if>
			<if test="customerPotential != null">`Customer_Potential` = #{customerPotential}, </if>
			<if test="customerEmpNumber != null">`Customer_Emp_Number` = #{customerEmpNumber}, </if>
			<if test="customerParent != null">`Customer_Parent` = #{customerParent}, </if>
			<if test="customerIntroduction != null">`Customer_Introduction` = #{customerIntroduction}, </if>
			<if test="customerVisitMode != null">`Customer_Visit_Mode` = #{customerVisitMode}, </if>
			<if test="customerOldId != null">`Customer_Old_ID` = #{customerOldId}, </if>
			<if test="customerChildCompany != null">`Customer_Child_Company` = #{customerChildCompany}, </if>
			<if test="customerHot != null">`Customer_Hot` = #{customerHot}, </if>
			<if test="customerHotRank != null">`Customer_Hot_Rank` = #{customerHotRank}, </if>
			<if test="customerHotClassif != null">`Customer_Hot_Classif` = #{customerHotClassif}, </if>
			<if test="customerVolume != null">`Customer_Volume` = #{customerVolume}, </if>
			<if test="customerHotDesc != null">`Customer_Hot_Desc` = #{customerHotDesc}, </if>
			<if test="customerInvoiceName != null">`Customer_Invoice_Name` = #{customerInvoiceName}, </if>
			<if test="customerTaxNumber != null">`Customer_Tax_Number` = #{customerTaxNumber}, </if>
			<if test="customerBank != null">`Customer_Bank` = #{customerBank}, </if>
			<if test="customerAccountNum != null">`Customer_Account_Num` = #{customerAccountNum}, </if>
			<if test="customerContactSta != null">`Customer_Contact_Sta` = #{customerContactSta}, </if>
			<if test="customerAddress != null">`Customer_Address` = #{customerAddress}, </if>
			<if test="customerPhoneNum != null">`Customer_Phone_Num` = #{customerPhoneNum}, </if>
			<if test="customerFax != null">`Customer_Fax` = #{customerFax}, </if>
			<if test="customerMailbox != null">`Customer_MailBox` = #{customerMailbox}, </if>
			<if test="customerUrl != null">`Customer_URL` = #{customerUrl}, </if>
			<if test="customerPostcode != null">`Customer_Postcode` = #{customerPostcode}, </if>
			<if test="customerLeader != null">`Customer_Leader` = #{customerLeader}, </if>
			<if test="customerJobTitle != null">`Customer_Job_Title` = #{customerJobTitle}, </if>
			<if test="customerPaymentRate != null">`Customer_Payment_Rate` = #{customerPaymentRate}, </if>
			<if test="customerHeatingShare != null">`Customer_Heating_Share` = #{customerHeatingShare}, </if>
			<if test="customerComplaintRate != null">`Customer_Complaint_Rate` = #{customerComplaintRate},
			</if>
			<if test="customerHeatingArea != null">`Customer_Heating_Area` = #{customerHeatingArea}, </if>
			<if test="customerHeatingSourceNumber != null">`Customer_Heating_Source_Number` =
				#{customerHeatingSourceNumber},
			</if>
			<if test="customerSteamArea != null">`Customer_Steam_Area` = #{customerSteamArea}, </if>
			<if test="customerHotWaterArea != null">`Customer_Hot_Water_Area` = #{customerHotWaterArea}, </if>
			<if test="customerOwnHeatingSource != null">`Customer_Own_Heating_Source` =
				#{customerOwnHeatingSource},
			</if>
			<if test="customerOutHeatingSource != null">`Customer_Out_Heating_Source` =
				#{customerOutHeatingSource},
			</if>
			<if test="customerHeatLoss != null">`Customer_Heat_Loss` = #{customerHeatLoss}, </if>
			<if test="customerWaterLoss != null">`Customer_Water_Loss` = #{customerWaterLoss}, </if>
			<if test="customerElectrickLoss != null">`Customer_Electrick_Loss` = #{customerElectrickLoss},
			</if>
			<if test="customerPlanOneYear != null">`Customer_Plan_One_Year` = #{customerPlanOneYear}, </if>
			<if test="customerPlanTowYear != null">`Customer_Plan_Tow_Year` = #{customerPlanTowYear}, </if>
			<if test="customerPlanThreeYear != null">`Customer_Plan_Three_Year` = #{customerPlanThreeYear},
			</if>
			<if test="customerRemarks != null">`Customer_Remarks` = #{customerRemarks}, </if>
			<if test="customerOperator != null">`Customer_Operator` = #{customerOperator}, </if>
			<if test="customerOperateTime != null">`Customer_Operate_Time` = #{customerOperateTime}, </if>
			<if test="opponentCompany != null">`Opponent_Company` = #{opponentCompany}, </if>
			<if test="opponentProjectType != null">`Opponent_Project_Type` = #{opponentProjectType}, </if>
			<if test="opponentProductType != null">`Opponent_Product_Type` = #{opponentProductType}, </if>
			<if test="opponentProductPrice != null">`Opponent_Product_Price` = #{opponentProductPrice}</if>
		</set>
		where Customer_ID = #{customerId}
	</update>
	<!-- // 删除附件文件的同时删除表里面附件字段下的附件i -->
	<update id="updateCustomerAttachment" parameterType="com.bootdo.sales.domain.CompanyCustomerDO">
		UPDATE
		sales_company_customer
		SET Customer_Attachment
		=REPLACE(Customer_Attachment,#{id},'')
	</update>
	<delete id="remove">
		delete from sales_company_customer where Customer_ID
		= #{value}
	</delete>

	<delete id="batchRemove">
		delete from sales_company_customer where Customer_ID in
		<foreach item="customerId" collection="array" open="("
			separator="," close=")">
			#{customerId}
		</foreach>
	</delete>

	<select id="listDic" resultType="com.bootdo.common.domain.DictDO">
		select `Customer_ID`
		value,concat(`Customer_ID`,' ',`Customer_Name`) name
		from
		sales_company_customer
	</select>
	<!-- 导入文件模板上传 -->
	<insert id="saveFile" parameterType="com.bootdo.sales.domain.CompanyCustomerDO"
		useGeneratedKeys="true" keyProperty="customerId">
		insert into sales_company_customer
		(
		`Customer_ID`,
		`Customer_Province`,
		`Customer_City`,
		`Customer_County`,
		`Customer_Name`,
		`Customer_Simple_Name`,
		`Customer_Owner`,
		`Customer_Sales`,
		`Customer_Product`,
		`Customer_Req_Des`,
		`Customer_Attachment`,
		`Customer_Category`,
		`Customer_Character`,
		`Customer_Status`,
		`Customer_Level`,
		`Customer_Sale_Phase`,
		`Customer_Inner_Phase`,
		`Customer_Source`,
		`Customer_Industry`,
		`Customer_Staff_Size`,
		`Customer_Credit_Rank`,
		`Customer_Potential`,
		`Customer_Emp_Number`,
		`Customer_Introduction`,
		`Customer_Visit_Mode`,
		`Customer_Old_ID`,
		`Customer_Child_Company`,
		`Customer_Hot`,
		`Customer_Hot_Rank`,
		`Customer_Hot_Classif`,
		`Customer_Volume`,
		`Customer_Hot_Desc`,
		`Customer_Invoice_Name`,
		`Customer_Tax_Number`,
		`Customer_Bank`,
		`Customer_Account_Num`,
		`Customer_Contact_Sta`,
		`Customer_Address`,
		`Customer_Phone_Num`,
		`Customer_Fax`,
		`Customer_MailBox`,
		`Customer_URL`,
		`Customer_Postcode`,
		`Customer_Leader`,
		`Customer_Job_Title`,
		`Customer_Payment_Rate`,
		`Customer_Heating_Share`,
		`Customer_Complaint_Rate`,
		`Customer_Heating_Area`,
		`Customer_Heating_Source_Number`,
		`Customer_Steam_Area`,
		`Customer_Hot_Water_Area`,
		`Customer_Own_Heating_Source`,
		`Customer_Out_Heating_Source`,
		`Customer_Heat_Loss`,
		`Customer_Water_Loss`,
		`Customer_Electrick_Loss`,
		`Customer_Plan_One_Year`,
		`Customer_Plan_Tow_Year`,
		`Customer_Plan_Three_Year`,
		`Customer_Remarks`,
		`Customer_Operator`,
		`Opponent_Company`,
		`Opponent_Project_Type`,
		`Opponent_Product_Type`,
		`Opponent_Product_Price`,
		Customer_Create_Time
		)
		values
		(
		#{customerId},
		(select Province_Id from sales_province a where
		a.Province_Name=#{customerProvince}),
		(select City_Id from
		sales_province_city a where
		a.City_Name=#{customerCity}),
		(select
		Area_Id from sales_city_area a where a.Area_Name=#{customerCounty}),
		#{customerName},
		#{customerSimpleName},
		(select Employee_ID from
		inner_org_employee a where
		a.Employee_Name=#{customerOwner}),
		(select
		Employee_ID from inner_org_employee a where
		a.Employee_Name=#{customerSales}),
		#{customerProduct},
		#{customerReqDes},
		#{customerAttachment},
		#{customerCategory},
		#{customerCharacter},
		#{customerStatus},
		(select value from sys_dict a
		where a.name=#{customerLevel} and
		a.type='sales_customer_level'),
		#{customerSalePhase},
		#{customerInnerPhase},
		#{customerSource} ,
		#{customerIndustry},
		#{customerStaffSize},
		(select value from sys_dict a
		where a.name=#{customerCreditRank} and
		a.type='sales_customer_credit_Rank'),
		(select value from sys_dict a
		where a.name=#{customerPotential} and
		a.type='sales_customer_potential'),
		#{customerEmpNumber},
		#{customerIntroduction},
		(select value from sys_dict a where
		a.name=#{customerVisitMode} and
		a.type='sales_customer_visit_Mode'),
		#{customerOldId},
		#{customerChildCompany},
		CASE #{customerHot} when '是'
		then '1' when '否' then '0' ELSE '0' END ,
		#{customerHotRank},
		(select
		value from sys_dict a where a.name=#{customerHotClassif} and
		a.type='sales_Customer_Hot_Classif'),
		#{customerVolume},
		#{customerHotDesc},
		#{customerInvoiceName},
		#{customerTaxNumber},
		#{customerBank},
		#{customerAccountNum},
		#{customerContactSta} ,
		#{customerAddress},
		#{customerPhoneNum},
		#{customerFax},
		#{customerMailbox},
		#{customerUrl},
		#{customerPostcode},
		#{customerLeader},
		#{customerJobTitle},
		#{customerPaymentRate},
		#{customerHeatingShare},
		#{customerComplaintRate},
		#{customerHeatingArea},
		#{customerHeatingSourceNumber},
		#{customerSteamArea},
		#{customerHotWaterArea},
		#{customerOwnHeatingSource},
		#{customerOutHeatingSource},
		#{customerHeatLoss},
		#{customerWaterLoss},
		#{customerElectrickLoss},
		#{customerPlanOneYear},
		#{customerPlanTowYear},
		#{customerPlanThreeYear},
		#{customerRemarks},
		#{customerOperator},
		#{opponentCompany},
		#{opponentProjectType},
		#{opponentProductType},
		#{opponentProductPrice},
		now()
		)
	</insert>
</mapper>