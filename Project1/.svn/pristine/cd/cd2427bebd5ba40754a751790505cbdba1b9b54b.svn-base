<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.contract.dao.ContractProjectDao">

	<select id="get" resultType="com.bootdo.contract.domain.ContractProjectDO">
		select `Contract_Project_ID`,`Contract_ID`,`Project_ID`
		from contract_project
		where Contract_Project_ID = #{value}
	</select>

	<select id="getMultiProject" resultType="com.bootdo.contract.domain.ContractProjectDO">
		select a.`Project_ID`, b.Project_Name as projectName
		from contract_project a
		LEFT JOIN pre_sales_project b on a.Project_ID = b.Project_ID
		WHERE a.Contract_ID = #{contractId}
	</select>

	<select id="list" resultType="com.bootdo.contract.domain.ContractProjectDO">
		select `Contract_Project_ID`,`Contract_ID`,`Project_ID` from contract_project
        <where>  
		  		  <if test="contractProjectId != null and contractProjectId != ''"> and Contract_Project_ID = #{contractProjectId} </if>
		  		  <if test="contractId != null and contractId != ''"> and Contract_ID = #{contractId} </if>
		  		  <if test="projectId != null and projectId != ''"> and Project_ID = #{projectId} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by Contract_Project_ID desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from contract_project
		 <where>  
		  		  <if test="contractProjectId != null and contractProjectId != ''"> and Contract_Project_ID = #{contractProjectId} </if>
		  		  <if test="contractId != null and contractId != ''"> and Contract_ID = #{contractId} </if>
		  		  <if test="projectId != null and projectId != ''"> and Project_ID = #{projectId} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.contract.domain.ContractProjectDO" useGeneratedKeys="true" keyProperty="contractProjectId">
		insert into contract_project
		(
			`Contract_ID`, 
			`Project_ID`
		)
		values
		(
			#{contractId}, 
			#{projectId}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.contract.domain.ContractProjectDO">
		update contract_project 
		<set>
			<if test="contractId != null">`Contract_ID` = #{contractId}, </if>
			<if test="projectId != null">`Project_ID` = #{projectId}</if>
		</set>
		where Contract_Project_ID = #{contractProjectId}
	</update>
	
	<delete id="remove">
		delete from contract_project where Contract_ID = #{tId}
	</delete>
	
	<delete id="batchRemove">
		delete from contract_project where Contract_Project_ID in 
		<foreach item="contractProjectId" collection="array" open="(" separator="," close=")">
			#{contractProjectId}
		</foreach>
	</delete>

</mapper>