<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.payment.dao.InvoiceDao">

	<select id="get" resultType="com.bootdo.payment.domain.InvoiceDO">
		select `Invoice_ID`,a.`Contract_ID`,`Invoice_Number`,`Invoice_Price`,`Invoice_Type`,`Invoice_Content`,
		date_format(Invoice_Date,'%Y-%m-%d') `Invoice_Date`,
		`Invoice_Person`,
		date_format(Invoice_Receiver_Time,'%Y-%m-%d') `Invoice_Receiver_Time`,
		`Invoice_Receiver`,`Invoice_Attachment`,`Invoice_Contract_Status`,`Invoice_Remarks`,
		`Invoice_Operator`,`Invoice_Operate_Time`,`Invoice_Company`,
        d.Customer_Name as Customer_ID,e.Business_Name as Business_ID,
		g.Project_Name as Project_ID,f.Employee_Name as Contract_Sales,
		b.Contract_Total_Price,b.Contract_Invoice_Type,
		b.Contract_Invoice_Time,c.Receivable_Price as Receivable_Price,
        SUM(Receivable_Price) as Contract_Receivable_Price 
		from invoice a
        left join contract b on a.`Contract_ID`=b.`Contract_ID`
        left join accounts_receivable c on b.`Contract_ID`=c.`Contract_ID`
        left join sales_company_customer d on b.Customer_ID = d.Customer_ID
        left join sales_business e on b.Business_ID = e.Business_ID
        left join inner_org_employee f on b.Contract_Sales = f.Employee_ID
        left join development_project g on b.`Project_ID`=g.`Project_ID`
		where Invoice_ID = #{value}
	</select>

	<select id="list" resultType="com.bootdo.payment.domain.InvoiceDO">
		select DISTINCT `Invoice_ID`,a.`Contract_ID`,a.`Business_ID`,`Invoice_Number`,`Invoice_Price`,`Invoice_Type`,`Invoice_Content`,`Invoice_Date`,
		`Invoice_Person`, b.Employee_Name as `Invoice_Person_Name`,
		`Invoice_Receiver_Time`,
		`Invoice_Receiver`,c.Employee_Name as `Invoice_Receiver_Name`,
		f.`Employee_Name` as `Project_Owner_Name`,e.`Project_Name` as `Invoice_Project_Name`,
		`Invoice_Attachment`,
		CASE WHEN `Invoice_Contract_Status` = '0' THEN '未开始'
		WHEN `Invoice_Contract_Status` = '1' THEN '交付中'
		WHEN `Invoice_Contract_Status` = '2' THEN '已完成'
		END AS `Invoice_Contract_Status`,
		`Invoice_Remarks`,`Invoice_Operator`,`Invoice_Operate_Time`,`Invoice_Company`
		from invoice a
		left join inner_org_employee b on a.`Invoice_Person`=b.`Employee_ID`
		left join inner_org_employee c on a.`Invoice_Receiver`=c.`Employee_ID`
		left join contract d on a.`Contract_ID`=d.`Contract_ID`
		left join development_project e on d.`Project_ID`=e.`Project_ID`
		left join inner_org_employee f on f.`Employee_ID`=e.`Project_Owner`
        <where>  
        		 <if test="invoiceOperator != null and invoiceOperator != ''"> and (a.Invoice_Operator=#{userId}
					or exists (select 1 from main_and_copy_person g
					LEFT JOIN inner_org_employee h on g.Employee_ID = h.Employee_ID
					where h.Inner_User_ID = #{userName} and g.T_ID = a.Invoice_ID and g.Table_Name=#{tableName})
					 or exists (select 1 from sys_user  where Identification='1' and user_id=#{userId}))</if>
			      <if test="invoiceId != null and invoiceId != ''">and Invoice_ID = #{invoiceId} </if>
		  		  <if test="contractId != null and contractId != ''"> and a.Contract_ID = #{contractId} </if>
		  		  <if test="businessId != null and businessId != ''"> and a.Business_ID = #{businessId} </if>
		  		  <if test="invoiceNumber != null and invoiceNumber != ''"> and Invoice_Number = #{invoiceNumber} </if>
		  		  <if test="invoicePrice != null and invoicePrice != ''"> and Invoice_Price = #{invoicePrice} </if>
		  		  <if test="invoiceType != null and invoiceType != ''"> and Invoice_Type = #{invoiceType} </if>
		  		  <if test="invoiceContent != null and invoiceContent != ''"> and Invoice_Content = #{invoiceContent} </if>
		  		  <if test="invoiceDate != null and invoiceDate != ''"> and Invoice_Date = #{invoiceDate} </if>
		  		  <if test="invoicePerson != null and invoicePerson != ''"> and Invoice_Person = #{invoicePerson} </if>
		  		  <if test="invoiceReceiverTime != null and invoiceReceiverTime != ''"> and Invoice_Receiver_Time = #{invoiceReceiverTime} </if>
		  		  <if test="invoiceReceiver != null and invoiceReceiver != ''"> and Invoice_Receiver = #{invoiceReceiver} </if>
		  		  <if test="invoiceAttachment != null and invoiceAttachment != ''"> and Invoice_Attachment = #{invoiceAttachment} </if>
		  		  <if test="invoiceContractStatus != null and invoiceContractStatus != ''"> and Invoice_Contract_Status = #{invoiceContractStatus} </if>
		  		  <if test="invoiceRemarks != null and invoiceRemarks != ''"> and Invoice_Remarks = #{invoiceRemarks} </if>
		  		  <if test="invoiceOperateTime != null and invoiceOperateTime != ''"> and Invoice_Operate_Time = #{invoiceOperateTime} </if>
		  		  <if test="invoiceCompany != null and invoiceCompany != ''"> and Invoice_Company = #{invoiceCompany} </if>
		  		  
		  		  <if test="projectOwner != null and projectOwner != ''"> and f.`Employee_Name` LIKE #{projectOwner} </if>
		  		  <if test="projectId != null and projectId != ''"> and e.Project_ID = #{projectId} </if> 
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by Invoice_ID desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(DISTINCT `Invoice_ID`) 
        from invoice a
		left join inner_org_employee b on a.`Invoice_Person`=b.`Employee_ID`
		left join inner_org_employee c on a.`Invoice_Receiver`=c.`Employee_ID`
		left join contract d on a.`Contract_ID`=d.`Contract_ID`
        left join development_project e on d.`Project_ID`=e.`Project_ID`
        left join inner_org_employee f on f.`Employee_ID`=e.`Project_Owner`
		  <where>  
		  <if test="invoiceOperator != null and invoiceOperator != ''"> and  a.Invoice_Operator=#{invoiceOperator}   or exists (select 1 from main_and_copy_person where Employee_ID = a.Invoice_Operator and Table_Name='invoice')
																				or exists (select 1 from sys_user  where Identification=#{Identification} and user_id=#{invoiceOperator}) </if>
		  		  <if test="invoiceId != null and invoiceId != ''"> and Invoice_ID = #{invoiceId} </if>
		  		  <if test="contractId != null and contractId != ''"> and a.Contract_ID = #{contractId} </if>
		  		  <if test="businessId != null and businessId != ''"> and a.Business_ID = #{businessId} </if>
		  		  <if test="invoiceNumber != null and invoiceNumber != ''"> and Invoice_Number = #{invoiceNumber} </if>
		  		  <if test="invoicePrice != null and invoicePrice != ''"> and Invoice_Price = #{invoicePrice} </if>
		  		  <if test="invoiceType != null and invoiceType != ''"> and Invoice_Type = #{invoiceType} </if>
		  		  <if test="invoiceContent != null and invoiceContent != ''"> and Invoice_Content = #{invoiceContent} </if>
		  		  <if test="invoiceDate != null and invoiceDate != ''"> and Invoice_Date = #{invoiceDate} </if>
		  		  <if test="invoicePerson != null and invoicePerson != ''"> and Invoice_Person = #{invoicePerson} </if>
		  		  <if test="invoiceReceiverTime != null and invoiceReceiverTime != ''"> and Invoice_Receiver_Time = #{invoiceReceiverTime} </if>
		  		  <if test="invoiceReceiver != null and invoiceReceiver != ''"> and Invoice_Receiver = #{invoiceReceiver} </if>
		  		  <if test="invoiceAttachment != null and invoiceAttachment != ''"> and Invoice_Attachment = #{invoiceAttachment} </if>
		  		  <if test="invoiceContractStatus != null and invoiceContractStatus != ''"> and Invoice_Contract_Status = #{invoiceContractStatus} </if>
		  		  <if test="invoiceRemarks != null and invoiceRemarks != ''"> and Invoice_Remarks = #{invoiceRemarks} </if>
		  		  <if test="invoiceOperateTime != null and invoiceOperateTime != ''"> and Invoice_Operate_Time = #{invoiceOperateTime} </if>
		  		  <if test="invoiceCompany != null and invoiceCompany != ''"> and Invoice_Company = #{invoiceCompany} </if>
		  		  
		  		  <if test="projectOwner != null and projectOwner != ''"> and f.`Employee_Name` LIKE #{projectOwner} </if>
		  		  <if test="projectId != null and projectId != ''"> and e.Project_ID = #{projectId} </if> 
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.payment.domain.InvoiceDO" useGeneratedKeys="true" keyProperty="invoiceId">
		insert into invoice
		(
			`Invoice_ID`, 
			`Contract_ID`, 
			`Business_ID`, 
			`Invoice_Number`, 
			`Invoice_Price`, 
			`Invoice_Type`, 
			`Invoice_Content`, 
			`Invoice_Date`, 
			`Invoice_Person`, 
			`Invoice_Receiver_Time`, 
			`Invoice_Receiver`, 
			`Invoice_Attachment`, 
			`Invoice_Contract_Status`, 
			`Invoice_Remarks`, 
			`Invoice_Operator`, 
			`Invoice_Operate_Time`,
			`Invoice_Company`
		)
		values
		(
			#{invoiceId}, 
			#{contractId}, 
			#{businessId}, 
			#{invoiceNumber}, 
			#{invoicePrice}, 
			#{invoiceType}, 
			#{invoiceContent}, 
			#{invoiceDate}, 
			#{invoicePerson}, 
			#{invoiceReceiverTime}, 
			#{invoiceReceiver}, 
			#{invoiceAttachment}, 
			#{invoiceContractStatus}, 
			#{invoiceRemarks}, 
			#{invoiceOperator}, 
			#{invoiceOperateTime},
			#{invoiceCompany}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.payment.domain.InvoiceDO">
		update invoice 
		<set>
			<if test="contractId != null">`Contract_ID` = #{contractId}, </if>
			<if test="businessId != null">`Business_ID` = #{businessId}, </if>
			<if test="invoiceNumber != null">`Invoice_Number` = #{invoiceNumber}, </if>
			<if test="invoicePrice != null">`Invoice_Price` = #{invoicePrice}, </if>
			<if test="invoiceType != null">`Invoice_Type` = #{invoiceType}, </if>
			<if test="invoiceContent != null">`Invoice_Content` = #{invoiceContent}, </if>
			<if test="invoiceDate != null">`Invoice_Date` = #{invoiceDate}, </if>
			<if test="invoicePerson != null">`Invoice_Person` = #{invoicePerson}, </if>
			<if test="invoiceReceiverTime != null">`Invoice_Receiver_Time` = #{invoiceReceiverTime}, </if>
			<if test="invoiceReceiver != null">`Invoice_Receiver` = #{invoiceReceiver}, </if>
			<if test="invoiceAttachment != null">`Invoice_Attachment` = #{invoiceAttachment}, </if>
			<if test="invoiceContractStatus != null">`Invoice_Contract_Status` = #{invoiceContractStatus}, </if>
			<if test="invoiceRemarks != null">`Invoice_Remarks` = #{invoiceRemarks}, </if>
			<if test="invoiceOperator != null">`Invoice_Operator` = #{invoiceOperator}, </if>
			<if test="invoiceOperateTime != null">`Invoice_Operate_Time` = #{invoiceOperateTime},</if>
			<if test="invoiceCompany != null">`Invoice_Company` = #{invoiceCompany}</if>
		</set>
		where Invoice_ID = #{invoiceId}
	</update>
	
	<delete id="remove">
		delete from invoice where Invoice_ID = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from invoice where Invoice_ID in 
		<foreach item="invoiceId" collection="array" open="(" separator="," close=")">
			#{invoiceId}
		</foreach>
	</delete>
	
	<select id="getContractId" resultType="com.bootdo.contract.domain.ContractDO">
		select d.Customer_Name as Customer_ID,e.Business_Name as Business_ID,
		b.Project_Name as Project_ID,f.Employee_Name as Contract_Sales,
		Contract_Total_Price,Contract_Invoice_Type,
		Contract_Invoice_Time,c.Receivable_Price as Receivable_Price,
        SUM(Receivable_Price) as Contract_Receivable_Price 
		from contract a
		left join development_project b on a.`Project_ID`=b.`Project_ID`
        left join accounts_receivable c on a.`Contract_ID`=c.`Contract_ID`
        left join sales_company_customer d on a.Customer_ID = d.Customer_ID
        left join sales_business e on a.Business_ID = e.Business_ID
        left join inner_org_employee f on a.Contract_Sales = f.Employee_ID
		where a.Contract_ID = #{value}
	</select>

</mapper>