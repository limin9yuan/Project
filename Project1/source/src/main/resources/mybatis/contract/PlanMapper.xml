<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.contract.dao.PlanDao">

	<select id="get" resultType="com.bootdo.contract.domain.PlanDO">
		select `Plan_ID`,`Contract_ID`,`Plan_Delivery_Date`,`Plan_Delivery_Content`,`Plan_Attachment`,`Plan_Remarks`,`Plan_Operator`,`Plan_Operate_Time` from delivery_plan where Plan_ID = #{value}
	</select>

	<select id="list" resultType="com.bootdo.contract.domain.PlanDO">
		select `Plan_ID`,`Contract_ID`,`Plan_Delivery_Date`,`Plan_Delivery_Content`,`Plan_Attachment`,`Plan_Remarks`,`Plan_Operator`,`Plan_Operate_Time` from delivery_plan
        <where>  
		  		  <if test="planId != null and planId != ''"> and Plan_ID = #{planId} </if>
		  		  <if test="contractId != null and contractId != ''"> and Contract_ID = #{contractId} </if>
		  		  <if test="planDeliveryDate != null and planDeliveryDate != ''"> and Plan_Delivery_Date = #{planDeliveryDate} </if>
		  		  <if test="planDeliveryContent != null and planDeliveryContent != ''"> and Plan_Delivery_Content = #{planDeliveryContent} </if>
		  		  <if test="planAttachment != null and planAttachment != ''"> and Plan_Attachment = #{planAttachment} </if>
		  		  <if test="planRemarks != null and planRemarks != ''"> and Plan_Remarks = #{planRemarks} </if>
		  		  <if test="planOperator != null and planOperator != ''"> and Plan_Operator = #{planOperator} </if>
		  		  <if test="planOperateTime != null and planOperateTime != ''"> and Plan_Operate_Time = #{planOperateTime} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by Plan_ID desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from delivery_plan
		 <where>  
		  		  <if test="planId != null and planId != ''"> and Plan_ID = #{planId} </if>
		  		  <if test="contractId != null and contractId != ''"> and Contract_ID = #{contractId} </if>
		  		  <if test="planDeliveryDate != null and planDeliveryDate != ''"> and Plan_Delivery_Date = #{planDeliveryDate} </if>
		  		  <if test="planDeliveryContent != null and planDeliveryContent != ''"> and Plan_Delivery_Content = #{planDeliveryContent} </if>
		  		  <if test="planAttachment != null and planAttachment != ''"> and Plan_Attachment = #{planAttachment} </if>
		  		  <if test="planRemarks != null and planRemarks != ''"> and Plan_Remarks = #{planRemarks} </if>
		  		  <if test="planOperator != null and planOperator != ''"> and Plan_Operator = #{planOperator} </if>
		  		  <if test="planOperateTime != null and planOperateTime != ''"> and Plan_Operate_Time = #{planOperateTime} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.contract.domain.PlanDO" useGeneratedKeys="true" keyProperty="planId">
		insert into delivery_plan
		(
			`Contract_ID`, 
			`Plan_Delivery_Date`, 
			`Plan_Delivery_Content`, 
			`Plan_Attachment`, 
			`Plan_Remarks`, 
			`Plan_Operator`, 
			`Plan_Operate_Time`
		)
		values
		(
			#{contractId}, 
			#{planDeliveryDate}, 
			#{planDeliveryContent}, 
			#{planAttachment}, 
			#{planRemarks}, 
			#{planOperator}, 
			#{planOperateTime}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.contract.domain.PlanDO">
		update delivery_plan 
		<set>
			<if test="contractId != null">`Contract_ID` = #{contractId}, </if>
			<if test="planDeliveryDate != null">`Plan_Delivery_Date` = #{planDeliveryDate}, </if>
			<if test="planDeliveryContent != null">`Plan_Delivery_Content` = #{planDeliveryContent}, </if>
			<if test="planAttachment != null">`Plan_Attachment` = #{planAttachment}, </if>
			<if test="planRemarks != null">`Plan_Remarks` = #{planRemarks}, </if>
			<if test="planOperator != null">`Plan_Operator` = #{planOperator}, </if>
			<if test="planOperateTime != null">`Plan_Operate_Time` = #{planOperateTime}</if>
		</set>
		where Plan_ID = #{planId}
	</update>
	
	<delete id="remove">
		delete from delivery_plan where Plan_ID = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from delivery_plan where Plan_ID in 
		<foreach item="planId" collection="array" open="(" separator="," close=")">
			#{planId}
		</foreach>
	</delete>

</mapper>