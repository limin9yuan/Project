<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.contract.dao.TravelDao">

	<select id="get" resultType="com.bootdo.contract.domain.TravelDO">
		select `Travel_ID`,`Customer_ID`,`Project_ID`,`Business_ID`,
		`Travel_Name`,`Travel_Place_Issue`,`Travel_Place_Ended`,
		`Travel_Partner`,`Travel_Departure_Date`,`Travel_Return_Date`,
		`Travel_Plan_Cost_Type`,`Travel_Visit_Mode`,`Travel_Plan_Task`,
		`Travel_Actual_Performance`,`Travel_Uncompleted_Cause`,
		`Travel_Task_Confirm`,`Travel_Approval_Status`,`Travel_Operator`,
		`Travel_Operate_Time`,`Travel_Creator`,`Travel_Create_Time`
		from approval_travel
		where Travel_ID = #{value}
	</select>

	<select id="view" resultType="com.bootdo.contract.domain.TravelDO">
		select `Travel_ID`,b.Customer_Name as `Customer_ID`,f.Project_Name as `Project_ID`,
		c.Business_Name as `Business_ID`,
		g.Employee_Name as `Travel_Name`,`Travel_Place_Issue`,`Travel_Place_Ended`,
		h.Employee_Name as `Travel_Partner`,`Travel_Departure_Date`,`Travel_Return_Date`,
		`Travel_Plan_Cost_Type`,`Travel_Visit_Mode`,`Travel_Plan_Task`,
		CASE WHEN `Travel_Actual_Performance` = 1 THEN '完成'
					WHEN `Travel_Actual_Performance` = 0 THEN '未完成' END as Travel_Actual_Performance,
		`Travel_Uncompleted_Cause`,
		CASE WHEN `Travel_Task_Confirm` = 1 THEN '完成'
					WHEN `Travel_Task_Confirm` = 0 THEN '未完成' END as Travel_Task_Confirm,
		`Travel_Approval_Status`,`Travel_Operator`,
		`Travel_Operate_Time`,`Travel_Creator`,`Travel_Create_Time`
		from approval_travel a
		LEFT JOIN sales_company_customer b on a.Customer_ID = b.Customer_ID
		LEFT JOIN sales_business c on a.Business_ID = c.Business_ID
		left JOIN (SELECT `Project_ID`,`Project_Name` from development_project
				   UNION ALL
				   select `Project_ID`,`Project_Name` from pre_sales_project d
         		   WHERE NOT EXISTS
         		   (select `Project_ID`,`Project_Name` from development_project e
         		   WHERE d.Project_ID = e.Project_ID)) f on a.Project_ID = f.Project_ID
		LEFT JOIN inner_org_employee g on a.Travel_Name = g.Employee_ID
		LEFT JOIN inner_org_employee h on a.Travel_Partner = h.Employee_ID
		where Travel_ID = #{value}
	</select>

	<select id="list" resultType="com.bootdo.contract.domain.TravelDO">
		select `Travel_ID`,a.`Customer_ID`,a.`Project_ID`,`Business_ID`,
		i.Employee_Name AS `Travel_Name`,`Travel_Place_Issue`,
		`Travel_Place_Ended`,
		e.Employee_Name AS `Travel_Partner`,`Travel_Departure_Date`,`Travel_Return_Date`,`Travel_Plan_Cost_Type`,
		`Travel_Visit_Mode`,`Travel_Plan_Task`,
		CASE `Travel_Actual_Performance` when '1' then '完成' else '未完成' END AS Travel_Actual_Performance,`Travel_Uncompleted_Cause`,
		CASE `Travel_Task_Confirm` when '1' then '完成' else '未完成' END AS Travel_Task_Confirm ,
		CASE `Travel_Approval_Status` when '1' then '已审批' else '未审批' END AS Travel_Approval_Status,
		b.name AS `Travel_Operator`,`Travel_Operate_Time`,`Travel_Creator`,`Travel_Create_Time`,
		`PROCESS_INSTANCE_ID` 
		from approval_travel a
		left join development_project  d on a.Project_ID=d.Project_ID
		left join sys_user b ON a.Travel_Operator = b.user_id
		left join inner_org_employee i on a.Travel_Name=i.Employee_ID
		left join inner_org_employee e on a.Travel_Partner=e.Employee_ID
		left join inner_org_employee g on a.Travel_Name=g.Employee_ID
        <where>  
		  		  <if test="travelId != null and travelId != ''"> and Travel_ID = #{travelId} </if>
		  		  <if test="customerId != null and customerId != ''"> and Customer_ID = #{customerId} </if>
		  		  <if test="projectId != null and projectId != ''"> and a.Project_ID = #{projectId} </if>
		  		  <if test="businessId != null and businessId != ''"> and Business_ID = #{businessId} </if>
		  		  <if test="travelName != null and travelName != ''"> and g.Employee_Name like #{travelName} </if>
		  		  <if test="travelPlaceIssue != null and travelPlaceIssue != ''"> and Travel_Place_Issue = #{travelPlaceIssue} </if>
		  		  <if test="travelPlaceEnded != null and travelPlaceEnded != ''"> and Travel_Place_Ended = #{travelPlaceEnded} </if>
		  		  <if test="travelPartner != null and travelPartner != ''"> and Travel_Partner = #{travelPartner} </if>
		  		  <if test="travelDepartureDate != null and travelDepartureDate != ''"> and Travel_Departure_Date = #{travelDepartureDate} </if>
		  		  <if test="travelReturnDate != null and travelReturnDate != ''"> and Travel_Return_Date = #{travelReturnDate} </if>
		  		  <if test="travelPlanCostType != null and travelPlanCostType != ''"> and Travel_Plan_Cost_Type = #{travelPlanCostType} </if>
		  		  <if test="travelVisitMode != null and travelVisitMode != ''"> and Travel_Visit_Mode = #{travelVisitMode} </if>
		  		  <if test="travelPlanTask != null and travelPlanTask != ''"> and Travel_Plan_Task = #{travelPlanTask} </if>
		  		  <if test="travelActualPerformance != null and travelActualPerformance != ''"> and Travel_Actual_Performance = #{travelActualPerformance} </if>
		  		  <if test="travelUncompletedCause != null and travelUncompletedCause != ''"> and Travel_Uncompleted_Cause = #{travelUncompletedCause} </if>
		  		  <if test="travelTaskConfirm != null and travelTaskConfirm != ''"> and Travel_Task_Confirm = #{travelTaskConfirm} </if>
		  		  <if test="travelApprovalStatus != null and travelApprovalStatus != ''"> and Travel_Approval_Status = #{travelApprovalStatus} </if>
		  		  <if test="travelOperator != null and travelOperator != ''"> and Travel_Operator = #{travelOperator} </if>
		  		  <if test="travelOperateTime != null and travelOperateTime != ''"> and Travel_Operate_Time &gt;= #{travelOperateTime} </if>
		  		  <if test="travelCreator != null and travelCreator != ''"> and Travel_Creator = #{travelCreator} </if>
		  		  <if test="travelCreateTime != null and travelCreateTime != ''"> and Travel_Create_Time &gt;= #{travelCreateTime} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by Travel_ID desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) 
		from approval_travel a
		left join development_project  d on a.Project_ID=d.Project_ID
		left join inner_org_employee g on a.Travel_Name=g.Employee_ID
		 <where>  
		  		  <if test="travelId != null and travelId != ''"> and Travel_ID = #{travelId} </if>
		  		  <if test="customerId != null and customerId != ''"> and Customer_ID = #{customerId} </if>
		  		  <if test="projectId != null and projectId != ''"> and a.Project_ID = #{projectId} </if>
		  		  <if test="businessId != null and businessId != ''"> and Business_ID = #{businessId} </if>
		  		  <if test="travelName != null and travelName != ''"> and g.Employee_Name like #{travelName} </if>
		  		  <if test="travelPlaceIssue != null and travelPlaceIssue != ''"> and Travel_Place_Issue = #{travelPlaceIssue} </if>
		  		  <if test="travelPlaceEnded != null and travelPlaceEnded != ''"> and Travel_Place_Ended = #{travelPlaceEnded} </if>
		  		  <if test="travelPartner != null and travelPartner != ''"> and Travel_Partner = #{travelPartner} </if>
		  		  <if test="travelDepartureDate != null and travelDepartureDate != ''"> and Travel_Departure_Date = #{travelDepartureDate} </if>
		  		  <if test="travelReturnDate != null and travelReturnDate != ''"> and Travel_Return_Date = #{travelReturnDate} </if>
		  		  <if test="travelPlanCostType != null and travelPlanCostType != ''"> and Travel_Plan_Cost_Type = #{travelPlanCostType} </if>
		  		  <if test="travelVisitMode != null and travelVisitMode != ''"> and Travel_Visit_Mode = #{travelVisitMode} </if>
		  		  <if test="travelPlanTask != null and travelPlanTask != ''"> and Travel_Plan_Task = #{travelPlanTask} </if>
		  		  <if test="travelActualPerformance != null and travelActualPerformance != ''"> and Travel_Actual_Performance = #{travelActualPerformance} </if>
		  		  <if test="travelUncompletedCause != null and travelUncompletedCause != ''"> and Travel_Uncompleted_Cause = #{travelUncompletedCause} </if>
		  		  <if test="travelTaskConfirm != null and travelTaskConfirm != ''"> and Travel_Task_Confirm = #{travelTaskConfirm} </if>
		  		  <if test="travelApprovalStatus != null and travelApprovalStatus != ''"> and Travel_Approval_Status = #{travelApprovalStatus} </if>
		  		  <if test="travelOperator != null and travelOperator != ''"> and Travel_Operator = #{travelOperator} </if>
		  		  <if test="travelOperateTime != null and travelOperateTime != ''"> and Travel_Operate_Time &gt;= #{travelOperateTime} </if>
		  		  <if test="travelCreator != null and travelCreator != ''"> and Travel_Creator = #{travelCreator} </if>
		  		  <if test="travelCreateTime != null and travelCreateTime != ''"> and Travel_Create_Time &gt;= #{travelCreateTime} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.contract.domain.TravelDO" useGeneratedKeys="true" keyProperty="travelId">
		insert into approval_travel
		(
			`Travel_ID`, 
			`Customer_ID`, 
			`Project_ID`, 
			`Business_ID`, 
			`Travel_Name`, 
			`Travel_Place_Issue`, 
			`Travel_Place_Ended`, 
			`Travel_Partner`, 
			`Travel_Departure_Date`, 
			`Travel_Return_Date`, 
			`Travel_Plan_Cost_Type`, 
			`Travel_Visit_Mode`, 
			`Travel_Plan_Task`, 
			`Travel_Actual_Performance`, 
			`Travel_Uncompleted_Cause`, 
			`Travel_Task_Confirm`, 
			`Travel_Approval_Status`, 
			`Travel_Operator`, 
			`Travel_Operate_Time`, 
			`Travel_Creator`, 
			`Travel_Create_Time`
		)
		values
		(
			#{travelId}, 
			#{customerId}, 
			#{projectId}, 
			#{businessId}, 
			#{travelName}, 
			#{travelPlaceIssue}, 
			#{travelPlaceEnded}, 
			#{travelPartner}, 
			#{travelDepartureDate}, 
			#{travelReturnDate}, 
			#{travelPlanCostType}, 
			#{travelVisitMode}, 
			#{travelPlanTask}, 
			#{travelActualPerformance}, 
			#{travelUncompletedCause}, 
			#{travelTaskConfirm}, 
			#{travelApprovalStatus}, 
			#{travelOperator}, 
			#{travelOperateTime}, 
			#{travelCreator}, 
			#{travelCreateTime}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.contract.domain.TravelDO">
		update approval_travel 
		<set>
			<if test="customerId != null">`Customer_ID` = #{customerId}, </if>
			<if test="projectId != null">`Project_ID` = #{projectId}, </if>
			<if test="businessId != null">`Business_ID` = #{businessId}, </if>
			<if test="travelName != null">`Travel_Name` = #{travelName}, </if>
			<if test="travelPlaceIssue != null">`Travel_Place_Issue` = #{travelPlaceIssue}, </if>
			<if test="travelPlaceEnded != null">`Travel_Place_Ended` = #{travelPlaceEnded}, </if>
			<if test="travelPartner != null">`Travel_Partner` = #{travelPartner}, </if>
			<if test="travelDepartureDate != null">`Travel_Departure_Date` = #{travelDepartureDate}, </if>
			<if test="travelReturnDate != null">`Travel_Return_Date` = #{travelReturnDate}, </if>
			<if test="travelPlanCostType != null">`Travel_Plan_Cost_Type` = #{travelPlanCostType}, </if>
			<if test="travelVisitMode != null">`Travel_Visit_Mode` = #{travelVisitMode}, </if>
			<if test="travelPlanTask != null">`Travel_Plan_Task` = #{travelPlanTask}, </if>
			<if test="travelActualPerformance != null">`Travel_Actual_Performance` = #{travelActualPerformance}, </if>
			<if test="travelUncompletedCause != null">`Travel_Uncompleted_Cause` = #{travelUncompletedCause}, </if>
			<if test="travelTaskConfirm != null">`Travel_Task_Confirm` = #{travelTaskConfirm}, </if>
			<if test="travelApprovalStatus != null">`Travel_Approval_Status` = #{travelApprovalStatus}, </if>
			<if test="travelOperator != null">`Travel_Operator` = #{travelOperator}, </if>
			<if test="travelOperateTime != null">`Travel_Operate_Time` = #{travelOperateTime}, </if>
			<if test="travelCreator != null">`Travel_Creator` = #{travelCreator}, </if>
			<if test="travelCreateTime != null">`Travel_Create_Time` = #{travelCreateTime},</if>
			<if test="processInstanceId != null">`PROCESS_INSTANCE_ID` = #{processInstanceId}</if>
		</set>
		where Travel_ID = #{travelId}
	</update>
	
	<delete id="remove">
		delete from approval_travel where Travel_ID = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from approval_travel where Travel_ID in 
		<foreach item="travelId" collection="array" open="(" separator="," close=")">
			#{travelId}
		</foreach>
	</delete>
	<select id="listDic" resultType="com.bootdo.common.domain.DictDO">
		select `Travel_ID` value,concat(`Travel_ID`,' ',b.Employee_Name) name
		from approval_travel a
		LEFT JOIN inner_org_employee b on a.Travel_Name = b.Employee_ID
	</select>

</mapper>