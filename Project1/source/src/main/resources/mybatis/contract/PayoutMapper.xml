<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.contract.dao.PayoutDao">

	<select id="get" resultType="com.bootdo.contract.domain.PayoutDO">
		select
		`Payout_ID`,`Customer_ID`,`Business_ID`,`Project_ID`,`Payout_Person`,
		`Payout_Useage`,`Payout_Price`,`Payout_Means`,`Payout_Beneficiary_Bank`,
		`Payout_Card_Number`,`Payout_Related_Contract_ID`,`Payout_Result`,
		`Payout_Remarks`,`Payout_Approval_Status`,`Payout_Operator`,`Payout_Operate_Time`,
		`Payout_Creator`,`Payout_Create_Time`,PROCESS_INSTANCE_ID
		from approval_payout where Payout_ID = #{value}
	</select>

	<select id="view" resultType="com.bootdo.contract.domain.PayoutDO">
		SELECT`Payout_ID`,b.Customer_Name as `Customer_ID`,c.Business_Name as `Business_ID`,
		f.Project_Name as `Project_ID`,g.Employee_Name as `Payout_Person`,
		`Payout_Useage`,`Payout_Price`,`Payout_Means`,`Payout_Beneficiary_Bank`,
		`Payout_Card_Number`,j.Travel_ID as `Payout_Related_Contract_ID`,`Payout_Result`,
		`Payout_Remarks`,
		CASE `Payout_Approval_Status` when '1' then '已审批' when '2' then '正在审批' else '未审批'
		END AS Payout_Approval_Status,
		`Payout_Operator`,`Payout_Operate_Time`,
		`Payout_Creator`,`Payout_Create_Time`
		from approval_payout a
		LEFT JOIN sales_company_customer b on a.Customer_ID = b.Customer_ID
		LEFT JOIN sales_business c on a.Business_ID = c.Business_ID
		left JOIN (SELECT `Project_ID`,`Project_Name` from development_project
				   UNION ALL
				   select `Project_ID`,`Project_Name` from pre_sales_project d
         		   WHERE NOT EXISTS
         		   (select `Project_ID`,`Project_Name` from development_project e
         		   WHERE d.Project_ID = e.Project_ID)) f on a.Project_ID = f.Project_ID
		LEFT JOIN inner_org_employee g on a.Payout_Person = g.Employee_ID
		LEFT JOIN (SELECT h.Travel_ID, i.Employee_Name
								FROM approval_travel h
								LEFT JOIN inner_org_employee i on h.Travel_Name = i.Employee_ID)j
								on a.Payout_Related_Contract_ID = j.Travel_ID
		where Payout_ID = #{value}
	</select>

	<select id="list" resultType="com.bootdo.contract.domain.PayoutDO">
		select DISTINCT `Payout_ID`,a.`Customer_ID`,`Business_ID`,a.`Project_ID`,
		g.Employee_Name AS`Payout_Person`,`Payout_Useage`,`Payout_Price`,
		`Payout_Means`,`Payout_Beneficiary_Bank`,`Payout_Card_Number`,
		j.Employee_Name as `Payout_Related_Contract_ID`,`Payout_Result`,PROCESS_INSTANCE_ID,
		`Payout_Remarks`,
		CASE `Payout_Approval_Status` when '1' then '已审批' when '2' then '正在审批' else '未审批' END AS Payout_Approval_Status,
		`Payout_Operate_Time`,`Payout_Creator`,`Payout_Create_Time`,d.Project_Name,
		s.name AS Payout_Operator

		from approval_payout a
		left join (select `Project_ID`,`Project_Name` from pre_sales_project a
		WHERE not exists (select 1 from development_project where Project_ID=a.Project_ID)
		UNION ALL
		select `Project_ID`,`Project_Name` from development_project)d on a.Project_ID=d.Project_ID
		left join sys_user s on a.Payout_Operator=s.user_id
		left join inner_org_employee g on a.Payout_Person=g.Employee_ID
		LEFT JOIN (SELECT h.Travel_ID, i.Employee_Name
		FROM approval_travel h
		LEFT JOIN inner_org_employee i on h.Travel_Name = i.Employee_ID)j
		on a.Payout_Related_Contract_ID = j.Travel_ID
		<where>
		<if test="payoutOperator != null and payoutOperator != ''"> and ( a.Payout_Operator = #{payoutOperator}
OR EXISTS( SELECT 1 FROM main_and_copy_person f LEFT JOIN inner_org_employee g ON f.Employee_ID = g.Employee_ID WHERE g.Inner_User_ID = #{userName} AND f.Table_Name = 'approval_payout' AND f.T_ID =a.Payout_ID) 
OR EXISTS(SELECT 1 FROM sys_user WHERE user_id = #{payoutOperator} AND Identification = 1)) </if>
			<if test="payoutId != null and payoutId != ''"> and Payout_ID = #{payoutId} </if>
			<if test="customerId != null and customerId != ''"> and Customer_ID = #{customerId} </if>
			<if test="businessId != null and businessId != ''"> and Business_ID = #{businessId} </if>
			<if test="projectId != null and projectId != ''"> and a.Project_ID = #{projectId} </if>
			<if test="payoutPerson != null and payoutPerson != ''"> and g.Employee_Name like #{payoutPerson} </if>
			<if test="payoutUseage != null and payoutUseage != ''"> and Payout_Useage = #{payoutUseage} </if>
			<if test="payoutPrice != null and payoutPrice != ''"> and Payout_Price = #{payoutPrice} </if>
			<if test="payoutMeans != null and payoutMeans != ''"> and Payout_Means = #{payoutMeans} </if>
			<if test="payoutBeneficiaryBank != null and payoutBeneficiaryBank != ''"> and Payout_Beneficiary_Bank = #{payoutBeneficiaryBank}
			</if>
			<if test="payoutCardNumber != null and payoutCardNumber != ''"> and Payout_Card_Number = #{payoutCardNumber} </if>
			<if
				test="payoutRelatedContractId != null and payoutRelatedContractId != ''"> and Payout_Related_Contract_ID = #{payoutRelatedContractId}
			</if>
			<if test="payoutResult != null and payoutResult != ''"> and Payout_Result = #{payoutResult} </if>
			<if test="payoutRemarks != null and payoutRemarks != ''"> and Payout_Remarks = #{payoutRemarks} </if>
			<if test="payoutApprovalStatus != null and payoutApprovalStatus != ''"> and Payout_Approval_Status = #{payoutApprovalStatus}
			</if>
			<if test="payoutOperateTime != null and payoutOperateTime != ''"> and Payout_Operate_Time &lt;= #{payoutOperateTime} </if>
			<if test="payoutCreator != null and payoutCreator != ''"> and Payout_Creator = #{payoutCreator} </if>
			<if test="payoutCreateTime != null and payoutCreateTime != ''"> and Payout_Create_Time &gt;= #{payoutCreateTime} </if>
			<if test="assigneeName != null and assigneeName != ''">
				and a.PROCESS_INSTANCE_ID IN
				(
				Select DISTINCT a.PROC_INST_ID_
				from act_hi_taskinst a INNER JOIN sys_user b on a.ASSIGNEE_=b.username
				INNER JOIN act_re_procdef c on a.PROC_DEF_ID_=c.ID_
				where c.KEY_='payout'  and b.`name`  like '%${assigneeName}%'
				)
			</if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by Payout_ID desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="count" resultType="int">
		select count(DISTINCT Payout_ID) from approval_payout a
		left join sys_user s on a.Payout_Operator=s.user_id
		left join inner_org_employee g on a.Payout_Person=g.Employee_ID
		<where>
			<if test="payoutOperator != null and payoutOperator != ''"> and ( a.Payout_Operator = #{payoutOperator}
OR EXISTS( SELECT 1 FROM main_and_copy_person f LEFT JOIN inner_org_employee g ON f.Employee_ID = g.Employee_ID WHERE g.Inner_User_ID = #{userName} AND f.Table_Name = 'approval_payout' AND f.T_ID =a.Payout_ID) 
OR EXISTS(SELECT 1 FROM sys_user WHERE user_id = #{payoutOperator} AND Identification = 1)) </if>
			<if test="payoutId != null and payoutId != ''"> and Payout_ID = #{payoutId} </if>
			<if test="customerId != null and customerId != ''"> and Customer_ID = #{customerId} </if>
			<if test="businessId != null and businessId != ''"> and Business_ID = #{businessId} </if>
			<if test="projectId != null and projectId != ''"> and Project_ID = #{projectId} </if>
			<if test="payoutPerson != null and payoutPerson != ''"> and g.Employee_Name like #{payoutPerson} </if>
			<if test="payoutUseage != null and payoutUseage != ''"> and Payout_Useage = #{payoutUseage} </if>
			<if test="payoutPrice != null and payoutPrice != ''"> and Payout_Price = #{payoutPrice} </if>
			<if test="payoutMeans != null and payoutMeans != ''"> and Payout_Means = #{payoutMeans} </if>
			<if test="payoutBeneficiaryBank != null and payoutBeneficiaryBank != ''"> and Payout_Beneficiary_Bank = #{payoutBeneficiaryBank}
			</if>
			<if test="payoutCardNumber != null and payoutCardNumber != ''"> and Payout_Card_Number = #{payoutCardNumber} </if>
			<if
				test="payoutRelatedContractId != null and payoutRelatedContractId != ''"> and Payout_Related_Contract_ID = #{payoutRelatedContractId}
			</if>
			<if test="payoutResult != null and payoutResult != ''"> and Payout_Result = #{payoutResult} </if>
			<if test="payoutRemarks != null and payoutRemarks != ''"> and Payout_Remarks = #{payoutRemarks} </if>
			<if test="payoutApprovalStatus != null and payoutApprovalStatus != ''"> and Payout_Approval_Status = #{payoutApprovalStatus}
			</if>
			<if test="payoutOperateTime != null and payoutOperateTime != ''"> and Payout_Operate_Time &gt;= #{payoutOperateTime} </if>
			<if test="payoutCreator != null and payoutCreator != ''"> and Payout_Creator = #{payoutCreator} </if>
			<if test="payoutCreateTime != null and payoutCreateTime != ''"> and Payout_Create_Time &gt;= #{payoutCreateTime} </if>
			<if test="assigneeName != null and assigneeName != ''">
				and a.PROCESS_INSTANCE_ID IN
				(
				Select DISTINCT a.PROC_INST_ID_
				from act_hi_taskinst a INNER JOIN sys_user b on a.ASSIGNEE_=b.username
				INNER JOIN act_re_procdef c on a.PROC_DEF_ID_=c.ID_
				where c.KEY_='payout'  and b.`name`  like '%${assigneeName}%'
				)
			</if>
		</where>
	</select>

	<insert id="save" parameterType="com.bootdo.contract.domain.PayoutDO" useGeneratedKeys="true" keyProperty="payoutId">
		insert into approval_payout
		(
		`Payout_ID`,
		`Customer_ID`,
		`Business_ID`,
		`Project_ID`,
		`Payout_Person`,
		`Payout_Useage`,
		`Payout_Price`,
		`Payout_Means`,
		`Payout_Beneficiary_Bank`,
		`Payout_Card_Number`,
		`Payout_Related_Contract_ID`,
		`Payout_Result`,
		`Payout_Remarks`,
		`Payout_Operator`,
		`Payout_Operate_Time`,
		`Payout_Creator`,
		`Payout_Create_Time`
		)
		values
		(
		#{payoutId},
		#{customerId},
		#{businessId},
		#{projectId},
		#{payoutPerson},
		#{payoutUseage},
		#{payoutPrice},
		#{payoutMeans},
		#{payoutBeneficiaryBank},
		#{payoutCardNumber},
		#{payoutRelatedContractId},
		#{payoutResult},
		#{payoutRemarks},
		#{payoutOperator},
		#{payoutOperateTime},
		#{payoutCreator},
		#{payoutCreateTime}
		)
	</insert>

	<update id="update" parameterType="com.bootdo.contract.domain.PayoutDO">
		update approval_payout
		<set>
			<if test="customerId != null">`Customer_ID` = #{customerId}, </if>
			<if test="businessId != null">`Business_ID` = #{businessId}, </if>
			<if test="projectId != null">`Project_ID` = #{projectId}, </if>
			<if test="payoutPerson != null">`Payout_Person` = #{payoutPerson}, </if>
			<if test="payoutUseage != null">`Payout_Useage` = #{payoutUseage}, </if>
			<if test="payoutPrice != null">`Payout_Price` = #{payoutPrice}, </if>
			<if test="payoutMeans != null">`Payout_Means` = #{payoutMeans}, </if>
			<if test="payoutBeneficiaryBank != null">`Payout_Beneficiary_Bank` = #{payoutBeneficiaryBank},
			</if>
			<if test="payoutCardNumber != null">`Payout_Card_Number` = #{payoutCardNumber}, </if>
			<if test="payoutRelatedContractId != null">`Payout_Related_Contract_ID` =#{payoutRelatedContractId}, </if>
			<if test="payoutResult != null">`Payout_Result` = #{payoutResult}, </if>
			<if test="payoutRemarks != null">`Payout_Remarks` = #{payoutRemarks}, </if>
			<if test="payoutApprovalStatus != null">`Payout_Approval_Status` = #{payoutApprovalStatus}, </if>
			<if test="payoutOperator != null">`Payout_Operator` = #{payoutOperator}, </if>
			<if test="payoutOperateTime != null">`Payout_Operate_Time` = #{payoutOperateTime}, </if>
			<if test="payoutCreator != null">`Payout_Creator` = #{payoutCreator}, </if>
			<if test="payoutCreateTime != null">`Payout_Create_Time` = #{payoutCreateTime},</if>
			<if test="processInstanceId != null">`PROCESS_INSTANCE_ID` = #{processInstanceId}</if>
		</set>
		where Payout_ID = #{payoutId}
	</update>

	<delete id="remove">
		delete from approval_payout where Payout_ID =
		#{value}
	</delete>

	<delete id="batchRemove">
		delete from approval_payout where Payout_ID in
		<foreach item="payoutId" collection="array" open="("
			separator="," close=")">
			#{payoutId}
		</foreach>
	</delete>
	<select id="listDic" resultType="com.bootdo.common.domain.DictDO">
		select `Payout_ID` value,concat(`Payout_ID`,' ', b.Employee_Name ) name
		from approval_payout a
		LEFT JOIN inner_org_employee b on a.Payout_Person = b.Employee_ID
	</select>
</mapper>