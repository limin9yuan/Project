<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.sales.dao.CustomerJobDao">

	<select id="get" resultType="com.bootdo.sales.domain.CustomerJobDO">
		select
		`Customer_Job_ID`,`Customer_Job_name`,`Customer_Job_Description`,`Customer_Job_Remarks`,`Customer_Job_Operator`,`Customer_Job_Operate_Time`,`Customer_Job_Create_Time`
		from sales_customer__job where Customer_Job_ID = #{value}
	</select>

	<select id="list" resultType="com.bootdo.sales.domain.CustomerJobDO">
		select
		`Customer_Job_ID`,a.Customer_ID,`Customer_Job_name`,`Customer_Job_Description`,`Customer_Job_Remarks`,
		u.name AS `Customer_Job_Operator`  ,`Customer_Job_Operate_Time`,`Customer_Job_Create_Time`
		from sales_customer__job a
		left join sales_company_customer s on a.Customer_ID=s.Customer_ID
		left join sys_user u on a.Customer_Job_Operator =u.user_id
		<where>
			<if test="customerJobId != null and customerJobId != ''"> and Customer_Job_ID = #{customerJobId} </if>
			<if test="customerJobName != null and customerJobName != ''"> and Customer_Job_name = #{customerJobName} </if>
			<if test="customerId != null and customerId != ''"> and a.Customer_ID = #{customerId} </if>
			<if test="customerJobDescription != null and customerJobDescription != ''"> and Customer_Job_Description = #{customerJobDescription}
			</if>
			<if test="customerJobRemarks != null and customerJobRemarks != ''"> and Customer_Job_Remarks = #{customerJobRemarks} </if>
			<if test="customerJobOperator != null and customerJobOperator != ''"> and Customer_Job_Operator = #{customerJobOperator} </if>
			<if test="customerJobOperateTime != null and customerJobOperateTime != ''"> and Customer_Job_Operate_Time =
				#{customerJobOperateTime}
			</if>
			<if test="customerJobCreateTime != null and customerJobCreateTime != ''"> and Customer_Job_Create_Time = #{customerJobCreateTime}
			</if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by Customer_Job_ID desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="count" resultType="int">
		select count(*) from sales_customer__job a
		left join sys_user u on
		a.Customer_Job_Operator =u.user_id
		left join sales_company_customer s
		on a.Customer_ID=s.Customer_ID

		<where>
			<if test="customerId != null and customerId != ''"> and a.Customer_ID = #{customerId} </if>
			<if test="customerJobId != null and customerJobId != ''"> and Customer_Job_ID = #{customerJobId} </if>
			<if test="customerJobName != null and customerJobName != ''"> and Customer_Job_name = #{customerJobName} </if>
			<if test="customerJobDescription != null and customerJobDescription != ''"> and Customer_Job_Description = #{customerJobDescription}
			</if>
			<if test="customerJobRemarks != null and customerJobRemarks != ''"> and Customer_Job_Remarks = #{customerJobRemarks} </if>
			<if test="customerJobOperator != null and customerJobOperator != ''"> and Customer_Job_Operator = #{customerJobOperator} </if>
			<if test="customerJobOperateTime != null and customerJobOperateTime != ''"> and Customer_Job_Operate_Time =
				#{customerJobOperateTime}
			</if>
			<if test="customerJobCreateTime != null and customerJobCreateTime != ''"> and Customer_Job_Create_Time = #{customerJobCreateTime}
			</if>
		</where>
	</select>

	<insert id="save" parameterType="com.bootdo.sales.domain.CustomerJobDO" >
		insert into sales_customer__job
		(
		Customer_ID,
		`Customer_Job_ID`,
		`Customer_Job_name`,
		`Customer_Job_Description`,
		`Customer_Job_Remarks`,
		`Customer_Job_Operator`,
		`Customer_Job_Operate_Time`,
		`Customer_Job_Create_Time`
		)
		values
		(
		#{customerId},
		#{customerJobId},
		#{customerJobName},
		#{customerJobDescription},
		#{customerJobRemarks},
		#{customerJobOperator},
		now(),
		now()
		)
		
	</insert>

	<update id="update" parameterType="com.bootdo.sales.domain.CustomerJobDO">
		update sales_customer__job a
		<set>
			a.Customer_Job_Operate_Time = now(),
			<if test="customerJobName != null">`Customer_Job_name` = #{customerJobName}, </if>
			<if test="customerJobDescription != null">`Customer_Job_Description` = #{customerJobDescription},
			</if>
			<if test="customerJobRemarks != null">`Customer_Job_Remarks` = #{customerJobRemarks}, </if>
			<if test="customerJobOperator != null">`Customer_Job_Operator` = #{customerJobOperator}, </if>
			<if test="customerJobOperateTime != null">`Customer_Job_Operate_Time` = #{customerJobOperateTime},
			</if>
			<if test="customerJobCreateTime != null">`Customer_Job_Create_Time` = #{customerJobCreateTime}
			</if>
		</set>
		where Customer_Job_ID = #{customerJobId}
	</update>

	<delete id="remove">
		delete from sales_customer__job where Customer_Job_ID
		= #{value}
	</delete>

	<delete id="batchRemove">
		delete from sales_customer__job where Customer_Job_ID in
		<foreach item="customerJobId" collection="array" open="("
			separator="," close=")">
			#{customerJobId}
		</foreach>
	</delete>
	<select id="listDic" resultType="com.bootdo.common.domain.DictDO">
		select `Customer_Job_ID`
		value,concat(`Customer_Job_ID`,' ',`Customer_Job_name`) name
		from
		sales_customer__job
	</select>
</mapper>