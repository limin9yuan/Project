<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.inner.dao.OrgJobDao">

	<select id="get" resultType="com.bootdo.inner.domain.OrgJobDO">
			select `Job_ID`,c.`name` as `Dept_ID`,`Job_Name`,`Job_Rank`,`Job_Rank_Description`,`Job_Descrription`,`Job_Remarks`,
		b.name Dept_Operator_Name,`Job_Operate_Time`
		from inner_org_job a
		left JOIN sys_user b ON a.Job_Operator=b.user_id
		LEFT JOIN sys_dept c on a.Dept_ID = c.dept_id
		where Job_ID = #{value}
	</select>

	<select id="list" resultType="com.bootdo.inner.domain.OrgJobDO">
		select `Job_ID`,c.`name`AS`Dept_ID`,`Job_Name`,`Job_Rank`,`Job_Rank_Description`,
		`Job_Descrription`,`Job_Remarks`,`Job_Operator`,b.name Job_Operator_Name,a.`Job_Operate_Time`,a.Create_Job_Date
		,b.name as jobOperatorName
		from inner_org_job a
		left join sys_user b ON a.Job_Operator=b.user_id
		LEFT JOIN sys_dept c on a.Dept_ID = c.dept_id
        <where>  
		  		  <if test="deptId != null and deptId != ''"> and a.Dept_ID = #{deptId} </if>
		  		  <if test="jobRank != null and jobRank != ''"> and Job_Rank = #{jobRank} </if>
		  		  <if test="jobRankDescription != null and jobRankDescription != ''"> and Job_Rank_Description = #{jobRankDescription} </if>
		  		  <if test="jobDescrription != null and jobDescrription != ''"> and Job_Descrription = #{jobDescrription} </if>
		  		  <if test="jobRemarks != null and jobRemarks != ''"> and Job_Remarks = #{jobRemarks} </if>
		  		  <if test="jobOperateTime != null and jobOperateTime != ''"> and Job_Operate_Time = #{jobOperateTime} </if>
		  		  
		  		  <if test="jobId != null and jobId != ''"> and Job_ID = #{jobId} </if>
		  		  <if test="jobName != null and jobName != ''"> and Job_Name like #{jobName} </if>
		  		  <if test="jobDept != null and jobDept != ''"> and c.`name` like #{jobDept} </if>
		  		  <if test="jobOperator != null and jobOperator != ''"> and b.name like #{jobOperator} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by Job_ID desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from inner_org_job a 
		left join sys_user b ON a.Job_Operator=b.user_id
		LEFT JOIN sys_dept c on a.Dept_ID = c.dept_id
		 <where>  
		  		  <if test="deptId != null and deptId != ''"> and a.Dept_ID = #{deptId} </if>
		  		  <if test="jobRank != null and jobRank != ''"> and Job_Rank = #{jobRank} </if>
		  		  <if test="jobRankDescription != null and jobRankDescription != ''"> and Job_Rank_Description = #{jobRankDescription} </if>
		  		  <if test="jobDescrription != null and jobDescrription != ''"> and Job_Descrription = #{jobDescrription} </if>
		  		  <if test="jobRemarks != null and jobRemarks != ''"> and Job_Remarks = #{jobRemarks} </if>
		  		  <if test="jobOperateTime != null and jobOperateTime != ''"> and Job_Operate_Time = #{jobOperateTime} </if>
		  		  
		  		  <if test="jobId != null and jobId != ''"> and Job_ID = #{jobId} </if>
		  		  <if test="jobName != null and jobName != ''"> and Job_Name like #{jobName} </if>
		  		  <if test="jobDept != null and jobDept != ''"> and c.`name` like #{jobDept} </if>
		  		  <if test="jobOperator != null and jobOperator != ''"> and b.name like #{jobOperator} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.inner.domain.OrgJobDO">
		insert into inner_org_job
		(
			`Job_ID`, 
			`Dept_ID`, 
			`Job_Name`, 
			`Job_Rank`,
			`Job_Rank_Description`, 
			`Job_Descrription`, 
			`Job_Remarks`, 
			`Job_Operator`, 
			`Job_Operate_Time`
		)
		values
		(
			#{jobId}, 
			#{deptId}, 
			#{jobName}, 
			#{jobRank},
			#{jobRankDescription}, 
			#{jobDescrription}, 
			#{jobRemarks}, 
			#{jobOperator}, 
			#{jobOperateTime}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.inner.domain.OrgJobDO">
		update inner_org_job 
		<set>
			<if test="deptId != null">`Dept_ID` = #{deptId}, </if>
			<if test="jobName != null">`Job_Name` = #{jobName}, </if>
			<if test="jobRank != null">`Job_Rank` = #{jobRank}, </if>
			<if test="jobRankDescription != null">`Job_Rank_Description` = #{jobRankDescription}, </if>
			<if test="jobDescrription != null">`Job_Descrription` = #{jobDescrription}, </if>
			<if test="jobRemarks != null">`Job_Remarks` = #{jobRemarks}, </if>
			<if test="jobOperator != null">`Job_Operator` = #{jobOperator}, </if>
			<if test="jobOperateTime != null">`Job_Operate_Time` = #{jobOperateTime}</if>
		</set>
		where Job_ID = #{jobId}
	</update>
	
	<delete id="remove">
		delete from inner_org_job where Job_ID = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from inner_org_job where Job_ID in 
		<foreach item="jobId" collection="array" open="(" separator="," close=")">
			#{jobId}
		</foreach>
	</delete>
	
	<select id="listDic" resultType="com.bootdo.common.domain.DictDO">
		select `Job_ID` value,concat(`Job_ID`,' ',`Job_Name`) name
		from inner_org_job
	</select>
	
	
</mapper>