<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.payment.dao.ReceivedDao">

	<select id="get" resultType="com.bootdo.payment.domain.ReceivedDO">
		select
		`Received_ID`,`Contract_ID`,`Business_ID`,`Received_Time`,`Received_Price`,`Received_Card_Number`,`Received_Type`,`Received_Contract_Status`,`Received_Remarks`,`Received_Operator`,`Received_Operate_Time`,
		`Receivable_ID`,`Receivable_Price`,`Receivable_Date`,`Receipt_Delay_Time`,`Reimbursement_Rate`
		from payment_received where Received_ID = #{value}
	</select>

	<select id="list" resultType="com.bootdo.payment.domain.ReceivedDO">
		select DISTINCT
		`Received_ID`,a.`Contract_ID`,a.`Business_ID`,`Received_Time`,`Received_Price`,
		`Received_Card_Number`,`Received_Type`,
		CASE WHEN `Received_Contract_Status` = '0' THEN '未开始'
		WHEN `Received_Contract_Status` = '1' THEN '交付中'
		WHEN `Received_Contract_Status` = '2' THEN '已完成'
		END AS `Received_Contract_Status`,
		`Received_Remarks`,
		`Received_Operator`,`Received_Operate_Time`,
		`Receivable_ID`,`Receivable_Price`,`Receivable_Date`,`Receipt_Delay_Time`,`Reimbursement_Rate`
		from payment_received a
		left join contract b on a.`Contract_ID`=b.`Contract_ID`
		left join development_project c on b.`Project_ID`=c.`Project_ID`
		left join inner_org_employee d on d.`Employee_ID`=c.`Project_Owner`
		<where>
			<if test="userId != null and userId != ''"> and (a.Received_Operator=#{userId}
				or exists (select 1 from main_and_copy_person e
				LEFT JOIN inner_org_employee f on e.Employee_ID = f.Employee_ID
				where f.Inner_User_ID = #{userName} and e.T_ID = a.Received_ID and e.Table_Name=#{tableName})
				or exists (select 1 from sys_user  where Identification='1' and user_id=#{userId}))</if>
			<if test="receivedId != null and receivedId != ''"> and Received_ID = #{receivedId} </if>
			<if test="contractId != null and contractId != ''"> and Contract_ID = #{contractId} </if>
			<if test="businessId != null and businessId != ''"> and Business_ID = #{businessId} </if>
			<if test="receivedTime != null and receivedTime != ''"> and Received_Time = #{receivedTime} </if>
			<if test="receivedPrice != null and receivedPrice != ''"> and Received_Price = #{receivedPrice} </if>
			<if test="receivedCardNumber != null and receivedCardNumber != ''"> and Received_Card_Number = #{receivedCardNumber} </if>
			<if test="receivedType != null and receivedType != ''"> and Received_Type = #{receivedType} </if>
			<if test="receivedContractStatus != null and receivedContractStatus != ''"> and Received_Contract_Status = #{receivedContractStatus}</if>
			<if test="receivedRemarks != null and receivedRemarks != ''"> and Received_Remarks = #{receivedRemarks} </if>
			<if test="receivedOperateTime != null and receivedOperateTime != ''"> and Received_Operate_Time = #{receivedOperateTime} </if>
			<if test="receivableId != null and receivableId != ''"> and Receivable_ID = #{receivableId} </if>
			<if test="receivablePrice != null and receivablePrice != ''"> and Receivable_Price = #{receivablePrice}</if>
			<if test="receivableDate != null and receivableDate != ''"> and Receivable_Date = #{receivableDate} </if>
			<if test="receiptDelayTime != null and receiptDelayTime != ''"> and Receipt_Delay_Time = #{receiptDelayTime} </if>
			<if test="reimbursementRate != null and reimbursementRate != ''"> and Reimbursement_Rate = #{reimbursementRate} </if>
			
			<if test="projectName != null and projectName != ''"> and c.Project_ID = #{projectName} </if>
			<if test="saleManager != null and saleManager != ''"> and d.`Employee_Name` LIKE #{saleManager} </if>
			<if test="timeMin != null and timeMin != ''"> and Received_Time &gt;= #{timeMin}</if>
			<if test="timeMax != null and timeMax != ''"> and Received_Time &lt;= #{timeMax}</if>
			<if test="projectId != null and projectId != ''"> and c.Project_ID LIKE #{projectId} </if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by Received_ID desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="count" resultType="int">
		select count(DISTINCT `Received_ID`)
        from payment_received a
		left join contract b on a.`Contract_ID`=b.`Contract_ID`
        left join development_project c on b.`Project_ID`=c.`Project_ID`
        left join inner_org_employee d on d.`Employee_ID`=c.`Project_Owner`
		<where>
			<if test="receivedOperator != null and receivedOperator != ''"> and a.Received_Operator=#{receivedOperator}   or exists (select 1 from main_and_copy_person where Employee_ID = a.Received_Operator and Table_Name='payment_received') 
																			or exists (select 1 from sys_user  where Identification=#{Identification} and user_id=#{receivedOperator} )</if>
			<if test="receivedId != null and receivedId != ''"> and Received_ID = #{receivedId} </if>
			<if test="contractId != null and contractId != ''"> and Contract_ID = #{contractId} </if>
			<if test="businessId != null and businessId != ''"> and Business_ID = #{businessId} </if>
			<if test="receivedTime != null and receivedTime != ''"> and Received_Time = #{receivedTime} </if>
			<if test="receivedPrice != null and receivedPrice != ''"> and Received_Price = #{receivedPrice} </if>
			<if test="receivedCardNumber != null and receivedCardNumber != ''"> and Received_Card_Number = #{receivedCardNumber} </if>
			<if test="receivedType != null and receivedType != ''"> and Received_Type = #{receivedType} </if>
			<if test="receivedContractStatus != null and receivedContractStatus != ''"> and Received_Contract_Status = #{receivedContractStatus}</if>
			<if test="receivedRemarks != null and receivedRemarks != ''"> and Received_Remarks = #{receivedRemarks} </if>
			<if test="receivedOperateTime != null and receivedOperateTime != ''"> and Received_Operate_Time = #{receivedOperateTime} </if>
			<if test="receivableId != null and receivableId != ''"> and Receivable_ID = #{receivableId} </if>
			<if test="receivablePrice != null and receivablePrice != ''"> and Receivable_Price = #{receivablePrice}</if>
			<if test="receivableDate != null and receivableDate != ''"> and Receivable_Date = #{receivableDate} </if>
			<if test="receiptDelayTime != null and receiptDelayTime != ''"> and Receipt_Delay_Time = #{receiptDelayTime} </if>
			<if test="reimbursementRate != null and reimbursementRate != ''"> and Reimbursement_Rate = #{reimbursementRate} </if>
			
			<if test="projectName != null and projectName != ''"> and c.Project_ID = #{projectName} </if>
			<if test="saleManager != null and saleManager != ''"> and d.`Employee_Name` LIKE #{saleManager} </if>
			<if test="timeMin != null and timeMin != ''"> and Received_Time &gt;= #{timeMin}</if>
			<if test="timeMax != null and timeMax != ''"> and Received_Time &lt;= #{timeMax}</if>
			<if test="projectId != null and projectId != ''"> and c.Project_ID LIKE #{projectId} </if>
		</where>
	</select>
	<!-- 	*************************************************************************************************** -->
	<!-- 实际回款/本月回款情况 -->
	<select id="sumReceivedPrice" resultType="com.bootdo.payment.domain.ReceivedDO">
		select
		sum(Received_Price) as sumReceivedPrice ,count(Received_ID)as
		reimbursementNumber from payment_received
		where Received_Price!='' and Received_Price is not null
	</select>
	<!-- 回款率 -->
	<select id="reimbursementRate" resultType="com.bootdo.payment.domain.ReceivedDO">
		select sum(Received_Price)
		/(select sum(Receivable_Price) from accounts_receivable)*100  as
		reimbursementRate
		from payment_received
	</select>
<!-- 	*************************************************************************************************** -->
<!-- 	回款数量详情页 -->
	<select id="priceNumberExamine" resultType="com.bootdo.payment.domain.ReceivedDO">
		select a.Received_Price,a.Received_Time,s.Customer_Name,s.Customer_Id
		from payment_received a
		left join contract c on a.Contract_ID=c.Contract_ID
		left join sales_company_customer s on c.Customer_ID=s.Customer_ID
		where a.Received_Price!='' and a.Received_Price is not null
	</select>
<!-- 		回款数量详情页数量 -->
	<select id="countPriceNumberExamine" resultType="int">
		select count(*)
		from payment_received a
		left join contract c on a.Contract_ID=c.Contract_ID
		left join sales_company_customer s on c.Customer_ID=s.Customer_ID
		where a.Received_Price!='' and a.Received_Price is not null
	</select>
<!-- 	*************************************************************************************************** -->
<!-- 	未回款企业详情 -->
	<select id="noPriceNumberExamine" resultType="com.bootdo.payment.domain.ReceivedDO">
		select a.Received_Price,a.Received_Time,s.Customer_Name
		from payment_received a
		left join contract c on a.Contract_ID=c.Contract_ID
		left join sales_company_customer s on c.Customer_ID=s.Customer_ID
		where a.Received_Price='' and a.Received_Price is null
	</select>
<!-- 		未回款企业详情数量 -->
	<select id="countNoPriceNumberExamine" resultType="int">
		select count(*)
		from payment_received a
		left join contract c on a.Contract_ID=c.Contract_ID
		left join sales_company_customer s on c.Customer_ID=s.Customer_ID
		where a.Received_Price='' and a.Received_Price is null
	</select>
<!-- 	*************************************************************************************************** -->				
	
	<!-- 未回款企业数目 -->
	<select id="moneyNumber" resultType="com.bootdo.payment.domain.ReceivedDO">
		select IF(count(Receivable_ID)-(select count(Received_ID) from payment_received) &lt;=0,0,count(Receivable_ID)-(select count(Received_ID) from payment_received) )as number,
		IF(sum(Receivable_Price)-(select sum(Received_Price) from payment_received) &lt;=0,0,sum(Receivable_Price)-(select sum(Received_Price) from payment_received)) as money 
		from accounts_receivable
	</select>
<!-- 	*************************************************************************************************** -->
	<insert id="save" parameterType="com.bootdo.payment.domain.ReceivedDO" useGeneratedKeys="true" keyProperty="receivedId">
		insert into payment_received
		(
		`Received_ID`,
		`Contract_ID`,
		`Business_ID`,
		`Received_Time`,
		`Received_Price`,
		`Received_Card_Number`,
		`Received_Type`,
		`Received_Contract_Status`,
		`Received_Remarks`,
		`Received_Operator`,
		`Received_Operate_Time`,
		`Receivable_ID`,
		`Receivable_Price`,
		`Receivable_Date`,
		`Receipt_Delay_Time`,
		`Reimbursement_Rate`
		)
		values
		(
		#{receivedId},
		#{contractId},
		#{businessId},
		#{receivedTime},
		#{receivedPrice},
		#{receivedCardNumber},
		#{receivedType},
		#{receivedContractStatus},
		#{receivedRemarks},
		#{receivedOperator},
		#{receivedOperateTime},
		#{receivableId},
		#{receivablePrice},
		#{receivableDate},
		#{receiptDelayTime},
		#{reimbursementRate}
		)
	</insert>

	<update id="update" parameterType="com.bootdo.payment.domain.ReceivedDO">
		update payment_received
		<set>
			<if test="contractId != null">`Contract_ID` = #{contractId}, </if>
			<if test="businessId != null">`Business_ID` = #{businessId}, </if>
			<if test="receivedTime != null">`Received_Time` = #{receivedTime}, </if>
			<if test="receivedPrice != null">`Received_Price` = #{receivedPrice}, </if>
			<if test="receivedCardNumber != null">`Received_Card_Number` = #{receivedCardNumber}, </if>
			<if test="receivedType != null">`Received_Type` = #{receivedType}, </if>
			<if test="receivedContractStatus != null">`Received_Contract_Status` = #{receivedContractStatus},</if>
			<if test="receivedRemarks != null">`Received_Remarks` = #{receivedRemarks}, </if>
			<if test="receivedOperator != null">`Received_Operator` = #{receivedOperator}, </if>
			<if test="receivedOperateTime != null">`Received_Operate_Time` = #{receivedOperateTime},</if>
			<if test="receivableId != null">`Receivable_ID` = #{receivableId}, </if>
			<if test="receivablePrice != null">`Receivable_Price` = #{receivablePrice},</if>
			<if test="receivableDate != null">`Receivable_Date` = #{receivableDate}, </if>
			<if test="receiptDelayTime != null">`Receipt_Delay_Time` = #{receiptDelayTime}, </if>
			<if test="reimbursementRate != null">`Reimbursement_Rate` = #{reimbursementRate}</if>
		</set>
		where Received_ID = #{receivedId}
	</update>

	<delete id="remove">
		delete from payment_received where Received_ID =
		#{value}
	</delete>

	<delete id="batchRemove">
		delete from payment_received where Received_ID in
		<foreach item="receivedId" collection="array" open="("
			separator="," close=")">
			#{receivedId}
		</foreach>
	</delete>

</mapper>