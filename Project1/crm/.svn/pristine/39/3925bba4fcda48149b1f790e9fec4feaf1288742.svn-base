<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.sales.dao.SalesProjectDao">

	<select id="get" resultType="com.bootdo.sales.domain.SalesProjectDO">
		select `Project_ID`,`Project_Business`,`Project_Creator`,`Customer_ID`,`Project_Name`,`Project_Sales`,`Project_Begin_Date`,`Project_End_Date`,`Project_Manager`,`Project_Gategory`,`Project_Phase`,`Project_Description`,`Project_Old_ID`,`Project_Remarks`,`Project_Create_Time`,`Project_Operator`,`Project_Operate_Time` from pre_sales_project where Project_ID = #{value}
	</select>

	<select id="list" resultType="com.bootdo.sales.domain.SalesProjectDO">
		select `Project_ID`,
		a.`Project_Business`,b.`Business_Name` as `Project_Busines_Name`,
		a.`Project_Creator`,
		e.`name` as `Project_Creator_Name`,
		a.`Customer_ID`,
		`Project_Name`,`Project_Sales`,
		`Project_Begin_Date`,`Project_End_Date`,`Project_Manager`,
		 c.Employee_Name as `Project_Sales_Name`,
		 d.Employee_Name as `Project_Manager_Name`,
		`Project_Gategory`,
		`Project_Phase`,`Project_Description`,`Project_Old_ID`,`Project_Remarks`,
		`Project_Create_Time`,
		`Project_Operator`,`Project_Operate_Time` 
		from pre_sales_project a
		left join sales_business b on a.`Project_Business`=b.`Business_ID`
		left join inner_org_employee c on a.`Project_Sales`=c.`Employee_ID`
		left join inner_org_employee d on a.`Project_Manager`=d.`Employee_ID`
		left join sys_user e on a.`Project_Creator`=e.`user_id`
        <where>  
		  		  <if test="projectId != null and projectId != ''"> and Project_ID = #{projectId} </if>
		  		  <if test="projectBusiness != null and projectBusiness != ''"> and Project_Business = #{projectBusiness} </if>
		  		  <if test="projectCreator != null and projectCreator != ''"> and Project_Creator = #{projectCreator} </if>
		  		  <if test="customerId != null and customerId != ''"> and Customer_ID = #{customerId} </if>
		  		  <if test="projectName != null and projectName != ''"> and Project_Name = #{projectName} </if>
		  		  <if test="projectSales != null and projectSales != ''"> and Project_Sales = #{projectSales} </if>
		  		  <if test="projectBeginDate != null and projectBeginDate != ''"> and Project_Begin_Date = #{projectBeginDate} </if>
		  		  <if test="projectEndDate != null and projectEndDate != ''"> and Project_End_Date = #{projectEndDate} </if>
		  		  <if test="projectManager != null and projectManager != ''"> and Project_Manager = #{projectManager} </if>
		  		  <if test="projectGategory != null and projectGategory != ''"> and Project_Gategory = #{projectGategory} </if>
		  		  <if test="projectPhase != null and projectPhase != ''"> and Project_Phase = #{projectPhase} </if>
		  		  <if test="projectDescription != null and projectDescription != ''"> and Project_Description = #{projectDescription} </if>
		  		  <if test="projectOldId != null and projectOldId != ''"> and Project_Old_ID = #{projectOldId} </if>
		  		  <if test="projectRemarks != null and projectRemarks != ''"> and Project_Remarks = #{projectRemarks} </if>
		  		  <if test="projectCreateTime != null and projectCreateTime != ''"> and Project_Create_Time = #{projectCreateTime} </if>
		  		  <if test="projectOperator != null and projectOperator != ''"> and Project_Operator = #{projectOperator} </if>
		  		  <if test="projectOperateTime != null and projectOperateTime != ''"> and Project_Operate_Time = #{projectOperateTime} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by Project_ID desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from pre_sales_project
		 <where>  
		  		  <if test="projectId != null and projectId != ''"> and Project_ID = #{projectId} </if>
		  		  <if test="projectBusiness != null and projectBusiness != ''"> and Project_Business = #{projectBusiness} </if>
		  		  <if test="projectCreator != null and projectCreator != ''"> and Project_Creator = #{projectCreator} </if>
		  		  <if test="customerId != null and customerId != ''"> and Customer_ID = #{customerId} </if>
		  		  <if test="projectName != null and projectName != ''"> and Project_Name = #{projectName} </if>
		  		  <if test="projectSales != null and projectSales != ''"> and Project_Sales = #{projectSales} </if>
		  		  <if test="projectBeginDate != null and projectBeginDate != ''"> and Project_Begin_Date = #{projectBeginDate} </if>
		  		  <if test="projectEndDate != null and projectEndDate != ''"> and Project_End_Date = #{projectEndDate} </if>
		  		  <if test="projectManager != null and projectManager != ''"> and Project_Manager = #{projectManager} </if>
		  		  <if test="projectGategory != null and projectGategory != ''"> and Project_Gategory = #{projectGategory} </if>
		  		  <if test="projectPhase != null and projectPhase != ''"> and Project_Phase = #{projectPhase} </if>
		  		  <if test="projectDescription != null and projectDescription != ''"> and Project_Description = #{projectDescription} </if>
		  		  <if test="projectOldId != null and projectOldId != ''"> and Project_Old_ID = #{projectOldId} </if>
		  		  <if test="projectRemarks != null and projectRemarks != ''"> and Project_Remarks = #{projectRemarks} </if>
		  		  <if test="projectCreateTime != null and projectCreateTime != ''"> and Project_Create_Time = #{projectCreateTime} </if>
		  		  <if test="projectOperator != null and projectOperator != ''"> and Project_Operator = #{projectOperator} </if>
		  		  <if test="projectOperateTime != null and projectOperateTime != ''"> and Project_Operate_Time = #{projectOperateTime} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.sales.domain.SalesProjectDO">
		insert into pre_sales_project
		(
			`Project_ID`, 
			`Project_Business`, 
			`Customer_ID`, 
			`Project_Name`, 
			`Project_Sales`, 
			`Project_Begin_Date`, 
			`Project_End_Date`, 
			`Project_Manager`, 
			`Project_Gategory`, 
			`Project_Phase`, 
			`Project_Description`, 
			`Project_Old_ID`, 
			`Project_Remarks`,
			`Project_Creator`,
			`Project_Create_Time`,
			`Project_Operator`
		)
		values
		(
			#{projectId}, 
			#{projectBusiness}, 
			#{customerId}, 
			#{projectName}, 
			#{projectSales}, 
			#{projectBeginDate}, 
			#{projectEndDate}, 
			#{projectManager}, 
			#{projectGategory}, 
			#{projectPhase}, 
			#{projectDescription}, 
			#{projectOldId}, 
			#{projectRemarks},
			#{projectCreator}, 
			CURRENT_TIMESTAMP(),
			#{projectOperator}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.sales.domain.SalesProjectDO">
		update pre_sales_project 
		<set>
		    <if test="projectBusiness != null">`Project_Business` = #{projectBusiness}, </if>
			<if test="customerId != null">`Customer_ID` = #{customerId}, </if>
			<if test="projectName != null">`Project_Name` = #{projectName}, </if>
			<if test="projectSales != null">`Project_Sales` = #{projectSales}, </if>
			<if test="projectBeginDate != null">`Project_Begin_Date` = #{projectBeginDate}, </if>
			<if test="projectEndDate != null">`Project_End_Date` = #{projectEndDate}, </if>
			<if test="projectManager != null">`Project_Manager` = #{projectManager}, </if>
			<if test="projectGategory != null">`Project_Gategory` = #{projectGategory}, </if>
			<if test="projectPhase != null">`Project_Phase` = #{projectPhase}, </if>
			<if test="projectDescription != null">`Project_Description` = #{projectDescription}, </if>
			<if test="projectOldId != null">`Project_Old_ID` = #{projectOldId}, </if>
			<if test="projectRemarks != null">`Project_Remarks` = #{projectRemarks}, </if>
			<if test="projectOperator != null">`Project_Operator` = #{projectOperator}, </if>
			`Project_Operate_Time` = CURRENT_TIMESTAMP()
		</set>
		where Project_ID = #{projectId}
	</update>
	
	<delete id="remove">
		delete from pre_sales_project where Project_ID = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from pre_sales_project where Project_ID in 
		<foreach item="projectId" collection="array" open="(" separator="," close=")">
			#{projectId}
		</foreach>
	</delete>
	
	<select id="listDic" resultType="com.bootdo.common.domain.DictDO">
		select `Project_ID` value,concat(`Project_ID`,' ',`Project_Name`) name
		from pre_sales_project 
	</select>
	
	<select id="listAllDic" resultType="com.bootdo.common.domain.DictDO">
		<!--select `Project_ID` value,concat(`Project_ID`,' ',`Project_Name`) name
		from
		(select `Project_ID`,`Project_Name` from pre_sales_project
         UNION ALL
         select `Project_ID`,`Project_Name` from sales_project)a-->
         select value,name
		from
		(select `Project_ID` value,concat(`Project_ID`,' ',`Project_Name`) name from pre_sales_project
         UNION ALL
         select `Project_ID` value,concat(`Project_ID`,' ',`Project_Name`) name from development_project)a
	</select>
</mapper>