<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.approval.dao.ExpensesNormalDao">

	<select id="get" resultType="com.bootdo.approval.domain.ExpensesNormalDO">
		select `Expenses_Normal`,`Customer_ID`,`Business_ID`,`Project_ID`,`Expenses_Normal_Name`,`Expenses_Normal_Reason`,`Expenses_Normal_Price`,`Expenses_Normal_Result`,`Expenses_Normal_RelatedID`,`Expenses_Normal_Rmarks`,`Expenses_Normal_Status`,`Expenses_Normal_Operator`,`Expenses_Normal_Opt_Time`,`Expenses_Normal_Creator`,`Expenses_Normal_Create_Time` from approval_expenses_normal where Expenses_Normal = #{value}
	</select>

	<select id="list" resultType="com.bootdo.approval.domain.ExpensesNormalDO">
		select `Expenses_Normal`,`Customer_ID`,`Business_ID`,`Project_ID`,`Expenses_Normal_Name`,`Expenses_Normal_Reason`,`Expenses_Normal_Price`,`Expenses_Normal_Result`,`Expenses_Normal_RelatedID`,`Expenses_Normal_Rmarks`,`Expenses_Normal_Status`,`Expenses_Normal_Operator`,`Expenses_Normal_Opt_Time`,`Expenses_Normal_Creator`,`Expenses_Normal_Create_Time` from approval_expenses_normal
        <where>  
		  		  <if test="expensesNormal != null and expensesNormal != ''"> and Expenses_Normal = #{expensesNormal} </if>
		  		  <if test="customerId != null and customerId != ''"> and Customer_ID = #{customerId} </if>
		  		  <if test="businessId != null and businessId != ''"> and Business_ID = #{businessId} </if>
		  		  <if test="projectId != null and projectId != ''"> and Project_ID = #{projectId} </if>
		  		  <if test="expensesNormalName != null and expensesNormalName != ''"> and Expenses_Normal_Name = #{expensesNormalName} </if>
		  		  <if test="expensesNormalReason != null and expensesNormalReason != ''"> and Expenses_Normal_Reason = #{expensesNormalReason} </if>
		  		  <if test="expensesNormalPrice != null and expensesNormalPrice != ''"> and Expenses_Normal_Price = #{expensesNormalPrice} </if>
		  		  <if test="expensesNormalResult != null and expensesNormalResult != ''"> and Expenses_Normal_Result = #{expensesNormalResult} </if>
		  		  <if test="expensesNormalRelatedid != null and expensesNormalRelatedid != ''"> and Expenses_Normal_RelatedID = #{expensesNormalRelatedid} </if>
		  		  <if test="expensesNormalRmarks != null and expensesNormalRmarks != ''"> and Expenses_Normal_Rmarks = #{expensesNormalRmarks} </if>
		  		  <if test="expensesNormalStatus != null and expensesNormalStatus != ''"> and Expenses_Normal_Status = #{expensesNormalStatus} </if>
		  		  <if test="expensesNormalOperator != null and expensesNormalOperator != ''"> and Expenses_Normal_Operator = #{expensesNormalOperator} </if>
		  		  <if test="expensesNormalOptTime != null and expensesNormalOptTime != ''"> and Expenses_Normal_Opt_Time = #{expensesNormalOptTime} </if>
		  		  <if test="expensesNormalCreator != null and expensesNormalCreator != ''"> and Expenses_Normal_Creator = #{expensesNormalCreator} </if>
		  		  <if test="expensesNormalCreateTime != null and expensesNormalCreateTime != ''"> and Expenses_Normal_Create_Time = #{expensesNormalCreateTime} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by Expenses_Normal desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from approval_expenses_normal
		 <where>  
		  		  <if test="expensesNormal != null and expensesNormal != ''"> and Expenses_Normal = #{expensesNormal} </if>
		  		  <if test="customerId != null and customerId != ''"> and Customer_ID = #{customerId} </if>
		  		  <if test="businessId != null and businessId != ''"> and Business_ID = #{businessId} </if>
		  		  <if test="projectId != null and projectId != ''"> and Project_ID = #{projectId} </if>
		  		  <if test="expensesNormalName != null and expensesNormalName != ''"> and Expenses_Normal_Name = #{expensesNormalName} </if>
		  		  <if test="expensesNormalReason != null and expensesNormalReason != ''"> and Expenses_Normal_Reason = #{expensesNormalReason} </if>
		  		  <if test="expensesNormalPrice != null and expensesNormalPrice != ''"> and Expenses_Normal_Price = #{expensesNormalPrice} </if>
		  		  <if test="expensesNormalResult != null and expensesNormalResult != ''"> and Expenses_Normal_Result = #{expensesNormalResult} </if>
		  		  <if test="expensesNormalRelatedid != null and expensesNormalRelatedid != ''"> and Expenses_Normal_RelatedID = #{expensesNormalRelatedid} </if>
		  		  <if test="expensesNormalRmarks != null and expensesNormalRmarks != ''"> and Expenses_Normal_Rmarks = #{expensesNormalRmarks} </if>
		  		  <if test="expensesNormalStatus != null and expensesNormalStatus != ''"> and Expenses_Normal_Status = #{expensesNormalStatus} </if>
		  		  <if test="expensesNormalOperator != null and expensesNormalOperator != ''"> and Expenses_Normal_Operator = #{expensesNormalOperator} </if>
		  		  <if test="expensesNormalOptTime != null and expensesNormalOptTime != ''"> and Expenses_Normal_Opt_Time = #{expensesNormalOptTime} </if>
		  		  <if test="expensesNormalCreator != null and expensesNormalCreator != ''"> and Expenses_Normal_Creator = #{expensesNormalCreator} </if>
		  		  <if test="expensesNormalCreateTime != null and expensesNormalCreateTime != ''"> and Expenses_Normal_Create_Time = #{expensesNormalCreateTime} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.approval.domain.ExpensesNormalDO">
		insert into approval_expenses_normal
		(
			`Expenses_Normal`, 
			`Customer_ID`, 
			`Business_ID`, 
			`Project_ID`, 
			`Expenses_Normal_Name`, 
			`Expenses_Normal_Reason`, 
			`Expenses_Normal_Price`, 
			`Expenses_Normal_Result`, 
			`Expenses_Normal_RelatedID`, 
			`Expenses_Normal_Rmarks`, 
			`Expenses_Normal_Status`, 
			`Expenses_Normal_Operator`, 
			`Expenses_Normal_Opt_Time`, 
			`Expenses_Normal_Creator`, 
			`Expenses_Normal_Create_Time`
		)
		values
		(
			#{expensesNormal}, 
			#{customerId}, 
			#{businessId}, 
			#{projectId}, 
			#{expensesNormalName}, 
			#{expensesNormalReason}, 
			#{expensesNormalPrice}, 
			#{expensesNormalResult}, 
			#{expensesNormalRelatedid}, 
			#{expensesNormalRmarks}, 
			#{expensesNormalStatus}, 
			#{expensesNormalOperator}, 
			#{expensesNormalOptTime}, 
			#{expensesNormalCreator}, 
			#{expensesNormalCreateTime}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.approval.domain.ExpensesNormalDO">
		update approval_expenses_normal 
		<set>
			<if test="customerId != null">`Customer_ID` = #{customerId}, </if>
			<if test="businessId != null">`Business_ID` = #{businessId}, </if>
			<if test="projectId != null">`Project_ID` = #{projectId}, </if>
			<if test="expensesNormalName != null">`Expenses_Normal_Name` = #{expensesNormalName}, </if>
			<if test="expensesNormalReason != null">`Expenses_Normal_Reason` = #{expensesNormalReason}, </if>
			<if test="expensesNormalPrice != null">`Expenses_Normal_Price` = #{expensesNormalPrice}, </if>
			<if test="expensesNormalResult != null">`Expenses_Normal_Result` = #{expensesNormalResult}, </if>
			<if test="expensesNormalRelatedid != null">`Expenses_Normal_RelatedID` = #{expensesNormalRelatedid}, </if>
			<if test="expensesNormalRmarks != null">`Expenses_Normal_Rmarks` = #{expensesNormalRmarks}, </if>
			<if test="expensesNormalStatus != null">`Expenses_Normal_Status` = #{expensesNormalStatus}, </if>
			<if test="expensesNormalOperator != null">`Expenses_Normal_Operator` = #{expensesNormalOperator}, </if>
			<if test="expensesNormalOptTime != null">`Expenses_Normal_Opt_Time` = #{expensesNormalOptTime}, </if>
			<if test="expensesNormalCreator != null">`Expenses_Normal_Creator` = #{expensesNormalCreator}, </if>
			<if test="expensesNormalCreateTime != null">`Expenses_Normal_Create_Time` = #{expensesNormalCreateTime}</if>
		</set>
		where Expenses_Normal = #{expensesNormal}
	</update>
	
	<delete id="remove">
		delete from approval_expenses_normal where Expenses_Normal = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from approval_expenses_normal where Expenses_Normal in 
		<foreach item="expensesNormal" collection="array" open="(" separator="," close=")">
			#{expensesNormal}
		</foreach>
	</delete>

</mapper>