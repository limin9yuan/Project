<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.sales.dao.CustomerChildCompanyDao">

	<select id="get" resultType="com.bootdo.sales.domain.CustomerChildCompanyDo">
		select
		Child_Company_ID,Customer_ID,Child_Company_Name,Child_Company_Remarks,Child_Company_Operator,Child_Company_Operate_Time,Child_Company_Create_Time
		from sales_customer_child_company where Child_Company_ID = #{value}
	</select>

	<select id="list" resultType="com.bootdo.sales.domain.CustomerChildCompanyDo">
		select
		Child_Company_ID,a.Customer_ID,Child_Company_Name,Child_Company_Remarks,
		u.name AS  Child_Company_Operator ,
		Child_Company_Operate_Time,Child_Company_Create_Time
		from
		sales_customer_child_company a
		left join sys_user u on
		a.Child_Company_Operator =u.user_id
		left join sales_company_customer s
		on a.Customer_ID=s.Customer_ID

		<where>
			<if test="customerId != null and  customerId !=''"> and a.Customer_ID= #{customerId} </if>

		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by Child_Company_ID desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="count" resultType="int">
		select count(*)
		from sales_customer_child_company a
		left join sys_user u
		on a.Child_Company_Operator =u.user_id
		left join sales_company_customer
		s on a.Customer_ID=s.Customer_ID
		<where>

			<if test="customerId != null and  customerId !=''"> and a.Customer_ID= #{customerId} </if>
		</where>
	</select>

	<insert id="save" parameterType="com.bootdo.sales.domain.CustomerChildCompanyDo">
		insert into
		sales_customer_child_company
		(
		Customer_ID,
		Child_Company_Name,
		Child_Company_Remarks,
		Child_Company_Operator,
		Child_Company_Operate_Time,
		Child_Company_Create_Time
		)
		values
		(
		#{customerId},
		#{childCompanyName},
		#{childCompanyRemarks},
		#{childCompanyOperator},
		#{childCompanyOperateTime},
		now()
		)
	</insert>

	<update id="update" parameterType="com.bootdo.sales.domain.CustomerChildCompanyDo">
		update sales_customer_child_company a
		<set>
			a.Child_Company_Operate_Time = now(),
			<!-- <if test="childCompanyId != null">`Child_Company_ID` = #{childCompanyId}, 
				</if> -->
			<!-- <if test="customerId != null">`Customer_ID` = #{customerId}, </if> -->
			<if test="childCompanyName != null">Child_Company_Name = #{childCompanyName}, </if>
			<if test="childCompanyRemarks != null">Child_Company_Remarks = #{childCompanyRemarks}, </if>
			<if test="childCompanyOperator != null">Child_Company_Operator = #{childCompanyOperator}, </if>
			<if test="childCompanyOperateTime != null">Child_Company_Operate_Time =#{childCompanyOperateTime},
			</if>
			<if test="childCompanyCreateTime != null">Child_Company_Create_Time = #{childCompanyCreateTime},
			</if>

		</set>
		where Child_Company_ID = #{childCompanyId}
	</update>

	<delete id="remove">
		delete from sales_customer_child_company where
		Child_Company_ID
		= #{value}
	</delete>

	<delete id="batchRemove">
		delete from sales_customer_child_company where Child_Company_ID in
		<foreach item="childCompanyId" collection="array" open="("
			separator="," close=")">
			#{childCompanyId}
		</foreach>
	</delete>
	<select id="listDic" resultType="com.bootdo.common.domain.DictDO">
		select `Child_Company_ID`
		value,concat(`Child_Company_ID`,' ',`Child_Company_Name`) name
		from
		sales_customer_child_company
	</select>
</mapper>