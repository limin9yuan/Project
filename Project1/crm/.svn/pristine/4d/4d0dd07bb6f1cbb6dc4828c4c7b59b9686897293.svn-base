<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.payment.dao.ProjectExpenditureDao">
	<select id="get" resultType="com.bootdo.payment.domain.ProjectExpenditureDO">
		select a.Project_ID,a.Customer_ID,Collection_ID,
		a.Project_Name,a.Project_Sales,a.Project_Begin_Date,
		a.Project_End_Date,Project_Owner,
		a.Project_Manager,Project_Development_Begin_Date,
		Project_Development_End_Date,a.Project_Gategory,
		a.Project_Phase,a.Project_Description,a.Project_Old_ID,
		a.Project_Remarks,a.Project_Operator,a.Project_Operate_Time,Customer_Name,Dept_Name,u.name as projectOperatorName,
		b.Budget_Profit_Rate,h.Business_ID
		FROM development_project a
		left join sales_company_customer s on a.Customer_ID = s.Customer_ID
		left join project_project_dept p on a.Project_ID = p.Project_ID
		left join inner_org_dept i on p.Dept_ID = i.Dept_ID
		left join sys_user u ON a.Project_Operator = u.user_id
		left join project_budget b on a.Project_ID = b.Project_ID
		left join pre_sales_project g on a.Project_Related_ID = g.Project_ID
		left join sales_business h on g.Project_Business = h.Business_ID
		where a.Project_ID = #{value}
	</select>

	<select id="list" resultType="com.bootdo.payment.domain.ProjectExpenditureDO">
		select a.Project_ID,a.Customer_ID,Collection_ID,
		a.Project_Name,a.Project_Sales,a.Project_Begin_Date,
		a.Project_End_Date,Project_Owner,
		a.Project_Manager,Project_Development_Begin_Date,
		Project_Development_End_Date,a.Project_Gategory,
		a.Project_Phase,a.Project_Description,a.Project_Old_ID,
		a.Project_Remarks,a.Project_Operator,a.Project_Operate_Time,Customer_Name,Dept_Name,u.name as projectOperatorName,
		b.Budget_Profit_Rate,h.Business_ID
		FROM development_project a
		left join sales_company_customer s on a.Customer_ID = s.Customer_ID
		left join project_project_dept p on a.Project_ID = p.Project_ID
		left join inner_org_dept i on p.Dept_ID = i.Dept_ID
		left join sys_user u ON a.Project_Operator = u.user_id
		left join project_budget b on a.Project_ID = b.Project_ID
		left join pre_sales_project g on a.Project_Related_ID = g.Project_ID
		left join sales_business h on g.Project_Business = h.Business_ID
        <where>
		  		  <if test="projectId != null and projectId != ''"> and a.Project_ID = #{projectId} </if>
		  		  <if test="projectManager != null and projectManager != ''"> and a.Project_Manager like #{projectManager} </if>
		  		  <if test="projectSales != null and projectSales != ''"> and a.Project_Sales = #{projectSales} </if>
		  		  <if test="businessId != null and businessId != ''"> and h.Business_ID = #{businessId} </if>
			      <if test="beginDate != null and beginDate != ''"> and a.Project_Begin_Date &gt;= #{beginDate}</if>
			      <if test="endDate != null and endDate !=''">and a.Project_Begin_Date &lt;= #{endDate}</if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by Project_ID desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from development_project a
		left join sales_company_customer s on a.Customer_ID = s.Customer_ID
		left join project_project_dept p on a.Project_ID = p.Project_ID
		left join inner_org_dept i on p.Dept_ID = i.Dept_ID
		left join sys_user u on a.Project_Operator = u.user_id
		 <where>
		  		  <if test="projectId != null and projectId != ''"> and a.Project_ID = #{projectId} </if>
		  		  <if test="customerId != null and customerId != ''"> and Customer_ID = #{customerId} </if>
		  		  <if test="collectionId != null and collectionId != ''"> and Collection_ID = #{collectionId} </if>
		  		  <if test="projectName != null and projectName != ''"> and Project_Name = #{projectName} </if>
		  		  <if test="projectSales != null and projectSales != ''"> and Project_Sales = #{projectSales} </if>
		  		  <if test="projectBeginDate != null and projectBeginDate != ''"> and Project_Begin_Date = #{projectBeginDate} </if>
		  		  <if test="projectEndDate != null and projectEndDate != ''"> and Project_End_Date = #{projectEndDate} </if>
		  		  <if test="projectOwner != null and projectOwner != ''"> and Project_Owner = #{projectOwner} </if>
		  		  <if test="projectDevelopmentBeginDate != null and projectDevelopmentBeginDate != ''"> and Project_Development_Begin_Date = #{projectDevelopmentBeginDate} </if>
		  		  <if test="projectDevelopmentEndDate != null and projectDevelopmentEndDate != ''"> and Project_Development_End_Date = #{projectDevelopmentEndDate} </if>
		  		  <if test="projectGategory != null and projectGategory != ''"> and a.Project_Gategory = #{projectGategory} </if>
		  		  <if test="projectPhase != null and projectPhase != ''"> and Project_Phase = #{projectPhase} </if>
		  		  <if test="projectDescription != null and projectDescription != ''"> and Project_Description = #{projectDescription} </if>
		  		  <if test="projectOldId != null and projectOldId != ''"> and Project_Old_ID = #{projectOldId} </if>
		  		  <if test="projectRemarks != null and projectRemarks != ''"> and Project_Remarks = #{projectRemarks} </if>
		  		  <if test="projectOperateTime != null and projectOperateTime != ''"> and Project_Operate_Time = #{projectOperateTime} </if>
		  		  
		  		  <if test="projectManager != null and projectManager != ''"> and Project_Manager like #{projectManager} </if>
		  		  <if test="projectOperator != null and projectOperator != ''"> and u.name = #{projectOperator} </if>
		  		  <if test="businessId != null and businessId != ''"> and h.Business_ID = #{businessId} </if>
		  		</where>
	</select>
	<insert id="save" parameterType="com.bootdo.payment.domain.ProjectExpenditureDO">
		insert into development_project
		(
			`Project_ID`, 
			`Customer_ID`, 
			`Collection_ID`, 
			`Project_Name`, 
			`Project_Sales`, 
			`Project_Begin_Date`, 
			`Project_End_Date`, 
			`Project_Owner`, 
			`Project_Manager`, 
			`Project_Development_Begin_Date`, 
			`Project_Development_End_Date`, 
			`Project_Gategory`, 
			`Project_Phase`, 
			`Project_Description`, 
			`Project_Old_ID`, 
			`Project_Remarks`, 
			`Project_Operator`, 
			`Project_Operate_Time`
		)
		values
		(
			#{projectId}, 
			#{customerId}, 
			#{collectionId}, 
			#{projectName}, 
			#{projectSales}, 
			#{projectBeginDate}, 
			#{projectEndDate}, 
			#{projectOwner}, 
			#{projectManager}, 
			#{projectDevelopmentBeginDate}, 
			#{projectDevelopmentEndDate}, 
			#{projectGategory}, 
			#{projectPhase}, 
			#{projectDescription}, 
			#{projectOldId}, 
			#{projectRemarks}, 
			#{projectOperator}, 
			#{projectOperateTime}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.payment.domain.ProjectExpenditureDO">
			update development_project 
		<set>
			<if test="customerId != null">`Customer_ID` = #{customerId}, </if>
			<if test="collectionId != null">`Collection_ID` = #{collectionId}, </if>
			<if test="projectName != null">`Project_Name` = #{projectName}, </if>
			<if test="projectSales != null">`Project_Sales` = #{projectSales}, </if>
			<if test="projectBeginDate != null">`Project_Begin_Date` = #{projectBeginDate}, </if>
			<if test="projectEndDate != null">`Project_End_Date` = #{projectEndDate}, </if>
			<if test="projectOwner != null">`Project_Owner` = #{projectOwner}, </if>
			<if test="projectManager != null">`Project_Manager` = #{projectManager}, </if>
			<if test="projectDevelopmentBeginDate != null">`Project_Development_Begin_Date` = #{projectDevelopmentBeginDate}, </if>
			<if test="projectDevelopmentEndDate != null">`Project_Development_End_Date` = #{projectDevelopmentEndDate}, </if>
			<if test="projectGategory != null">`Project_Gategory` = #{projectGategory}, </if>
			<if test="projectPhase != null">`Project_Phase` = #{projectPhase}, </if>
			<if test="projectDescription != null">`Project_Description` = #{projectDescription}, </if>
			<if test="projectOldId != null">`Project_Old_ID` = #{projectOldId}, </if>
			<if test="projectRemarks != null">`Project_Remarks` = #{projectRemarks}, </if>
			<if test="projectOperator != null">`Project_Operator` = #{projectOperator}, </if>
			<if test="projectOperateTime != null">`Project_Operate_Time` = #{projectOperateTime}</if>
		</set>
		where Project_ID = #{projectId}
	</update>
	
	<delete id="remove">
		delete from development_project where Project_ID = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from development_project where Project_ID in 
		<foreach item="projectId" collection="array" open="(" separator="," close=")">
			#{projectId}
		</foreach>
	</delete>
	
	<!-- 项目主管 -->
	<select id="listDic" resultType="com.bootdo.common.domain.DictDO">
		select Project_ID value,concat(Project_ID,' ',Project_Owner) name
		from development_project
	</select> 
	
	<!-- 项目经理 -->
	<select id="listDicManager" resultType="com.bootdo.common.domain.DictDO">
		select Project_ID value,concat(Project_ID,' ',Project_Manager) name
		from development_project
	</select>
</mapper>