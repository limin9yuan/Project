<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.budget.dao.BudgetPurchaseDao">

	<select id="get" resultType="com.bootdo.budget.domain.BudgetPurchaseDO">
		select `Budget_ID`,`Purchase_ID`,`Purchase_Type`,`Purchase_Price`,`Purchase_Description`,`Purchase_Customer_Rate`,`Purchase_Project_Rate`,`Purchase_Remarks`,`Purchase_Operator`,`Purchase_OPerate_Time`,`Purchase_Total_Price` from budget_purchase where Purchase_ID = #{value}
	</select>

	<select id="list" resultType="com.bootdo.budget.domain.BudgetPurchaseDO">
		select `Budget_ID`,`Purchase_ID`,`Purchase_Type`,`Purchase_Price`,`Purchase_Description`,`Purchase_Customer_Rate`,`Purchase_Project_Rate`,`Purchase_Remarks`,`Purchase_Operator`,`Purchase_OPerate_Time`,`Purchase_Total_Price` from budget_purchase
        <where>  
		  		  <if test="budgetId != null and budgetId != ''"> and Budget_ID = #{budgetId} </if>
		  		  <if test="purchaseId != null and purchaseId != ''"> and Purchase_ID = #{purchaseId} </if>
		  		  <if test="purchaseType != null and purchaseType != ''"> and Purchase_Type = #{purchaseType} </if>
		  		  <if test="purchasePrice != null and purchasePrice != ''"> and Purchase_Price = #{purchasePrice} </if>
		  		  <if test="purchaseDescription != null and purchaseDescription != ''"> and Purchase_Description = #{purchaseDescription} </if>
		  		  <if test="purchaseCustomerRate != null and purchaseCustomerRate != ''"> and Purchase_Customer_Rate = #{purchaseCustomerRate} </if>
		  		  <if test="purchaseProjectRate != null and purchaseProjectRate != ''"> and Purchase_Project_Rate = #{purchaseProjectRate} </if>
		  		  <if test="purchaseRemarks != null and purchaseRemarks != ''"> and Purchase_Remarks = #{purchaseRemarks} </if>
		  		  <if test="purchaseOperator != null and purchaseOperator != ''"> and Purchase_Operator = #{purchaseOperator} </if>
		  		  <if test="purchaseOperateTime != null and purchaseOperateTime != ''"> and Purchase_OPerate_Time = #{purchaseOperateTime} </if>
		  		  <if test="purchaseTotalPrice != null and purchaseTotalPrice != ''"> and Purchase_Total_Price = #{purchaseTotalPrice} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by Purchase_ID desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from budget_purchase
		 <where>  
		  		  <if test="budgetId != null and budgetId != ''"> and Budget_ID = #{budgetId} </if>
		  		  <if test="purchaseId != null and purchaseId != ''"> and Purchase_ID = #{purchaseId} </if>
		  		  <if test="purchaseType != null and purchaseType != ''"> and Purchase_Type = #{purchaseType} </if>
		  		  <if test="purchasePrice != null and purchasePrice != ''"> and Purchase_Price = #{purchasePrice} </if>
		  		  <if test="purchaseDescription != null and purchaseDescription != ''"> and Purchase_Description = #{purchaseDescription} </if>
		  		  <if test="purchaseCustomerRate != null and purchaseCustomerRate != ''"> and Purchase_Customer_Rate = #{purchaseCustomerRate} </if>
		  		  <if test="purchaseProjectRate != null and purchaseProjectRate != ''"> and Purchase_Project_Rate = #{purchaseProjectRate} </if>
		  		  <if test="purchaseRemarks != null and purchaseRemarks != ''"> and Purchase_Remarks = #{purchaseRemarks} </if>
		  		  <if test="purchaseOperator != null and purchaseOperator != ''"> and Purchase_Operator = #{purchaseOperator} </if>
		  		  <if test="purchaseOperateTime != null and purchaseOperateTime != ''"> and Purchase_OPerate_Time = #{purchaseOperateTime} </if>
		  		  <if test="purchaseTotalPrice != null and purchaseTotalPrice != ''"> and Purchase_Total_Price = #{purchaseTotalPrice} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.budget.domain.BudgetPurchaseDO">
		insert into budget_purchase
		(
			`Budget_ID`, 
			`Purchase_ID`, 
			`Purchase_Type`, 
			`Purchase_Price`, 
			`Purchase_Description`, 
			`Purchase_Customer_Rate`, 
			`Purchase_Project_Rate`, 
			`Purchase_Remarks`, 
			`Purchase_Operator`, 
			`Purchase_OPerate_Time`,
			`Purchase_Total_Price`
		)
		values
		(
			#{budgetId}, 
			#{purchaseId}, 
			#{purchaseType}, 
			#{purchasePrice}, 
			#{purchaseDescription}, 
			#{purchaseCustomerRate}, 
			#{purchaseProjectRate}, 
			#{purchaseRemarks}, 
			#{purchaseOperator}, 
			#{purchaseOperateTime},
			#{purchaseTotalPrice}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.budget.domain.BudgetPurchaseDO">
		update budget_purchase 
		<set>
			<if test="budgetId != null">`Budget_ID` = #{budgetId}, </if>
			<if test="purchaseType != null">`Purchase_Type` = #{purchaseType}, </if>
			<if test="purchasePrice != null">`Purchase_Price` = #{purchasePrice}, </if>
			<if test="purchaseDescription != null">`Purchase_Description` = #{purchaseDescription}, </if>
			<if test="purchaseCustomerRate != null">`Purchase_Customer_Rate` = #{purchaseCustomerRate}, </if>
			<if test="purchaseProjectRate != null">`Purchase_Project_Rate` = #{purchaseProjectRate}, </if>
			<if test="purchaseRemarks != null">`Purchase_Remarks` = #{purchaseRemarks}, </if>
			<if test="purchaseOperator != null">`Purchase_Operator` = #{purchaseOperator}, </if>
			<if test="purchaseOperateTime != null">`Purchase_OPerate_Time` = #{purchaseOperateTime},</if>
			<if test="purchaseTotalPrice != null">`Purchase_Total_Price` = #{purchaseTotalPrice}</if>
		</set>
		where Purchase_ID = #{purchaseId}
	</update>
	
	<delete id="remove">
		delete from budget_purchase where Purchase_ID = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from budget_purchase where Purchase_ID in 
		<foreach item="purchaseId" collection="array" open="(" separator="," close=")">
			#{purchaseId}
		</foreach>
	</delete>

</mapper>