create or replace PACKAGE BODY PKG_CHARGE AS
--生成应收
  procedure createPlan(
    p_item_code in varchar2,--收费项目
    p_charge_month in varchar2,--生成计划的收费期  
    p_range in varchar2,--生成计划条件
    p_returnNumber in varchar2,--是否返回生成房间数 1是，0否
    p_operator in varchar2,--操作人
    o_creatPlanNumber out number,--生成应收记录数
    appCode out nocopy varchar2,--是否成功 1成功0出错
    errorMsg out nocopy varchar2--错误信息
    )  AS   
    strSql varchar2(32000);
    v_num number(10);
  BEGIN 
if p_item_code='A' then 
    strSql:='update sf_charge d
    set  (OWNER_NAME,  		
    TOTAL_ACCOUNT            ,		
    REAL_ACCOUNT             , 		
    USE_TYPE                 , 		
    STANDARD_CODE            , 		
    PRICE                    , 		
    BUILD_AREA               , 		
    FLOOR_AREA               , 		
    CHARGE_AREA              , 		
    PLAN_BEGIN_DATE          , 		
    PLAN_END_DATE,
    STAT_ID,
    HOUSE_MANAGER)=(
    select b.owner_name,
    round(a.charge_area*c.price+(case when a.standard_id=''A1'' then nvl(h.BALCONY,2)/2*17.2 else 0 end),c.ACCOUNTDOT ),
    round(a.charge_area*c.price+(case when a.standard_id=''A1'' then nvl(h.BALCONY,2)/2*17.2 else 0 end),c.ACCOUNTDOT ),
    a.use_type,
    a.standard_id,c.price,
    a.build_area,
    a.super_area,a.charge_area,
    c.period_start_date,c.period_end_date,h.STAT_ID,h.HOUSE_MANAGER
    from fc_HOUSE h,fc_area a,fc_owner b,sf_standard c
    where h.house_code=a.house_code and a.house_code=b.house_code(+) and b.is_owner(+)=''1''
    and a.standard_id=c.standard_id
    and c.standyear='''||p_charge_month||'''
    and (a.community_code in ('||p_range||') 
    or a.building_code in ('||p_range||') 
    or a.house_code in ('||p_range||'))
    and a.house_code=d.house_code 
    and a.item_code=d.item_code
    and a.area_id=d.meter_id
    and d.charge_month='''||p_charge_month||'''
    ) where charge_month='''||p_charge_month||'''
    and item_code='''||p_item_code||''' 
    and (community_code in ('||p_range||') 
    or building_code in ('||p_range||') 
    or house_code in ('||p_range||'))
    and exists (select 1
    from fc_HOUSE h,fc_area a,fc_owner b,sf_standard c
    where h.house_code=a.house_code and a.house_code=b.house_code(+) and b.is_owner(+)=''1''
    and a.standard_id=c.standard_id 
    and (a.community_code in ('||p_range||') 
    or a.building_code in ('||p_range||') 
    or a.house_code in ('||p_range||'))
    and a.house_code=d.house_code 
    and a.item_code=d.item_code
    and a.area_id=d.meter_id
    and d.charge_month='''||p_charge_month||'''
    )';
dbms_output.put_line(strSql);
execute immediate strSql; 
    strSql:='insert into sf_charge(
    CHARGE_MONTH             , 
    HOUSE_CODE               , 		
    ITEM_CODE                , 		
    METER_ID                 , 			
    CID                      , 			
    COMMUNITY_CODE           , 		
    BUILDING_CODE            , 		
    OWNER_NAME               , 		
    TOTAL_ACCOUNT            ,		
    REAL_ACCOUNT             , 		
    USE_TYPE                 , 		
    STANDARD_CODE            , 		
    PRICE                    , 		
    BUILD_AREA               , 		
    FLOOR_AREA               , 		
    CHARGE_AREA              , 		
    PLAN_BEGIN_DATE          , 		
    PLAN_END_DATE            ,
    STAT_ID,
    HOUSE_MANAGER)
    select '''||p_charge_month||''',
    a.house_code,'''||p_item_code||''',    
    a.area_id,a.cid,a.community_code,a.building_code,b.owner_name,
    round(a.charge_area*c.price+(case when a.standard_id=''A1'' then nvl(h.BALCONY,2)/2*17.2 else 0 end) ,c.ACCOUNTDOT ),
    round(a.charge_area*c.price+(case when a.standard_id=''A1'' then nvl(h.BALCONY,2)/2*17.2 else 0 end) ,c.ACCOUNTDOT ),
    use_type,
    a.standard_id,c.price,a.build_area,a.super_area,a.charge_area,
    c.period_start_date,c.period_end_date,h.STAT_ID,h.HOUSE_MANAGER
    from fc_HOUSE h,fc_area a,fc_owner b,sf_standard c
    where h.house_code=a.house_code and a.house_code=b.house_code(+) and b.is_owner(+)=''1''
    and a.standard_id=c.standard_id 
    and c.standyear='''||p_charge_month||'''
    and (a.community_code in ('||p_range||') 
    or a.building_code in ('||p_range||') 
    or a.house_code in ('||p_range||'))
    and not exists (select 1 from sf_charge where charge_month='''||p_charge_month||'''
    and item_code='''||p_item_code||''' and (community_code in ('||p_range||') 
    or building_code in ('||p_range||') 
    or house_code in ('||p_range||'))
    and a.house_code=house_code 
    and a.area_id=meter_id and a.item_code=item_code
    )';
  dbms_output.put_line(strSql);
  execute immediate strSql;
  strSql:='update sf_charge a set (minus_money,real_account)=
  (select sum(nvl(minus_money,0)),a.total_account-sum(nvl(minus_money,0)) from sf_minus
  where a.house_code =house_code and a.item_code=item_code and charge_month=a.charge_month and a.meter_id=meter_id
  and charge_month='''||p_charge_month||'''
  and item_code='''||p_item_code||''' 
  and (community_code in ('||p_range||') 
      or building_code in ('||p_range||') 
      or house_code in ('||p_range||')))
  where  (a.community_code in ('||p_range||') 
      or a.building_code in ('||p_range||') 
      or a.house_code in ('||p_range||'))
  and a.charge_month='''||p_charge_month||'''
  and a.item_code='''||p_item_code||''' 
  and exists(select 1 from sf_minus
  where a.house_code =house_code and a.item_code=item_code 
  and charge_month=a.charge_month and a.meter_id=meter_id
  and charge_month='''||p_charge_month||'''
  and item_code='''||p_item_code||''' 
  and (community_code in ('||p_range||') 
    or building_code in ('||p_range||') 
    or house_code in ('||p_range||')))';
dbms_output.put_line(strSql);
execute immediate strSql;
elsif p_item_code='B' then 
    strSql:='update sf_charge d
    set  (OWNER_NAME,  		
    TOTAL_ACCOUNT            ,		
    REAL_ACCOUNT             , 		
    USE_TYPE                 , 		
    STANDARD_CODE            , 		
    PRICE                    , 		
    BUILD_AREA               , 		
    FLOOR_AREA               , 		
    CHARGE_AREA              , 		
    PLAN_BEGIN_DATE          , 		
    PLAN_END_DATE           )=(
    select b.owner_name,
    a.intoweb_area*c.price,a.intoweb_area*c.price, 
    '''',
    a.standard_id,c.price,
    a.intoweb_area,
    0,a.intoweb_area,
    '''',''''
    from iw_intoweb a,fc_owner b,sf_standard c
    where a.house_code=b.house_code(+) and b.is_owner(+)=''1''
    and a.standard_id=c.standard_id 
    and (a.community_code in ('||p_range||') 
    or a.building_code in ('||p_range||') 
    or a.house_code in ('||p_range||'))
    and a.house_code=d.house_code 
    and d.item_code='''||p_item_code||''' 
    and a.area_id=d.meter_id
    and d.charge_month='''||p_charge_month||'''
    ) where charge_month='''||p_charge_month||'''
    and item_code='''||p_item_code||''' 
    and (community_code in ('||p_range||') 
    or building_code in ('||p_range||') 
    or house_code in ('||p_range||'))
    and exists (select 1
    from iw_intoweb a,fc_owner b,sf_standard c
    where a.house_code=b.house_code(+) and b.is_owner(+)=''1''
    and a.standard_id=c.standard_id 
    and (a.community_code in ('||p_range||') 
    or a.building_code in ('||p_range||') 
    or a.house_code in ('||p_range||'))
    and a.house_code=d.house_code 
    and d.item_code='''||p_item_code||''' 
    and a.area_id=d.meter_id
    and d.charge_month='''||p_charge_month||'''
    )';
dbms_output.put_line(strSql);
execute immediate strSql; 
    strSql:='insert into sf_charge(
    CHARGE_MONTH             , 
    HOUSE_CODE               , 		
    ITEM_CODE                , 		
    METER_ID                 , 			
    CID                      , 			
    COMMUNITY_CODE           , 		
    BUILDING_CODE            , 		
    OWNER_NAME               , 		
    TOTAL_ACCOUNT            ,		
    REAL_ACCOUNT             , 		
    USE_TYPE                 , 		
    STANDARD_CODE            , 		
    PRICE                    , 		
    BUILD_AREA               , 		
    FLOOR_AREA               , 		
    CHARGE_AREA              , 		
    PLAN_BEGIN_DATE          , 		
    PLAN_END_DATE            )
    select '''||p_charge_month||''',
    a.house_code,'''||p_item_code||''',    
    a.area_id,a.cid,a.community_code,a.building_code,b.owner_name,
    a.intoweb_area*c.price,a.intoweb_area*c.price,'''',
    a.standard_id,c.price,a.intoweb_area,0,a.intoweb_area,
    '''',''''
    from iw_intoweb a,fc_owner b,sf_standard c
    where a.house_code=b.house_code(+) and b.is_owner(+)=''1''
    and a.standard_id=c.standard_id 
    and (a.community_code in ('||p_range||') 
    or a.building_code in ('||p_range||') 
    or a.house_code in ('||p_range||'))
    and not exists (select 1 from sf_charge where charge_month='''||p_charge_month||'''
    and item_code='''||p_item_code||''' and (community_code in ('||p_range||') 
    or building_code in ('||p_range||') 
    or house_code in ('||p_range||'))
    and a.house_code=house_code 
    and a.area_id=meter_id 
    )';
  dbms_output.put_line(strSql);
  execute immediate strSql;
  strSql:='update sf_charge a set (minus_money,real_account)=
  (select sum(nvl(minus_money,0)),a.total_account-sum(nvl(minus_money,0)) from sf_minus
  where a.house_code =house_code and a.item_code=item_code and charge_month=a.charge_month and a.meter_id=meter_id
  and charge_month='''||p_charge_month||'''
  and item_code='''||p_item_code||''' 
  and (community_code in ('||p_range||') 
      or building_code in ('||p_range||') 
      or house_code in ('||p_range||')))
  where  (a.community_code in ('||p_range||') 
      or a.building_code in ('||p_range||') 
      or a.house_code in ('||p_range||'))
  and a.charge_month='''||p_charge_month||'''
  and a.item_code='''||p_item_code||''' 
  and exists(select 1 from sf_minus
  where a.house_code =house_code and a.item_code=item_code 
  and charge_month=a.charge_month and a.meter_id=meter_id
  and charge_month='''||p_charge_month||'''
  and item_code='''||p_item_code||''' 
  and (community_code in ('||p_range||') 
      or building_code in ('||p_range||') 
      or house_code in ('||p_range||')))';
  dbms_output.put_line(strSql);
  execute immediate strSql;
  end if;
  v_num:=calculateLateFee (
    p_item_code,--收费项目
    p_charge_month,--生成计划的收费期  
    p_range--生成计划条件
    );
  o_creatPlanNumber:=100; 
  appCode:='1';
  errorMsg:='';
  END createPlan; 
  
  --减免
  procedure minusMoney(
    p_id in varchar2,--应收id
    p_minus_type in varchar2,--减免方式、折扣、金额
    p_minus_money in varchar2,--减免金额
    p_minus_rate in varchar2,--折扣率
    p_minus_kind in varchar2,--减免类型、按天、面积等减免
    p_minus_days in varchar2,--减免天数
    p_minus_area in varchar2,--减免面积
    p_minus_reason in varchar2,--减免原因
    p_remark in varchar2,--备注
    p_operator in varchar2,--操作人
    p_cid in varchar2,--操作人
    appCode out nocopy varchar2,--是否成功 1成功0出错
    errorMsg out nocopy varchar2--错误信息
    )  AS   
    strSql varchar2(2000);
  BEGIN
  strSql:='INSERT INTO sf_minus (community_code,building_code,house_code,charge_month,meter_id,item_code,
		minus_money,minus_type,minus_rate,minus_reason,remark,
		operator,operate_date,cid) 
		select community_code,building_code,house_code,charge_month,meter_id,item_code,
		'''||p_minus_money||''','''||p_minus_type||''','''||p_minus_rate||''','''
                ||p_minus_reason||''','''||p_remark||''','''||p_operator||''',to_char(sysdate,''YYYY-MM-DD HH24:MI:SS''),
                '''||p_cid||''' from sf_charge where p_id='''||p_id||'''';  
  dbms_output.put_line(strSql);
  execute immediate strSql;
  if p_minus_kind = '滞纳金' then
   strSql:='update sf_charge set LATEFEE_REALACCOUNT= nvl(LATEFEE_REALACCOUNT,0)-('||nvl(p_minus_money,0)||')'||
                ', LATEFEE_MINUS=nvl(LATEFEE_MINUS,0)+('||nvl(p_minus_money,0)||')
                where p_id='||p_id;
  else 
   strSql:='update sf_charge set real_account= real_account-('||nvl(p_minus_money,0)||')'||
                ', minus_money=minus_money+('||nvl(p_minus_money,0)||')
                where p_id='||p_id;
  end if;
 
  dbms_output.put_line(strSql);
  execute immediate strSql;
  appCode:='1';
  errorMsg:='';
  END minusMoney;
  --删除减免
  procedure deleteMinus(
    m_id in varchar2,--减免id
    p_charge_month in varchar2,--查询条件
    p_range in varchar2,--查询条件
    p_operator in varchar2,--操作人
    p_cid in varchar2,
    appCode out nocopy varchar2,--是否成功 1成功0出错
    errorMsg out nocopy varchar2--错误信息
    )  AS    
    strSql varchar2(5000);
    v_house_code varchar2(20);
    v_meter_id varchar2(10);
    v_charge_month varchar2(10);
    v_item_code varchar2(10);
  BEGIN
  if(m_id is not null) then 
    --删除后没有减免记录
    strSql:='update sf_charge a set (real_account,minus_money)=
                    (select a.total_account ,0 from dual)                                      
                    where not exists(select 1 from 
                    sf_minus where a.house_code =house_code 
                    and a.item_code=item_code 
                    and a.charge_month=charge_month 
                    and a.meter_id=meter_id  
                    and house_code||item_code||charge_month||meter_id in (
                    select house_code||item_code||charge_month||meter_id from sf_minus where m_id in ('||m_id||'))
                    and m_id not in ('||m_id||'))
                    and a.house_code||a.item_code||a.charge_month||a.meter_id in(
                    select house_code||item_code||charge_month||meter_id from sf_minus where m_id in ('||m_id||'))
                    ';
    dbms_output.put_line(strSql);
    execute immediate strSql;
    --删除后还有减免记录
    strSql:='update sf_charge a set (real_account,minus_money)=
                    (select a.total_account - sum(minus_money),sum(minus_money) from 
                    sf_minus where a.house_code =house_code 
                    and a.item_code=item_code 
                    and a.charge_month=charge_month 
                    and a.meter_id=meter_id
                    and house_code||item_code||charge_month||meter_id in (
                    select house_code||item_code||charge_month||meter_id from sf_minus where m_id in ('||m_id||'))
                    and m_id not in ('||m_id||'))                    
                    where exists(select 1 from 
                    sf_minus where a.house_code =house_code 
                    and a.item_code=item_code 
                    and a.charge_month=charge_month 
                    and a.meter_id=meter_id  
                    and house_code||item_code||charge_month||meter_id in (
                    select house_code||item_code||charge_month||meter_id from sf_minus where m_id in ('||m_id||'))
                    and m_id not in ('||m_id||')
                    )';
    dbms_output.put_line(strSql);
    execute immediate strSql;
    strSql:='delete from  sf_minus where m_id in ('||m_id||')';  
    dbms_output.put_line(strSql);
    execute immediate strSql;
  else
    strSql:='delete from  sf_minus where 1=1 '
                  || case when p_charge_month is not null then ' and charge_month='''||p_charge_month||'''' end 
                  || case when p_range is not null then 'and (community_code in ('||p_range||') 
                    or building_code in ('||p_range||') 
                    or house_code in ('||p_range||'))' else '' end ;  
    dbms_output.put_line(strSql);
    execute immediate strSql;       
    --删除后不存在减免记录
    strSql:='update sf_charge a set (real_account,minus_money)=
                    (select a.total_account ,0 from dual)
                    where not exists(select 1 from sf_minus 
                    where a.house_code =house_code 
                    and a.item_code=item_code 
                    and a.charge_month=charge_month 
                    and a.meter_id=meter_id '
                    || case when p_charge_month is not null then ' and charge_month='''||p_charge_month||'''' end 
                    || case when p_range is not null then ' and (community_code in ('||p_range||') 
                    or building_code in ('||p_range||') 
                    or house_code in ('||p_range||'))' else '' end ||
                    ') ' || case when p_range is not null then 'and (community_code in ('||p_range||') 
                    or building_code in ('||p_range||') 
                    or house_code in ('||p_range||'))' else '' end 
                    || case when p_charge_month is not null then ' and charge_month='''||p_charge_month||'''' end; 
    dbms_output.put_line(strSql);
    execute immediate strSql; 
    --删除后仍存在减免记录
    strSql:='update sf_charge a set (real_account,minus_money)=
                    (select a.total_account - sum(minus_money),sum(minus_money) from 
                    sf_minus where a.house_code =house_code 
                    and a.item_code=item_code 
                    and a.charge_month=charge_month 
                    and a.meter_id=meter_id '
                    || case when p_charge_month is not null then ' and charge_month='''||p_charge_month||'''' end 
                    || case when p_range is not null then ' and (community_code in ('||p_range||') 
                    or building_code in ('||p_range||') 
                    or house_code in ('||p_range||'))' else '' end ||
                    ') where exists(select 1 from sf_minus 
                    where a.house_code =house_code 
                    and a.item_code=item_code 
                    and a.charge_month=charge_month 
                    and a.meter_id=meter_id '
                    || case when p_charge_month is not null then ' and charge_month='''||p_charge_month||'''' end 
                    || case when p_range is not null then ' and (community_code in ('||p_range||') 
                    or building_code in ('||p_range||') 
                    or house_code in ('||p_range||'))' else '' end ||
                    ') ' || case when p_range is not null then 'and (community_code in ('||p_range||') 
                    or building_code in ('||p_range||') 
                    or house_code in ('||p_range||'))' else '' end 
                    || case when p_charge_month is not null then ' and charge_month='''||p_charge_month||'''' end; 
    dbms_output.put_line(strSql);
    execute immediate strSql; 
  end if;
  
  appCode:='1';
  errorMsg:='';
  END deleteMinus;
  /*收费*/
   procedure charge_A(
    b_id in number,--bill id
    p_id in varchar2,--应收id
    p_house_code in varchar2,--用户编号
    p_address in varchar2,--地址
    p_work_unit in varchar2,--工作单位    
    p_telphone in varchar2,--联系电话    
    p_invoice_number in varchar2,--发票代码
    p_invoice_code in varchar2,--发票号
    p_price in number,--单价
    p_charge_area in number,--面积    
    p_pay_mode in varchar2,--交款方式
    p_payman in varchar2,--交款人
    p_paydate in varchar2,--交款时间
    p_real_charge in number,--收费金额
    p_delzero in number,--抹零金额
    p_billman in varchar2,--、收款人
    p_billdate in varchar2,--收款时间    
    p_begin_prepay in number,--预收款初值
    p_end_prepay in number,--预收款现值
    p_use_prepay in number,--使用预收款
    p_add_prepay in number,--存入预收款
    p_latefee_enddate in varchar2,--滞纳金截止时间
    p_latefee_realaccount in number,--滞纳金应收金额
    p_latefee_charge in number,--滞纳金收费金额
    p_minus_reason in varchar2,--滞纳金减免类型
    p_remark in varchar2,--滞纳金减免备注
    p_operator in varchar2,--操作人
    p_cid in varchar2,--
    appCode out nocopy varchar2,--是否成功 1成功0出错
    errorMsg out nocopy varchar2--错误信息
    )  AS
    strSql varchar2(32000);
    v_date varchar2(19);
    v_bill_date varchar2(10);
    v_item_code varchar2(1);
    v_appCode varchar2(100);
    v_errorMsg varchar2(100);
  BEGIN 
  v_date:=to_char(sysdate,'YYYY-MM-DD HH24:MI:SS');
  v_bill_date :=to_char(sysdate,'YYYY-MM-DD');
  strSql:='insert into sf_detail (
            B_ID,
            CID,
            HOUSE_CODE,
            CHARGE_MONTH,
            ITEM_CODE            ,
            METER_ID             ,
            COMMUNITY_CODE       ,
            BUILDING_CODE        ,
            OWNER_NAME           ,
            TOTAL_ACCOUNT        ,
            REAL_ACCOUNT         ,
            
            CHARGE_TYPE          ,
            REAL_CHARGE          ,
            total_charge         ,
            bill_total_charge    ,
            bill_total_latefee   ,
            PAY_MAN              ,
            PAY_UNIT             ,
            CHARGE_PRICE         ,
            CHARGE_AREA          ,
            ADDRESS              ,
            PAY_MODE             ,
            DELZERO              ,
            BILL_MAN             ,
            BILL_DATE ,
            
            BEGIN_PREPAY     ,
            END_PREPAY       ,
            USE_PREPAY       ,
            ADD_PREPAY       ,
            OPERATOR         ,
            OPERATE_DATE ,
            LATEFEE_ENDDATE
            )
            select 
            '||b_id||',
            CID,
            HOUSE_CODE,
            CHARGE_MONTH,
            ITEM_CODE            ,
            METER_ID             ,
            COMMUNITY_CODE       ,
            BUILDING_CODE        ,
            OWNER_NAME           ,
            TOTAL_ACCOUNT        ,
            REAL_ACCOUNT         ,
            
            ''收费'',
            '||nvl(p_real_charge,0)||',
            '||nvl(p_real_charge,0)||',
            '||nvl(p_real_charge,0)||',
            '||nvl(p_latefee_charge,0)||',
            '''||p_payman||''',
            '''||p_work_unit||''',
            '''||nvl(p_price,0)||''',
            '||nvl(p_charge_area,0)||',
            '''||p_address||''',
            '''||p_pay_mode||''',
            '||nvl(p_delzero,0)||',
            '''||p_billman||''',
            '''||v_bill_date||''',
            
            '||nvl(p_begin_prepay,0)||',
            '||nvl(p_end_prepay,0)||',
            '||nvl(p_use_prepay,0)||',
            '||nvl(p_add_prepay,0)||',
            '''||p_operator||''',
            '''||v_date||''',
            '''||v_bill_date||'''
            from sf_charge where p_id='||p_id;
    dbms_output.put_line(strSql);
    execute immediate strSql;
    --应收
    strSql:='update sf_charge set now_cash=nvl(now_cash,0)+'||nvl(p_real_charge,0)||
            ' ,LATEFEE_NOWCASH=nvl(LATEFEE_NOWCASH,0)+'||nvl(p_latefee_charge,0)||
            ',delzero=nvl(delzero,0)+'||nvl(p_delzero,0)|| '
            where p_id='||p_id;
    dbms_output.put_line(strSql);
    execute immediate strSql;
    strSql:='select item_code from sf_charge
            where p_id='||p_id;
    dbms_output.put_line(strSql);
    execute immediate strSql into v_item_code;
    --发票
    if(p_invoice_number is not null and p_invoice_code is not null) then
    strSql:='insert into  sf_invoiceuse (B_ID,
            INVOICE_NUMBER,
            INVOICE_CODE,
            ITEM_CODE,
            INVOICE_MONEY,
            OPERATOR,
            OPERATE_DATE)
          values('||b_id||','''||p_invoice_number||''','''||p_invoice_code||''','''||v_item_code||''','||nvl(p_real_charge,0)||','''
          ||p_operator||''','''||v_date||''')';
    dbms_output.put_line(strSql);
    execute immediate strSql;
    strSql := 'update sf_invoice set status=''1'' 
              where invoice_number='''||p_invoice_number||''' and invoice_code='''||p_invoice_code||''' 
              and item_code='''||v_item_code||''' '; 
    --dbms_output.put_line(sql_statement);                             
    execute immediate strSql ; 
    strSql := 'update EAUSER set invoice_number='''||p_invoice_number||''',invoice_code='''||p_invoice_code||''' 
              where userid=''' || p_operator || ''''; 
    --dbms_output.put_line(sql_statement);                             
    execute immediate strSql ; 
    --滞纳金减免
    if p_latefee_realaccount!=p_latefee_charge then 

     PKG_CHARGE.minusMoney(
                            p_id,--应收id
                            '金额',--减免方式、折扣、金额
                            nvl(p_latefee_realaccount,0)-nvl(p_latefee_charge,0),--减免金额
                            0,--折扣率
                            '滞纳金',--减免类型、按天、面积等减免
                            0,--减免天数
                            0,--减免面积
                            p_minus_reason,--减免原因
                            p_remark,--滞纳金减免备注
                            p_operator,--操作人
                            p_cid,v_appCode,v_errorMsg
                            ) ;
    end if;
  end if;
  appCode:='1';
  errorMsg:='';
  END charge_A; 
    --冲账
   procedure rollback(
    p_b_id in varchar2,--收费单id    
    p_invalid_invoice in varchar2,--是否作废发票,1作废，0不作废
    p_rollback_reason in varchar2,--冲账原因
    p_remark in varchar2,--备注
    p_operator in varchar2,--操作人
    p_cid in varchar2,
    appCode out nocopy varchar2,--是否成功 1成功0出错
    errorMsg out nocopy varchar2--错误信息
    ) as 
    strSql varchar2(2000);
    v_date varchar2(19);
    begin
    v_date:=to_char(sysdate,'YYYY-MM-DD HH24:MI:SS');
    strSql:='update sf_detail set rollback_flag=''1'' ,rollback_operator='''||p_operator||''',
    rollback_operate_date='''||v_date||''',rollback_reason='''||p_rollback_reason||''',
    rollback_remark='''||p_remark||'''
    where b_id='''||p_b_id||'''';
    dbms_output.put_line(strSql);
    execute immediate strSql;
    strSql:='update sf_charge a set (now_cash,delzero,latefee_nowcash)=
    (select a.now_cash-real_charge,a.delzero-delzero,a.latefee_nowcash-latefee_realcharge from sf_detail where 
    b_id='''||p_b_id||''') where exists  (select 1 from sf_detail where 
    b_id='''||p_b_id||''' and a.house_code=house_code and a.item_code=item_code 
    and a.charge_month=charge_month and a.meter_id=meter_id)';
    dbms_output.put_line(strSql);
    execute immediate strSql;
    if(p_invalid_invoice='1') then      
    strSql:='update sf_invoice a set STATUS=''1'' where exists (
    select 1 from sf_invoiceuse where a.invoice_code=invoice_code
    and a.invoice_number=invoice_number and a.item_code=item_code
    and b_id='''||p_b_id||''')';     
    dbms_output.put_line(strSql);
    execute immediate strSql;
    end if;
    appCode:='1';
    errorMsg:='';
    end rollback;
     /*票据入库*/
    procedure insertInvoice(
    p_invoice_number in varchar2,--票据代码    
    p_invoice_code in varchar2,--票据编号
    p_invoice_account in varchar2,--数量
    p_item_code in varchar2,--收费项目    
    p_lead_man in varchar2,--领用人
    p_invoice_bigtype in varchar2,--发票大类
    p_invoice_type in varchar2,--发票类型
    p_book_code in varchar2,--册号
    p_operator in varchar2,--操作人
    p_cid in varchar2,
    appCode out nocopy varchar2,--是否成功 1成功0出错
    errorMsg out nocopy varchar2--错误信息
    ) as
    strSql varchar2(1000);
    v_date varchar2(19);
    i_invcode varchar2(20);
    v_STARTCODE varchar2(20);
    i number(10);
    begin
    v_date:=to_char(sysdate,'YYYY-MM-DD HH24:MI:SS');
    v_STARTCODE:=to_number(p_invoice_code);
    i:=0;
    while i<to_number(p_invoice_account) loop
      strSql :='select case when length('''||v_STARTCODE||'''+ROWNUM-1)=1 then ''0000000''||to_char('''||v_STARTCODE||'''+ROWNUM-1)
        when length('''||v_STARTCODE||'''+ROWNUM-1)=2 then ''000000''||to_char('''||v_STARTCODE||'''+ROWNUM-1)
        when length('''||v_STARTCODE||'''+ROWNUM-1)=3 then ''00000''||to_char('''||v_STARTCODE||'''+ROWNUM-1)
        when length('''||v_STARTCODE||'''+ROWNUM-1)=4 then ''0000''||to_char('''||v_STARTCODE||'''+ROWNUM-1)
        when length('''||v_STARTCODE||'''+ROWNUM-1)=5 then ''000''||to_char('''||v_STARTCODE||'''+ROWNUM-1)
        when length('''||v_STARTCODE||'''+ROWNUM-1)=6 then ''00''||to_char('''||v_STARTCODE||'''+ROWNUM-1)
        when length('''||v_STARTCODE||'''+ROWNUM-1)=7 then ''0''||to_char('''||v_STARTCODE||'''+ROWNUM-1)
        else to_char('''||v_STARTCODE||'''+ROWNUM-1) end as num FROM dual';
       v_STARTCODE:=v_STARTCODE+1;
        i:=i+1;
        dbms_output.put_line(strSql);
      execute immediate strSql into i_invcode;  
      strSql:='insert into SF_INVOICE (ITEM_CODE,INVOICE_CODE,INVOICE_NUMBER,INVOICE_TYPE,INVOICE_BIGTYPE,BOOK_CODE,
              LEAD_MAN,LEAD_DATE,OPERATOR,OPERATE_DATE,CID) 
        select '''||p_item_code||''','''||i_invcode||''','''||p_invoice_number||''','''
        ||p_invoice_type||''','''||p_invoice_bigtype||''','''||p_book_code||''','''
        ||p_lead_man||''','''||case when p_lead_man is not null then v_date else '' end ||''' ,'''
        ||p_operator||''' ,'''||v_date||''' ,'''||p_cid||''' from dual
        where not exists(select 1 from sf_invoice where 
        invoice_code='''||i_invcode||''' and invoice_number='''||p_invoice_number||''' 
        and item_code='''||p_item_code||''' and invoice_type='''||p_invoice_type||''')';
      dbms_output.put_line(strSql);
      execute immediate strSql; 
    end loop;
    appCode:='1';
    errorMsg:='';
    end insertInvoice;
    /*
  取得滞纳金
  */
  function getOVF_NUM(
    p_house_code in varchar2,--房间编号 
    p_item_code in varchar2,--收费项目
    p_charge_month in varchar2,--收费月份
    p_meter_id in varchar2 --表号
    )  
  return number as
    v_ovf number(18,2);
  begin
    --v_ovf:=0;
    execute immediate 'select nvl(LATEFEE_REALACCOUNT,0)-nvl(LATEFEE_NOWCASH,0)  LATEFEE_QF from sf_charge where house_code='''||p_house_code||''' 
                       and item_code='''||p_item_code||''' and charge_month='''||p_charge_month||''' and meter_id='''||p_meter_id||''' ' into v_ovf ;
    return v_ovf;
  end; 
  /*收费*/
   function charge(
    p_bank_number in varchar2, --银行交易流水号
    p_bank_company_id in varchar2,--银行id    
    p_house_code in varchar2,--用户编号    
    p_charge_month in varchar2,--收费月份
    p_owner_name in varchar2,--用户名称
    p_work_unit in varchar2,--工作单位
    p_charge_detail in varchar2,--收费明细
    p_invoice_number in varchar2,--发票代码
    p_invoice_code in varchar2,--发票号     
    p_pay_mode in varchar2,--交款方式
    p_payman in varchar2,--交款人
    p_paydate in varchar2,--交款时间
    p_real_charge in number,--收费金额(收费单实收金额，本金+滞纳金)
    p_latefee_charge in number,--收滞纳金金额(收费单收滞纳金金额)
    p_delzero in number,--抹零金额
    p_latefee_enddate in varchar2,--滞纳金截止时间
    p_billman in varchar2,--、收款人
    p_billdate in varchar2,--收款时间
    p_operator in varchar2,--操作人
    p_cid in varchar2
    )  return number AS 
    strSql varchar2(32000);
    b_id varchar2(30); -- 收费单号
    v_date varchar2(19);
    v_item_code varchar2(1);
    v_str_charge_detail varchar2(1000);
    v_len number(18);
    v_pos number(18);
    r_row varchar2(300);
    r_len number(18);
    r_pos number(18);
    r_charge_account number(18,2);--收费金额（本金+滞纳金）
    r_meter_id varchar2(10);--表号
    r_late_fee number(18,2);--滞纳金应收
    r_late_fee_charge number(18,2);--滞纳金收费金额
    r_qianfei number(18,2);--本金欠费金额
    r_charge_price number(18,2);--单价
    r_charge_area number(18,2);--面积
    r_latefee_begindate varchar2(20);--滞纳金开始时间
  BEGIN 
  v_date:=to_char(sysdate,'YYYY-MM-DD HH24:MI:SS');
  -- b_id :=to_char(systimestamp,'yyyymmddhh24missff3')||substr(dbms_random.value,3,2);
  v_str_charge_detail :=''; 
  --添加收费明细记录，更新收费计划表
  if (p_charge_detail is not null) then 
      v_str_charge_detail := ltrim(rtrim(p_charge_detail)) ;--拼接成...|...|格式的数据 
      v_len := length(v_str_charge_detail); 
      while (v_len>0) loop--循环收各个收费月份收费金额 
        dbms_output.put_line(v_str_charge_detail );
        v_pos := instr(v_str_charge_detail,'|');--取得"|"所在位置 
        r_row := substr(v_str_charge_detail, 1, v_pos - 1);--截取第一组数据 
        r_len := length(r_row);--取得第一组数据长度 
        r_pos := instr(r_row,',');--取得","所在位置 
        r_charge_account := substr(r_row, 1, r_pos -1);--截取第一项 收费金额(本金+滞纳金) 
          dbms_output.put_line('r_charge_account****'||r_charge_account);
          
        r_row := substr(r_row, r_pos + 1, r_len - r_pos);
        r_len := r_len - r_pos;
        r_pos := instr(r_row,',');
        r_meter_id := substr(r_row, 1, r_pos -1);--截取第2项 表号 
         dbms_output.put_line('2r_meter_id****'||r_meter_id);
         
        r_row := substr(r_row, r_pos + 1, r_len - r_pos);
        r_len := r_len - r_pos;
        r_pos := instr(r_row,',');
        r_late_fee := substr(r_row, 1, r_pos -1);--截取第3项 滞纳金应收
         dbms_output.put_line('3r_late_fee****'||r_late_fee);
         
        r_row := substr(r_row, r_pos + 1, r_len - r_pos);
        r_len := r_len - r_pos;
        r_pos := instr(r_row,',');
        r_qianfei := substr(r_row, 1, r_pos -1);--截取第4项 欠费金额
         dbms_output.put_line('4r_qianfei****'||r_qianfei);

        r_row := substr(r_row, r_pos + 1, r_len - r_pos);
        r_len := r_len - r_pos;
        r_pos := instr(r_row,',');
        r_late_fee_charge := substr(r_row, 1, r_pos -1);--截取第4项 滞纳金实收
         dbms_output.put_line('5r_late_fee_charge****'||r_late_fee_charge);
         
        r_row := substr(r_row, r_pos + 1, r_len - r_pos);
        r_len := r_len - r_pos;
        r_pos := instr(r_row,',');
        r_charge_area:= substr(r_row, 1, r_pos -1);--截取第4项 面积
         dbms_output.put_line('5r_charge_price****'||r_charge_area);
         
        r_row := substr(r_row, r_pos + 1, r_len - r_pos);
        r_len := r_len - r_pos;
        r_pos := instr(r_row,',');
        r_charge_price := substr(r_row, 1, r_pos -1);--截取第4项 单价
         dbms_output.put_line('5r_charge_area****'||r_charge_price);
        
        r_row := substr(r_row, r_pos + 1, r_len - r_pos);
        r_len := r_len - r_pos;
        r_pos := instr(r_row,',');
        r_latefee_begindate := substr(r_row, 1, r_pos -1);--截取第4项 滞纳金开始时间
         dbms_output.put_line('5r_latefee_begindatee****'||r_latefee_begindate);

        strSql:='insert into sf_detail (
                  B_ID,
                  BANKCOMPANYID,
                  BANKNUMBER,
                  CID,
                  HOUSE_CODE,
                  CHARGE_MONTH,
                  ITEM_CODE            ,
                  METER_ID             ,
                  COMMUNITY_CODE       ,
                  BUILDING_CODE        ,
                  OWNER_NAME           ,
                  TOTAL_ACCOUNT        ,
                  REAL_ACCOUNT         ,
                  
                  CHARGE_TYPE          ,
                  REAL_CHARGE          ,
                  total_charge         ,
                  bill_total_charge    ,
                  bill_total_latefee   ,
                  PAY_MAN              ,
                  PAY_UNIT             ,
                  CHARGE_PRICE         ,
                  CHARGE_AREA          ,
                  ADDRESS              ,
                  PAY_MODE             ,
                  DELZERO              ,
                  BILL_MAN             ,
                  BILL_DATE ,
                  
                  LATEFEE_STARTDATE    ,
                  LATEFEE_ENDDATE      ,
                  LATEFEE_TOTALACCOUNT ,
                  LATEFEE_MINUS        ,
                  LATEFEE_REALACCOUNT  ,
                  LATEFEE_REALCHARGE   ,
                  
                  BEGIN_PREPAY     ,
                  END_PREPAY       ,
                  USE_PREPAY       ,
                  ADD_PREPAY       ,
                  OPERATOR         ,
                  OPERATE_DATE         )select 
                  '||p_bank_number||',
                  '''||p_bank_company_id||''',
                  '''||p_bank_number||''',
                  '''||p_cid||''',
                  '''||p_house_code||''',
                  '''||p_charge_month||''',
                  ''A''            ,
                  '''||r_meter_id||'''             ,
                  COMMUNITY_CODE       ,
                  BUILDING_CODE        ,
                  '''||p_owner_name||'''           ,
                  '''||r_qianfei||'''           ,
                  '''||r_qianfei||'''           ,        
                  
                  ''收费'',
                  '||nvl(r_qianfei,0)||',
                  '||nvl(r_charge_account,0)||',
                  '||nvl(p_real_charge,0)||',
                  '||nvl(p_latefee_charge,0)||',
                  '''||p_payman||''',
                  '''||p_work_unit||''',
                  '||nvl(r_charge_price,0)||',
                  '||nvl(r_charge_area,0)||',
                  address,
                  '''||p_pay_mode||''',
                  '||nvl(p_delzero,0)||',
                  '''||p_billman||''',
                  '''||p_billdate||''',
                  
                  '''||r_latefee_begindate||''',
                  '''||p_latefee_enddate||''',
                  '''||r_late_fee||''',
                  0,
                  '''||r_late_fee||''',
                  '''||r_late_fee_charge||''',
                  
                  0,
                  0,
                  0,
                  0,
                  '''||p_operator||''',
                  '''||v_date||'''
                  from fc_house where house_code='''||p_house_code||'''';
        dbms_output.put_line(strSql);
        execute immediate strSql;
        --应收
        strSql:='update sf_charge set now_cash=now_cash+'||nvl(r_charge_account,0)||
                ',delzero=delzero+'||nvl(p_delzero,0)||
                ' ,LATEFEE_NOWCASH=LATEFEE_NOWCASH+'||nvl(p_latefee_charge,0)||
                ' where HOUSE_CODE='''||p_house_code||''' and 
                        ITEM_CODE = ''A'' and 
                        CHARGE_MONTH = '''||p_charge_month||''' and 
                        METER_ID = '''||r_meter_id||'''';
        dbms_output.put_line(strSql);
        execute immediate strSql;
        
        --发票
        if(p_invoice_number is not null and p_invoice_code is not null) then
          strSql:='insert into  sf_invoiceuse (B_ID,
                    INVOICE_NUMBER,
                    INVOICE_CODE,
                    ITEM_CODE,
                    INVOICE_MONEY,
                    OPERATOR,
                    OPERATE_DATE)
                  values('||p_bank_number||','''||p_invoice_number||''','''||p_invoice_code||''',''A'','||nvl(r_charge_account,0)||','''
                  ||p_operator||''','''||v_date||''')';
          dbms_output.put_line(strSql);
          execute immediate strSql;
          strSql := 'update sf_invoice set status=''1'' 
                      where invoice_number='''||p_invoice_number||''' and invoice_code='''||p_invoice_code||''' 
                      and item_code=''A'' '; 
            --dbms_output.put_line(sql_statement);                             
           execute immediate strSql ; 
           strSql := 'update EAUSER set invoice_number='''||p_invoice_number||''',invoice_code='''||p_invoice_code||''' 
                      where userid=''' || p_operator || ''''; 
            --dbms_output.put_line(sql_statement);                             
           execute immediate strSql ; 
        end if;
        v_str_charge_detail := substr(v_str_charge_detail, v_pos + 1);
        v_len := v_len - v_pos-1; 
        dbms_output.put_line('===='||v_pos); 
        dbms_output.put_line(v_str_charge_detail); 
        dbms_output.put_line(v_len); 
    end loop;
  end if;
  return 1;
  END charge; 
   --冲账
   function rollback_bank(
    p_b_id in varchar2,--收费单id    
    p_invalid_invoice in varchar2,--是否作废发票,1作废，0不作废
    p_rollback_reason in varchar2,--冲账原因
    p_remark in varchar2,--备注
    p_operator in varchar2,--操作人
    p_cid in varchar2
    ) return number  as 
      strSql varchar2(2000);
      v_date varchar2(19);
    begin
      v_date:=to_char(sysdate,'YYYY-MM-DD HH24:MI:SS');
      strSql:='update sf_detail set rollback_flag=''1'' ,rollback_operator='''||p_operator||''',
      rollback_operate_date='''||v_date||''',rollback_reason='''||p_rollback_reason||''',
      rollback_remark='''||p_remark||'''
      where b_id='''||p_b_id||'''';
      dbms_output.put_line(strSql);
      execute immediate strSql;
      strSql:='update sf_charge a set (now_cash,delzero)=
      (select a.now_cash-real_charge,a.delzero-delzero from sf_detail where 
      b_id='''||p_b_id||''') where exists  (select 1 from sf_detail where 
      b_id='''||p_b_id||''' and a.house_code=house_code and a.item_code=item_code 
      and a.charge_month=charge_month and a.meter_id=meter_id)';
      dbms_output.put_line(strSql);
      execute immediate strSql;
      if(p_invalid_invoice='1') then      
        strSql:='update sf_invoice a set STATUS=''1'' where exists (
        select 1 from sf_invoiceuse where a.invoice_code=invoice_code
        and a.invoice_number=invoice_number and a.item_code=item_code
        and b_id='''||p_b_id||''')';     
        dbms_output.put_line(strSql);
        execute immediate strSql;
      end if;
    end rollback_bank;
         --计算滞纳金
   function calculateLateFee (
    p_item_code in varchar2,--收费项目
    p_charge_month in varchar2,--生成计划的收费期  
    p_range in varchar2--生成计划条件
    )  return number  as 
      strSql varchar2(32000);
      v_date varchar2(19);
      v_result number(10);
    begin
      v_date:=to_char(sysdate,'YYYY-MM-DD HH24:MI:SS');
      strSql := 'insert into SF_LATEFEE (HOUSE_CODE,ITEM_CODE,CHARGE_MONTH,METER_ID,TOTAL_ACCOUNT,REAL_ACCOUNT,NOW_CASH,delzero,QF,START_DATE,END_DATE,LATEFEE_TOTALACCOUNT,STANDARD_CODE)
                select HOUSE_CODE,ITEM_CODE,CHARGE_MONTH,METER_ID,TOTAL_ACCOUNT,REAL_ACCOUNT,NOW_CASH,delzero,nvl(REAL_ACCOUNT,0)-nvl(now_cash,0)-nvl(delzero,0),
                (SELECT latefee_edate FROM sf_STANDARD WHERE ITEM_CODE=a.ITEM_CODE AND STANDYEAR = a.CHARGE_MONTH and STANDARD_ID=a.STANDARD_CODE),
                to_CHAR(sysdate,''YYYY-MM-DD''),
                round((case when (nvl(REAL_ACCOUNT,0)-nvl(now_cash,0)-nvl(delzero,0))
                *(SELECT LATEFEERATE FROM sf_STANDARD WHERE ITEM_CODE=a.ITEM_CODE AND STANDYEAR = a.CHARGE_MONTH and STANDARD_ID=a.STANDARD_CODE)
                *
                (case when to_CHAR(sysdate,''YYYY-MM-DD'')>(SELECT latefee_edate FROM sf_STANDARD WHERE ITEM_CODE=a.ITEM_CODE AND STANDYEAR = a.CHARGE_MONTH and STANDARD_ID=a.STANDARD_CODE) then 
                (to_date(to_CHAR(sysdate,''YYYY-MM-DD''),''YYYY-MM-DD'')-to_date((SELECT latefee_edate FROM sf_STANDARD WHERE ITEM_CODE=a.ITEM_CODE AND STANDYEAR = a.CHARGE_MONTH and STANDARD_ID=a.STANDARD_CODE),''YYYY-MM-DD'')+1)
                else 0 end)
                
                >a.TOTAL_ACCOUNT then a.TOTAL_ACCOUNT else
                (nvl(REAL_ACCOUNT,0)-nvl(now_cash,0)-nvl(delzero,0))
                *(SELECT LATEFEERATE FROM sf_STANDARD WHERE ITEM_CODE=a.ITEM_CODE AND STANDYEAR = a.CHARGE_MONTH and STANDARD_ID=a.STANDARD_CODE)
                *
                (case when to_CHAR(sysdate,''YYYY-MM-DD'')>(SELECT latefee_edate FROM sf_STANDARD WHERE ITEM_CODE=a.ITEM_CODE AND STANDYEAR = a.CHARGE_MONTH and STANDARD_ID=a.STANDARD_CODE) then 
                (to_date(to_CHAR(sysdate,''YYYY-MM-DD''),''YYYY-MM-DD'')-to_date((SELECT latefee_edate FROM sf_STANDARD WHERE ITEM_CODE=a.ITEM_CODE AND STANDYEAR = a.CHARGE_MONTH and STANDARD_ID=a.STANDARD_CODE),''YYYY-MM-DD'')+1)
                else 0 end)
                
                end),0) V,a.STANDARD_CODE
                FROM SF_CHARGE a where not exists (select 1 from SF_LATEFEE where  HOUSE_CODE=a.HOUSE_CODE 
                and ITEM_CODE=a.ITEM_CODE 
                and CHARGE_MONTH=a.CHARGE_MONTH 
                and METER_ID=a.METER_ID
                and nvl(QF,0)<>(nvl(a.REAL_ACCOUNT,0)-nvl(a.now_cash,0)-nvl(a.delzero,0))
                and item_code='''||p_item_code||''' and charge_month='''||p_charge_month||''' 
                and (a.community_code in ('||p_range||') 
                or a.building_code in ('||p_range||') 
                or a.house_code in ('||p_range||'))
                ) and (nvl(REAL_ACCOUNT,0)-nvl(now_cash,0)-nvl(delzero,0))>0
                and item_code='''||p_item_code||''' and charge_month='''||p_charge_month||''' 
                and (community_code in ('||p_range||') 
                or building_code in ('||p_range||') 
                or house_code in ('||p_range||'))
                and exists(select 1 from sf_standard where a.STANDARD_CODE= STANDARD_CODE and LATEFEE_EDATE is not null and LATEFEE_EDATE !='''')';
      execute immediate strSql;
      strSql := 'update SF_LATEFEE a set (TOTAL_ACCOUNT,REAL_ACCOUNT,NOW_CASH,delzero,QF,START_DATE,END_DATE,LATEFEE_TOTALACCOUNT)=
                (select TOTAL_ACCOUNT,REAL_ACCOUNT,NOW_CASH,delzero,nvl(REAL_ACCOUNT,0)-nvl(now_cash,0)-nvl(delzero,0),
                (SELECT latefee_edate FROM sf_STANDARD WHERE ITEM_CODE=a.ITEM_CODE AND STANDYEAR = a.CHARGE_MONTH and STANDARD_ID=a.STANDARD_CODE),
                to_CHAR(sysdate,''YYYY-MM-DD''),
                round(case when (REAL_ACCOUNT-now_cash-delzero)
                *(SELECT LATEFEERATE FROM sf_STANDARD WHERE ITEM_CODE=a.ITEM_CODE AND STANDYEAR = a.CHARGE_MONTH and STANDARD_ID=a.STANDARD_CODE)
                *
                (case when to_CHAR(sysdate,''YYYY-MM-DD'')>(SELECT latefee_edate FROM sf_STANDARD WHERE ITEM_CODE=a.ITEM_CODE AND STANDYEAR = a.CHARGE_MONTH and STANDARD_ID=a.STANDARD_CODE) then 
                (to_date(to_CHAR(sysdate,''YYYY-MM-DD''),''YYYY-MM-DD'')-to_date((SELECT latefee_edate FROM sf_STANDARD WHERE ITEM_CODE=a.ITEM_CODE AND STANDYEAR = a.CHARGE_MONTH and STANDARD_ID=a.STANDARD_CODE),''YYYY-MM-DD'')+1)
                else 0 end)
                
                >a.TOTAL_ACCOUNT then a.TOTAL_ACCOUNT else
                (REAL_ACCOUNT-now_cash-delzero)
                *(SELECT LATEFEERATE FROM sf_STANDARD WHERE ITEM_CODE=a.ITEM_CODE AND STANDYEAR = a.CHARGE_MONTH and STANDARD_ID=a.STANDARD_CODE)
                *
                (case when to_CHAR(sysdate,''YYYY-MM-DD'')>(SELECT latefee_edate FROM sf_STANDARD WHERE ITEM_CODE=a.ITEM_CODE AND STANDYEAR = a.CHARGE_MONTH and STANDARD_ID=a.STANDARD_CODE) then 
                (to_date(to_CHAR(sysdate,''YYYY-MM-DD''),''YYYY-MM-DD'')-to_date((SELECT latefee_edate FROM sf_STANDARD WHERE ITEM_CODE=a.ITEM_CODE AND STANDYEAR = a.CHARGE_MONTH and STANDARD_ID=a.STANDARD_CODE),''YYYY-MM-DD'')+1)
                else 0 end)
                
                end,0) V
                FROM SF_CHARGE b where HOUSE_CODE=a.HOUSE_CODE and ITEM_CODE=a.ITEM_CODE and 
                CHARGE_MONTH=a.CHARGE_MONTH and METER_ID=a.METER_ID 
                and QF=nvl(a.REAL_ACCOUNT,0)-nvl(a.now_cash,0)-nvl(a.delzero,0) 
                and nvl(REAL_ACCOUNT,0)-nvl(now_cash,0)-nvl(delzero,0)>0
                and b.item_code='''||p_item_code||''' and b.charge_month='''||p_charge_month||''' 
                and (community_code in ('||p_range||') 
                or building_code in ('||p_range||') 
                or house_code in ('||p_range||'))
                and exists(select 1 from sf_standard where b.STANDARD_CODE= STANDARD_CODE and LATEFEE_EDATE is not null and LATEFEE_EDATE !='''')
                )
                where exists (select 1 from SF_CHARGE b where  
                HOUSE_CODE=a.HOUSE_CODE and ITEM_CODE=a.ITEM_CODE and 
                CHARGE_MONTH=a.CHARGE_MONTH and METER_ID=a.METER_ID 
                and QF=nvl(a.REAL_ACCOUNT,0)-nvl(a.now_cash,0)-nvl(a.delzero,0) 
                and nvl(REAL_ACCOUNT,0)-nvl(now_cash,0)-nvl(delzero,0)>0
                and b.item_code='''||p_item_code||''' and b.charge_month='''||p_charge_month||''' 
                and (community_code in ('||p_range||') 
                or building_code in ('||p_range||') 
                or house_code in ('||p_range||'))
                )
                
                and item_code='''||p_item_code||''' and charge_month='''||p_charge_month||''' 
                ';
     execute immediate strSql;
     strSql := 'update SF_CHARGE a set (LATEFEE_TOTALACCOUNT,LATEFEE_REALACCOUNT,LATEFEE_STARTDATE,LATEFEE_ENDDATE)=
                (select sum(LATEFEE_TOTALACCOUNT),sum(nvl(LATEFEE_TOTALACCOUNT,0)-nvl(a.LATEFEE_MINUS,0)),min(START_DATE),max(END_DATE)
                FROM SF_LATEFEE where HOUSE_CODE=a.HOUSE_CODE and ITEM_CODE=a.ITEM_CODE and 
                CHARGE_MONTH=a.CHARGE_MONTH and METER_ID=a.METER_ID group by HOUSE_CODE,ITEM_CODE,CHARGE_MONTH,METER_ID)
                where exists (select 1 from SF_LATEFEE where  HOUSE_CODE=a.HOUSE_CODE and ITEM_CODE=a.ITEM_CODE and 
                CHARGE_MONTH=a.CHARGE_MONTH and METER_ID=a.METER_ID ) and  (nvl(REAL_ACCOUNT,0)-nvl(now_cash,0)-nvl(delzero,0))>0
                and item_code='''||p_item_code||''' and charge_month='''||p_charge_month||''' 
                and (community_code in ('||p_range||') 
                or building_code in ('||p_range||') 
                or house_code in ('||p_range||'))';
    execute immediate strSql;
    return v_result ;
    end calculateLateFee;
END PKG_CHARGE;