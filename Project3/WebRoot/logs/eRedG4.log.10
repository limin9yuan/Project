2018-01-29 18:39:43,797 DEBUG [java.sql.Connection] - <{conn-100397} Connection>
2018-01-29 18:39:44,156 DEBUG [java.sql.PreparedStatement] - <{pstm-100396} Parameters: [100043, A]>
2018-01-29 18:39:44,156 DEBUG [java.sql.PreparedStatement] - <{pstm-100396} Types: [java.lang.String, java.lang.String]>
2018-01-29 18:39:44,156 DEBUG [java.sql.Connection] - <{conn-100397} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-29 18:39:44,157 DEBUG [java.sql.PreparedStatement] - <{pstm-100398} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-29 18:39:44,157 DEBUG [java.sql.PreparedStatement] - <{pstm-100398} Parameters: [0101-001-01-01-01]>
2018-01-29 18:39:44,157 DEBUG [java.sql.PreparedStatement] - <{pstm-100398} Types: [java.lang.String]>
2018-01-29 18:39:44,158 DEBUG [java.sql.ResultSet] - <{rset-100399} ResultSet>
2018-01-29 18:39:44,159 DEBUG [java.sql.ResultSet] - <{rset-100400} ResultSet>
2018-01-29 18:39:44,160 DEBUG [java.sql.ResultSet] - <{rset-100400} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-29 18:39:44,160 DEBUG [java.sql.ResultSet] - <{rset-100400} Result: [共1, 2800.28, 0, 0, 2800.28, 2800.28, 1.05, 0, null, null, 100.01, 1.05, null, 1.05, null]>
2018-01-29 18:41:17,902 DEBUG [java.sql.Connection] - <{conn-100401} Connection>
2018-01-29 18:41:17,903 DEBUG [java.sql.Connection] - <{conn-100401} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-29 18:41:17,903 DEBUG [java.sql.PreparedStatement] - <{pstm-100402} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-29 18:41:17,903 DEBUG [java.sql.PreparedStatement] - <{pstm-100402} Parameters: [100043]>
2018-01-29 18:41:17,903 DEBUG [java.sql.PreparedStatement] - <{pstm-100402} Types: [java.lang.String]>
2018-01-29 18:41:17,904 DEBUG [java.sql.ResultSet] - <{rset-100403} ResultSet>
2018-01-29 18:41:17,904 DEBUG [java.sql.ResultSet] - <{rset-100403} Header: [theme]>
2018-01-29 18:41:17,904 DEBUG [java.sql.ResultSet] - <{rset-100403} Result: [default]>
2018-01-29 18:41:20,075 DEBUG [java.sql.Connection] - <{conn-100404} Connection>
2018-01-29 18:41:20,076 DEBUG [java.sql.Connection] - <{conn-100404} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 18:41:20,076 DEBUG [java.sql.PreparedStatement] - <{pstm-100405} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 18:41:20,076 DEBUG [java.sql.PreparedStatement] - <{pstm-100405} Parameters: [0101-001-01-01-01]>
2018-01-29 18:41:20,076 DEBUG [java.sql.PreparedStatement] - <{pstm-100405} Types: [java.lang.String]>
2018-01-29 18:41:20,078 DEBUG [java.sql.ResultSet] - <{rset-100406} ResultSet>
2018-01-29 18:41:20,079 DEBUG [java.sql.ResultSet] - <{rset-100406} Header: [username, item_name, charge_month, house_code, item_code, meter_id, not_money, not_money_latefee, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-29 18:41:20,079 DEBUG [java.sql.ResultSet] - <{rset-100406} Result: [null, 供热费, 2017, 0101-001-01-01-01, A, 0, 2800.28, 1.05, 01, 0101, 0101-001, 李宝源, 2800.28, 0, 0, 2800.28, 0, null, A1, 28, null, null, 100.01, 2017-11-15, 2017-03-31, 0, 2017-11-01, 2017-11-01, 1.05, null, 1.05, null, 0, 0, 0, 0, 0, 0, 0, 0, 15132, 1]>
2018-01-29 18:41:20,079 DEBUG [java.sql.Connection] - <{conn-100407} Connection>
2018-01-29 18:41:20,080 DEBUG [java.sql.Connection] - <{conn-100407} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-29 18:41:20,080 DEBUG [java.sql.PreparedStatement] - <{pstm-100408} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-29 18:41:20,080 DEBUG [java.sql.PreparedStatement] - <{pstm-100408} Parameters: [0101-001-01-01-01]>
2018-01-29 18:41:20,080 DEBUG [java.sql.PreparedStatement] - <{pstm-100408} Types: [java.lang.String]>
2018-01-29 18:41:20,081 DEBUG [java.sql.ResultSet] - <{rset-100409} ResultSet>
2018-01-29 18:41:20,082 DEBUG [java.sql.ResultSet] - <{rset-100409} Header: [count(*)]>
2018-01-29 18:41:20,082 DEBUG [java.sql.ResultSet] - <{rset-100409} Result: [1]>
2018-01-29 18:41:20,202 DEBUG [java.sql.Connection] - <{conn-100410} Connection>
2018-01-29 18:41:20,202 DEBUG [java.sql.Connection] - <{conn-100410} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-29 18:41:20,204 DEBUG [java.sql.PreparedStatement] - <{pstm-100411} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-29 18:41:20,204 DEBUG [java.sql.PreparedStatement] - <{pstm-100411} Parameters: [0101-001-01-01-01]>
2018-01-29 18:41:20,204 DEBUG [java.sql.PreparedStatement] - <{pstm-100411} Types: [java.lang.String]>
2018-01-29 18:41:20,205 DEBUG [java.sql.ResultSet] - <{rset-100412} ResultSet>
2018-01-29 18:41:20,205 DEBUG [java.sql.ResultSet] - <{rset-100412} Header: [card_id, cluster_code, contact_man, house_manager, owner_name, address, telephone, stat_id, work_unit, apart_status, user_kind, heat_status]>
2018-01-29 18:41:20,205 DEBUG [java.sql.ResultSet] - <{rset-100412} Result: [null, null, null, null, 李宝源, null, null, null, null, null, null, null]>
2018-01-29 18:41:38,635 DEBUG [java.sql.Connection] - <{conn-100413} Connection>
2018-01-29 18:41:38,643 DEBUG [java.sql.Connection] - <{conn-100413} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 18:41:38,644 DEBUG [java.sql.PreparedStatement] - <{pstm-100414} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 18:41:38,644 DEBUG [java.sql.PreparedStatement] - <{pstm-100414} Parameters: [0101-001-01-01-01]>
2018-01-29 18:41:38,644 DEBUG [java.sql.PreparedStatement] - <{pstm-100414} Types: [java.lang.String]>
2018-01-29 18:41:38,647 DEBUG [java.sql.ResultSet] - <{rset-100415} ResultSet>
2018-01-29 18:41:38,647 DEBUG [java.sql.ResultSet] - <{rset-100415} Header: [username, item_name, charge_month, house_code, item_code, meter_id, not_money, not_money_latefee, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-29 18:41:38,647 DEBUG [java.sql.ResultSet] - <{rset-100415} Result: [null, 供热费, 2017, 0101-001-01-01-01, A, 0, 2800.28, 1.05, 01, 0101, 0101-001, 李宝源, 2800.28, 0, 0, 2800.28, 0, null, A1, 28, null, null, 100.01, 2017-11-15, 2017-03-31, 0, 2017-11-01, 2017-11-01, 1.05, null, 1.05, null, 0, 0, 0, 0, 0, 0, 0, 0, 15132, 1]>
2018-01-29 18:41:38,648 DEBUG [java.sql.Connection] - <{conn-100416} Connection>
2018-01-29 18:41:38,648 DEBUG [java.sql.Connection] - <{conn-100416} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-29 18:41:38,648 DEBUG [java.sql.PreparedStatement] - <{pstm-100417} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-29 18:41:38,649 DEBUG [java.sql.PreparedStatement] - <{pstm-100417} Parameters: [0101-001-01-01-01]>
2018-01-29 18:41:38,649 DEBUG [java.sql.PreparedStatement] - <{pstm-100417} Types: [java.lang.String]>
2018-01-29 18:41:38,650 DEBUG [java.sql.ResultSet] - <{rset-100418} ResultSet>
2018-01-29 18:41:38,650 DEBUG [java.sql.ResultSet] - <{rset-100418} Header: [count(*)]>
2018-01-29 18:41:38,651 DEBUG [java.sql.ResultSet] - <{rset-100418} Result: [1]>
2018-01-29 18:41:38,785 DEBUG [java.sql.Connection] - <{conn-100419} Connection>
2018-01-29 18:41:38,789 DEBUG [java.sql.Connection] - <{conn-100419} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-29 18:41:38,794 DEBUG [java.sql.PreparedStatement] - <{pstm-100420} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-29 18:41:38,794 DEBUG [java.sql.PreparedStatement] - <{pstm-100420} Parameters: [0101-001-01-01-01]>
2018-01-29 18:41:38,795 DEBUG [java.sql.PreparedStatement] - <{pstm-100420} Types: [java.lang.String]>
2018-01-29 18:41:38,796 DEBUG [java.sql.ResultSet] - <{rset-100421} ResultSet>
2018-01-29 18:41:38,796 DEBUG [java.sql.ResultSet] - <{rset-100421} Header: [card_id, cluster_code, contact_man, house_manager, owner_name, address, telephone, stat_id, work_unit, apart_status, user_kind, heat_status]>
2018-01-29 18:41:38,796 DEBUG [java.sql.ResultSet] - <{rset-100421} Result: [null, null, null, null, 李宝源, null, null, null, null, null, null, null]>
2018-01-29 18:54:59,558 DEBUG [java.sql.Connection] - <{conn-100422} Connection>
2018-01-29 18:54:59,559 DEBUG [java.sql.Connection] - <{conn-100422} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-29 18:54:59,559 DEBUG [java.sql.PreparedStatement] - <{pstm-100423} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-29 18:54:59,559 DEBUG [java.sql.PreparedStatement] - <{pstm-100423} Parameters: [100043]>
2018-01-29 18:54:59,559 DEBUG [java.sql.PreparedStatement] - <{pstm-100423} Types: [java.lang.String]>
2018-01-29 18:54:59,561 DEBUG [java.sql.ResultSet] - <{rset-100424} ResultSet>
2018-01-29 18:54:59,561 DEBUG [java.sql.ResultSet] - <{rset-100424} Header: [theme]>
2018-01-29 18:54:59,561 DEBUG [java.sql.ResultSet] - <{rset-100424} Result: [default]>
2018-01-29 18:56:34,621 DEBUG [java.sql.Connection] - <{conn-100425} Connection>
2018-01-29 18:56:34,624 DEBUG [java.sql.Connection] - <{conn-100425} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 18:56:34,624 DEBUG [java.sql.PreparedStatement] - <{pstm-100426} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 18:56:34,624 DEBUG [java.sql.PreparedStatement] - <{pstm-100426} Parameters: [0101-001-01-01-01]>
2018-01-29 18:56:34,624 DEBUG [java.sql.PreparedStatement] - <{pstm-100426} Types: [java.lang.String]>
2018-01-29 18:56:34,626 DEBUG [java.sql.ResultSet] - <{rset-100427} ResultSet>
2018-01-29 18:56:34,627 DEBUG [java.sql.ResultSet] - <{rset-100427} Header: [username, item_name, charge_month, house_code, item_code, meter_id, not_money, not_money_latefee, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-29 18:56:34,627 DEBUG [java.sql.ResultSet] - <{rset-100427} Result: [null, 供热费, 2017, 0101-001-01-01-01, A, 0, 2800.28, 1.05, 01, 0101, 0101-001, 李宝源, 2800.28, 0, 0, 2800.28, 0, null, A1, 28, null, null, 100.01, 2017-11-15, 2017-03-31, 0, 2017-11-01, 2017-11-01, 1.05, null, 1.05, null, 0, 0, 0, 0, 0, 0, 0, 0, 15132, 1]>
2018-01-29 18:56:34,627 DEBUG [java.sql.Connection] - <{conn-100428} Connection>
2018-01-29 18:56:34,627 DEBUG [java.sql.Connection] - <{conn-100428} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-29 18:56:34,627 DEBUG [java.sql.PreparedStatement] - <{pstm-100429} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-29 18:56:34,628 DEBUG [java.sql.PreparedStatement] - <{pstm-100429} Parameters: [0101-001-01-01-01]>
2018-01-29 18:56:34,628 DEBUG [java.sql.PreparedStatement] - <{pstm-100429} Types: [java.lang.String]>
2018-01-29 18:56:34,629 DEBUG [java.sql.ResultSet] - <{rset-100430} ResultSet>
2018-01-29 18:56:34,629 DEBUG [java.sql.ResultSet] - <{rset-100430} Header: [count(*)]>
2018-01-29 18:56:34,629 DEBUG [java.sql.ResultSet] - <{rset-100430} Result: [1]>
2018-01-29 18:56:43,777 DEBUG [java.sql.Connection] - <{conn-100431} Connection>
2018-01-29 18:56:43,781 DEBUG [java.sql.Connection] - <{conn-100431} Preparing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-29 18:56:43,781 DEBUG [java.sql.PreparedStatement] - <{pstm-100432} Executing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-29 18:56:43,781 DEBUG [java.sql.PreparedStatement] - <{pstm-100432} Parameters: [100043, A]>
2018-01-29 18:56:43,781 DEBUG [java.sql.PreparedStatement] - <{pstm-100432} Types: [java.lang.String, java.lang.String]>
2018-01-29 18:56:43,783 DEBUG [java.sql.ResultSet] - <{rset-100433} ResultSet>
2018-01-29 18:56:43,785 DEBUG [java.sql.Connection] - <{conn-100434} Connection>
2018-01-29 18:56:43,786 DEBUG [java.sql.Connection] - <{conn-100434} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-29 18:56:43,786 DEBUG [java.sql.PreparedStatement] - <{pstm-100435} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-29 18:56:43,787 DEBUG [java.sql.PreparedStatement] - <{pstm-100435} Parameters: [0101-001-01-01-01]>
2018-01-29 18:56:43,787 DEBUG [java.sql.PreparedStatement] - <{pstm-100435} Types: [java.lang.String]>
2018-01-29 18:56:43,788 DEBUG [java.sql.ResultSet] - <{rset-100436} ResultSet>
2018-01-29 18:56:43,789 DEBUG [java.sql.ResultSet] - <{rset-100436} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-29 18:56:43,789 DEBUG [java.sql.ResultSet] - <{rset-100436} Result: [共1, 2800.28, 0, 0, 2800.28, 2800.28, 1.05, 0, null, null, 100.01, 1.05, null, 1.05, null]>
2018-01-29 18:56:43,913 DEBUG [java.sql.Connection] - <{conn-100437} Connection>
2018-01-29 18:56:43,915 DEBUG [java.sql.Connection] - <{conn-100437} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-29 18:56:43,916 DEBUG [java.sql.PreparedStatement] - <{pstm-100438} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-29 18:56:43,916 DEBUG [java.sql.PreparedStatement] - <{pstm-100438} Parameters: [0101-001-01-01-01]>
2018-01-29 18:56:43,916 DEBUG [java.sql.PreparedStatement] - <{pstm-100438} Types: [java.lang.String]>
2018-01-29 18:56:43,917 DEBUG [java.sql.ResultSet] - <{rset-100439} ResultSet>
2018-01-29 18:56:43,918 DEBUG [java.sql.ResultSet] - <{rset-100439} Header: [card_id, cluster_code, contact_man, house_manager, owner_name, address, telephone, stat_id, work_unit, apart_status, user_kind, heat_status]>
2018-01-29 18:56:43,918 DEBUG [java.sql.ResultSet] - <{rset-100439} Result: [null, null, null, null, 李宝源, null, null, null, null, null, null, null]>
2018-01-29 18:58:30,356 DEBUG [java.sql.Connection] - <{conn-100440} Connection>
2018-01-29 18:58:30,356 DEBUG [java.sql.Connection] - <{conn-100440} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-29 18:58:30,356 DEBUG [java.sql.PreparedStatement] - <{pstm-100441} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-29 18:58:30,356 DEBUG [java.sql.PreparedStatement] - <{pstm-100441} Parameters: [100043]>
2018-01-29 18:58:30,356 DEBUG [java.sql.PreparedStatement] - <{pstm-100441} Types: [java.lang.String]>
2018-01-29 18:58:30,358 DEBUG [java.sql.ResultSet] - <{rset-100442} ResultSet>
2018-01-29 18:58:30,358 DEBUG [java.sql.ResultSet] - <{rset-100442} Header: [theme]>
2018-01-29 18:58:30,358 DEBUG [java.sql.ResultSet] - <{rset-100442} Result: [default]>
2018-01-29 18:58:37,925 DEBUG [java.sql.Connection] - <{conn-100443} Connection>
2018-01-29 18:58:37,926 DEBUG [java.sql.Connection] - <{conn-100443} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 18:58:37,926 DEBUG [java.sql.PreparedStatement] - <{pstm-100444} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 18:58:37,926 DEBUG [java.sql.PreparedStatement] - <{pstm-100444} Parameters: [0101-001-01-01-01]>
2018-01-29 18:58:37,926 DEBUG [java.sql.PreparedStatement] - <{pstm-100444} Types: [java.lang.String]>
2018-01-29 18:58:37,929 DEBUG [java.sql.ResultSet] - <{rset-100445} ResultSet>
2018-01-29 18:58:37,929 DEBUG [java.sql.ResultSet] - <{rset-100445} Header: [username, item_name, charge_month, house_code, item_code, meter_id, not_money, not_money_latefee, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-29 18:58:37,930 DEBUG [java.sql.ResultSet] - <{rset-100445} Result: [null, 供热费, 2017, 0101-001-01-01-01, A, 0, 2800.28, 1.05, 01, 0101, 0101-001, 李宝源, 2800.28, 0, 0, 2800.28, 0, null, A1, 28, null, null, 100.01, 2017-11-15, 2017-03-31, 0, 2017-11-01, 2017-11-01, 1.05, null, 1.05, null, 0, 0, 0, 0, 0, 0, 0, 0, 15132, 1]>
2018-01-29 18:58:37,930 DEBUG [java.sql.Connection] - <{conn-100446} Connection>
2018-01-29 18:58:37,930 DEBUG [java.sql.Connection] - <{conn-100446} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-29 18:58:37,931 DEBUG [java.sql.PreparedStatement] - <{pstm-100447} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-29 18:58:37,931 DEBUG [java.sql.PreparedStatement] - <{pstm-100447} Parameters: [0101-001-01-01-01]>
2018-01-29 18:58:37,931 DEBUG [java.sql.PreparedStatement] - <{pstm-100447} Types: [java.lang.String]>
2018-01-29 18:58:37,932 DEBUG [java.sql.ResultSet] - <{rset-100448} ResultSet>
2018-01-29 18:58:37,932 DEBUG [java.sql.ResultSet] - <{rset-100448} Header: [count(*)]>
2018-01-29 18:58:37,932 DEBUG [java.sql.ResultSet] - <{rset-100448} Result: [1]>
2018-01-29 18:58:42,490 DEBUG [java.sql.Connection] - <{conn-100449} Connection>
2018-01-29 18:58:42,491 DEBUG [java.sql.Connection] - <{conn-100450} Connection>
2018-01-29 18:58:42,492 DEBUG [java.sql.Connection] - <{conn-100449} Preparing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-29 18:58:42,492 DEBUG [java.sql.Connection] - <{conn-100450} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-29 18:58:42,492 DEBUG [java.sql.PreparedStatement] - <{pstm-100451} Executing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-29 18:58:42,492 DEBUG [java.sql.PreparedStatement] - <{pstm-100451} Parameters: [100043, A]>
2018-01-29 18:58:42,492 DEBUG [java.sql.PreparedStatement] - <{pstm-100451} Types: [java.lang.String, java.lang.String]>
2018-01-29 18:58:42,492 DEBUG [java.sql.PreparedStatement] - <{pstm-100452} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-29 18:58:42,493 DEBUG [java.sql.PreparedStatement] - <{pstm-100452} Parameters: [0101-001-01-01-01]>
2018-01-29 18:58:42,493 DEBUG [java.sql.PreparedStatement] - <{pstm-100452} Types: [java.lang.String]>
2018-01-29 18:58:42,494 DEBUG [java.sql.ResultSet] - <{rset-100453} ResultSet>
2018-01-29 18:58:42,495 DEBUG [java.sql.ResultSet] - <{rset-100454} ResultSet>
2018-01-29 18:58:42,495 DEBUG [java.sql.ResultSet] - <{rset-100454} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-29 18:58:42,495 DEBUG [java.sql.ResultSet] - <{rset-100454} Result: [共1, 2800.28, 0, 0, 2800.28, 2800.28, 1.05, 0, null, null, 100.01, 1.05, null, 1.05, null]>
2018-01-29 18:58:42,518 DEBUG [java.sql.Connection] - <{conn-100455} Connection>
2018-01-29 18:58:42,518 DEBUG [java.sql.Connection] - <{conn-100455} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-29 18:58:42,519 DEBUG [java.sql.PreparedStatement] - <{pstm-100456} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-29 18:58:42,519 DEBUG [java.sql.PreparedStatement] - <{pstm-100456} Parameters: [0101-001-01-01-01]>
2018-01-29 18:58:42,519 DEBUG [java.sql.PreparedStatement] - <{pstm-100456} Types: [java.lang.String]>
2018-01-29 18:58:42,520 DEBUG [java.sql.ResultSet] - <{rset-100457} ResultSet>
2018-01-29 18:58:42,520 DEBUG [java.sql.ResultSet] - <{rset-100457} Header: [card_id, cluster_code, contact_man, house_manager, owner_name, address, telephone, stat_id, work_unit, apart_status, user_kind, heat_status]>
2018-01-29 18:58:42,521 DEBUG [java.sql.ResultSet] - <{rset-100457} Result: [null, null, null, null, 李宝源, null, null, null, null, null, null, null]>
2018-01-29 19:03:55,560 DEBUG [java.sql.Connection] - <{conn-100458} Connection>
2018-01-29 19:03:55,561 DEBUG [java.sql.Connection] - <{conn-100458} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-29 19:03:55,561 DEBUG [java.sql.PreparedStatement] - <{pstm-100459} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-29 19:03:55,561 DEBUG [java.sql.PreparedStatement] - <{pstm-100459} Parameters: [100043]>
2018-01-29 19:03:55,561 DEBUG [java.sql.PreparedStatement] - <{pstm-100459} Types: [java.lang.String]>
2018-01-29 19:03:55,563 DEBUG [java.sql.ResultSet] - <{rset-100460} ResultSet>
2018-01-29 19:03:55,563 DEBUG [java.sql.ResultSet] - <{rset-100460} Header: [theme]>
2018-01-29 19:03:55,563 DEBUG [java.sql.ResultSet] - <{rset-100460} Result: [default]>
2018-01-29 19:04:18,590 DEBUG [java.sql.Connection] - <{conn-100461} Connection>
2018-01-29 19:04:18,591 DEBUG [java.sql.Connection] - <{conn-100461} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-29 19:04:18,592 DEBUG [java.sql.PreparedStatement] - <{pstm-100462} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-29 19:04:18,592 DEBUG [java.sql.PreparedStatement] - <{pstm-100462} Parameters: [100043]>
2018-01-29 19:04:18,592 DEBUG [java.sql.PreparedStatement] - <{pstm-100462} Types: [java.lang.String]>
2018-01-29 19:04:18,593 DEBUG [java.sql.ResultSet] - <{rset-100463} ResultSet>
2018-01-29 19:04:18,594 DEBUG [java.sql.ResultSet] - <{rset-100463} Header: [theme]>
2018-01-29 19:04:18,594 DEBUG [java.sql.ResultSet] - <{rset-100463} Result: [default]>
2018-01-29 19:04:25,267 DEBUG [java.sql.Connection] - <{conn-100464} Connection>
2018-01-29 19:04:25,268 DEBUG [java.sql.Connection] - <{conn-100464} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 19:04:25,268 DEBUG [java.sql.PreparedStatement] - <{pstm-100465} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 19:04:25,268 DEBUG [java.sql.PreparedStatement] - <{pstm-100465} Parameters: [0101-001-01-01-01]>
2018-01-29 19:04:25,268 DEBUG [java.sql.PreparedStatement] - <{pstm-100465} Types: [java.lang.String]>
2018-01-29 19:04:25,270 DEBUG [java.sql.ResultSet] - <{rset-100466} ResultSet>
2018-01-29 19:04:25,270 DEBUG [java.sql.ResultSet] - <{rset-100466} Header: [username, item_name, charge_month, house_code, item_code, meter_id, not_money, not_money_latefee, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-29 19:04:25,270 DEBUG [java.sql.ResultSet] - <{rset-100466} Result: [null, 供热费, 2017, 0101-001-01-01-01, A, 0, 2800.28, 1.05, 01, 0101, 0101-001, 李宝源, 2800.28, 0, 0, 2800.28, 0, null, A1, 28, null, null, 100.01, 2017-11-15, 2017-03-31, 0, 2017-11-01, 2017-11-01, 1.05, null, 1.05, null, 0, 0, 0, 0, 0, 0, 0, 0, 15132, 1]>
2018-01-29 19:04:25,271 DEBUG [java.sql.Connection] - <{conn-100467} Connection>
2018-01-29 19:04:25,271 DEBUG [java.sql.Connection] - <{conn-100467} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-29 19:04:25,271 DEBUG [java.sql.PreparedStatement] - <{pstm-100468} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-29 19:04:25,271 DEBUG [java.sql.PreparedStatement] - <{pstm-100468} Parameters: [0101-001-01-01-01]>
2018-01-29 19:04:25,271 DEBUG [java.sql.PreparedStatement] - <{pstm-100468} Types: [java.lang.String]>
2018-01-29 19:04:25,272 DEBUG [java.sql.ResultSet] - <{rset-100469} ResultSet>
2018-01-29 19:04:25,272 DEBUG [java.sql.ResultSet] - <{rset-100469} Header: [count(*)]>
2018-01-29 19:04:25,272 DEBUG [java.sql.ResultSet] - <{rset-100469} Result: [1]>
2018-01-29 19:04:31,450 DEBUG [java.sql.Connection] - <{conn-100470} Connection>
2018-01-29 19:04:31,451 DEBUG [java.sql.Connection] - <{conn-100471} Connection>
2018-01-29 19:04:31,453 DEBUG [java.sql.Connection] - <{conn-100470} Preparing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-29 19:04:31,453 DEBUG [java.sql.PreparedStatement] - <{pstm-100472} Executing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-29 19:04:31,453 DEBUG [java.sql.PreparedStatement] - <{pstm-100472} Parameters: [100043, A]>
2018-01-29 19:04:31,453 DEBUG [java.sql.PreparedStatement] - <{pstm-100472} Types: [java.lang.String, java.lang.String]>
2018-01-29 19:04:31,453 DEBUG [java.sql.Connection] - <{conn-100471} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-29 19:04:31,454 DEBUG [java.sql.PreparedStatement] - <{pstm-100473} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-29 19:04:31,454 DEBUG [java.sql.PreparedStatement] - <{pstm-100473} Parameters: [0101-001-01-01-01]>
2018-01-29 19:04:31,454 DEBUG [java.sql.PreparedStatement] - <{pstm-100473} Types: [java.lang.String]>
2018-01-29 19:04:31,455 DEBUG [java.sql.ResultSet] - <{rset-100474} ResultSet>
2018-01-29 19:04:31,457 DEBUG [java.sql.ResultSet] - <{rset-100475} ResultSet>
2018-01-29 19:04:31,457 DEBUG [java.sql.ResultSet] - <{rset-100475} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-29 19:04:31,457 DEBUG [java.sql.ResultSet] - <{rset-100475} Result: [共1, 2800.28, 0, 0, 2800.28, 2800.28, 1.05, 0, null, null, 100.01, 1.05, null, 1.05, null]>
2018-01-29 19:04:31,472 DEBUG [java.sql.Connection] - <{conn-100476} Connection>
2018-01-29 19:04:31,472 DEBUG [java.sql.Connection] - <{conn-100476} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-29 19:04:31,473 DEBUG [java.sql.PreparedStatement] - <{pstm-100477} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-29 19:04:31,473 DEBUG [java.sql.PreparedStatement] - <{pstm-100477} Parameters: [0101-001-01-01-01]>
2018-01-29 19:04:31,473 DEBUG [java.sql.PreparedStatement] - <{pstm-100477} Types: [java.lang.String]>
2018-01-29 19:04:31,475 DEBUG [java.sql.ResultSet] - <{rset-100478} ResultSet>
2018-01-29 19:04:31,475 DEBUG [java.sql.ResultSet] - <{rset-100478} Header: [card_id, cluster_code, contact_man, house_manager, owner_name, address, telephone, stat_id, work_unit, apart_status, user_kind, heat_status]>
2018-01-29 19:04:31,475 DEBUG [java.sql.ResultSet] - <{rset-100478} Result: [null, null, null, null, 李宝源, null, null, null, null, null, null, null]>
2018-01-29 19:04:35,328 DEBUG [java.sql.Connection] - <{conn-100479} Connection>
2018-01-29 19:04:35,329 DEBUG [java.sql.Connection] - <{conn-100479} Preparing Statement:          UPDATE easequence SET maxid = ? WHERE fieldname = ?  >
2018-01-29 19:04:35,329 DEBUG [java.sql.PreparedStatement] - <{pstm-100480} Executing Statement:          UPDATE easequence SET maxid = ? WHERE fieldname = ?  >
2018-01-29 19:04:35,329 DEBUG [java.sql.PreparedStatement] - <{pstm-100480} Parameters: [100000000207, B_ID]>
2018-01-29 19:04:35,329 DEBUG [java.sql.PreparedStatement] - <{pstm-100480} Types: [java.lang.String, java.lang.String]>
2018-01-29 19:04:35,335 DEBUG [java.sql.Connection] - <{conn-100481} Connection>
2018-01-29 19:04:35,335 DEBUG [java.sql.Connection] - <{conn-100481} Preparing Call: {call pkg_charge.Charge_A( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,  ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}>
2018-01-29 19:04:35,336 DEBUG [java.sql.PreparedStatement] - <{pstm-100482} Executing Statement: {call pkg_charge.Charge_A( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,  ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}>
2018-01-29 19:04:35,336 DEBUG [java.sql.PreparedStatement] - <{pstm-100482} Parameters: [100000000207, 15132, 0101-001-01-01-01, , , , , , 28, 100.01, 现金, , , null, 0, , , null, null, null, null, 2017-11-01, 1.05, 1.05, , , 100043, null]>
2018-01-29 19:04:35,336 DEBUG [java.sql.PreparedStatement] - <{pstm-100482} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, java.lang.String, null, java.math.BigDecimal, java.lang.String, java.lang.String, null, null, null, null, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, java.lang.String, null]>
2018-01-29 19:04:35,403 DEBUG [java.sql.Connection] - <{conn-100483} Connection>
2018-01-29 19:04:35,404 DEBUG [java.sql.Connection] - <{conn-100483} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 19:04:35,405 DEBUG [java.sql.PreparedStatement] - <{pstm-100484} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 19:04:35,405 DEBUG [java.sql.PreparedStatement] - <{pstm-100484} Parameters: [0101-001-01-01-01]>
2018-01-29 19:04:35,405 DEBUG [java.sql.PreparedStatement] - <{pstm-100484} Types: [java.lang.String]>
2018-01-29 19:04:35,407 DEBUG [java.sql.ResultSet] - <{rset-100485} ResultSet>
2018-01-29 19:04:35,407 DEBUG [java.sql.ResultSet] - <{rset-100485} Header: [username, item_name, charge_month, house_code, item_code, meter_id, not_money, not_money_latefee, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-29 19:04:35,408 DEBUG [java.sql.ResultSet] - <{rset-100485} Result: [null, 供热费, 2017, 0101-001-01-01-01, A, 0, 2800.28, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 0, 0, 2800.28, 0, null, A1, 28, null, null, 100.01, 2017-11-15, 2017-03-31, 0, 2017-11-01, 2017-11-01, 1.05, null, 1.05, 1.05, 0, 0, 0, 0, 0, 0, 0, 0, 15132, 1]>
2018-01-29 19:04:35,408 DEBUG [java.sql.Connection] - <{conn-100486} Connection>
2018-01-29 19:04:35,408 DEBUG [java.sql.Connection] - <{conn-100486} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-29 19:04:35,408 DEBUG [java.sql.PreparedStatement] - <{pstm-100487} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-29 19:04:35,408 DEBUG [java.sql.PreparedStatement] - <{pstm-100487} Parameters: [0101-001-01-01-01]>
2018-01-29 19:04:35,408 DEBUG [java.sql.PreparedStatement] - <{pstm-100487} Types: [java.lang.String]>
2018-01-29 19:04:35,410 DEBUG [java.sql.ResultSet] - <{rset-100488} ResultSet>
2018-01-29 19:04:35,410 DEBUG [java.sql.ResultSet] - <{rset-100488} Header: [count(*)]>
2018-01-29 19:04:35,410 DEBUG [java.sql.ResultSet] - <{rset-100488} Result: [1]>
2018-01-29 19:04:35,868 DEBUG [java.sql.Connection] - <{conn-100489} Connection>
2018-01-29 19:04:35,868 DEBUG [java.sql.Connection] - <{conn-100489} Preparing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-29 19:04:35,869 DEBUG [java.sql.PreparedStatement] - <{pstm-100490} Executing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-29 19:04:35,869 DEBUG [java.sql.PreparedStatement] - <{pstm-100490} Parameters: [100043, A]>
2018-01-29 19:04:35,869 DEBUG [java.sql.PreparedStatement] - <{pstm-100490} Types: [java.lang.String, java.lang.String]>
2018-01-29 19:04:35,871 DEBUG [java.sql.ResultSet] - <{rset-100491} ResultSet>
2018-01-29 19:04:35,901 DEBUG [java.sql.Connection] - <{conn-100492} Connection>
2018-01-29 19:04:35,901 DEBUG [java.sql.Connection] - <{conn-100492} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-29 19:04:35,902 DEBUG [java.sql.PreparedStatement] - <{pstm-100493} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-29 19:04:35,902 DEBUG [java.sql.PreparedStatement] - <{pstm-100493} Parameters: [0101-001-01-01-01]>
2018-01-29 19:04:35,902 DEBUG [java.sql.PreparedStatement] - <{pstm-100493} Types: [java.lang.String]>
2018-01-29 19:04:35,903 DEBUG [java.sql.ResultSet] - <{rset-100494} ResultSet>
2018-01-29 19:04:35,904 DEBUG [java.sql.ResultSet] - <{rset-100494} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-29 19:04:35,904 DEBUG [java.sql.ResultSet] - <{rset-100494} Result: [共1, 2800.28, 0, 0, 2800.28, 2800.28, 0, 0, null, null, 100.01, 1.05, null, 1.05, 1.05]>
2018-01-29 19:04:39,349 DEBUG [java.sql.Connection] - <{conn-100495} Connection>
2018-01-29 19:04:39,350 DEBUG [java.sql.Connection] - <{conn-100495} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 19:04:39,350 DEBUG [java.sql.PreparedStatement] - <{pstm-100496} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 19:04:39,350 DEBUG [java.sql.PreparedStatement] - <{pstm-100496} Parameters: [0101-001-01-01-01]>
2018-01-29 19:04:39,350 DEBUG [java.sql.PreparedStatement] - <{pstm-100496} Types: [java.lang.String]>
2018-01-29 19:04:39,352 DEBUG [java.sql.ResultSet] - <{rset-100497} ResultSet>
2018-01-29 19:04:39,352 DEBUG [java.sql.ResultSet] - <{rset-100497} Header: [username, item_name, charge_month, house_code, item_code, meter_id, not_money, not_money_latefee, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-29 19:04:39,353 DEBUG [java.sql.ResultSet] - <{rset-100497} Result: [null, 供热费, 2017, 0101-001-01-01-01, A, 0, 2800.28, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 0, 0, 2800.28, 0, null, A1, 28, null, null, 100.01, 2017-11-15, 2017-03-31, 0, 2017-11-01, 2017-11-01, 1.05, null, 1.05, 1.05, 0, 0, 0, 0, 0, 0, 0, 0, 15132, 1]>
2018-01-29 19:04:39,353 DEBUG [java.sql.Connection] - <{conn-100498} Connection>
2018-01-29 19:04:39,353 DEBUG [java.sql.Connection] - <{conn-100498} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-29 19:04:39,353 DEBUG [java.sql.PreparedStatement] - <{pstm-100499} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-29 19:04:39,354 DEBUG [java.sql.PreparedStatement] - <{pstm-100499} Parameters: [0101-001-01-01-01]>
2018-01-29 19:04:39,354 DEBUG [java.sql.PreparedStatement] - <{pstm-100499} Types: [java.lang.String]>
2018-01-29 19:04:39,355 DEBUG [java.sql.ResultSet] - <{rset-100500} ResultSet>
2018-01-29 19:04:39,355 DEBUG [java.sql.ResultSet] - <{rset-100500} Header: [count(*)]>
2018-01-29 19:04:39,355 DEBUG [java.sql.ResultSet] - <{rset-100500} Result: [1]>
2018-01-29 19:04:39,427 DEBUG [java.sql.Connection] - <{conn-100501} Connection>
2018-01-29 19:04:39,428 DEBUG [java.sql.Connection] - <{conn-100501} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-29 19:04:39,428 DEBUG [java.sql.PreparedStatement] - <{pstm-100502} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-29 19:04:39,428 DEBUG [java.sql.PreparedStatement] - <{pstm-100502} Parameters: [0101-001-01-01-01]>
2018-01-29 19:04:39,428 DEBUG [java.sql.PreparedStatement] - <{pstm-100502} Types: [java.lang.String]>
2018-01-29 19:04:39,429 DEBUG [java.sql.ResultSet] - <{rset-100503} ResultSet>
2018-01-29 19:04:39,430 DEBUG [java.sql.ResultSet] - <{rset-100503} Header: [card_id, cluster_code, contact_man, house_manager, owner_name, address, telephone, stat_id, work_unit, apart_status, user_kind, heat_status]>
2018-01-29 19:04:39,430 DEBUG [java.sql.ResultSet] - <{rset-100503} Result: [null, null, null, null, 李宝源, null, null, null, null, null, null, null]>
2018-01-29 19:04:39,503 DEBUG [java.sql.Connection] - <{conn-100504} Connection>
2018-01-29 19:04:39,504 DEBUG [java.sql.Connection] - <{conn-100504} Preparing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-29 19:04:39,509 DEBUG [java.sql.PreparedStatement] - <{pstm-100505} Executing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-29 19:04:39,509 DEBUG [java.sql.PreparedStatement] - <{pstm-100505} Parameters: [100043, A]>
2018-01-29 19:04:39,509 DEBUG [java.sql.PreparedStatement] - <{pstm-100505} Types: [java.lang.String, java.lang.String]>
2018-01-29 19:04:39,511 DEBUG [java.sql.ResultSet] - <{rset-100506} ResultSet>
2018-01-29 19:04:39,513 DEBUG [java.sql.Connection] - <{conn-100507} Connection>
2018-01-29 19:04:39,516 DEBUG [java.sql.Connection] - <{conn-100507} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-29 19:04:39,516 DEBUG [java.sql.PreparedStatement] - <{pstm-100508} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-29 19:04:39,516 DEBUG [java.sql.PreparedStatement] - <{pstm-100508} Parameters: [0101-001-01-01-01]>
2018-01-29 19:04:39,516 DEBUG [java.sql.PreparedStatement] - <{pstm-100508} Types: [java.lang.String]>
2018-01-29 19:04:39,518 DEBUG [java.sql.ResultSet] - <{rset-100509} ResultSet>
2018-01-29 19:04:39,518 DEBUG [java.sql.ResultSet] - <{rset-100509} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-29 19:04:39,518 DEBUG [java.sql.ResultSet] - <{rset-100509} Result: [共1, 2800.28, 0, 0, 2800.28, 2800.28, 0, 0, null, null, 100.01, 1.05, null, 1.05, 1.05]>
2018-01-29 19:05:24,316 DEBUG [java.sql.Connection] - <{conn-100008} Connection>
2018-01-29 19:05:24,317 DEBUG [java.sql.Connection] - <{conn-100008} Preparing Statement:    DELETE      FROM eahttpsession   WHERE                sessionid = ?                >
2018-01-29 19:05:24,317 DEBUG [java.sql.PreparedStatement] - <{pstm-100009} Executing Statement:    DELETE      FROM eahttpsession   WHERE                sessionid = ?                >
2018-01-29 19:05:24,317 DEBUG [java.sql.PreparedStatement] - <{pstm-100009} Parameters: [17et4ghnxoiep]>
2018-01-29 19:05:24,318 DEBUG [java.sql.PreparedStatement] - <{pstm-100009} Types: [java.lang.String]>
2018-01-29 19:05:28,140 DEBUG [java.sql.Connection] - <{conn-100010} Connection>
2018-01-29 19:05:28,141 DEBUG [java.sql.Connection] - <{conn-100010} Preparing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-01-29 19:05:28,142 DEBUG [java.sql.PreparedStatement] - <{pstm-100011} Executing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-01-29 19:05:28,142 DEBUG [java.sql.PreparedStatement] - <{pstm-100011} Parameters: [0, admin]>
2018-01-29 19:05:28,142 DEBUG [java.sql.PreparedStatement] - <{pstm-100011} Types: [java.lang.String, java.lang.String]>
2018-01-29 19:05:28,143 DEBUG [java.sql.ResultSet] - <{rset-100012} ResultSet>
2018-01-29 19:05:28,144 DEBUG [java.sql.ResultSet] - <{rset-100012} Header: [userid, username, account, password, sex, deptid, theme, customid, customname]>
2018-01-29 19:05:28,144 DEBUG [java.sql.ResultSet] - <{rset-100012} Result: [100043, 管理员, admin, RaFutWeh0ww=, 0, 001, default, 01, 供热]>
2018-01-29 19:05:28,145 DEBUG [java.sql.Connection] - <{conn-100013} Connection>
2018-01-29 19:05:28,145 DEBUG [java.sql.Connection] - <{conn-100013} Preparing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-01-29 19:05:28,145 DEBUG [java.sql.PreparedStatement] - <{pstm-100014} Executing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-01-29 19:05:28,146 DEBUG [java.sql.PreparedStatement] - <{pstm-100014} Parameters: [1suwv0h8cbeu8]>
2018-01-29 19:05:28,146 DEBUG [java.sql.PreparedStatement] - <{pstm-100014} Types: [java.lang.String]>
2018-01-29 19:05:28,147 DEBUG [java.sql.ResultSet] - <{rset-100015} ResultSet>
2018-01-29 19:05:28,148 DEBUG [java.sql.Connection] - <{conn-100016} Connection>
2018-01-29 19:05:28,149 DEBUG [java.sql.Connection] - <{conn-100016} Preparing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-01-29 19:05:28,149 DEBUG [java.sql.PreparedStatement] - <{pstm-100017} Executing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-01-29 19:05:28,149 DEBUG [java.sql.PreparedStatement] - <{pstm-100017} Parameters: [1suwv0h8cbeu8, 管理员, admin, 2018-01-29 19:05:28, 127.0.0.1, 100043, FIREFOX/57.]>
2018-01-29 19:05:28,149 DEBUG [java.sql.PreparedStatement] - <{pstm-100017} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-29 19:05:28,645 DEBUG [java.sql.Connection] - <{conn-100018} Connection>
2018-01-29 19:05:28,645 DEBUG [java.sql.Connection] - <{conn-100018} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-29 19:05:28,645 DEBUG [java.sql.PreparedStatement] - <{pstm-100019} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-29 19:05:28,646 DEBUG [java.sql.PreparedStatement] - <{pstm-100019} Parameters: [100043]>
2018-01-29 19:05:28,646 DEBUG [java.sql.PreparedStatement] - <{pstm-100019} Types: [java.lang.String]>
2018-01-29 19:05:28,647 DEBUG [java.sql.ResultSet] - <{rset-100020} ResultSet>
2018-01-29 19:05:28,647 DEBUG [java.sql.ResultSet] - <{rset-100020} Header: [theme]>
2018-01-29 19:05:28,647 DEBUG [java.sql.ResultSet] - <{rset-100020} Result: [default]>
2018-01-29 19:05:28,807 DEBUG [java.sql.Connection] - <{conn-100021} Connection>
2018-01-29 19:05:28,808 DEBUG [java.sql.Connection] - <{conn-100021} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-29 19:05:28,808 DEBUG [java.sql.PreparedStatement] - <{pstm-100022} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-29 19:05:28,809 DEBUG [java.sql.PreparedStatement] - <{pstm-100022} Parameters: [100043]>
2018-01-29 19:05:28,809 DEBUG [java.sql.PreparedStatement] - <{pstm-100022} Types: [java.lang.String]>
2018-01-29 19:05:28,814 DEBUG [java.sql.ResultSet] - <{rset-100023} ResultSet>
2018-01-29 19:05:28,816 DEBUG [java.sql.ResultSet] - <{rset-100023} Header: [menuid, menuname, iconcls]>
2018-01-29 19:05:28,816 DEBUG [java.sql.ResultSet] - <{rset-100023} Result: [0103, 基础信息, null]>
2018-01-29 19:05:28,817 DEBUG [java.sql.ResultSet] - <{rset-100023} Result: [0104, 收费管理, null]>
2018-01-29 19:05:28,817 DEBUG [java.sql.ResultSet] - <{rset-100023} Result: [0105, 统计分析, null]>
2018-01-29 19:05:28,817 DEBUG [java.sql.ResultSet] - <{rset-100023} Result: [0101, 系统管理, null]>
2018-01-29 19:05:28,818 DEBUG [java.sql.Connection] - <{conn-100024} Connection>
2018-01-29 19:05:28,818 DEBUG [java.sql.Connection] - <{conn-100024} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-01-29 19:05:28,818 DEBUG [java.sql.PreparedStatement] - <{pstm-100025} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-01-29 19:05:28,818 DEBUG [java.sql.PreparedStatement] - <{pstm-100025} Parameters: [100043]>
2018-01-29 19:05:28,818 DEBUG [java.sql.PreparedStatement] - <{pstm-100025} Types: [java.lang.String]>
2018-01-29 19:05:28,820 DEBUG [java.sql.ResultSet] - <{rset-100026} ResultSet>
2018-01-29 19:05:28,825 DEBUG [java.sql.Connection] - <{conn-100027} Connection>
2018-01-29 19:05:28,825 DEBUG [java.sql.Connection] - <{conn-100027} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-29 19:05:28,826 DEBUG [java.sql.PreparedStatement] - <{pstm-100028} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-29 19:05:28,826 DEBUG [java.sql.PreparedStatement] - <{pstm-100028} Parameters: [001]>
2018-01-29 19:05:28,826 DEBUG [java.sql.PreparedStatement] - <{pstm-100028} Types: [java.lang.String]>
2018-01-29 19:05:28,827 DEBUG [java.sql.ResultSet] - <{rset-100029} ResultSet>
2018-01-29 19:05:28,827 DEBUG [java.sql.ResultSet] - <{rset-100029} Header: [deptid, deptname]>
2018-01-29 19:05:28,827 DEBUG [java.sql.ResultSet] - <{rset-100029} Result: [001, XX供热公司]>
2018-01-29 19:05:28,828 DEBUG [java.sql.Connection] - <{conn-100030} Connection>
2018-01-29 19:05:28,828 DEBUG [java.sql.Connection] - <{conn-100030} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-29 19:05:28,828 DEBUG [java.sql.PreparedStatement] - <{pstm-100031} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-29 19:05:28,828 DEBUG [java.sql.PreparedStatement] - <{pstm-100031} Parameters: [001]>
2018-01-29 19:05:28,828 DEBUG [java.sql.PreparedStatement] - <{pstm-100031} Types: [java.lang.String]>
2018-01-29 19:05:28,829 DEBUG [java.sql.ResultSet] - <{rset-100032} ResultSet>
2018-01-29 19:05:28,829 DEBUG [java.sql.ResultSet] - <{rset-100032} Header: [deptid, deptname]>
2018-01-29 19:05:28,829 DEBUG [java.sql.ResultSet] - <{rset-100032} Result: [001, XX供热公司]>
2018-01-29 19:05:28,830 DEBUG [java.sql.Connection] - <{conn-100033} Connection>
2018-01-29 19:05:28,830 DEBUG [java.sql.Connection] - <{conn-100033} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-29 19:05:28,831 DEBUG [java.sql.PreparedStatement] - <{pstm-100034} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-29 19:05:28,831 DEBUG [java.sql.PreparedStatement] - <{pstm-100034} Parameters: [100043]>
2018-01-29 19:05:28,831 DEBUG [java.sql.PreparedStatement] - <{pstm-100034} Types: [java.lang.String]>
2018-01-29 19:05:28,832 DEBUG [java.sql.ResultSet] - <{rset-100035} ResultSet>
2018-01-29 19:05:28,832 DEBUG [java.sql.ResultSet] - <{rset-100035} Header: [theme]>
2018-01-29 19:05:28,832 DEBUG [java.sql.ResultSet] - <{rset-100035} Result: [default]>
2018-01-29 19:05:28,876 DEBUG [java.sql.Connection] - <{conn-100036} Connection>
2018-01-29 19:05:28,877 DEBUG [java.sql.Connection] - <{conn-100036} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-29 19:05:28,877 DEBUG [java.sql.PreparedStatement] - <{pstm-100037} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-29 19:05:28,877 DEBUG [java.sql.PreparedStatement] - <{pstm-100037} Parameters: [100043]>
2018-01-29 19:05:28,877 DEBUG [java.sql.PreparedStatement] - <{pstm-100037} Types: [java.lang.String]>
2018-01-29 19:05:28,879 DEBUG [java.sql.ResultSet] - <{rset-100038} ResultSet>
2018-01-29 19:05:28,880 DEBUG [java.sql.ResultSet] - <{rset-100038} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-29 19:05:28,880 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030404, 新建换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,880 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030403, 删除热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,880 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030406, 删除换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,881 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [010305, 入网管理, null, 0103, module/iw.ered?reqCode=intoWebInit, 0, false, false, tab_blank.png]>
2018-01-29 19:05:28,881 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030405, 修改换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,881 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030401, 新建热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,881 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030201, 选择导入文件, null, 010302, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,881 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030312, 删除面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,881 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [0103, 基础信息, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-29 19:05:28,882 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030311, 修改面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,882 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030301, 新建小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,883 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030310, 添加面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,883 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [010304, 热源站所管理, null, 0103, module/sr.ered?reqCode=sourceInit, 0, false, false, tab_blank.png]>
2018-01-29 19:05:28,884 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030313, 删除面积1, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,884 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030202, 导入模板下载, null, 010302, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,885 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030501, 新增入网, null, 010305, null, 1, false, true, tab_blank.png]>
2018-01-29 19:05:28,885 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030402, 修改热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,885 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [010303, 基础信息维护, null, 0103, module/fc.ered?reqCode=communityInit, 0, false, false, tab_blank.png]>
2018-01-29 19:05:28,885 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030502, 修改入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,887 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030302, 修改小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,887 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [010302, 基础数据导入, null, 0103, module/importHouse.ered?reqCode=importInit, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,887 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030303, 删除小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,887 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030503, 删除入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,887 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030304, 新建大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,888 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030305, 修改大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,888 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030306, 删除大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,888 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030307, 新建用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,888 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030308, 修改用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,889 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030309, 删除用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,889 DEBUG [java.sql.Connection] - <{conn-100039} Connection>
2018-01-29 19:05:28,889 DEBUG [java.sql.Connection] - <{conn-100039} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-29 19:05:28,889 DEBUG [java.sql.PreparedStatement] - <{pstm-100040} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-29 19:05:28,890 DEBUG [java.sql.PreparedStatement] - <{pstm-100040} Parameters: [100043]>
2018-01-29 19:05:28,890 DEBUG [java.sql.PreparedStatement] - <{pstm-100040} Types: [java.lang.String]>
2018-01-29 19:05:28,893 DEBUG [java.sql.ResultSet] - <{rset-100041} ResultSet>
2018-01-29 19:05:28,893 DEBUG [java.sql.Connection] - <{conn-100042} Connection>
2018-01-29 19:05:28,894 DEBUG [java.sql.Connection] - <{conn-100042} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-29 19:05:28,894 DEBUG [java.sql.PreparedStatement] - <{pstm-100043} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-29 19:05:28,894 DEBUG [java.sql.PreparedStatement] - <{pstm-100043} Parameters: [01]>
2018-01-29 19:05:28,894 DEBUG [java.sql.PreparedStatement] - <{pstm-100043} Types: [java.lang.String]>
2018-01-29 19:05:28,896 DEBUG [java.sql.ResultSet] - <{rset-100044} ResultSet>
2018-01-29 19:05:28,896 DEBUG [java.sql.ResultSet] - <{rset-100044} Header: [menuname]>
2018-01-29 19:05:28,896 DEBUG [java.sql.ResultSet] - <{rset-100044} Result: [供热收费管理信息系统]>
2018-01-29 19:05:28,929 DEBUG [java.sql.Connection] - <{conn-100045} Connection>
2018-01-29 19:05:28,930 DEBUG [java.sql.Connection] - <{conn-100045} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-29 19:05:28,930 DEBUG [java.sql.PreparedStatement] - <{pstm-100046} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-29 19:05:28,930 DEBUG [java.sql.PreparedStatement] - <{pstm-100046} Parameters: [100043]>
2018-01-29 19:05:28,930 DEBUG [java.sql.PreparedStatement] - <{pstm-100046} Types: [java.lang.String]>
2018-01-29 19:05:28,933 DEBUG [java.sql.ResultSet] - <{rset-100047} ResultSet>
2018-01-29 19:05:28,933 DEBUG [java.sql.ResultSet] - <{rset-100047} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-29 19:05:28,933 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [010402, 收费管理, null, 0104, module/chg.ered?reqCode=chargeInit, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,933 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040503, 作废票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,934 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040501, 票据入库, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,934 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040401, 冲账, null, 010404, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,934 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040101, 生成应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,934 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040505, 领用票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,934 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040302, 删除减免, null, 010403, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,935 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040301, 减免应收, null, 010403, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,935 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040502, 删除票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,936 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040201, 收费, null, 010402, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,936 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040102, 删除应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,936 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040504, 返还票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,936 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [010401, 生成应收, null, 0104, module/crp.ered?reqCode=creatPlanInit, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,936 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [0104, 收费管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-29 19:05:28,936 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [010403, 减免管理, null, 0104, module/mns.ered?reqCode=minusInit, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,937 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [010404, 冲账管理, null, 0104, module/rlb.ered?reqCode=rollbackInit, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,937 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [010405, 票据管理, null, 0104, module/inv.ered?reqCode=invoiceInit, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,937 DEBUG [java.sql.Connection] - <{conn-100048} Connection>
2018-01-29 19:05:28,938 DEBUG [java.sql.Connection] - <{conn-100048} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-29 19:05:28,938 DEBUG [java.sql.PreparedStatement] - <{pstm-100049} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-29 19:05:28,938 DEBUG [java.sql.PreparedStatement] - <{pstm-100049} Parameters: [100043]>
2018-01-29 19:05:28,938 DEBUG [java.sql.PreparedStatement] - <{pstm-100049} Types: [java.lang.String]>
2018-01-29 19:05:28,942 DEBUG [java.sql.ResultSet] - <{rset-100050} ResultSet>
2018-01-29 19:05:28,942 DEBUG [java.sql.Connection] - <{conn-100051} Connection>
2018-01-29 19:05:28,943 DEBUG [java.sql.Connection] - <{conn-100051} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-29 19:05:28,943 DEBUG [java.sql.PreparedStatement] - <{pstm-100052} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-29 19:05:28,943 DEBUG [java.sql.PreparedStatement] - <{pstm-100052} Parameters: [01]>
2018-01-29 19:05:28,943 DEBUG [java.sql.PreparedStatement] - <{pstm-100052} Types: [java.lang.String]>
2018-01-29 19:05:28,944 DEBUG [java.sql.ResultSet] - <{rset-100053} ResultSet>
2018-01-29 19:05:28,945 DEBUG [java.sql.ResultSet] - <{rset-100053} Header: [menuname]>
2018-01-29 19:05:28,945 DEBUG [java.sql.ResultSet] - <{rset-100053} Result: [供热收费管理信息系统]>
2018-01-29 19:05:28,962 DEBUG [java.sql.Connection] - <{conn-100054} Connection>
2018-01-29 19:05:28,962 DEBUG [java.sql.Connection] - <{conn-100054} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-29 19:05:28,963 DEBUG [java.sql.PreparedStatement] - <{pstm-100055} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-29 19:05:28,963 DEBUG [java.sql.PreparedStatement] - <{pstm-100055} Parameters: [100043]>
2018-01-29 19:05:28,963 DEBUG [java.sql.PreparedStatement] - <{pstm-100055} Types: [java.lang.String]>
2018-01-29 19:05:28,965 DEBUG [java.sql.ResultSet] - <{rset-100056} ResultSet>
2018-01-29 19:05:28,966 DEBUG [java.sql.ResultSet] - <{rset-100056} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-29 19:05:28,966 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [010502, 收费报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-01-29 19:05:28,966 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [010501, 基础报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-01-29 19:05:28,966 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [01050202, 欠费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050201, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,967 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [01050101, 用户情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=f01050101, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,967 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [01050102, 入网情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=w01050301, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,967 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [01050203, 收费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050202, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,967 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [01050201, 收费情况表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050401, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,967 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [0105, 统计分析, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-29 19:05:28,967 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [01050204, 减免明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050204, 1, false, false, tab_blank.png]>
2018-01-29 19:05:28,968 DEBUG [java.sql.Connection] - <{conn-100057} Connection>
2018-01-29 19:05:28,968 DEBUG [java.sql.Connection] - <{conn-100057} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-29 19:05:28,968 DEBUG [java.sql.PreparedStatement] - <{pstm-100058} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-29 19:05:28,968 DEBUG [java.sql.PreparedStatement] - <{pstm-100058} Parameters: [100043]>
2018-01-29 19:05:28,968 DEBUG [java.sql.PreparedStatement] - <{pstm-100058} Types: [java.lang.String]>
2018-01-29 19:05:28,970 DEBUG [java.sql.ResultSet] - <{rset-100059} ResultSet>
2018-01-29 19:05:28,971 DEBUG [java.sql.Connection] - <{conn-100060} Connection>
2018-01-29 19:05:28,971 DEBUG [java.sql.Connection] - <{conn-100060} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-29 19:05:28,972 DEBUG [java.sql.PreparedStatement] - <{pstm-100061} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-29 19:05:28,972 DEBUG [java.sql.PreparedStatement] - <{pstm-100061} Parameters: [01]>
2018-01-29 19:05:28,972 DEBUG [java.sql.PreparedStatement] - <{pstm-100061} Types: [java.lang.String]>
2018-01-29 19:05:28,973 DEBUG [java.sql.ResultSet] - <{rset-100062} ResultSet>
2018-01-29 19:05:28,974 DEBUG [java.sql.ResultSet] - <{rset-100062} Header: [menuname]>
2018-01-29 19:05:28,974 DEBUG [java.sql.ResultSet] - <{rset-100062} Result: [供热收费管理信息系统]>
2018-01-29 19:05:28,987 DEBUG [java.sql.Connection] - <{conn-100063} Connection>
2018-01-29 19:05:28,987 DEBUG [java.sql.Connection] - <{conn-100063} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-29 19:05:28,987 DEBUG [java.sql.PreparedStatement] - <{pstm-100064} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-29 19:05:28,987 DEBUG [java.sql.PreparedStatement] - <{pstm-100064} Parameters: [100043]>
2018-01-29 19:05:28,987 DEBUG [java.sql.PreparedStatement] - <{pstm-100064} Types: [java.lang.String]>
2018-01-29 19:05:28,990 DEBUG [java.sql.ResultSet] - <{rset-100065} ResultSet>
2018-01-29 19:05:28,991 DEBUG [java.sql.ResultSet] - <{rset-100065} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-29 19:05:28,991 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010305, 优惠设置, server_connectIcon, 010103, module/dic.ered?reqCode=discountInit, 1, false, false, server_connect.png]>
2018-01-29 19:05:28,991 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010304, 收费标准, server_connectIcon, 010103, module/std.ered?reqCode=standardInit, 1, false, false, server_connect.png]>
2018-01-29 19:05:28,991 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [010102, 权限管理, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-29 19:05:28,991 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010201, 组织机构管理, chart_organisationIcon, 010102, organization.ered?reqCode=departmentInit, 1, false, false, chart_organisation.png]>
2018-01-29 19:05:28,991 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010301, 字典维护, application_view_listIcon, 010103, resource.ered?reqCode=codeTableInit, 1, false, false, application_view_list.png]>
2018-01-29 19:05:28,991 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010403, Requst请求跟踪, server_connectIcon, 010104, eventTrack.ered?reqCode=init, 1, false, false, server_connect.png]>
2018-01-29 19:05:28,991 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010401, Session会话监控, user_commentIcon, 010104, sessionMonitor.ered?reqCode=init, 1, false, false, user_comment.png]>
2018-01-29 19:05:28,992 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010204, 角色管理与授权, award_star_silver_3Icon, 010102, role.ered?reqCode=roleInit, 1, false, false, award_star_silver_3.png]>
2018-01-29 19:05:28,992 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010303, 全局参数表维护, configIcon, 010103, param.ered?reqCode=init, 1, false, false, config.png]>
2018-01-29 19:05:28,992 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [010103, 基础数据维护, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-29 19:05:28,992 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [010104, 运行监控, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-29 19:05:28,993 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010202, 人员管理与授权, group_linkIcon, 010102, user.ered?reqCode=userInit, 1, false, false, group_link.png]>
2018-01-29 19:05:28,993 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010405, JDBC执行监控, database_refreshIcon, 010104, jdbcMonitor.ered?reqCode=jdbcInit, 1, false, false, database_refresh.png]>
2018-01-29 19:05:28,993 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010406, Service监控, pluginIcon, 010104, beanMonitor.ered?reqCode=init, 1, false, false, plugin.png]>
2018-01-29 19:05:28,993 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010205, 菜单资源管理, layout_contentIcon, 010102, resource.ered?reqCode=menuResourceInit, 1, false, false, layout_content.png]>
2018-01-29 19:05:28,993 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [0101, 系统管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-29 19:05:28,993 DEBUG [java.sql.Connection] - <{conn-100066} Connection>
2018-01-29 19:05:28,994 DEBUG [java.sql.Connection] - <{conn-100066} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-29 19:05:28,994 DEBUG [java.sql.PreparedStatement] - <{pstm-100067} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-29 19:05:28,994 DEBUG [java.sql.PreparedStatement] - <{pstm-100067} Parameters: [100043]>
2018-01-29 19:05:28,994 DEBUG [java.sql.PreparedStatement] - <{pstm-100067} Types: [java.lang.String]>
2018-01-29 19:05:28,995 DEBUG [java.sql.ResultSet] - <{rset-100068} ResultSet>
2018-01-29 19:05:28,996 DEBUG [java.sql.Connection] - <{conn-100069} Connection>
2018-01-29 19:05:28,996 DEBUG [java.sql.Connection] - <{conn-100069} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-29 19:05:28,996 DEBUG [java.sql.PreparedStatement] - <{pstm-100070} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-29 19:05:28,996 DEBUG [java.sql.PreparedStatement] - <{pstm-100070} Parameters: [01]>
2018-01-29 19:05:28,996 DEBUG [java.sql.PreparedStatement] - <{pstm-100070} Types: [java.lang.String]>
2018-01-29 19:05:28,997 DEBUG [java.sql.ResultSet] - <{rset-100071} ResultSet>
2018-01-29 19:05:28,997 DEBUG [java.sql.ResultSet] - <{rset-100071} Header: [menuname]>
2018-01-29 19:05:28,997 DEBUG [java.sql.ResultSet] - <{rset-100071} Result: [供热收费管理信息系统]>
2018-01-29 19:05:30,182 DEBUG [java.sql.Connection] - <{conn-100072} Connection>
2018-01-29 19:05:30,182 DEBUG [java.sql.Connection] - <{conn-100072} Preparing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-01-29 19:05:30,183 DEBUG [java.sql.PreparedStatement] - <{pstm-100073} Executing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-01-29 19:05:30,183 DEBUG [java.sql.PreparedStatement] - <{pstm-100073} Parameters: []>
2018-01-29 19:05:30,183 DEBUG [java.sql.PreparedStatement] - <{pstm-100073} Types: []>
2018-01-29 19:05:30,184 DEBUG [java.sql.ResultSet] - <{rset-100074} ResultSet>
2018-01-29 19:05:30,185 DEBUG [java.sql.ResultSet] - <{rset-100074} Header: [id, text, child_count]>
2018-01-29 19:05:30,185 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0101, 0101 经贸局家属楼 (3), 3]>
2018-01-29 19:05:30,185 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0102, 0102 法院家属楼 (2), 2]>
2018-01-29 19:05:30,185 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0103, 0103 长治县电视台 (1), 1]>
2018-01-29 19:05:30,185 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0104, 0104 广播北二巷（一至三排） (1), 1]>
2018-01-29 19:05:30,185 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0105, 0105 广播南二巷（公安家属西五排） (1), 1]>
2018-01-29 19:05:30,186 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0106, 0106 广播北四巷第一组（南6户） (1), 1]>
2018-01-29 19:05:30,186 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0107, 0107 广播北四巷第一组（北19户） (1), 1]>
2018-01-29 19:05:30,186 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0108, 0108 广播北四巷第二组（16户） (1), 1]>
2018-01-29 19:05:30,186 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0109, 0109 工业巷北一排-北八排 (1), 1]>
2018-01-29 19:05:30,187 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0110, 0110 法院家属院17户 (1), 1]>
2018-01-29 19:05:30,187 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0111, 0111 公安西家属区60户 (1), 1]>
2018-01-29 19:05:30,188 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0112, 0112 建筑工程公司 (2), 2]>
2018-01-29 19:05:30,188 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0113, 0113 工会家属楼 (1), 1]>
2018-01-29 19:05:30,188 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0114, 0114 工会二层独院5户 (1), 1]>
2018-01-29 19:05:30,188 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0115, 0115 政府平房南一排 (2), 2]>
2018-01-29 19:05:30,188 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0116, 0116 政府平房南二排6户 (1), 1]>
2018-01-29 19:05:30,188 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0117, 0117 政府平房南三排5户 (1), 1]>
2018-01-29 19:05:30,189 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0118, 0118 政府平房南四排4户 (1), 1]>
2018-01-29 19:05:30,189 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0119, 0119 政府平房南五排5户（北二排） (1), 1]>
2018-01-29 19:05:30,190 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0120, 0120 政府平房南六排5户（北一排） (1), 1]>
2018-01-29 19:05:30,190 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0121, 0121 政府平房后六户 (1), 1]>
2018-01-29 19:05:30,190 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0122, 0122 政府第三家属楼32户 (1), 1]>
2018-01-29 19:05:30,190 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0123, 0123 政府黄楼家属区 (1), 1]>
2018-01-29 19:05:30,191 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0124, 0124 五交化家属楼 (2), 2]>
2018-01-29 19:05:30,191 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0125, 0125 通达供销公司综合楼 (1), 1]>
2018-01-29 19:05:30,191 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0126, 0126 供销联社家属楼 (3), 3]>
2018-01-29 19:05:30,191 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0127, 0127 二轻局底商 (1), 1]>
2018-01-29 19:05:30,191 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [2001, 2001 南董村西南一巷 (1), 1]>
2018-01-29 19:05:30,191 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [2002, 2002 南董村正街路北 (1), 1]>
2018-01-29 19:05:30,192 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [2003, 2003 南董村正街路南 (1), 1]>
2018-01-29 19:05:30,192 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [2004, 2004 南董村西散户 (1), 1]>
2018-01-29 19:05:30,192 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [2005, 2005 伍龙小区 (3), 3]>
2018-01-29 19:05:30,627 DEBUG [java.sql.Connection] - <{conn-100075} Connection>
2018-01-29 19:05:30,628 DEBUG [java.sql.Connection] - <{conn-100075} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-29 19:05:30,628 DEBUG [java.sql.PreparedStatement] - <{pstm-100076} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-29 19:05:30,628 DEBUG [java.sql.PreparedStatement] - <{pstm-100076} Parameters: [100043]>
2018-01-29 19:05:30,628 DEBUG [java.sql.PreparedStatement] - <{pstm-100076} Types: [java.lang.String]>
2018-01-29 19:05:30,630 DEBUG [java.sql.ResultSet] - <{rset-100077} ResultSet>
2018-01-29 19:05:30,630 DEBUG [java.sql.ResultSet] - <{rset-100077} Header: [theme]>
2018-01-29 19:05:30,630 DEBUG [java.sql.ResultSet] - <{rset-100077} Result: [default]>
2018-01-29 19:05:34,314 DEBUG [java.sql.Connection] - <{conn-100078} Connection>
2018-01-29 19:05:34,315 DEBUG [java.sql.Connection] - <{conn-100078} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-29 19:05:34,315 DEBUG [java.sql.PreparedStatement] - <{pstm-100079} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-29 19:05:34,315 DEBUG [java.sql.PreparedStatement] - <{pstm-100079} Parameters: [100043]>
2018-01-29 19:05:34,315 DEBUG [java.sql.PreparedStatement] - <{pstm-100079} Types: [java.lang.String]>
2018-01-29 19:05:34,316 DEBUG [java.sql.ResultSet] - <{rset-100080} ResultSet>
2018-01-29 19:05:34,317 DEBUG [java.sql.ResultSet] - <{rset-100080} Header: [theme]>
2018-01-29 19:05:34,317 DEBUG [java.sql.ResultSet] - <{rset-100080} Result: [default]>
2018-01-29 19:05:37,998 DEBUG [java.sql.Connection] - <{conn-100081} Connection>
2018-01-29 19:05:37,999 DEBUG [java.sql.Connection] - <{conn-100081} Preparing Statement:    SELECT building_code as id, building_code||' '||building_name||' ('||house_count||')' as text,nvl(house_count,0) as child_Count   FROM fc_building a WHERE   a.community_code = '0101'  order by building_code  >
2018-01-29 19:05:38,000 DEBUG [java.sql.PreparedStatement] - <{pstm-100082} Executing Statement:    SELECT building_code as id, building_code||' '||building_name||' ('||house_count||')' as text,nvl(house_count,0) as child_Count   FROM fc_building a WHERE   a.community_code = '0101'  order by building_code  >
2018-01-29 19:05:38,000 DEBUG [java.sql.PreparedStatement] - <{pstm-100082} Parameters: []>
2018-01-29 19:05:38,000 DEBUG [java.sql.PreparedStatement] - <{pstm-100082} Types: []>
2018-01-29 19:05:38,001 DEBUG [java.sql.ResultSet] - <{rset-100083} ResultSet>
2018-01-29 19:05:38,002 DEBUG [java.sql.ResultSet] - <{rset-100083} Header: [id, text, child_count]>
2018-01-29 19:05:38,002 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [0101-001, 0101-001 家属楼 (21), 21]>
2018-01-29 19:05:38,002 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [0101-002, 0101-002 大北门 (1), 1]>
2018-01-29 19:05:38,002 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [0101-999, 0101-999 商业 (2), 2]>
2018-01-29 19:05:40,792 DEBUG [java.sql.Connection] - <{conn-100084} Connection>
2018-01-29 19:05:40,793 DEBUG [java.sql.Connection] - <{conn-100084} Preparing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0101-001'   order by a.house_code  >
2018-01-29 19:05:40,794 DEBUG [java.sql.PreparedStatement] - <{pstm-100085} Executing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0101-001'   order by a.house_code  >
2018-01-29 19:05:40,794 DEBUG [java.sql.PreparedStatement] - <{pstm-100085} Parameters: []>
2018-01-29 19:05:40,794 DEBUG [java.sql.PreparedStatement] - <{pstm-100085} Types: []>
2018-01-29 19:05:40,795 DEBUG [java.sql.ResultSet] - <{rset-100086} ResultSet>
2018-01-29 19:05:40,796 DEBUG [java.sql.ResultSet] - <{rset-100086} Header: [id, text, child_count]>
2018-01-29 19:05:40,796 DEBUG [java.sql.ResultSet] - <{rset-100086} Result: [0101-001-01-01-01, 01-01-01 李宝源, 0]>
2018-01-29 19:05:40,796 DEBUG [java.sql.ResultSet] - <{rset-100086} Result: [0101-001-01-01-02, 01-01-02 崔志兵, 0]>
2018-01-29 19:05:40,796 DEBUG [java.sql.ResultSet] - <{rset-100086} Result: [0101-001-01-02-01, 01-02-01 牛忠清, 0]>
2018-01-29 19:05:40,796 DEBUG [java.sql.ResultSet] - <{rset-100086} Result: [0101-001-01-02-02, 01-02-02 郝旭刚, 0]>
2018-01-29 19:05:40,796 DEBUG [java.sql.ResultSet] - <{rset-100086} Result: [0101-001-01-03-01, 01-03-01 王志兵, 0]>
2018-01-29 19:05:40,796 DEBUG [java.sql.ResultSet] - <{rset-100086} Result: [0101-001-01-03-02, 01-03-02 李旭红, 0]>
2018-01-29 19:05:40,796 DEBUG [java.sql.ResultSet] - <{rset-100086} Result: [0101-001-02-01-01, 02-01-01 曹贵胜, 0]>
2018-01-29 19:05:40,796 DEBUG [java.sql.ResultSet] - <{rset-100086} Result: [0101-001-02-01-02, 02-01-02 段发书, 0]>
2018-01-29 19:05:40,797 DEBUG [java.sql.ResultSet] - <{rset-100086} Result: [0101-001-02-02-01, 02-02-01 郝秀好, 0]>
2018-01-29 19:05:40,797 DEBUG [java.sql.ResultSet] - <{rset-100086} Result: [0101-001-02-02-02, 02-02-02 任元宝, 0]>
2018-01-29 19:05:40,797 DEBUG [java.sql.ResultSet] - <{rset-100086} Result: [0101-001-02-03-01, 02-03-01 张志刚, 0]>
2018-01-29 19:05:40,798 DEBUG [java.sql.ResultSet] - <{rset-100086} Result: [0101-001-02-03-02, 02-03-02 李国芳, 0]>
2018-01-29 19:05:40,798 DEBUG [java.sql.ResultSet] - <{rset-100086} Result: [0101-001-03-01-01, 03-01-01 秦凤祥, 0]>
2018-01-29 19:05:40,798 DEBUG [java.sql.ResultSet] - <{rset-100086} Result: [0101-001-03-01-02, 03-01-02 史春华, 0]>
2018-01-29 19:05:40,798 DEBUG [java.sql.ResultSet] - <{rset-100086} Result: [0101-001-03-02-01, 03-02-01 张志明, 0]>
2018-01-29 19:05:40,798 DEBUG [java.sql.ResultSet] - <{rset-100086} Result: [0101-001-03-02-02, 03-02-02 靳锁明, 0]>
2018-01-29 19:05:40,798 DEBUG [java.sql.ResultSet] - <{rset-100086} Result: [0101-001-03-03-01, 03-03-01 张志强, 0]>
2018-01-29 19:05:40,798 DEBUG [java.sql.ResultSet] - <{rset-100086} Result: [0101-001-03-03-02, 03-03-02 李  凡, 0]>
2018-01-29 19:05:40,798 DEBUG [java.sql.ResultSet] - <{rset-100086} Result: [0101-001-04-01-01, 04-01-01 牛泽玲, 0]>
2018-01-29 19:05:40,799 DEBUG [java.sql.ResultSet] - <{rset-100086} Result: [0101-001-04-01-02, 04-01-02 王泽宇, 0]>
2018-01-29 19:05:40,799 DEBUG [java.sql.ResultSet] - <{rset-100086} Result: [0101-001-04-02-01, 04-02-01 赵明泽, 0]>
2018-01-29 19:05:42,358 DEBUG [java.sql.Connection] - <{conn-100087} Connection>
2018-01-29 19:05:42,366 DEBUG [java.sql.Connection] - <{conn-100087} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 19:05:42,366 DEBUG [java.sql.PreparedStatement] - <{pstm-100088} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 19:05:42,367 DEBUG [java.sql.PreparedStatement] - <{pstm-100088} Parameters: [0101-001-01-01-01]>
2018-01-29 19:05:42,367 DEBUG [java.sql.PreparedStatement] - <{pstm-100088} Types: [java.lang.String]>
2018-01-29 19:05:42,372 DEBUG [java.sql.ResultSet] - <{rset-100089} ResultSet>
2018-01-29 19:05:42,373 DEBUG [java.sql.ResultSet] - <{rset-100089} Header: [username, item_name, charge_month, house_code, item_code, meter_id, not_money, not_money_latefee, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-29 19:05:42,373 DEBUG [java.sql.ResultSet] - <{rset-100089} Result: [null, 供热费, 2017, 0101-001-01-01-01, A, 0, 2800.28, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 0, 0, 2800.28, 0, null, A1, 28, null, null, 100.01, 2017-11-15, 2017-03-31, 0, 2017-11-01, 2017-11-01, 1.05, null, 1.05, 1.05, 0, 0, 0, 0, 0, 0, 0, 0, 15132, 1]>
2018-01-29 19:05:42,373 DEBUG [java.sql.Connection] - <{conn-100090} Connection>
2018-01-29 19:05:42,374 DEBUG [java.sql.Connection] - <{conn-100090} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-29 19:05:42,374 DEBUG [java.sql.PreparedStatement] - <{pstm-100091} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-29 19:05:42,374 DEBUG [java.sql.PreparedStatement] - <{pstm-100091} Parameters: [0101-001-01-01-01]>
2018-01-29 19:05:42,374 DEBUG [java.sql.PreparedStatement] - <{pstm-100091} Types: [java.lang.String]>
2018-01-29 19:05:42,375 DEBUG [java.sql.ResultSet] - <{rset-100092} ResultSet>
2018-01-29 19:05:42,375 DEBUG [java.sql.ResultSet] - <{rset-100092} Header: [count(*)]>
2018-01-29 19:05:42,376 DEBUG [java.sql.ResultSet] - <{rset-100092} Result: [1]>
2018-01-29 19:05:42,472 DEBUG [java.sql.Connection] - <{conn-100093} Connection>
2018-01-29 19:05:42,473 DEBUG [java.sql.Connection] - <{conn-100093} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-29 19:05:42,473 DEBUG [java.sql.PreparedStatement] - <{pstm-100094} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-29 19:05:42,473 DEBUG [java.sql.PreparedStatement] - <{pstm-100094} Parameters: [0101-001-01-01-01]>
2018-01-29 19:05:42,473 DEBUG [java.sql.PreparedStatement] - <{pstm-100094} Types: [java.lang.String]>
2018-01-29 19:05:42,478 DEBUG [java.sql.ResultSet] - <{rset-100095} ResultSet>
2018-01-29 19:05:42,478 DEBUG [java.sql.ResultSet] - <{rset-100095} Header: [card_id, cluster_code, contact_man, house_manager, owner_name, address, telephone, stat_id, work_unit, apart_status, user_kind, heat_status]>
2018-01-29 19:05:42,478 DEBUG [java.sql.ResultSet] - <{rset-100095} Result: [null, null, null, null, 李宝源, null, null, null, null, null, null, null]>
2018-01-29 19:05:42,604 DEBUG [java.sql.Connection] - <{conn-100096} Connection>
2018-01-29 19:05:42,605 DEBUG [java.sql.Connection] - <{conn-100096} Preparing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-29 19:05:42,605 DEBUG [java.sql.PreparedStatement] - <{pstm-100097} Executing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-29 19:05:42,605 DEBUG [java.sql.PreparedStatement] - <{pstm-100097} Parameters: [100043, A]>
2018-01-29 19:05:42,606 DEBUG [java.sql.PreparedStatement] - <{pstm-100097} Types: [java.lang.String, java.lang.String]>
2018-01-29 19:05:42,607 DEBUG [java.sql.ResultSet] - <{rset-100098} ResultSet>
2018-01-29 19:05:42,633 DEBUG [java.sql.Connection] - <{conn-100099} Connection>
2018-01-29 19:05:42,634 DEBUG [java.sql.Connection] - <{conn-100099} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-29 19:05:42,636 DEBUG [java.sql.PreparedStatement] - <{pstm-100100} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-29 19:05:42,636 DEBUG [java.sql.PreparedStatement] - <{pstm-100100} Parameters: [0101-001-01-01-01]>
2018-01-29 19:05:42,636 DEBUG [java.sql.PreparedStatement] - <{pstm-100100} Types: [java.lang.String]>
2018-01-29 19:05:42,638 DEBUG [java.sql.ResultSet] - <{rset-100101} ResultSet>
2018-01-29 19:05:42,639 DEBUG [java.sql.ResultSet] - <{rset-100101} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-29 19:05:42,639 DEBUG [java.sql.ResultSet] - <{rset-100101} Result: [共1, 2800.28, 0, 0, 2800.28, 2800.28, 0, 0, null, null, 100.01, 1.05, null, 1.05, 1.05]>
2018-01-29 19:05:52,248 DEBUG [java.sql.Connection] - <{conn-100102} Connection>
2018-01-29 19:05:52,248 DEBUG [java.sql.Connection] - <{conn-100102} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-29 19:05:52,248 DEBUG [java.sql.PreparedStatement] - <{pstm-100103} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-29 19:05:52,248 DEBUG [java.sql.PreparedStatement] - <{pstm-100103} Parameters: [100043]>
2018-01-29 19:05:52,248 DEBUG [java.sql.PreparedStatement] - <{pstm-100103} Types: [java.lang.String]>
2018-01-29 19:05:52,251 DEBUG [java.sql.ResultSet] - <{rset-100104} ResultSet>
2018-01-29 19:05:52,251 DEBUG [java.sql.ResultSet] - <{rset-100104} Header: [theme]>
2018-01-29 19:05:52,251 DEBUG [java.sql.ResultSet] - <{rset-100104} Result: [default]>
2018-01-29 19:05:54,006 DEBUG [java.sql.Connection] - <{conn-100105} Connection>
2018-01-29 19:05:54,006 DEBUG [java.sql.Connection] - <{conn-100105} Preparing Statement:    SELECT userid value,username text   FROM eauser    >
2018-01-29 19:05:54,007 DEBUG [java.sql.PreparedStatement] - <{pstm-100106} Executing Statement:    SELECT userid value,username text   FROM eauser    >
2018-01-29 19:05:54,007 DEBUG [java.sql.PreparedStatement] - <{pstm-100106} Parameters: []>
2018-01-29 19:05:54,007 DEBUG [java.sql.PreparedStatement] - <{pstm-100106} Types: []>
2018-01-29 19:05:54,008 DEBUG [java.sql.ResultSet] - <{rset-100107} ResultSet>
2018-01-29 19:05:54,009 DEBUG [java.sql.ResultSet] - <{rset-100107} Header: [value, text]>
2018-01-29 19:05:54,009 DEBUG [java.sql.ResultSet] - <{rset-100107} Result: [100000, 超级用户]>
2018-01-29 19:05:54,009 DEBUG [java.sql.ResultSet] - <{rset-100107} Result: [100001, 开发人员]>
2018-01-29 19:05:54,009 DEBUG [java.sql.ResultSet] - <{rset-100107} Result: [100043, 管理员]>
2018-01-29 19:05:54,009 DEBUG [java.sql.ResultSet] - <{rset-100107} Result: [100044, aa]>
2018-01-29 19:05:54,010 DEBUG [java.sql.ResultSet] - <{rset-100107} Result: [100047, 农村信用社]>
2018-01-29 19:05:57,846 DEBUG [java.sql.Connection] - <{conn-100108} Connection>
2018-01-29 19:05:57,848 DEBUG [java.sql.Connection] - <{conn-100108} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a    WHERE                                  (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))                           order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 19:05:57,849 DEBUG [java.sql.PreparedStatement] - <{pstm-100109} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a    WHERE                                  (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))                           order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 19:05:57,849 DEBUG [java.sql.PreparedStatement] - <{pstm-100109} Parameters: []>
2018-01-29 19:05:57,849 DEBUG [java.sql.PreparedStatement] - <{pstm-100109} Types: []>
2018-01-29 19:05:57,852 DEBUG [java.sql.ResultSet] - <{rset-100110} ResultSet>
2018-01-29 19:05:57,852 DEBUG [java.sql.ResultSet] - <{rset-100110} Header: [rollback_operator_name, rollback_operate_date, operator_name, operate_date, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, real_account, real_charge, charge_type, pay_unit, pay_man, charge_price, charge_area, address, pay_mode, delzero, bill_man, bill_date, b_id, rollback_flag_ora, rollback_flag, rollback_reason, rollback_remark, operator, rollback_operator, rn]>
2018-01-29 19:05:57,853 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [null, null, 管理员, 2018-01-29 19:04:35, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000207, 0, null, null, null, 100043, null, 1]>
2018-01-29 19:05:57,853 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [管理员, 2018-01-29 18:01:04, 管理员, 2018-01-29 17:58:33, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000206, 1, 已冲账, 操作错误, null, 100043, 100043, 2]>
2018-01-29 19:05:57,854 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [管理员, 2018-01-29 17:52:20, 管理员, 2018-01-29 17:49:55, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000205, 1, 已冲账, 操作错误, null, 100043, 100043, 3]>
2018-01-29 19:05:57,854 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [管理员, 2018-01-29 17:49:13, 管理员, 2018-01-29 17:48:45, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000204, 1, 已冲账, 操作错误, null, 100043, 100043, 4]>
2018-01-29 19:05:57,854 DEBUG [java.sql.Connection] - <{conn-100111} Connection>
2018-01-29 19:05:57,855 DEBUG [java.sql.Connection] - <{conn-100111} Preparing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a    WHERE                                  (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))                         >
2018-01-29 19:05:57,855 DEBUG [java.sql.PreparedStatement] - <{pstm-100112} Executing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a    WHERE                                  (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))                         >
2018-01-29 19:05:57,855 DEBUG [java.sql.PreparedStatement] - <{pstm-100112} Parameters: []>
2018-01-29 19:05:57,855 DEBUG [java.sql.PreparedStatement] - <{pstm-100112} Types: []>
2018-01-29 19:05:57,857 DEBUG [java.sql.ResultSet] - <{rset-100113} ResultSet>
2018-01-29 19:05:57,857 DEBUG [java.sql.ResultSet] - <{rset-100113} Header: [count(*)]>
2018-01-29 19:05:57,857 DEBUG [java.sql.ResultSet] - <{rset-100113} Result: [4]>
2018-01-29 19:05:58,203 DEBUG [java.sql.Connection] - <{conn-100114} Connection>
2018-01-29 19:05:58,204 DEBUG [java.sql.Connection] - <{conn-100114} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL    WHERE                                          (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))                 >
2018-01-29 19:05:58,204 DEBUG [java.sql.PreparedStatement] - <{pstm-100115} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL    WHERE                                          (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))                 >
2018-01-29 19:05:58,204 DEBUG [java.sql.PreparedStatement] - <{pstm-100115} Parameters: []>
2018-01-29 19:05:58,204 DEBUG [java.sql.PreparedStatement] - <{pstm-100115} Types: []>
2018-01-29 19:05:58,205 DEBUG [java.sql.ResultSet] - <{rset-100116} ResultSet>
2018-01-29 19:05:58,206 DEBUG [java.sql.ResultSet] - <{rset-100116} Header: [house_count, total_account, real_account, now_cash]>
2018-01-29 19:05:58,206 DEBUG [java.sql.ResultSet] - <{rset-100116} Result: [共4, 11201.12, 11201.12, 5600.56]>
2018-01-29 19:06:05,321 DEBUG [java.sql.Connection] - <{conn-100117} Connection>
2018-01-29 19:06:05,322 DEBUG [java.sql.Connection] - <{conn-100117} Preparing Call: {call pkg_charge.rollback(?,?,?,?,?,?,?,?)}>
2018-01-29 19:06:05,339 DEBUG [java.sql.PreparedStatement] - <{pstm-100118} Executing Statement: {call pkg_charge.rollback(?,?,?,?,?,?,?,?)}>
2018-01-29 19:06:05,340 DEBUG [java.sql.PreparedStatement] - <{pstm-100118} Parameters: [100000000207, 1, 操作错误, , 100043, null]>
2018-01-29 19:06:05,340 DEBUG [java.sql.PreparedStatement] - <{pstm-100118} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, null]>
2018-01-29 19:06:05,541 DEBUG [java.sql.Connection] - <{conn-100119} Connection>
2018-01-29 19:06:05,541 DEBUG [java.sql.Connection] - <{conn-100119} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a    WHERE                                  (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))                           order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 19:06:05,542 DEBUG [java.sql.PreparedStatement] - <{pstm-100120} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a    WHERE                                  (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))                           order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 19:06:05,542 DEBUG [java.sql.PreparedStatement] - <{pstm-100120} Parameters: []>
2018-01-29 19:06:05,542 DEBUG [java.sql.PreparedStatement] - <{pstm-100120} Types: []>
2018-01-29 19:06:05,544 DEBUG [java.sql.ResultSet] - <{rset-100121} ResultSet>
2018-01-29 19:06:05,545 DEBUG [java.sql.ResultSet] - <{rset-100121} Header: [rollback_operator_name, rollback_operate_date, operator_name, operate_date, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, real_account, real_charge, charge_type, pay_unit, pay_man, charge_price, charge_area, address, pay_mode, delzero, bill_man, bill_date, b_id, rollback_flag_ora, rollback_flag, rollback_reason, rollback_remark, operator, rollback_operator, rn]>
2018-01-29 19:06:05,545 DEBUG [java.sql.ResultSet] - <{rset-100121} Result: [管理员, 2018-01-29 19:06:05, 管理员, 2018-01-29 19:04:35, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000207, 1, 已冲账, 操作错误, null, 100043, 100043, 1]>
2018-01-29 19:06:05,546 DEBUG [java.sql.ResultSet] - <{rset-100121} Result: [管理员, 2018-01-29 18:01:04, 管理员, 2018-01-29 17:58:33, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000206, 1, 已冲账, 操作错误, null, 100043, 100043, 2]>
2018-01-29 19:06:05,546 DEBUG [java.sql.ResultSet] - <{rset-100121} Result: [管理员, 2018-01-29 17:52:20, 管理员, 2018-01-29 17:49:55, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000205, 1, 已冲账, 操作错误, null, 100043, 100043, 3]>
2018-01-29 19:06:05,546 DEBUG [java.sql.ResultSet] - <{rset-100121} Result: [管理员, 2018-01-29 17:49:13, 管理员, 2018-01-29 17:48:45, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000204, 1, 已冲账, 操作错误, null, 100043, 100043, 4]>
2018-01-29 19:06:05,547 DEBUG [java.sql.Connection] - <{conn-100122} Connection>
2018-01-29 19:06:05,547 DEBUG [java.sql.Connection] - <{conn-100122} Preparing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a    WHERE                                  (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))                         >
2018-01-29 19:06:05,548 DEBUG [java.sql.PreparedStatement] - <{pstm-100123} Executing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a    WHERE                                  (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))                         >
2018-01-29 19:06:05,548 DEBUG [java.sql.PreparedStatement] - <{pstm-100123} Parameters: []>
2018-01-29 19:06:05,548 DEBUG [java.sql.PreparedStatement] - <{pstm-100123} Types: []>
2018-01-29 19:06:05,549 DEBUG [java.sql.ResultSet] - <{rset-100124} ResultSet>
2018-01-29 19:06:05,549 DEBUG [java.sql.ResultSet] - <{rset-100124} Header: [count(*)]>
2018-01-29 19:06:05,549 DEBUG [java.sql.ResultSet] - <{rset-100124} Result: [4]>
2018-01-29 19:06:05,699 DEBUG [java.sql.Connection] - <{conn-100125} Connection>
2018-01-29 19:06:05,700 DEBUG [java.sql.Connection] - <{conn-100125} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL    WHERE                                          (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))                 >
2018-01-29 19:06:05,700 DEBUG [java.sql.PreparedStatement] - <{pstm-100126} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL    WHERE                                          (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))                 >
2018-01-29 19:06:05,700 DEBUG [java.sql.PreparedStatement] - <{pstm-100126} Parameters: []>
2018-01-29 19:06:05,700 DEBUG [java.sql.PreparedStatement] - <{pstm-100126} Types: []>
2018-01-29 19:06:05,705 DEBUG [java.sql.ResultSet] - <{rset-100127} ResultSet>
2018-01-29 19:06:05,705 DEBUG [java.sql.ResultSet] - <{rset-100127} Header: [house_count, total_account, real_account, now_cash]>
2018-01-29 19:06:05,706 DEBUG [java.sql.ResultSet] - <{rset-100127} Result: [共4, 11201.12, 11201.12, 5600.56]>
2018-01-29 19:06:11,934 DEBUG [java.sql.Connection] - <{conn-100128} Connection>
2018-01-29 19:06:11,935 DEBUG [java.sql.Connection] - <{conn-100128} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 19:06:11,947 DEBUG [java.sql.PreparedStatement] - <{pstm-100129} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 19:06:11,947 DEBUG [java.sql.PreparedStatement] - <{pstm-100129} Parameters: [0101-001-01-01-01]>
2018-01-29 19:06:11,948 DEBUG [java.sql.PreparedStatement] - <{pstm-100129} Types: [java.lang.String]>
2018-01-29 19:06:11,950 DEBUG [java.sql.ResultSet] - <{rset-100130} ResultSet>
2018-01-29 19:06:11,951 DEBUG [java.sql.ResultSet] - <{rset-100130} Header: [username, item_name, charge_month, house_code, item_code, meter_id, not_money, not_money_latefee, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-29 19:06:11,951 DEBUG [java.sql.ResultSet] - <{rset-100130} Result: [null, 供热费, 2017, 0101-001-01-01-01, A, 0, 2800.28, 1.05, 01, 0101, 0101-001, 李宝源, 2800.28, 0, 0, 2800.28, 0, null, A1, 28, null, null, 100.01, 2017-11-15, 2017-03-31, 0, 2017-11-01, 2017-11-01, 1.05, null, 1.05, null, 0, 0, 0, 0, 0, 0, 0, 0, 15132, 1]>
2018-01-29 19:06:11,951 DEBUG [java.sql.Connection] - <{conn-100131} Connection>
2018-01-29 19:06:11,952 DEBUG [java.sql.Connection] - <{conn-100131} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-29 19:06:11,952 DEBUG [java.sql.PreparedStatement] - <{pstm-100132} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-29 19:06:11,952 DEBUG [java.sql.PreparedStatement] - <{pstm-100132} Parameters: [0101-001-01-01-01]>
2018-01-29 19:06:11,952 DEBUG [java.sql.PreparedStatement] - <{pstm-100132} Types: [java.lang.String]>
2018-01-29 19:06:11,953 DEBUG [java.sql.ResultSet] - <{rset-100133} ResultSet>
2018-01-29 19:06:11,954 DEBUG [java.sql.ResultSet] - <{rset-100133} Header: [count(*)]>
2018-01-29 19:06:11,954 DEBUG [java.sql.ResultSet] - <{rset-100133} Result: [1]>
2018-01-29 19:06:12,057 DEBUG [java.sql.Connection] - <{conn-100134} Connection>
2018-01-29 19:06:12,058 DEBUG [java.sql.Connection] - <{conn-100134} Preparing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-29 19:06:12,058 DEBUG [java.sql.PreparedStatement] - <{pstm-100135} Executing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-29 19:06:12,059 DEBUG [java.sql.PreparedStatement] - <{pstm-100135} Parameters: [100043, A]>
2018-01-29 19:06:12,059 DEBUG [java.sql.PreparedStatement] - <{pstm-100135} Types: [java.lang.String, java.lang.String]>
2018-01-29 19:06:12,060 DEBUG [java.sql.ResultSet] - <{rset-100136} ResultSet>
2018-01-29 19:06:12,068 DEBUG [java.sql.Connection] - <{conn-100137} Connection>
2018-01-29 19:06:12,068 DEBUG [java.sql.Connection] - <{conn-100137} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-29 19:06:12,069 DEBUG [java.sql.PreparedStatement] - <{pstm-100138} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-29 19:06:12,069 DEBUG [java.sql.PreparedStatement] - <{pstm-100138} Parameters: [0101-001-01-01-01]>
2018-01-29 19:06:12,069 DEBUG [java.sql.PreparedStatement] - <{pstm-100138} Types: [java.lang.String]>
2018-01-29 19:06:12,070 DEBUG [java.sql.ResultSet] - <{rset-100139} ResultSet>
2018-01-29 19:06:12,071 DEBUG [java.sql.ResultSet] - <{rset-100139} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-29 19:06:12,071 DEBUG [java.sql.ResultSet] - <{rset-100139} Result: [共1, 2800.28, 0, 0, 2800.28, 2800.28, 1.05, 0, null, null, 100.01, 1.05, null, 1.05, null]>
2018-01-29 19:06:12,139 DEBUG [java.sql.Connection] - <{conn-100140} Connection>
2018-01-29 19:06:12,139 DEBUG [java.sql.Connection] - <{conn-100140} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-29 19:06:12,140 DEBUG [java.sql.PreparedStatement] - <{pstm-100141} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-29 19:06:12,140 DEBUG [java.sql.PreparedStatement] - <{pstm-100141} Parameters: [0101-001-01-01-01]>
2018-01-29 19:06:12,140 DEBUG [java.sql.PreparedStatement] - <{pstm-100141} Types: [java.lang.String]>
2018-01-29 19:06:12,142 DEBUG [java.sql.ResultSet] - <{rset-100142} ResultSet>
2018-01-29 19:06:12,142 DEBUG [java.sql.ResultSet] - <{rset-100142} Header: [card_id, cluster_code, contact_man, house_manager, owner_name, address, telephone, stat_id, work_unit, apart_status, user_kind, heat_status]>
2018-01-29 19:06:12,142 DEBUG [java.sql.ResultSet] - <{rset-100142} Result: [null, null, null, null, 李宝源, null, null, null, null, null, null, null]>
2018-01-29 19:06:33,916 DEBUG [java.sql.Connection] - <{conn-100143} Connection>
2018-01-29 19:06:33,916 DEBUG [java.sql.Connection] - <{conn-100143} Preparing Statement:    SELECT       sequenceid as sequenceid, fieldname as fieldname, maxid as maxid, remark as remark,       pattern as pattern, idtype as idtype   FROM easequence WHERE fieldname = ?  >
2018-01-29 19:06:33,916 DEBUG [java.sql.PreparedStatement] - <{pstm-100144} Executing Statement:    SELECT       sequenceid as sequenceid, fieldname as fieldname, maxid as maxid, remark as remark,       pattern as pattern, idtype as idtype   FROM easequence WHERE fieldname = ?  >
2018-01-29 19:06:33,917 DEBUG [java.sql.PreparedStatement] - <{pstm-100144} Parameters: [B_ID]>
2018-01-29 19:06:33,917 DEBUG [java.sql.PreparedStatement] - <{pstm-100144} Types: [java.lang.String]>
2018-01-29 19:06:33,918 DEBUG [java.sql.ResultSet] - <{rset-100145} ResultSet>
2018-01-29 19:06:33,918 DEBUG [java.sql.ResultSet] - <{rset-100145} Header: [sequenceid, fieldname, maxid, remark, pattern, idtype]>
2018-01-29 19:06:33,919 DEBUG [java.sql.ResultSet] - <{rset-100145} Result: [1012, B_ID, 100000000207, 收费单编号, 00000000000, 1]>
2018-01-29 19:06:34,841 DEBUG [java.sql.Connection] - <{conn-100146} Connection>
2018-01-29 19:06:34,841 DEBUG [java.sql.Connection] - <{conn-100146} Preparing Statement:    SELECT       sequenceid as sequenceid, fieldname as fieldname, maxid as maxid, remark as remark,       pattern as pattern, idtype as idtype   FROM easequence WHERE fieldname = ?  >
2018-01-29 19:06:34,842 DEBUG [java.sql.PreparedStatement] - <{pstm-100147} Executing Statement:    SELECT       sequenceid as sequenceid, fieldname as fieldname, maxid as maxid, remark as remark,       pattern as pattern, idtype as idtype   FROM easequence WHERE fieldname = ?  >
2018-01-29 19:06:34,842 DEBUG [java.sql.PreparedStatement] - <{pstm-100147} Parameters: [I_ID]>
2018-01-29 19:06:34,842 DEBUG [java.sql.PreparedStatement] - <{pstm-100147} Types: [java.lang.String]>
2018-01-29 19:06:34,844 DEBUG [java.sql.ResultSet] - <{rset-100148} ResultSet>
2018-01-29 19:06:34,844 DEBUG [java.sql.ResultSet] - <{rset-100148} Header: [sequenceid, fieldname, maxid, remark, pattern, idtype]>
2018-01-29 19:06:34,844 DEBUG [java.sql.ResultSet] - <{rset-100148} Result: [1013, I_ID, 10000001, 入网编号, 00000000, 1]>
2018-01-29 19:06:34,845 DEBUG [java.sql.Connection] - <{conn-100149} Connection>
2018-01-29 19:06:34,845 DEBUG [java.sql.Connection] - <{conn-100149} Preparing Statement:    SELECT       sequenceid as sequenceid, fieldname as fieldname, maxid as maxid, remark as remark,       pattern as pattern, idtype as idtype   FROM easequence WHERE fieldname = ?  >
2018-01-29 19:06:34,845 DEBUG [java.sql.PreparedStatement] - <{pstm-100150} Executing Statement:    SELECT       sequenceid as sequenceid, fieldname as fieldname, maxid as maxid, remark as remark,       pattern as pattern, idtype as idtype   FROM easequence WHERE fieldname = ?  >
2018-01-29 19:06:34,845 DEBUG [java.sql.PreparedStatement] - <{pstm-100150} Parameters: [B_ID]>
2018-01-29 19:06:34,845 DEBUG [java.sql.PreparedStatement] - <{pstm-100150} Types: [java.lang.String]>
2018-01-29 19:06:34,847 DEBUG [java.sql.ResultSet] - <{rset-100151} ResultSet>
2018-01-29 19:06:34,847 DEBUG [java.sql.ResultSet] - <{rset-100151} Header: [sequenceid, fieldname, maxid, remark, pattern, idtype]>
2018-01-29 19:06:34,847 DEBUG [java.sql.ResultSet] - <{rset-100151} Result: [1012, B_ID, 100000000207, 收费单编号, 00000000000, 1]>
2018-01-29 19:06:34,866 DEBUG [java.sql.Connection] - <{conn-100152} Connection>
2018-01-29 19:06:34,866 DEBUG [java.sql.Connection] - <{conn-100152} Preparing Statement:          UPDATE easequence SET maxid = ? WHERE fieldname = ?  >
2018-01-29 19:06:34,866 DEBUG [java.sql.PreparedStatement] - <{pstm-100153} Executing Statement:          UPDATE easequence SET maxid = ? WHERE fieldname = ?  >
2018-01-29 19:06:34,866 DEBUG [java.sql.PreparedStatement] - <{pstm-100153} Parameters: [100000000208, B_ID]>
2018-01-29 19:06:34,867 DEBUG [java.sql.PreparedStatement] - <{pstm-100153} Types: [java.lang.String, java.lang.String]>
2018-01-29 19:06:34,901 DEBUG [java.sql.Connection] - <{conn-100154} Connection>
2018-01-29 19:06:34,901 DEBUG [java.sql.Connection] - <{conn-100154} Preparing Call: {call pkg_charge.Charge_A( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,  ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}>
2018-01-29 19:06:34,902 DEBUG [java.sql.PreparedStatement] - <{pstm-100155} Executing Statement: {call pkg_charge.Charge_A( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,  ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}>
2018-01-29 19:06:34,902 DEBUG [java.sql.PreparedStatement] - <{pstm-100155} Parameters: [100000000208, 15132, 0101-001-01-01-01, , , , , , 28, 100.01, 现金, , , 2800.28, 0, , , null, null, null, null, 2017-11-01, 1.05, 1.05, , , 100043, null]>
2018-01-29 19:06:34,902 DEBUG [java.sql.PreparedStatement] - <{pstm-100155} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, null, null, null, null, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, java.lang.String, null]>
2018-01-29 19:06:35,061 DEBUG [java.sql.Connection] - <{conn-100156} Connection>
2018-01-29 19:06:35,062 DEBUG [java.sql.Connection] - <{conn-100156} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 19:06:35,062 DEBUG [java.sql.PreparedStatement] - <{pstm-100157} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 19:06:35,062 DEBUG [java.sql.PreparedStatement] - <{pstm-100157} Parameters: [0101-001-01-01-01]>
2018-01-29 19:06:35,062 DEBUG [java.sql.PreparedStatement] - <{pstm-100157} Types: [java.lang.String]>
2018-01-29 19:06:35,065 DEBUG [java.sql.ResultSet] - <{rset-100158} ResultSet>
2018-01-29 19:06:35,065 DEBUG [java.sql.Connection] - <{conn-100159} Connection>
2018-01-29 19:06:35,066 DEBUG [java.sql.Connection] - <{conn-100159} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-29 19:06:35,066 DEBUG [java.sql.PreparedStatement] - <{pstm-100160} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-29 19:06:35,066 DEBUG [java.sql.PreparedStatement] - <{pstm-100160} Parameters: [0101-001-01-01-01]>
2018-01-29 19:06:35,066 DEBUG [java.sql.PreparedStatement] - <{pstm-100160} Types: [java.lang.String]>
2018-01-29 19:06:35,067 DEBUG [java.sql.ResultSet] - <{rset-100161} ResultSet>
2018-01-29 19:06:35,068 DEBUG [java.sql.ResultSet] - <{rset-100161} Header: [count(*)]>
2018-01-29 19:06:35,068 DEBUG [java.sql.ResultSet] - <{rset-100161} Result: [0]>
2018-01-29 19:06:35,668 DEBUG [java.sql.Connection] - <{conn-100162} Connection>
2018-01-29 19:06:35,669 DEBUG [java.sql.Connection] - <{conn-100162} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-29 19:06:35,669 DEBUG [java.sql.PreparedStatement] - <{pstm-100163} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-29 19:06:35,670 DEBUG [java.sql.PreparedStatement] - <{pstm-100163} Parameters: [0101-001-01-01-01]>
2018-01-29 19:06:35,670 DEBUG [java.sql.PreparedStatement] - <{pstm-100163} Types: [java.lang.String]>
2018-01-29 19:06:35,672 DEBUG [java.sql.ResultSet] - <{rset-100164} ResultSet>
2018-01-29 19:06:35,672 DEBUG [java.sql.ResultSet] - <{rset-100164} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-29 19:06:35,672 DEBUG [java.sql.ResultSet] - <{rset-100164} Result: [共0, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-01-29 19:06:45,636 DEBUG [java.sql.Connection] - <{conn-100165} Connection>
2018-01-29 19:06:45,637 DEBUG [java.sql.Connection] - <{conn-100165} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a    WHERE                                  (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))                           order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 19:06:45,638 DEBUG [java.sql.PreparedStatement] - <{pstm-100166} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a    WHERE                                  (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))                           order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 19:06:45,638 DEBUG [java.sql.PreparedStatement] - <{pstm-100166} Parameters: []>
2018-01-29 19:06:45,638 DEBUG [java.sql.PreparedStatement] - <{pstm-100166} Types: []>
2018-01-29 19:06:45,641 DEBUG [java.sql.ResultSet] - <{rset-100167} ResultSet>
2018-01-29 19:06:45,641 DEBUG [java.sql.ResultSet] - <{rset-100167} Header: [rollback_operator_name, rollback_operate_date, operator_name, operate_date, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, real_account, real_charge, charge_type, pay_unit, pay_man, charge_price, charge_area, address, pay_mode, delzero, bill_man, bill_date, b_id, rollback_flag_ora, rollback_flag, rollback_reason, rollback_remark, operator, rollback_operator, rn]>
2018-01-29 19:06:45,641 DEBUG [java.sql.ResultSet] - <{rset-100167} Result: [null, null, 管理员, 2018-01-29 19:06:34, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000208, 0, null, null, null, 100043, null, 1]>
2018-01-29 19:06:45,642 DEBUG [java.sql.ResultSet] - <{rset-100167} Result: [管理员, 2018-01-29 19:06:05, 管理员, 2018-01-29 19:04:35, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000207, 1, 已冲账, 操作错误, null, 100043, 100043, 2]>
2018-01-29 19:06:45,642 DEBUG [java.sql.ResultSet] - <{rset-100167} Result: [管理员, 2018-01-29 18:01:04, 管理员, 2018-01-29 17:58:33, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000206, 1, 已冲账, 操作错误, null, 100043, 100043, 3]>
2018-01-29 19:06:45,643 DEBUG [java.sql.ResultSet] - <{rset-100167} Result: [管理员, 2018-01-29 17:52:20, 管理员, 2018-01-29 17:49:55, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000205, 1, 已冲账, 操作错误, null, 100043, 100043, 4]>
2018-01-29 19:06:45,643 DEBUG [java.sql.ResultSet] - <{rset-100167} Result: [管理员, 2018-01-29 17:49:13, 管理员, 2018-01-29 17:48:45, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000204, 1, 已冲账, 操作错误, null, 100043, 100043, 5]>
2018-01-29 19:06:45,643 DEBUG [java.sql.Connection] - <{conn-100168} Connection>
2018-01-29 19:06:45,644 DEBUG [java.sql.Connection] - <{conn-100168} Preparing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a    WHERE                                  (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))                         >
2018-01-29 19:06:45,644 DEBUG [java.sql.PreparedStatement] - <{pstm-100169} Executing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a    WHERE                                  (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))                         >
2018-01-29 19:06:45,644 DEBUG [java.sql.PreparedStatement] - <{pstm-100169} Parameters: []>
2018-01-29 19:06:45,644 DEBUG [java.sql.PreparedStatement] - <{pstm-100169} Types: []>
2018-01-29 19:06:45,646 DEBUG [java.sql.ResultSet] - <{rset-100170} ResultSet>
2018-01-29 19:06:45,646 DEBUG [java.sql.ResultSet] - <{rset-100170} Header: [count(*)]>
2018-01-29 19:06:45,646 DEBUG [java.sql.ResultSet] - <{rset-100170} Result: [5]>
2018-01-29 19:06:45,851 DEBUG [java.sql.Connection] - <{conn-100171} Connection>
2018-01-29 19:06:45,855 DEBUG [java.sql.Connection] - <{conn-100171} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL    WHERE                                          (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))                 >
2018-01-29 19:06:45,856 DEBUG [java.sql.PreparedStatement] - <{pstm-100172} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL    WHERE                                          (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))                 >
2018-01-29 19:06:45,856 DEBUG [java.sql.PreparedStatement] - <{pstm-100172} Parameters: []>
2018-01-29 19:06:45,856 DEBUG [java.sql.PreparedStatement] - <{pstm-100172} Types: []>
2018-01-29 19:06:45,857 DEBUG [java.sql.ResultSet] - <{rset-100173} ResultSet>
2018-01-29 19:06:45,858 DEBUG [java.sql.ResultSet] - <{rset-100173} Header: [house_count, total_account, real_account, now_cash]>
2018-01-29 19:06:45,858 DEBUG [java.sql.ResultSet] - <{rset-100173} Result: [共5, 14001.4, 14001.4, 8400.84]>
2018-01-29 19:07:01,104 DEBUG [java.sql.Connection] - <{conn-100174} Connection>
2018-01-29 19:07:01,105 DEBUG [java.sql.Connection] - <{conn-100174} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-29 19:07:01,105 DEBUG [java.sql.PreparedStatement] - <{pstm-100175} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-29 19:07:01,105 DEBUG [java.sql.PreparedStatement] - <{pstm-100175} Parameters: [100043]>
2018-01-29 19:07:01,105 DEBUG [java.sql.PreparedStatement] - <{pstm-100175} Types: [java.lang.String]>
2018-01-29 19:07:01,106 DEBUG [java.sql.ResultSet] - <{rset-100176} ResultSet>
2018-01-29 19:07:01,106 DEBUG [java.sql.ResultSet] - <{rset-100176} Header: [theme]>
2018-01-29 19:07:01,107 DEBUG [java.sql.ResultSet] - <{rset-100176} Result: [default]>
2018-01-29 19:07:02,129 DEBUG [java.sql.Connection] - <{conn-100177} Connection>
2018-01-29 19:07:02,129 DEBUG [java.sql.Connection] - <{conn-100177} Preparing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-29 19:07:02,130 DEBUG [java.sql.PreparedStatement] - <{pstm-100178} Executing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-29 19:07:02,130 DEBUG [java.sql.PreparedStatement] - <{pstm-100178} Parameters: []>
2018-01-29 19:07:02,130 DEBUG [java.sql.PreparedStatement] - <{pstm-100178} Types: []>
2018-01-29 19:07:02,131 DEBUG [java.sql.ResultSet] - <{rset-100179} ResultSet>
2018-01-29 19:07:02,131 DEBUG [java.sql.ResultSet] - <{rset-100179} Header: [value, text]>
2018-01-29 19:07:02,131 DEBUG [java.sql.ResultSet] - <{rset-100179} Result: [A, 供热费]>
2018-01-29 19:07:02,131 DEBUG [java.sql.ResultSet] - <{rset-100179} Result: [B, 入网费]>
2018-01-29 19:07:04,640 DEBUG [java.sql.Connection] - <{conn-100180} Connection>
2018-01-29 19:07:04,642 DEBUG [java.sql.Connection] - <{conn-100180} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE                  (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))                       order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 19:07:04,642 DEBUG [java.sql.PreparedStatement] - <{pstm-100181} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE                  (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))                       order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-29 19:07:04,642 DEBUG [java.sql.PreparedStatement] - <{pstm-100181} Parameters: []>
2018-01-29 19:07:04,642 DEBUG [java.sql.PreparedStatement] - <{pstm-100181} Types: []>
2018-01-29 19:07:04,652 DEBUG [java.sql.ResultSet] - <{rset-100182} ResultSet>
2018-01-29 19:07:04,653 DEBUG [java.sql.ResultSet] - <{rset-100182} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-29 19:07:04,653 DEBUG [java.sql.ResultSet] - <{rset-100182} Result: [null, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 0, 0, 2800.28, 2800.28, null, A1, 28, null, null, 100.01, 2017-11-15, 2017-03-31, 0, 2017-11-01, 2017-11-01, 1.05, null, 1.05, 1.05, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15132, 1]>
2018-01-29 19:07:04,653 DEBUG [java.sql.Connection] - <{conn-100183} Connection>
2018-01-29 19:07:04,654 DEBUG [java.sql.Connection] - <{conn-100183} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE                  (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))                     >
2018-01-29 19:07:04,654 DEBUG [java.sql.PreparedStatement] - <{pstm-100184} Executing Statement:    select count(*)    from SF_CHARGE    WHERE                  (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))                     >
2018-01-29 19:07:04,654 DEBUG [java.sql.PreparedStatement] - <{pstm-100184} Parameters: []>
2018-01-29 19:07:04,654 DEBUG [java.sql.PreparedStatement] - <{pstm-100184} Types: []>
2018-01-29 19:07:04,657 DEBUG [java.sql.ResultSet] - <{rset-100185} ResultSet>
2018-01-29 19:07:04,657 DEBUG [java.sql.ResultSet] - <{rset-100185} Header: [count(*)]>
2018-01-29 19:07:04,657 DEBUG [java.sql.ResultSet] - <{rset-100185} Result: [1]>
2018-01-29 19:07:04,772 DEBUG [java.sql.Connection] - <{conn-100186} Connection>
2018-01-29 19:07:04,773 DEBUG [java.sql.Connection] - <{conn-100186} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE                  (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))                 >
2018-01-29 19:07:04,773 DEBUG [java.sql.PreparedStatement] - <{pstm-100187} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE                  (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))                 >
2018-01-29 19:07:04,774 DEBUG [java.sql.PreparedStatement] - <{pstm-100187} Parameters: []>
2018-01-29 19:07:04,774 DEBUG [java.sql.PreparedStatement] - <{pstm-100187} Types: []>
2018-01-29 19:07:04,858 DEBUG [java.sql.ResultSet] - <{rset-100188} ResultSet>
2018-01-29 19:07:04,859 DEBUG [java.sql.ResultSet] - <{rset-100188} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-01-29 19:07:04,859 DEBUG [java.sql.ResultSet] - <{rset-100188} Result: [共1, 2800.28, 0, 0, 2800.28, 2800.28, null, null, 100.01, 1.05, null, 1.05, 1.05, 0]>
2018-01-30 10:59:11,322 DEBUG [java.sql.Connection] - <{conn-100008} Connection>
2018-01-30 10:59:11,324 DEBUG [java.sql.Connection] - <{conn-100008} Preparing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-01-30 10:59:11,325 DEBUG [java.sql.PreparedStatement] - <{pstm-100009} Executing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-01-30 10:59:11,325 DEBUG [java.sql.PreparedStatement] - <{pstm-100009} Parameters: [0, admin]>
2018-01-30 10:59:11,325 DEBUG [java.sql.PreparedStatement] - <{pstm-100009} Types: [java.lang.String, java.lang.String]>
2018-01-30 10:59:11,327 DEBUG [java.sql.ResultSet] - <{rset-100010} ResultSet>
2018-01-30 10:59:11,328 DEBUG [java.sql.ResultSet] - <{rset-100010} Header: [userid, username, account, password, sex, deptid, theme, customid, customname]>
2018-01-30 10:59:11,328 DEBUG [java.sql.ResultSet] - <{rset-100010} Result: [100043, 管理员, admin, RaFutWeh0ww=, 0, 001, default, 01, 供热]>
2018-01-30 10:59:11,329 DEBUG [java.sql.Connection] - <{conn-100011} Connection>
2018-01-30 10:59:11,329 DEBUG [java.sql.Connection] - <{conn-100011} Preparing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-01-30 10:59:11,330 DEBUG [java.sql.PreparedStatement] - <{pstm-100012} Executing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-01-30 10:59:11,330 DEBUG [java.sql.PreparedStatement] - <{pstm-100012} Parameters: [edicbjt7fmim]>
2018-01-30 10:59:11,330 DEBUG [java.sql.PreparedStatement] - <{pstm-100012} Types: [java.lang.String]>
2018-01-30 10:59:11,331 DEBUG [java.sql.ResultSet] - <{rset-100013} ResultSet>
2018-01-30 10:59:11,333 DEBUG [java.sql.Connection] - <{conn-100014} Connection>
2018-01-30 10:59:11,333 DEBUG [java.sql.Connection] - <{conn-100014} Preparing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-01-30 10:59:11,333 DEBUG [java.sql.PreparedStatement] - <{pstm-100015} Executing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-01-30 10:59:11,333 DEBUG [java.sql.PreparedStatement] - <{pstm-100015} Parameters: [edicbjt7fmim, 管理员, admin, 2018-01-30 10:59:11, 127.0.0.1, 100043, FIREFOX/57.]>
2018-01-30 10:59:11,333 DEBUG [java.sql.PreparedStatement] - <{pstm-100015} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-30 10:59:11,694 DEBUG [java.sql.Connection] - <{conn-100016} Connection>
2018-01-30 10:59:11,694 DEBUG [java.sql.Connection] - <{conn-100016} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 10:59:11,694 DEBUG [java.sql.PreparedStatement] - <{pstm-100017} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 10:59:11,694 DEBUG [java.sql.PreparedStatement] - <{pstm-100017} Parameters: [100043]>
2018-01-30 10:59:11,695 DEBUG [java.sql.PreparedStatement] - <{pstm-100017} Types: [java.lang.String]>
2018-01-30 10:59:11,696 DEBUG [java.sql.ResultSet] - <{rset-100018} ResultSet>
2018-01-30 10:59:11,696 DEBUG [java.sql.ResultSet] - <{rset-100018} Header: [theme]>
2018-01-30 10:59:11,696 DEBUG [java.sql.ResultSet] - <{rset-100018} Result: [default]>
2018-01-30 10:59:11,850 DEBUG [java.sql.Connection] - <{conn-100019} Connection>
2018-01-30 10:59:11,851 DEBUG [java.sql.Connection] - <{conn-100019} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 10:59:11,851 DEBUG [java.sql.PreparedStatement] - <{pstm-100020} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 10:59:11,851 DEBUG [java.sql.PreparedStatement] - <{pstm-100020} Parameters: [100043]>
2018-01-30 10:59:11,851 DEBUG [java.sql.PreparedStatement] - <{pstm-100020} Types: [java.lang.String]>
2018-01-30 10:59:11,854 DEBUG [java.sql.ResultSet] - <{rset-100021} ResultSet>
2018-01-30 10:59:11,855 DEBUG [java.sql.ResultSet] - <{rset-100021} Header: [menuid, menuname, iconcls]>
2018-01-30 10:59:11,855 DEBUG [java.sql.ResultSet] - <{rset-100021} Result: [0103, 基础信息, null]>
2018-01-30 10:59:11,855 DEBUG [java.sql.ResultSet] - <{rset-100021} Result: [0104, 收费管理, null]>
2018-01-30 10:59:11,856 DEBUG [java.sql.ResultSet] - <{rset-100021} Result: [0105, 统计分析, null]>
2018-01-30 10:59:11,856 DEBUG [java.sql.ResultSet] - <{rset-100021} Result: [0101, 系统管理, null]>
2018-01-30 10:59:11,856 DEBUG [java.sql.Connection] - <{conn-100022} Connection>
2018-01-30 10:59:11,856 DEBUG [java.sql.Connection] - <{conn-100022} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-01-30 10:59:11,857 DEBUG [java.sql.PreparedStatement] - <{pstm-100023} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-01-30 10:59:11,857 DEBUG [java.sql.PreparedStatement] - <{pstm-100023} Parameters: [100043]>
2018-01-30 10:59:11,857 DEBUG [java.sql.PreparedStatement] - <{pstm-100023} Types: [java.lang.String]>
2018-01-30 10:59:11,859 DEBUG [java.sql.ResultSet] - <{rset-100024} ResultSet>
2018-01-30 10:59:11,862 DEBUG [java.sql.Connection] - <{conn-100025} Connection>
2018-01-30 10:59:11,862 DEBUG [java.sql.Connection] - <{conn-100025} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 10:59:11,862 DEBUG [java.sql.PreparedStatement] - <{pstm-100026} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 10:59:11,863 DEBUG [java.sql.PreparedStatement] - <{pstm-100026} Parameters: [001]>
2018-01-30 10:59:11,863 DEBUG [java.sql.PreparedStatement] - <{pstm-100026} Types: [java.lang.String]>
2018-01-30 10:59:11,864 DEBUG [java.sql.ResultSet] - <{rset-100027} ResultSet>
2018-01-30 10:59:11,864 DEBUG [java.sql.ResultSet] - <{rset-100027} Header: [deptid, deptname]>
2018-01-30 10:59:11,864 DEBUG [java.sql.ResultSet] - <{rset-100027} Result: [001, XX供热公司]>
2018-01-30 10:59:11,865 DEBUG [java.sql.Connection] - <{conn-100028} Connection>
2018-01-30 10:59:11,865 DEBUG [java.sql.Connection] - <{conn-100028} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 10:59:11,865 DEBUG [java.sql.PreparedStatement] - <{pstm-100029} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 10:59:11,865 DEBUG [java.sql.PreparedStatement] - <{pstm-100029} Parameters: [001]>
2018-01-30 10:59:11,865 DEBUG [java.sql.PreparedStatement] - <{pstm-100029} Types: [java.lang.String]>
2018-01-30 10:59:11,866 DEBUG [java.sql.ResultSet] - <{rset-100030} ResultSet>
2018-01-30 10:59:11,866 DEBUG [java.sql.ResultSet] - <{rset-100030} Header: [deptid, deptname]>
2018-01-30 10:59:11,867 DEBUG [java.sql.ResultSet] - <{rset-100030} Result: [001, XX供热公司]>
2018-01-30 10:59:11,867 DEBUG [java.sql.Connection] - <{conn-100031} Connection>
2018-01-30 10:59:11,868 DEBUG [java.sql.Connection] - <{conn-100031} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 10:59:11,868 DEBUG [java.sql.PreparedStatement] - <{pstm-100032} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 10:59:11,868 DEBUG [java.sql.PreparedStatement] - <{pstm-100032} Parameters: [100043]>
2018-01-30 10:59:11,868 DEBUG [java.sql.PreparedStatement] - <{pstm-100032} Types: [java.lang.String]>
2018-01-30 10:59:11,869 DEBUG [java.sql.ResultSet] - <{rset-100033} ResultSet>
2018-01-30 10:59:11,869 DEBUG [java.sql.ResultSet] - <{rset-100033} Header: [theme]>
2018-01-30 10:59:11,869 DEBUG [java.sql.ResultSet] - <{rset-100033} Result: [default]>
2018-01-30 10:59:12,026 DEBUG [java.sql.Connection] - <{conn-100034} Connection>
2018-01-30 10:59:12,027 DEBUG [java.sql.Connection] - <{conn-100034} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 10:59:12,027 DEBUG [java.sql.PreparedStatement] - <{pstm-100035} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 10:59:12,027 DEBUG [java.sql.PreparedStatement] - <{pstm-100035} Parameters: [100043]>
2018-01-30 10:59:12,028 DEBUG [java.sql.PreparedStatement] - <{pstm-100035} Types: [java.lang.String]>
2018-01-30 10:59:12,031 DEBUG [java.sql.ResultSet] - <{rset-100036} ResultSet>
2018-01-30 10:59:12,032 DEBUG [java.sql.ResultSet] - <{rset-100036} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 10:59:12,032 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030404, 新建换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,032 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030403, 删除热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,032 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030406, 删除换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,032 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [010305, 入网管理, null, 0103, module/iw.ered?reqCode=intoWebInit, 0, false, false, tab_blank.png]>
2018-01-30 10:59:12,033 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030405, 修改换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,033 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030401, 新建热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,033 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030201, 选择导入文件, null, 010302, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,033 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030312, 删除面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,033 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [0103, 基础信息, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 10:59:12,034 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030311, 修改面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,034 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030301, 新建小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,036 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030310, 添加面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,036 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [010304, 热源站所管理, null, 0103, module/sr.ered?reqCode=sourceInit, 0, false, false, tab_blank.png]>
2018-01-30 10:59:12,036 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030313, 删除面积1, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,036 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030202, 导入模板下载, null, 010302, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,038 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030501, 新增入网, null, 010305, null, 1, false, true, tab_blank.png]>
2018-01-30 10:59:12,038 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030402, 修改热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,038 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [010303, 基础信息维护, null, 0103, module/fc.ered?reqCode=communityInit, 0, false, false, tab_blank.png]>
2018-01-30 10:59:12,038 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030502, 修改入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,040 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030302, 修改小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,040 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [010302, 基础数据导入, null, 0103, module/importHouse.ered?reqCode=importInit, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,040 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030303, 删除小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,040 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030503, 删除入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,040 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030304, 新建大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,041 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030305, 修改大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,041 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030306, 删除大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,041 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030307, 新建用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,041 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030308, 修改用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,042 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030309, 删除用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,042 DEBUG [java.sql.Connection] - <{conn-100037} Connection>
2018-01-30 10:59:12,042 DEBUG [java.sql.Connection] - <{conn-100037} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 10:59:12,042 DEBUG [java.sql.PreparedStatement] - <{pstm-100038} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 10:59:12,043 DEBUG [java.sql.PreparedStatement] - <{pstm-100038} Parameters: [100043]>
2018-01-30 10:59:12,043 DEBUG [java.sql.PreparedStatement] - <{pstm-100038} Types: [java.lang.String]>
2018-01-30 10:59:12,044 DEBUG [java.sql.ResultSet] - <{rset-100039} ResultSet>
2018-01-30 10:59:12,045 DEBUG [java.sql.Connection] - <{conn-100040} Connection>
2018-01-30 10:59:12,045 DEBUG [java.sql.Connection] - <{conn-100040} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 10:59:12,045 DEBUG [java.sql.PreparedStatement] - <{pstm-100041} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 10:59:12,046 DEBUG [java.sql.PreparedStatement] - <{pstm-100041} Parameters: [01]>
2018-01-30 10:59:12,046 DEBUG [java.sql.PreparedStatement] - <{pstm-100041} Types: [java.lang.String]>
2018-01-30 10:59:12,047 DEBUG [java.sql.ResultSet] - <{rset-100042} ResultSet>
2018-01-30 10:59:12,047 DEBUG [java.sql.ResultSet] - <{rset-100042} Header: [menuname]>
2018-01-30 10:59:12,047 DEBUG [java.sql.ResultSet] - <{rset-100042} Result: [供热收费管理信息系统]>
2018-01-30 10:59:12,079 DEBUG [java.sql.Connection] - <{conn-100043} Connection>
2018-01-30 10:59:12,080 DEBUG [java.sql.Connection] - <{conn-100043} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 10:59:12,080 DEBUG [java.sql.PreparedStatement] - <{pstm-100044} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 10:59:12,080 DEBUG [java.sql.PreparedStatement] - <{pstm-100044} Parameters: [100043]>
2018-01-30 10:59:12,080 DEBUG [java.sql.PreparedStatement] - <{pstm-100044} Types: [java.lang.String]>
2018-01-30 10:59:12,083 DEBUG [java.sql.ResultSet] - <{rset-100045} ResultSet>
2018-01-30 10:59:12,083 DEBUG [java.sql.ResultSet] - <{rset-100045} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 10:59:12,083 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [010402, 收费管理, null, 0104, module/chg.ered?reqCode=chargeInit, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,084 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040503, 作废票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,084 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040501, 票据入库, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,084 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040401, 冲账, null, 010404, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,084 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040101, 生成应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,084 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040505, 领用票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,084 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040302, 删除减免, null, 010403, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,084 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040301, 减免应收, null, 010403, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,085 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040502, 删除票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,086 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040201, 收费, null, 010402, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,086 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040102, 删除应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,086 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040504, 返还票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,086 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [010401, 生成应收, null, 0104, module/crp.ered?reqCode=creatPlanInit, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,087 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [0104, 收费管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 10:59:12,087 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [010403, 减免管理, null, 0104, module/mns.ered?reqCode=minusInit, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,087 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [010404, 冲账管理, null, 0104, module/rlb.ered?reqCode=rollbackInit, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,087 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [010405, 票据管理, null, 0104, module/inv.ered?reqCode=invoiceInit, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,088 DEBUG [java.sql.Connection] - <{conn-100046} Connection>
2018-01-30 10:59:12,088 DEBUG [java.sql.Connection] - <{conn-100046} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 10:59:12,088 DEBUG [java.sql.PreparedStatement] - <{pstm-100047} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 10:59:12,089 DEBUG [java.sql.PreparedStatement] - <{pstm-100047} Parameters: [100043]>
2018-01-30 10:59:12,089 DEBUG [java.sql.PreparedStatement] - <{pstm-100047} Types: [java.lang.String]>
2018-01-30 10:59:12,090 DEBUG [java.sql.ResultSet] - <{rset-100048} ResultSet>
2018-01-30 10:59:12,091 DEBUG [java.sql.Connection] - <{conn-100049} Connection>
2018-01-30 10:59:12,091 DEBUG [java.sql.Connection] - <{conn-100049} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 10:59:12,091 DEBUG [java.sql.PreparedStatement] - <{pstm-100050} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 10:59:12,091 DEBUG [java.sql.PreparedStatement] - <{pstm-100050} Parameters: [01]>
2018-01-30 10:59:12,091 DEBUG [java.sql.PreparedStatement] - <{pstm-100050} Types: [java.lang.String]>
2018-01-30 10:59:12,093 DEBUG [java.sql.ResultSet] - <{rset-100051} ResultSet>
2018-01-30 10:59:12,093 DEBUG [java.sql.ResultSet] - <{rset-100051} Header: [menuname]>
2018-01-30 10:59:12,093 DEBUG [java.sql.ResultSet] - <{rset-100051} Result: [供热收费管理信息系统]>
2018-01-30 10:59:12,107 DEBUG [java.sql.Connection] - <{conn-100052} Connection>
2018-01-30 10:59:12,108 DEBUG [java.sql.Connection] - <{conn-100052} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 10:59:12,109 DEBUG [java.sql.PreparedStatement] - <{pstm-100053} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 10:59:12,109 DEBUG [java.sql.PreparedStatement] - <{pstm-100053} Parameters: [100043]>
2018-01-30 10:59:12,109 DEBUG [java.sql.PreparedStatement] - <{pstm-100053} Types: [java.lang.String]>
2018-01-30 10:59:12,112 DEBUG [java.sql.ResultSet] - <{rset-100054} ResultSet>
2018-01-30 10:59:12,112 DEBUG [java.sql.ResultSet] - <{rset-100054} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 10:59:12,112 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [010502, 收费报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-01-30 10:59:12,112 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [010501, 基础报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-01-30 10:59:12,113 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [01050202, 欠费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050201, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,113 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [01050101, 用户情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=f01050101, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,113 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [01050102, 入网情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=w01050301, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,113 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [01050203, 收费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050202, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,113 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [01050201, 收费情况表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050401, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,113 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [0105, 统计分析, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 10:59:12,114 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [01050204, 减免明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050204, 1, false, false, tab_blank.png]>
2018-01-30 10:59:12,114 DEBUG [java.sql.Connection] - <{conn-100055} Connection>
2018-01-30 10:59:12,114 DEBUG [java.sql.Connection] - <{conn-100055} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 10:59:12,114 DEBUG [java.sql.PreparedStatement] - <{pstm-100056} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 10:59:12,114 DEBUG [java.sql.PreparedStatement] - <{pstm-100056} Parameters: [100043]>
2018-01-30 10:59:12,115 DEBUG [java.sql.PreparedStatement] - <{pstm-100056} Types: [java.lang.String]>
2018-01-30 10:59:12,119 DEBUG [java.sql.ResultSet] - <{rset-100057} ResultSet>
2018-01-30 10:59:12,120 DEBUG [java.sql.Connection] - <{conn-100058} Connection>
2018-01-30 10:59:12,120 DEBUG [java.sql.Connection] - <{conn-100058} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 10:59:12,120 DEBUG [java.sql.PreparedStatement] - <{pstm-100059} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 10:59:12,120 DEBUG [java.sql.PreparedStatement] - <{pstm-100059} Parameters: [01]>
2018-01-30 10:59:12,120 DEBUG [java.sql.PreparedStatement] - <{pstm-100059} Types: [java.lang.String]>
2018-01-30 10:59:12,121 DEBUG [java.sql.ResultSet] - <{rset-100060} ResultSet>
2018-01-30 10:59:12,122 DEBUG [java.sql.ResultSet] - <{rset-100060} Header: [menuname]>
2018-01-30 10:59:12,122 DEBUG [java.sql.ResultSet] - <{rset-100060} Result: [供热收费管理信息系统]>
2018-01-30 10:59:12,136 DEBUG [java.sql.Connection] - <{conn-100061} Connection>
2018-01-30 10:59:12,136 DEBUG [java.sql.Connection] - <{conn-100061} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 10:59:12,136 DEBUG [java.sql.PreparedStatement] - <{pstm-100062} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 10:59:12,136 DEBUG [java.sql.PreparedStatement] - <{pstm-100062} Parameters: [100043]>
2018-01-30 10:59:12,137 DEBUG [java.sql.PreparedStatement] - <{pstm-100062} Types: [java.lang.String]>
2018-01-30 10:59:12,139 DEBUG [java.sql.ResultSet] - <{rset-100063} ResultSet>
2018-01-30 10:59:12,140 DEBUG [java.sql.ResultSet] - <{rset-100063} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 10:59:12,140 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010305, 优惠设置, server_connectIcon, 010103, module/dic.ered?reqCode=discountInit, 1, false, false, server_connect.png]>
2018-01-30 10:59:12,140 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010304, 收费标准, server_connectIcon, 010103, module/std.ered?reqCode=standardInit, 1, false, false, server_connect.png]>
2018-01-30 10:59:12,140 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [010102, 权限管理, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 10:59:12,140 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010201, 组织机构管理, chart_organisationIcon, 010102, organization.ered?reqCode=departmentInit, 1, false, false, chart_organisation.png]>
2018-01-30 10:59:12,141 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010301, 字典维护, application_view_listIcon, 010103, resource.ered?reqCode=codeTableInit, 1, false, false, application_view_list.png]>
2018-01-30 10:59:12,142 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010403, Requst请求跟踪, server_connectIcon, 010104, eventTrack.ered?reqCode=init, 1, false, false, server_connect.png]>
2018-01-30 10:59:12,142 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010401, Session会话监控, user_commentIcon, 010104, sessionMonitor.ered?reqCode=init, 1, false, false, user_comment.png]>
2018-01-30 10:59:12,142 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010204, 角色管理与授权, award_star_silver_3Icon, 010102, role.ered?reqCode=roleInit, 1, false, false, award_star_silver_3.png]>
2018-01-30 10:59:12,142 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010303, 全局参数表维护, configIcon, 010103, param.ered?reqCode=init, 1, false, false, config.png]>
2018-01-30 10:59:12,143 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [010103, 基础数据维护, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 10:59:12,143 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [010104, 运行监控, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 10:59:12,143 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010202, 人员管理与授权, group_linkIcon, 010102, user.ered?reqCode=userInit, 1, false, false, group_link.png]>
2018-01-30 10:59:12,144 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010405, JDBC执行监控, database_refreshIcon, 010104, jdbcMonitor.ered?reqCode=jdbcInit, 1, false, false, database_refresh.png]>
2018-01-30 10:59:12,144 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010406, Service监控, pluginIcon, 010104, beanMonitor.ered?reqCode=init, 1, false, false, plugin.png]>
2018-01-30 10:59:12,144 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010205, 菜单资源管理, layout_contentIcon, 010102, resource.ered?reqCode=menuResourceInit, 1, false, false, layout_content.png]>
2018-01-30 10:59:12,144 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [0101, 系统管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 10:59:12,144 DEBUG [java.sql.Connection] - <{conn-100064} Connection>
2018-01-30 10:59:12,145 DEBUG [java.sql.Connection] - <{conn-100064} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 10:59:12,145 DEBUG [java.sql.PreparedStatement] - <{pstm-100065} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 10:59:12,145 DEBUG [java.sql.PreparedStatement] - <{pstm-100065} Parameters: [100043]>
2018-01-30 10:59:12,145 DEBUG [java.sql.PreparedStatement] - <{pstm-100065} Types: [java.lang.String]>
2018-01-30 10:59:12,147 DEBUG [java.sql.ResultSet] - <{rset-100066} ResultSet>
2018-01-30 10:59:12,147 DEBUG [java.sql.Connection] - <{conn-100067} Connection>
2018-01-30 10:59:12,147 DEBUG [java.sql.Connection] - <{conn-100067} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 10:59:12,148 DEBUG [java.sql.PreparedStatement] - <{pstm-100068} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 10:59:12,148 DEBUG [java.sql.PreparedStatement] - <{pstm-100068} Parameters: [01]>
2018-01-30 10:59:12,148 DEBUG [java.sql.PreparedStatement] - <{pstm-100068} Types: [java.lang.String]>
2018-01-30 10:59:12,149 DEBUG [java.sql.ResultSet] - <{rset-100069} ResultSet>
2018-01-30 10:59:12,149 DEBUG [java.sql.ResultSet] - <{rset-100069} Header: [menuname]>
2018-01-30 10:59:12,149 DEBUG [java.sql.ResultSet] - <{rset-100069} Result: [供热收费管理信息系统]>
2018-01-30 10:59:12,660 DEBUG [java.sql.Connection] - <{conn-100070} Connection>
2018-01-30 10:59:12,661 DEBUG [java.sql.Connection] - <{conn-100070} Preparing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-01-30 10:59:12,661 DEBUG [java.sql.PreparedStatement] - <{pstm-100071} Executing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-01-30 10:59:12,663 DEBUG [java.sql.PreparedStatement] - <{pstm-100071} Parameters: []>
2018-01-30 10:59:12,663 DEBUG [java.sql.PreparedStatement] - <{pstm-100071} Types: []>
2018-01-30 10:59:12,664 DEBUG [java.sql.ResultSet] - <{rset-100072} ResultSet>
2018-01-30 10:59:12,665 DEBUG [java.sql.ResultSet] - <{rset-100072} Header: [id, text, child_count]>
2018-01-30 10:59:12,665 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0101, 0101 经贸局家属楼 (3), 3]>
2018-01-30 10:59:12,665 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0102, 0102 法院家属楼 (2), 2]>
2018-01-30 10:59:12,665 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0103, 0103 长治县电视台 (1), 1]>
2018-01-30 10:59:12,665 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0104, 0104 广播北二巷（一至三排） (1), 1]>
2018-01-30 10:59:12,666 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0105, 0105 广播南二巷（公安家属西五排） (1), 1]>
2018-01-30 10:59:12,667 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0106, 0106 广播北四巷第一组（南6户） (1), 1]>
2018-01-30 10:59:12,667 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0107, 0107 广播北四巷第一组（北19户） (1), 1]>
2018-01-30 10:59:12,667 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0108, 0108 广播北四巷第二组（16户） (1), 1]>
2018-01-30 10:59:12,667 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0109, 0109 工业巷北一排-北八排 (1), 1]>
2018-01-30 10:59:12,668 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0110, 0110 法院家属院17户 (1), 1]>
2018-01-30 10:59:12,668 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0111, 0111 公安西家属区60户 (1), 1]>
2018-01-30 10:59:12,668 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0112, 0112 建筑工程公司 (2), 2]>
2018-01-30 10:59:12,668 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0113, 0113 工会家属楼 (1), 1]>
2018-01-30 10:59:12,668 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0114, 0114 工会二层独院5户 (1), 1]>
2018-01-30 10:59:12,668 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0115, 0115 政府平房南一排 (2), 2]>
2018-01-30 10:59:12,669 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0116, 0116 政府平房南二排6户 (1), 1]>
2018-01-30 10:59:12,669 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0117, 0117 政府平房南三排5户 (1), 1]>
2018-01-30 10:59:12,669 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0118, 0118 政府平房南四排4户 (1), 1]>
2018-01-30 10:59:12,669 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0119, 0119 政府平房南五排5户（北二排） (1), 1]>
2018-01-30 10:59:12,670 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0120, 0120 政府平房南六排5户（北一排） (1), 1]>
2018-01-30 10:59:12,670 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0121, 0121 政府平房后六户 (1), 1]>
2018-01-30 10:59:12,670 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0122, 0122 政府第三家属楼32户 (1), 1]>
2018-01-30 10:59:12,670 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0123, 0123 政府黄楼家属区 (1), 1]>
2018-01-30 10:59:12,670 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0124, 0124 五交化家属楼 (2), 2]>
2018-01-30 10:59:12,670 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0125, 0125 通达供销公司综合楼 (1), 1]>
2018-01-30 10:59:12,670 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0126, 0126 供销联社家属楼 (3), 3]>
2018-01-30 10:59:12,671 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0127, 0127 二轻局底商 (1), 1]>
2018-01-30 10:59:12,671 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [2001, 2001 南董村西南一巷 (1), 1]>
2018-01-30 10:59:12,671 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [2002, 2002 南董村正街路北 (1), 1]>
2018-01-30 10:59:12,672 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [2003, 2003 南董村正街路南 (1), 1]>
2018-01-30 10:59:12,672 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [2004, 2004 南董村西散户 (1), 1]>
2018-01-30 10:59:12,672 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [2005, 2005 伍龙小区 (3), 3]>
2018-01-30 10:59:12,894 DEBUG [java.sql.Connection] - <{conn-100073} Connection>
2018-01-30 10:59:12,895 DEBUG [java.sql.Connection] - <{conn-100073} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 10:59:12,895 DEBUG [java.sql.PreparedStatement] - <{pstm-100074} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 10:59:12,896 DEBUG [java.sql.PreparedStatement] - <{pstm-100074} Parameters: [100043]>
2018-01-30 10:59:12,896 DEBUG [java.sql.PreparedStatement] - <{pstm-100074} Types: [java.lang.String]>
2018-01-30 10:59:12,897 DEBUG [java.sql.ResultSet] - <{rset-100075} ResultSet>
2018-01-30 10:59:12,897 DEBUG [java.sql.ResultSet] - <{rset-100075} Header: [theme]>
2018-01-30 10:59:12,897 DEBUG [java.sql.ResultSet] - <{rset-100075} Result: [default]>
2018-01-30 11:02:36,556 DEBUG [java.sql.Connection] - <{conn-100076} Connection>
2018-01-30 11:02:36,556 DEBUG [java.sql.Connection] - <{conn-100076} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 11:02:36,557 DEBUG [java.sql.PreparedStatement] - <{pstm-100077} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 11:02:36,557 DEBUG [java.sql.PreparedStatement] - <{pstm-100077} Parameters: [100043]>
2018-01-30 11:02:36,557 DEBUG [java.sql.PreparedStatement] - <{pstm-100077} Types: [java.lang.String]>
2018-01-30 11:02:36,558 DEBUG [java.sql.ResultSet] - <{rset-100078} ResultSet>
2018-01-30 11:02:36,559 DEBUG [java.sql.ResultSet] - <{rset-100078} Header: [theme]>
2018-01-30 11:02:36,559 DEBUG [java.sql.ResultSet] - <{rset-100078} Result: [default]>
2018-01-30 11:04:32,129 DEBUG [java.sql.Connection] - <{conn-100079} Connection>
2018-01-30 11:04:32,129 DEBUG [java.sql.Connection] - <{conn-100079} Preparing Statement:    SELECT building_code as id, building_code||' '||building_name||' ('||house_count||')' as text,nvl(house_count,0) as child_Count   FROM fc_building a WHERE   a.community_code = '0101'  order by building_code  >
2018-01-30 11:04:32,131 DEBUG [java.sql.PreparedStatement] - <{pstm-100080} Executing Statement:    SELECT building_code as id, building_code||' '||building_name||' ('||house_count||')' as text,nvl(house_count,0) as child_Count   FROM fc_building a WHERE   a.community_code = '0101'  order by building_code  >
2018-01-30 11:04:32,131 DEBUG [java.sql.PreparedStatement] - <{pstm-100080} Parameters: []>
2018-01-30 11:04:32,131 DEBUG [java.sql.PreparedStatement] - <{pstm-100080} Types: []>
2018-01-30 11:04:32,133 DEBUG [java.sql.ResultSet] - <{rset-100081} ResultSet>
2018-01-30 11:04:32,133 DEBUG [java.sql.ResultSet] - <{rset-100081} Header: [id, text, child_count]>
2018-01-30 11:04:32,133 DEBUG [java.sql.ResultSet] - <{rset-100081} Result: [0101-001, 0101-001 家属楼 (21), 21]>
2018-01-30 11:04:32,133 DEBUG [java.sql.ResultSet] - <{rset-100081} Result: [0101-002, 0101-002 大北门 (1), 1]>
2018-01-30 11:04:32,133 DEBUG [java.sql.ResultSet] - <{rset-100081} Result: [0101-999, 0101-999 商业 (2), 2]>
2018-01-30 11:04:33,044 DEBUG [java.sql.Connection] - <{conn-100082} Connection>
2018-01-30 11:04:33,045 DEBUG [java.sql.Connection] - <{conn-100082} Preparing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0101-001'   order by a.house_code  >
2018-01-30 11:04:33,045 DEBUG [java.sql.PreparedStatement] - <{pstm-100083} Executing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0101-001'   order by a.house_code  >
2018-01-30 11:04:33,045 DEBUG [java.sql.PreparedStatement] - <{pstm-100083} Parameters: []>
2018-01-30 11:04:33,045 DEBUG [java.sql.PreparedStatement] - <{pstm-100083} Types: []>
2018-01-30 11:04:33,046 DEBUG [java.sql.ResultSet] - <{rset-100084} ResultSet>
2018-01-30 11:04:33,047 DEBUG [java.sql.ResultSet] - <{rset-100084} Header: [id, text, child_count]>
2018-01-30 11:04:33,047 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [0101-001-01-01-01, 01-01-01 李宝源, 0]>
2018-01-30 11:04:33,047 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [0101-001-01-01-02, 01-01-02 崔志兵, 0]>
2018-01-30 11:04:33,047 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [0101-001-01-02-01, 01-02-01 牛忠清, 0]>
2018-01-30 11:04:33,047 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [0101-001-01-02-02, 01-02-02 郝旭刚, 0]>
2018-01-30 11:04:33,047 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [0101-001-01-03-01, 01-03-01 王志兵, 0]>
2018-01-30 11:04:33,047 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [0101-001-01-03-02, 01-03-02 李旭红, 0]>
2018-01-30 11:04:33,047 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [0101-001-02-01-01, 02-01-01 曹贵胜, 0]>
2018-01-30 11:04:33,048 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [0101-001-02-01-02, 02-01-02 段发书, 0]>
2018-01-30 11:04:33,048 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [0101-001-02-02-01, 02-02-01 郝秀好, 0]>
2018-01-30 11:04:33,048 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [0101-001-02-02-02, 02-02-02 任元宝, 0]>
2018-01-30 11:04:33,049 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [0101-001-02-03-01, 02-03-01 张志刚, 0]>
2018-01-30 11:04:33,049 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [0101-001-02-03-02, 02-03-02 李国芳, 0]>
2018-01-30 11:04:33,049 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [0101-001-03-01-01, 03-01-01 秦凤祥, 0]>
2018-01-30 11:04:33,049 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [0101-001-03-01-02, 03-01-02 史春华, 0]>
2018-01-30 11:04:33,049 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [0101-001-03-02-01, 03-02-01 张志明, 0]>
2018-01-30 11:04:33,049 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [0101-001-03-02-02, 03-02-02 靳锁明, 0]>
2018-01-30 11:04:33,050 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [0101-001-03-03-01, 03-03-01 张志强, 0]>
2018-01-30 11:04:33,050 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [0101-001-03-03-02, 03-03-02 李  凡, 0]>
2018-01-30 11:04:33,050 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [0101-001-04-01-01, 04-01-01 牛泽玲, 0]>
2018-01-30 11:04:33,051 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [0101-001-04-01-02, 04-01-02 王泽宇, 0]>
2018-01-30 11:04:33,051 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [0101-001-04-02-01, 04-02-01 赵明泽, 0]>
2018-01-30 11:04:34,516 DEBUG [java.sql.Connection] - <{conn-100085} Connection>
2018-01-30 11:04:34,518 DEBUG [java.sql.Connection] - <{conn-100085} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 11:04:34,518 DEBUG [java.sql.PreparedStatement] - <{pstm-100086} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 11:04:34,518 DEBUG [java.sql.PreparedStatement] - <{pstm-100086} Parameters: [0101-001-01-01-01]>
2018-01-30 11:04:34,518 DEBUG [java.sql.PreparedStatement] - <{pstm-100086} Types: [java.lang.String]>
2018-01-30 11:04:34,520 DEBUG [java.sql.ResultSet] - <{rset-100087} ResultSet>
2018-01-30 11:04:34,521 DEBUG [java.sql.Connection] - <{conn-100088} Connection>
2018-01-30 11:04:34,521 DEBUG [java.sql.Connection] - <{conn-100088} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 11:04:34,521 DEBUG [java.sql.PreparedStatement] - <{pstm-100089} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 11:04:34,521 DEBUG [java.sql.PreparedStatement] - <{pstm-100089} Parameters: [0101-001-01-01-01]>
2018-01-30 11:04:34,522 DEBUG [java.sql.PreparedStatement] - <{pstm-100089} Types: [java.lang.String]>
2018-01-30 11:04:34,523 DEBUG [java.sql.ResultSet] - <{rset-100090} ResultSet>
2018-01-30 11:04:34,523 DEBUG [java.sql.ResultSet] - <{rset-100090} Header: [count(*)]>
2018-01-30 11:04:34,523 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [0]>
2018-01-30 11:04:34,578 DEBUG [java.sql.Connection] - <{conn-100091} Connection>
2018-01-30 11:04:34,578 DEBUG [java.sql.Connection] - <{conn-100091} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 11:04:34,579 DEBUG [java.sql.PreparedStatement] - <{pstm-100092} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 11:04:34,580 DEBUG [java.sql.PreparedStatement] - <{pstm-100092} Parameters: [0101-001-01-01-01]>
2018-01-30 11:04:34,580 DEBUG [java.sql.PreparedStatement] - <{pstm-100092} Types: [java.lang.String]>
2018-01-30 11:04:34,581 DEBUG [java.sql.ResultSet] - <{rset-100093} ResultSet>
2018-01-30 11:04:34,582 DEBUG [java.sql.ResultSet] - <{rset-100093} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-30 11:04:34,582 DEBUG [java.sql.ResultSet] - <{rset-100093} Result: [共0, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-01-30 11:04:34,616 DEBUG [java.sql.Connection] - <{conn-100094} Connection>
2018-01-30 11:04:34,616 DEBUG [java.sql.Connection] - <{conn-100094} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 11:04:34,617 DEBUG [java.sql.PreparedStatement] - <{pstm-100095} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 11:04:34,617 DEBUG [java.sql.PreparedStatement] - <{pstm-100095} Parameters: [0101-001-01-01-01]>
2018-01-30 11:04:34,617 DEBUG [java.sql.PreparedStatement] - <{pstm-100095} Types: [java.lang.String]>
2018-01-30 11:04:34,618 DEBUG [java.sql.ResultSet] - <{rset-100096} ResultSet>
2018-01-30 11:04:34,619 DEBUG [java.sql.ResultSet] - <{rset-100096} Header: [card_id, cluster_code, contact_man, house_manager, owner_name, address, telephone, stat_id, work_unit, apart_status, user_kind, heat_status]>
2018-01-30 11:04:34,619 DEBUG [java.sql.ResultSet] - <{rset-100096} Result: [null, null, null, null, 李宝源, null, null, null, null, null, null, null]>
2018-01-30 11:05:55,042 DEBUG [java.sql.Connection] - <{conn-100097} Connection>
2018-01-30 11:05:55,043 DEBUG [java.sql.Connection] - <{conn-100097} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 11:05:55,043 DEBUG [java.sql.PreparedStatement] - <{pstm-100098} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 11:05:55,043 DEBUG [java.sql.PreparedStatement] - <{pstm-100098} Parameters: [100043]>
2018-01-30 11:05:55,043 DEBUG [java.sql.PreparedStatement] - <{pstm-100098} Types: [java.lang.String]>
2018-01-30 11:05:55,044 DEBUG [java.sql.ResultSet] - <{rset-100099} ResultSet>
2018-01-30 11:05:55,044 DEBUG [java.sql.ResultSet] - <{rset-100099} Header: [theme]>
2018-01-30 11:05:55,044 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [default]>
2018-01-30 11:05:55,267 DEBUG [java.sql.Connection] - <{conn-100100} Connection>
2018-01-30 11:05:55,267 DEBUG [java.sql.Connection] - <{conn-100100} Preparing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-30 11:05:55,267 DEBUG [java.sql.PreparedStatement] - <{pstm-100101} Executing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-30 11:05:55,267 DEBUG [java.sql.PreparedStatement] - <{pstm-100101} Parameters: []>
2018-01-30 11:05:55,267 DEBUG [java.sql.PreparedStatement] - <{pstm-100101} Types: []>
2018-01-30 11:05:55,269 DEBUG [java.sql.ResultSet] - <{rset-100102} ResultSet>
2018-01-30 11:05:55,269 DEBUG [java.sql.ResultSet] - <{rset-100102} Header: [value, text]>
2018-01-30 11:05:55,269 DEBUG [java.sql.ResultSet] - <{rset-100102} Result: [A, 供热费]>
2018-01-30 11:05:55,269 DEBUG [java.sql.ResultSet] - <{rset-100102} Result: [B, 入网费]>
2018-01-30 11:06:09,042 DEBUG [java.sql.Connection] - <{conn-100103} Connection>
2018-01-30 11:06:09,043 DEBUG [java.sql.Connection] - <{conn-100103} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 11:06:09,043 DEBUG [java.sql.PreparedStatement] - <{pstm-100104} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 11:06:09,043 DEBUG [java.sql.PreparedStatement] - <{pstm-100104} Parameters: [100043]>
2018-01-30 11:06:09,043 DEBUG [java.sql.PreparedStatement] - <{pstm-100104} Types: [java.lang.String]>
2018-01-30 11:06:09,044 DEBUG [java.sql.ResultSet] - <{rset-100105} ResultSet>
2018-01-30 11:06:09,044 DEBUG [java.sql.ResultSet] - <{rset-100105} Header: [theme]>
2018-01-30 11:06:09,044 DEBUG [java.sql.ResultSet] - <{rset-100105} Result: [default]>
2018-01-30 11:06:09,289 DEBUG [java.sql.Connection] - <{conn-100106} Connection>
2018-01-30 11:06:09,289 DEBUG [java.sql.Connection] - <{conn-100106} Preparing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-30 11:06:09,289 DEBUG [java.sql.PreparedStatement] - <{pstm-100107} Executing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-30 11:06:09,289 DEBUG [java.sql.PreparedStatement] - <{pstm-100107} Parameters: []>
2018-01-30 11:06:09,290 DEBUG [java.sql.PreparedStatement] - <{pstm-100107} Types: []>
2018-01-30 11:06:09,291 DEBUG [java.sql.ResultSet] - <{rset-100108} ResultSet>
2018-01-30 11:06:09,291 DEBUG [java.sql.ResultSet] - <{rset-100108} Header: [value, text]>
2018-01-30 11:06:09,291 DEBUG [java.sql.ResultSet] - <{rset-100108} Result: [A, 供热费]>
2018-01-30 11:06:09,291 DEBUG [java.sql.ResultSet] - <{rset-100108} Result: [B, 入网费]>
2018-01-30 11:06:09,328 DEBUG [java.sql.Connection] - <{conn-100109} Connection>
2018-01-30 11:06:09,329 DEBUG [java.sql.Connection] - <{conn-100109} Preparing Statement:   SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD') currentDate FROM DUAL  >
2018-01-30 11:06:09,329 DEBUG [java.sql.PreparedStatement] - <{pstm-100110} Executing Statement:   SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD') currentDate FROM DUAL  >
2018-01-30 11:06:09,329 DEBUG [java.sql.PreparedStatement] - <{pstm-100110} Parameters: []>
2018-01-30 11:06:09,329 DEBUG [java.sql.PreparedStatement] - <{pstm-100110} Types: []>
2018-01-30 11:06:09,331 DEBUG [java.sql.ResultSet] - <{rset-100111} ResultSet>
2018-01-30 11:06:09,331 DEBUG [java.sql.ResultSet] - <{rset-100111} Header: [currentdate]>
2018-01-30 11:06:09,331 DEBUG [java.sql.ResultSet] - <{rset-100111} Result: [2018-01-30]>
2018-01-30 11:06:17,144 DEBUG [java.sql.Connection] - <{conn-100112} Connection>
2018-01-30 11:06:17,145 DEBUG [java.sql.Connection] - <{conn-100112} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from (       select     b.bill_date ,        e.community_name,     b.community_code,     b.building_code,      b.house_code,        b.owner_name,        b.charge_price,      b.charge_area,      b.USE_PREPAY,       b.PAY_MODE,       f.invoice_code,       f.invoice_number,     c.userName operatorName,     b.operator,      b.operate_date,      b.item_code,      b.charge_type,      case when b.charge_month='0' then '' else b.charge_month end as charge_month,       b.real_charge ,     case when g.status='2' then 1 else 0 end cancelCount,d.item_name   from      SF_DETAIL b,EAUSER c,SF_ITEM d,FC_COMMUNITY e,SF_INVOICEUSE f,sf_invoice g   where      b.community_code=e.community_code     and b.operator=c.userid     and b.item_code=d.item_code     and b.b_id=f.b_id(+)     and b.rollback_flag='0'     and f.invoice_code=g.invoice_code(+)     and f.invoice_number=g.invoice_number(+)     and f.item_code=g.item_code(+)     and f.invoice_type=g.invoice_type(+)    ) a where 1=1      AND          operate_date>='2017-12-01 00:00:00'      AND          operate_date<='2018-01-30 23:59:59'               order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 11:06:17,145 DEBUG [java.sql.PreparedStatement] - <{pstm-100113} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from (       select     b.bill_date ,        e.community_name,     b.community_code,     b.building_code,      b.house_code,        b.owner_name,        b.charge_price,      b.charge_area,      b.USE_PREPAY,       b.PAY_MODE,       f.invoice_code,       f.invoice_number,     c.userName operatorName,     b.operator,      b.operate_date,      b.item_code,      b.charge_type,      case when b.charge_month='0' then '' else b.charge_month end as charge_month,       b.real_charge ,     case when g.status='2' then 1 else 0 end cancelCount,d.item_name   from      SF_DETAIL b,EAUSER c,SF_ITEM d,FC_COMMUNITY e,SF_INVOICEUSE f,sf_invoice g   where      b.community_code=e.community_code     and b.operator=c.userid     and b.item_code=d.item_code     and b.b_id=f.b_id(+)     and b.rollback_flag='0'     and f.invoice_code=g.invoice_code(+)     and f.invoice_number=g.invoice_number(+)     and f.item_code=g.item_code(+)     and f.invoice_type=g.invoice_type(+)    ) a where 1=1      AND          operate_date>='2017-12-01 00:00:00'      AND          operate_date<='2018-01-30 23:59:59'               order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 11:06:17,145 DEBUG [java.sql.PreparedStatement] - <{pstm-100113} Parameters: []>
2018-01-30 11:06:17,145 DEBUG [java.sql.PreparedStatement] - <{pstm-100113} Types: []>
2018-01-30 11:06:17,154 DEBUG [java.sql.ResultSet] - <{rset-100114} ResultSet>
2018-01-30 11:06:17,155 DEBUG [java.sql.ResultSet] - <{rset-100114} Header: [bill_date, community_name, community_code, building_code, house_code, owner_name, charge_price, charge_area, use_prepay, pay_mode, invoice_code, invoice_number, operatorname, operator, operate_date, item_code, charge_type, charge_month, real_charge, cancelcount, item_name, rn]>
2018-01-30 11:06:17,155 DEBUG [java.sql.ResultSet] - <{rset-100114} Result: [2018-01-29, 经贸局家属楼, 0101, 0101-001, 0101-001-01-01-01, 李宝源, 28, 100.01, 0, 现金, null, null, 管理员, 100043, 2018-01-29 19:06:34, A, 收费, 2017, 2800.28, 0, 供热费, 1]>
2018-01-30 11:06:17,155 DEBUG [java.sql.Connection] - <{conn-100115} Connection>
2018-01-30 11:06:17,155 DEBUG [java.sql.Connection] - <{conn-100115} Preparing Statement:    select count(*) from (   select     b.bill_date ,        e.community_name,     b.community_code,     b.building_code,      b.house_code,        b.owner_name,        b.charge_price,      b.charge_area,      b.USE_PREPAY,       b.PAY_MODE,       f.invoice_code,       f.invoice_number,     c.userName operatorName,     b.operator,       b.operate_date,      b.item_code,      b.charge_type,      case when b.charge_month='0' then '' else b.charge_month end as charge_month,       b.real_charge ,     case when g.status='2' then 1 else 0 end cancelCount   from      SF_DETAIL b,EAUSER c,SF_ITEM d,FC_COMMUNITY e,SF_INVOICEUSE f,sf_invoice g   where      b.community_code=e.community_code     and b.operator=c.userid     and b.item_code=d.item_code     and b.b_id=f.b_id(+)     and b.rollback_flag='0'     and f.invoice_code=g.invoice_code(+)     and f.invoice_number=g.invoice_number(+)     and f.item_code=g.item_code(+)     and f.invoice_type=g.invoice_type(+)    ) a  where 1=1      AND          operate_date>='2017-12-01 00:00:00'      AND          operate_date<='2018-01-30 23:59:59'              >
2018-01-30 11:06:17,156 DEBUG [java.sql.PreparedStatement] - <{pstm-100116} Executing Statement:    select count(*) from (   select     b.bill_date ,        e.community_name,     b.community_code,     b.building_code,      b.house_code,        b.owner_name,        b.charge_price,      b.charge_area,      b.USE_PREPAY,       b.PAY_MODE,       f.invoice_code,       f.invoice_number,     c.userName operatorName,     b.operator,       b.operate_date,      b.item_code,      b.charge_type,      case when b.charge_month='0' then '' else b.charge_month end as charge_month,       b.real_charge ,     case when g.status='2' then 1 else 0 end cancelCount   from      SF_DETAIL b,EAUSER c,SF_ITEM d,FC_COMMUNITY e,SF_INVOICEUSE f,sf_invoice g   where      b.community_code=e.community_code     and b.operator=c.userid     and b.item_code=d.item_code     and b.b_id=f.b_id(+)     and b.rollback_flag='0'     and f.invoice_code=g.invoice_code(+)     and f.invoice_number=g.invoice_number(+)     and f.item_code=g.item_code(+)     and f.invoice_type=g.invoice_type(+)    ) a  where 1=1      AND          operate_date>='2017-12-01 00:00:00'      AND          operate_date<='2018-01-30 23:59:59'              >
2018-01-30 11:06:17,156 DEBUG [java.sql.PreparedStatement] - <{pstm-100116} Parameters: []>
2018-01-30 11:06:17,156 DEBUG [java.sql.PreparedStatement] - <{pstm-100116} Types: []>
2018-01-30 11:06:17,235 DEBUG [java.sql.ResultSet] - <{rset-100117} ResultSet>
2018-01-30 11:06:17,235 DEBUG [java.sql.ResultSet] - <{rset-100117} Header: [count(*)]>
2018-01-30 11:06:17,235 DEBUG [java.sql.ResultSet] - <{rset-100117} Result: [1]>
2018-01-30 11:06:17,267 DEBUG [java.sql.Connection] - <{conn-100118} Connection>
2018-01-30 11:06:17,268 DEBUG [java.sql.Connection] - <{conn-100118} Preparing Statement:    select count(house_code) house_code,   sum(charge_area) charge_area,   sum(real_charge) real_charge,   sum(cancelCount) cancelCount    from (   select     b.bill_date ,        e.community_name,     b.community_code,     b.building_code,      b.house_code,        b.owner_name,        b.charge_price,      b.charge_area,      b.USE_PREPAY,       b.PAY_MODE,       f.invoice_code,       f.invoice_number,     c.userName operatorName,     b.operator,       b.operate_date,      b.item_code,      b.charge_type,      case when b.charge_month='0' then '' else b.charge_month end as charge_month,       b.real_charge ,     case when g.status='2' then 1 else 0 end cancelCount   from      SF_DETAIL b,EAUSER c,SF_ITEM d,FC_COMMUNITY e,SF_INVOICEUSE f,sf_invoice g   where      b.community_code=e.community_code     and b.operator=c.userid     and b.item_code=d.item_code     and b.b_id=f.b_id(+)     and b.rollback_flag='0'     and f.invoice_code=g.invoice_code(+)     and f.invoice_number=g.invoice_number(+)     and f.item_code=g.item_code(+)     and f.invoice_type=g.invoice_type(+)    ) a  where 1=1      AND          operate_date>='2017-12-01 00:00:00'      AND          operate_date<='2018-01-30 23:59:59'              >
2018-01-30 11:06:17,268 DEBUG [java.sql.PreparedStatement] - <{pstm-100119} Executing Statement:    select count(house_code) house_code,   sum(charge_area) charge_area,   sum(real_charge) real_charge,   sum(cancelCount) cancelCount    from (   select     b.bill_date ,        e.community_name,     b.community_code,     b.building_code,      b.house_code,        b.owner_name,        b.charge_price,      b.charge_area,      b.USE_PREPAY,       b.PAY_MODE,       f.invoice_code,       f.invoice_number,     c.userName operatorName,     b.operator,       b.operate_date,      b.item_code,      b.charge_type,      case when b.charge_month='0' then '' else b.charge_month end as charge_month,       b.real_charge ,     case when g.status='2' then 1 else 0 end cancelCount   from      SF_DETAIL b,EAUSER c,SF_ITEM d,FC_COMMUNITY e,SF_INVOICEUSE f,sf_invoice g   where      b.community_code=e.community_code     and b.operator=c.userid     and b.item_code=d.item_code     and b.b_id=f.b_id(+)     and b.rollback_flag='0'     and f.invoice_code=g.invoice_code(+)     and f.invoice_number=g.invoice_number(+)     and f.item_code=g.item_code(+)     and f.invoice_type=g.invoice_type(+)    ) a  where 1=1      AND          operate_date>='2017-12-01 00:00:00'      AND          operate_date<='2018-01-30 23:59:59'              >
2018-01-30 11:06:17,268 DEBUG [java.sql.PreparedStatement] - <{pstm-100119} Parameters: []>
2018-01-30 11:06:17,268 DEBUG [java.sql.PreparedStatement] - <{pstm-100119} Types: []>
2018-01-30 11:06:17,315 DEBUG [java.sql.ResultSet] - <{rset-100120} ResultSet>
2018-01-30 11:06:17,315 DEBUG [java.sql.ResultSet] - <{rset-100120} Header: [house_code, charge_area, real_charge, cancelcount]>
2018-01-30 11:06:17,315 DEBUG [java.sql.ResultSet] - <{rset-100120} Result: [1, 100.01, 2800.28, 0]>
2018-01-30 11:06:19,343 DEBUG [java.sql.Connection] - <{conn-100121} Connection>
2018-01-30 11:06:19,345 DEBUG [java.sql.Connection] - <{conn-100121} Preparing Statement:    select pay_mode,count(house_code) house_count,   sum(real_charge) real_charge    from (   select     b.bill_date ,        e.community_name,     b.community_code,     b.building_code,     b.house_code,        b.owner_name,        b.charge_price,      b.charge_area,      b.USE_PREPAY,       b.PAY_MODE,       f.invoice_code,       f.invoice_number,     c.userName operatorName,     b.operator,       b.operate_date,      b.item_code,      b.charge_type,      case when b.charge_month='0' then '' else b.charge_month end as charge_month,       b.real_charge ,     case when g.status='2' then 1 else 0 end cancelCount   from      SF_DETAIL b,EAUSER c,SF_ITEM d,FC_COMMUNITY e,SF_INVOICEUSE f,sf_invoice g   where      b.community_code=e.community_code     and b.operator=c.userid     and b.item_code=d.item_code     and b.b_id=f.b_id(+)     and b.rollback_flag='0'     and f.invoice_code=g.invoice_code(+)     and f.invoice_number=g.invoice_number(+)     and f.item_code=g.item_code(+)     and f.invoice_type=g.invoice_type(+)    ) a  where 1=1      AND          operate_date>='2017-12-01 00:00:00'      AND          operate_date<='2018-01-30 23:59:59'               group by pay_mode  >
2018-01-30 11:06:19,345 DEBUG [java.sql.PreparedStatement] - <{pstm-100122} Executing Statement:    select pay_mode,count(house_code) house_count,   sum(real_charge) real_charge    from (   select     b.bill_date ,        e.community_name,     b.community_code,     b.building_code,     b.house_code,        b.owner_name,        b.charge_price,      b.charge_area,      b.USE_PREPAY,       b.PAY_MODE,       f.invoice_code,       f.invoice_number,     c.userName operatorName,     b.operator,       b.operate_date,      b.item_code,      b.charge_type,      case when b.charge_month='0' then '' else b.charge_month end as charge_month,       b.real_charge ,     case when g.status='2' then 1 else 0 end cancelCount   from      SF_DETAIL b,EAUSER c,SF_ITEM d,FC_COMMUNITY e,SF_INVOICEUSE f,sf_invoice g   where      b.community_code=e.community_code     and b.operator=c.userid     and b.item_code=d.item_code     and b.b_id=f.b_id(+)     and b.rollback_flag='0'     and f.invoice_code=g.invoice_code(+)     and f.invoice_number=g.invoice_number(+)     and f.item_code=g.item_code(+)     and f.invoice_type=g.invoice_type(+)    ) a  where 1=1      AND          operate_date>='2017-12-01 00:00:00'      AND          operate_date<='2018-01-30 23:59:59'               group by pay_mode  >
2018-01-30 11:06:19,345 DEBUG [java.sql.PreparedStatement] - <{pstm-100122} Parameters: []>
2018-01-30 11:06:19,345 DEBUG [java.sql.PreparedStatement] - <{pstm-100122} Types: []>
2018-01-30 11:06:19,366 DEBUG [java.sql.ResultSet] - <{rset-100123} ResultSet>
2018-01-30 11:06:19,367 DEBUG [java.sql.ResultSet] - <{rset-100123} Header: [pay_mode, house_count, real_charge]>
2018-01-30 11:06:19,367 DEBUG [java.sql.ResultSet] - <{rset-100123} Result: [现金, 1, 2800.28]>
2018-01-30 11:34:45,921 DEBUG [java.sql.Connection] - <{conn-100124} Connection>
2018-01-30 11:34:45,923 DEBUG [java.sql.Connection] - <{conn-100124} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 11:34:45,923 DEBUG [java.sql.PreparedStatement] - <{pstm-100125} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 11:34:45,923 DEBUG [java.sql.PreparedStatement] - <{pstm-100125} Parameters: [0101-001-01-01-01]>
2018-01-30 11:34:45,923 DEBUG [java.sql.PreparedStatement] - <{pstm-100125} Types: [java.lang.String]>
2018-01-30 11:34:45,926 DEBUG [java.sql.ResultSet] - <{rset-100126} ResultSet>
2018-01-30 11:34:45,926 DEBUG [java.sql.Connection] - <{conn-100127} Connection>
2018-01-30 11:34:45,926 DEBUG [java.sql.Connection] - <{conn-100127} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 11:34:45,927 DEBUG [java.sql.PreparedStatement] - <{pstm-100128} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 11:34:45,927 DEBUG [java.sql.PreparedStatement] - <{pstm-100128} Parameters: [0101-001-01-01-01]>
2018-01-30 11:34:45,927 DEBUG [java.sql.PreparedStatement] - <{pstm-100128} Types: [java.lang.String]>
2018-01-30 11:34:45,928 DEBUG [java.sql.ResultSet] - <{rset-100129} ResultSet>
2018-01-30 11:34:45,928 DEBUG [java.sql.ResultSet] - <{rset-100129} Header: [count(*)]>
2018-01-30 11:34:45,928 DEBUG [java.sql.ResultSet] - <{rset-100129} Result: [0]>
2018-01-30 11:34:46,009 DEBUG [java.sql.Connection] - <{conn-100130} Connection>
2018-01-30 11:34:46,010 DEBUG [java.sql.Connection] - <{conn-100130} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 11:34:46,010 DEBUG [java.sql.PreparedStatement] - <{pstm-100131} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 11:34:46,010 DEBUG [java.sql.PreparedStatement] - <{pstm-100131} Parameters: [0101-001-01-01-01]>
2018-01-30 11:34:46,010 DEBUG [java.sql.PreparedStatement] - <{pstm-100131} Types: [java.lang.String]>
2018-01-30 11:34:46,012 DEBUG [java.sql.ResultSet] - <{rset-100132} ResultSet>
2018-01-30 11:34:46,012 DEBUG [java.sql.ResultSet] - <{rset-100132} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-30 11:34:46,012 DEBUG [java.sql.ResultSet] - <{rset-100132} Result: [共0, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-01-30 11:35:48,917 DEBUG [java.sql.Connection] - <{conn-100133} Connection>
2018-01-30 11:35:48,919 DEBUG [java.sql.Connection] - <{conn-100133} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 11:35:48,919 DEBUG [java.sql.PreparedStatement] - <{pstm-100134} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 11:35:48,919 DEBUG [java.sql.PreparedStatement] - <{pstm-100134} Parameters: [0101-001-01-01-01]>
2018-01-30 11:35:48,919 DEBUG [java.sql.PreparedStatement] - <{pstm-100134} Types: [java.lang.String]>
2018-01-30 11:35:48,923 DEBUG [java.sql.ResultSet] - <{rset-100135} ResultSet>
2018-01-30 11:35:48,924 DEBUG [java.sql.Connection] - <{conn-100136} Connection>
2018-01-30 11:35:48,924 DEBUG [java.sql.Connection] - <{conn-100136} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 11:35:48,924 DEBUG [java.sql.PreparedStatement] - <{pstm-100137} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 11:35:48,924 DEBUG [java.sql.PreparedStatement] - <{pstm-100137} Parameters: [0101-001-01-01-01]>
2018-01-30 11:35:48,924 DEBUG [java.sql.PreparedStatement] - <{pstm-100137} Types: [java.lang.String]>
2018-01-30 11:35:48,925 DEBUG [java.sql.ResultSet] - <{rset-100138} ResultSet>
2018-01-30 11:35:48,926 DEBUG [java.sql.ResultSet] - <{rset-100138} Header: [count(*)]>
2018-01-30 11:35:48,926 DEBUG [java.sql.ResultSet] - <{rset-100138} Result: [0]>
2018-01-30 11:35:48,979 DEBUG [java.sql.Connection] - <{conn-100139} Connection>
2018-01-30 11:35:48,979 DEBUG [java.sql.Connection] - <{conn-100139} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 11:35:48,980 DEBUG [java.sql.PreparedStatement] - <{pstm-100140} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 11:35:48,980 DEBUG [java.sql.PreparedStatement] - <{pstm-100140} Parameters: [0101-001-01-01-01]>
2018-01-30 11:35:48,980 DEBUG [java.sql.PreparedStatement] - <{pstm-100140} Types: [java.lang.String]>
2018-01-30 11:35:48,981 DEBUG [java.sql.ResultSet] - <{rset-100141} ResultSet>
2018-01-30 11:35:48,982 DEBUG [java.sql.ResultSet] - <{rset-100141} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-30 11:35:48,982 DEBUG [java.sql.ResultSet] - <{rset-100141} Result: [共0, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-01-30 11:35:49,016 DEBUG [java.sql.Connection] - <{conn-100142} Connection>
2018-01-30 11:35:49,016 DEBUG [java.sql.Connection] - <{conn-100142} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 11:35:49,017 DEBUG [java.sql.PreparedStatement] - <{pstm-100143} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 11:35:49,017 DEBUG [java.sql.PreparedStatement] - <{pstm-100143} Parameters: [0101-001-01-01-01]>
2018-01-30 11:35:49,017 DEBUG [java.sql.PreparedStatement] - <{pstm-100143} Types: [java.lang.String]>
2018-01-30 11:35:49,020 DEBUG [java.sql.ResultSet] - <{rset-100144} ResultSet>
2018-01-30 11:35:49,020 DEBUG [java.sql.ResultSet] - <{rset-100144} Header: [card_id, cluster_code, contact_man, house_manager, owner_name, address, telephone, stat_id, work_unit, apart_status, user_kind, heat_status]>
2018-01-30 11:35:49,020 DEBUG [java.sql.ResultSet] - <{rset-100144} Result: [null, null, null, null, 李宝源, null, null, null, null, null, null, null]>
2018-01-30 11:35:49,616 DEBUG [java.sql.Connection] - <{conn-100145} Connection>
2018-01-30 11:35:49,617 DEBUG [java.sql.Connection] - <{conn-100145} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 11:35:49,617 DEBUG [java.sql.PreparedStatement] - <{pstm-100146} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 11:35:49,617 DEBUG [java.sql.PreparedStatement] - <{pstm-100146} Parameters: [0101-001-01-01-02]>
2018-01-30 11:35:49,617 DEBUG [java.sql.PreparedStatement] - <{pstm-100146} Types: [java.lang.String]>
2018-01-30 11:35:49,619 DEBUG [java.sql.ResultSet] - <{rset-100147} ResultSet>
2018-01-30 11:35:49,620 DEBUG [java.sql.Connection] - <{conn-100148} Connection>
2018-01-30 11:35:49,620 DEBUG [java.sql.Connection] - <{conn-100148} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 11:35:49,621 DEBUG [java.sql.PreparedStatement] - <{pstm-100149} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 11:35:49,621 DEBUG [java.sql.PreparedStatement] - <{pstm-100149} Parameters: [0101-001-01-01-02]>
2018-01-30 11:35:49,621 DEBUG [java.sql.PreparedStatement] - <{pstm-100149} Types: [java.lang.String]>
2018-01-30 11:35:49,622 DEBUG [java.sql.ResultSet] - <{rset-100150} ResultSet>
2018-01-30 11:35:49,622 DEBUG [java.sql.ResultSet] - <{rset-100150} Header: [count(*)]>
2018-01-30 11:35:49,622 DEBUG [java.sql.ResultSet] - <{rset-100150} Result: [0]>
2018-01-30 11:35:49,679 DEBUG [java.sql.Connection] - <{conn-100151} Connection>
2018-01-30 11:35:49,679 DEBUG [java.sql.Connection] - <{conn-100151} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 11:35:49,680 DEBUG [java.sql.PreparedStatement] - <{pstm-100152} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 11:35:49,680 DEBUG [java.sql.PreparedStatement] - <{pstm-100152} Parameters: [0101-001-01-01-02]>
2018-01-30 11:35:49,680 DEBUG [java.sql.PreparedStatement] - <{pstm-100152} Types: [java.lang.String]>
2018-01-30 11:35:49,681 DEBUG [java.sql.ResultSet] - <{rset-100153} ResultSet>
2018-01-30 11:35:49,682 DEBUG [java.sql.ResultSet] - <{rset-100153} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-30 11:35:49,682 DEBUG [java.sql.ResultSet] - <{rset-100153} Result: [共0, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-01-30 11:35:49,709 DEBUG [java.sql.Connection] - <{conn-100154} Connection>
2018-01-30 11:35:49,709 DEBUG [java.sql.Connection] - <{conn-100154} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 11:35:49,709 DEBUG [java.sql.PreparedStatement] - <{pstm-100155} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 11:35:49,710 DEBUG [java.sql.PreparedStatement] - <{pstm-100155} Parameters: [0101-001-01-01-02]>
2018-01-30 11:35:49,710 DEBUG [java.sql.PreparedStatement] - <{pstm-100155} Types: [java.lang.String]>
2018-01-30 11:35:49,711 DEBUG [java.sql.ResultSet] - <{rset-100156} ResultSet>
2018-01-30 11:35:49,711 DEBUG [java.sql.ResultSet] - <{rset-100156} Header: [card_id, cluster_code, contact_man, house_manager, owner_name, address, telephone, stat_id, work_unit, apart_status, user_kind, heat_status]>
2018-01-30 11:35:49,711 DEBUG [java.sql.ResultSet] - <{rset-100156} Result: [null, null, null, null, 崔志兵, null, null, null, null, null, null, null]>
2018-01-30 11:35:50,307 DEBUG [java.sql.Connection] - <{conn-100157} Connection>
2018-01-30 11:35:50,308 DEBUG [java.sql.Connection] - <{conn-100157} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 11:35:50,308 DEBUG [java.sql.PreparedStatement] - <{pstm-100158} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 11:35:50,308 DEBUG [java.sql.PreparedStatement] - <{pstm-100158} Parameters: [0101-001-01-01-01]>
2018-01-30 11:35:50,308 DEBUG [java.sql.PreparedStatement] - <{pstm-100158} Types: [java.lang.String]>
2018-01-30 11:35:50,310 DEBUG [java.sql.ResultSet] - <{rset-100159} ResultSet>
2018-01-30 11:35:50,310 DEBUG [java.sql.Connection] - <{conn-100160} Connection>
2018-01-30 11:35:50,311 DEBUG [java.sql.Connection] - <{conn-100160} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 11:35:50,311 DEBUG [java.sql.PreparedStatement] - <{pstm-100161} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 11:35:50,311 DEBUG [java.sql.PreparedStatement] - <{pstm-100161} Parameters: [0101-001-01-01-01]>
2018-01-30 11:35:50,311 DEBUG [java.sql.PreparedStatement] - <{pstm-100161} Types: [java.lang.String]>
2018-01-30 11:35:50,312 DEBUG [java.sql.ResultSet] - <{rset-100162} ResultSet>
2018-01-30 11:35:50,312 DEBUG [java.sql.ResultSet] - <{rset-100162} Header: [count(*)]>
2018-01-30 11:35:50,312 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [0]>
2018-01-30 11:35:50,367 DEBUG [java.sql.Connection] - <{conn-100163} Connection>
2018-01-30 11:35:50,367 DEBUG [java.sql.Connection] - <{conn-100163} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 11:35:50,368 DEBUG [java.sql.PreparedStatement] - <{pstm-100164} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 11:35:50,368 DEBUG [java.sql.PreparedStatement] - <{pstm-100164} Parameters: [0101-001-01-01-01]>
2018-01-30 11:35:50,368 DEBUG [java.sql.PreparedStatement] - <{pstm-100164} Types: [java.lang.String]>
2018-01-30 11:35:50,369 DEBUG [java.sql.ResultSet] - <{rset-100165} ResultSet>
2018-01-30 11:35:50,370 DEBUG [java.sql.ResultSet] - <{rset-100165} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-30 11:35:50,370 DEBUG [java.sql.ResultSet] - <{rset-100165} Result: [共0, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-01-30 11:35:50,401 DEBUG [java.sql.Connection] - <{conn-100166} Connection>
2018-01-30 11:35:50,401 DEBUG [java.sql.Connection] - <{conn-100166} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 11:35:50,401 DEBUG [java.sql.PreparedStatement] - <{pstm-100167} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 11:35:50,401 DEBUG [java.sql.PreparedStatement] - <{pstm-100167} Parameters: [0101-001-01-01-01]>
2018-01-30 11:35:50,402 DEBUG [java.sql.PreparedStatement] - <{pstm-100167} Types: [java.lang.String]>
2018-01-30 11:35:50,403 DEBUG [java.sql.ResultSet] - <{rset-100168} ResultSet>
2018-01-30 11:35:50,403 DEBUG [java.sql.ResultSet] - <{rset-100168} Header: [card_id, cluster_code, contact_man, house_manager, owner_name, address, telephone, stat_id, work_unit, apart_status, user_kind, heat_status]>
2018-01-30 11:35:50,403 DEBUG [java.sql.ResultSet] - <{rset-100168} Result: [null, null, null, null, 李宝源, null, null, null, null, null, null, null]>
2018-01-30 11:41:36,941 DEBUG [java.sql.Connection] - <{conn-100169} Connection>
2018-01-30 11:41:36,941 DEBUG [java.sql.Connection] - <{conn-100169} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 11:41:36,941 DEBUG [java.sql.PreparedStatement] - <{pstm-100170} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 11:41:36,942 DEBUG [java.sql.PreparedStatement] - <{pstm-100170} Parameters: [100043]>
2018-01-30 11:41:36,942 DEBUG [java.sql.PreparedStatement] - <{pstm-100170} Types: [java.lang.String]>
2018-01-30 11:41:36,944 DEBUG [java.sql.ResultSet] - <{rset-100171} ResultSet>
2018-01-30 11:41:36,944 DEBUG [java.sql.ResultSet] - <{rset-100171} Header: [theme]>
2018-01-30 11:41:36,945 DEBUG [java.sql.ResultSet] - <{rset-100171} Result: [default]>
2018-01-30 11:41:37,380 DEBUG [java.sql.Connection] - <{conn-100172} Connection>
2018-01-30 11:41:37,381 DEBUG [java.sql.Connection] - <{conn-100172} Preparing Statement:    SELECT userid value,username text   FROM eauser    >
2018-01-30 11:41:37,381 DEBUG [java.sql.PreparedStatement] - <{pstm-100173} Executing Statement:    SELECT userid value,username text   FROM eauser    >
2018-01-30 11:41:37,381 DEBUG [java.sql.PreparedStatement] - <{pstm-100173} Parameters: []>
2018-01-30 11:41:37,381 DEBUG [java.sql.PreparedStatement] - <{pstm-100173} Types: []>
2018-01-30 11:41:37,382 DEBUG [java.sql.ResultSet] - <{rset-100174} ResultSet>
2018-01-30 11:41:37,382 DEBUG [java.sql.ResultSet] - <{rset-100174} Header: [value, text]>
2018-01-30 11:41:37,382 DEBUG [java.sql.ResultSet] - <{rset-100174} Result: [100000, 超级用户]>
2018-01-30 11:41:37,383 DEBUG [java.sql.ResultSet] - <{rset-100174} Result: [100001, 开发人员]>
2018-01-30 11:41:37,383 DEBUG [java.sql.ResultSet] - <{rset-100174} Result: [100043, 管理员]>
2018-01-30 11:41:37,383 DEBUG [java.sql.ResultSet] - <{rset-100174} Result: [100044, aa]>
2018-01-30 11:41:37,383 DEBUG [java.sql.ResultSet] - <{rset-100174} Result: [100047, 农村信用社]>
2018-01-30 11:41:40,307 DEBUG [java.sql.Connection] - <{conn-100175} Connection>
2018-01-30 11:41:40,308 DEBUG [java.sql.Connection] - <{conn-100175} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 11:41:40,308 DEBUG [java.sql.PreparedStatement] - <{pstm-100176} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 11:41:40,308 DEBUG [java.sql.PreparedStatement] - <{pstm-100176} Parameters: []>
2018-01-30 11:41:40,308 DEBUG [java.sql.PreparedStatement] - <{pstm-100176} Types: []>
2018-01-30 11:41:40,311 DEBUG [java.sql.ResultSet] - <{rset-100177} ResultSet>
2018-01-30 11:41:40,312 DEBUG [java.sql.ResultSet] - <{rset-100177} Header: [rollback_operator_name, rollback_operate_date, operator_name, operate_date, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, real_account, real_charge, charge_type, pay_unit, pay_man, charge_price, charge_area, address, pay_mode, delzero, bill_man, bill_date, b_id, rollback_flag_ora, rollback_flag, rollback_reason, rollback_remark, operator, rollback_operator, rn]>
2018-01-30 11:41:40,312 DEBUG [java.sql.ResultSet] - <{rset-100177} Result: [null, null, 管理员, 2018-01-29 19:06:34, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000208, 0, null, null, null, 100043, null, 1]>
2018-01-30 11:41:40,312 DEBUG [java.sql.ResultSet] - <{rset-100177} Result: [管理员, 2018-01-29 19:06:05, 管理员, 2018-01-29 19:04:35, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000207, 1, 已冲账, 操作错误, null, 100043, 100043, 2]>
2018-01-30 11:41:40,313 DEBUG [java.sql.ResultSet] - <{rset-100177} Result: [管理员, 2018-01-29 18:01:04, 管理员, 2018-01-29 17:58:33, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000206, 1, 已冲账, 操作错误, null, 100043, 100043, 3]>
2018-01-30 11:41:40,313 DEBUG [java.sql.ResultSet] - <{rset-100177} Result: [管理员, 2018-01-29 17:52:20, 管理员, 2018-01-29 17:49:55, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000205, 1, 已冲账, 操作错误, null, 100043, 100043, 4]>
2018-01-30 11:41:40,314 DEBUG [java.sql.ResultSet] - <{rset-100177} Result: [管理员, 2018-01-29 17:49:13, 管理员, 2018-01-29 17:48:45, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000204, 1, 已冲账, 操作错误, null, 100043, 100043, 5]>
2018-01-30 11:41:40,314 DEBUG [java.sql.Connection] - <{conn-100178} Connection>
2018-01-30 11:41:40,314 DEBUG [java.sql.Connection] - <{conn-100178} Preparing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 11:41:40,315 DEBUG [java.sql.PreparedStatement] - <{pstm-100179} Executing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 11:41:40,315 DEBUG [java.sql.PreparedStatement] - <{pstm-100179} Parameters: []>
2018-01-30 11:41:40,315 DEBUG [java.sql.PreparedStatement] - <{pstm-100179} Types: []>
2018-01-30 11:41:40,316 DEBUG [java.sql.ResultSet] - <{rset-100180} ResultSet>
2018-01-30 11:41:40,316 DEBUG [java.sql.ResultSet] - <{rset-100180} Header: [count(*)]>
2018-01-30 11:41:40,316 DEBUG [java.sql.ResultSet] - <{rset-100180} Result: [5]>
2018-01-30 11:41:40,428 DEBUG [java.sql.Connection] - <{conn-100181} Connection>
2018-01-30 11:41:40,428 DEBUG [java.sql.Connection] - <{conn-100181} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 11:41:40,428 DEBUG [java.sql.PreparedStatement] - <{pstm-100182} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 11:41:40,429 DEBUG [java.sql.PreparedStatement] - <{pstm-100182} Parameters: []>
2018-01-30 11:41:40,429 DEBUG [java.sql.PreparedStatement] - <{pstm-100182} Types: []>
2018-01-30 11:41:40,430 DEBUG [java.sql.ResultSet] - <{rset-100183} ResultSet>
2018-01-30 11:41:40,430 DEBUG [java.sql.ResultSet] - <{rset-100183} Header: [house_count, total_account, real_account, now_cash]>
2018-01-30 11:41:40,430 DEBUG [java.sql.ResultSet] - <{rset-100183} Result: [共5, 14001.4, 14001.4, 8400.84]>
2018-01-30 11:41:46,264 DEBUG [java.sql.Connection] - <{conn-100184} Connection>
2018-01-30 11:41:46,264 DEBUG [java.sql.Connection] - <{conn-100184} Preparing Call: {call pkg_charge.rollback(?,?,?,?,?,?,?,?)}>
2018-01-30 11:41:46,278 DEBUG [java.sql.PreparedStatement] - <{pstm-100185} Executing Statement: {call pkg_charge.rollback(?,?,?,?,?,?,?,?)}>
2018-01-30 11:41:46,278 DEBUG [java.sql.PreparedStatement] - <{pstm-100185} Parameters: [100000000208, 1, 操作错误, , 100043, null]>
2018-01-30 11:41:46,278 DEBUG [java.sql.PreparedStatement] - <{pstm-100185} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, null]>
2018-01-30 11:41:46,424 DEBUG [java.sql.Connection] - <{conn-100186} Connection>
2018-01-30 11:41:46,424 DEBUG [java.sql.Connection] - <{conn-100186} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 11:41:46,424 DEBUG [java.sql.PreparedStatement] - <{pstm-100187} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 11:41:46,425 DEBUG [java.sql.PreparedStatement] - <{pstm-100187} Parameters: []>
2018-01-30 11:41:46,425 DEBUG [java.sql.PreparedStatement] - <{pstm-100187} Types: []>
2018-01-30 11:41:46,428 DEBUG [java.sql.ResultSet] - <{rset-100188} ResultSet>
2018-01-30 11:41:46,428 DEBUG [java.sql.ResultSet] - <{rset-100188} Header: [rollback_operator_name, rollback_operate_date, operator_name, operate_date, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, real_account, real_charge, charge_type, pay_unit, pay_man, charge_price, charge_area, address, pay_mode, delzero, bill_man, bill_date, b_id, rollback_flag_ora, rollback_flag, rollback_reason, rollback_remark, operator, rollback_operator, rn]>
2018-01-30 11:41:46,429 DEBUG [java.sql.ResultSet] - <{rset-100188} Result: [管理员, 2018-01-30 11:41:46, 管理员, 2018-01-29 19:06:34, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000208, 1, 已冲账, 操作错误, null, 100043, 100043, 1]>
2018-01-30 11:41:46,429 DEBUG [java.sql.ResultSet] - <{rset-100188} Result: [管理员, 2018-01-29 19:06:05, 管理员, 2018-01-29 19:04:35, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000207, 1, 已冲账, 操作错误, null, 100043, 100043, 2]>
2018-01-30 11:41:46,429 DEBUG [java.sql.ResultSet] - <{rset-100188} Result: [管理员, 2018-01-29 18:01:04, 管理员, 2018-01-29 17:58:33, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000206, 1, 已冲账, 操作错误, null, 100043, 100043, 3]>
2018-01-30 11:41:46,430 DEBUG [java.sql.ResultSet] - <{rset-100188} Result: [管理员, 2018-01-29 17:52:20, 管理员, 2018-01-29 17:49:55, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000205, 1, 已冲账, 操作错误, null, 100043, 100043, 4]>
2018-01-30 11:41:46,430 DEBUG [java.sql.ResultSet] - <{rset-100188} Result: [管理员, 2018-01-29 17:49:13, 管理员, 2018-01-29 17:48:45, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000204, 1, 已冲账, 操作错误, null, 100043, 100043, 5]>
2018-01-30 11:41:46,430 DEBUG [java.sql.Connection] - <{conn-100189} Connection>
2018-01-30 11:41:46,431 DEBUG [java.sql.Connection] - <{conn-100189} Preparing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 11:41:46,431 DEBUG [java.sql.PreparedStatement] - <{pstm-100190} Executing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 11:41:46,431 DEBUG [java.sql.PreparedStatement] - <{pstm-100190} Parameters: []>
2018-01-30 11:41:46,431 DEBUG [java.sql.PreparedStatement] - <{pstm-100190} Types: []>
2018-01-30 11:41:46,432 DEBUG [java.sql.ResultSet] - <{rset-100191} ResultSet>
2018-01-30 11:41:46,433 DEBUG [java.sql.ResultSet] - <{rset-100191} Header: [count(*)]>
2018-01-30 11:41:46,433 DEBUG [java.sql.ResultSet] - <{rset-100191} Result: [5]>
2018-01-30 11:41:46,565 DEBUG [java.sql.Connection] - <{conn-100192} Connection>
2018-01-30 11:41:46,566 DEBUG [java.sql.Connection] - <{conn-100192} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 11:41:46,566 DEBUG [java.sql.PreparedStatement] - <{pstm-100193} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 11:41:46,566 DEBUG [java.sql.PreparedStatement] - <{pstm-100193} Parameters: []>
2018-01-30 11:41:46,566 DEBUG [java.sql.PreparedStatement] - <{pstm-100193} Types: []>
2018-01-30 11:41:46,568 DEBUG [java.sql.ResultSet] - <{rset-100194} ResultSet>
2018-01-30 11:41:46,568 DEBUG [java.sql.ResultSet] - <{rset-100194} Header: [house_count, total_account, real_account, now_cash]>
2018-01-30 11:41:46,568 DEBUG [java.sql.ResultSet] - <{rset-100194} Result: [共5, 14001.4, 14001.4, 8400.84]>
2018-01-30 11:41:51,616 DEBUG [java.sql.Connection] - <{conn-100195} Connection>
2018-01-30 11:41:51,617 DEBUG [java.sql.Connection] - <{conn-100195} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 11:41:51,617 DEBUG [java.sql.PreparedStatement] - <{pstm-100196} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 11:41:51,617 DEBUG [java.sql.PreparedStatement] - <{pstm-100196} Parameters: [0101-001-01-01-01]>
2018-01-30 11:41:51,617 DEBUG [java.sql.PreparedStatement] - <{pstm-100196} Types: [java.lang.String]>
2018-01-30 11:41:51,619 DEBUG [java.sql.ResultSet] - <{rset-100197} ResultSet>
2018-01-30 11:41:51,619 DEBUG [java.sql.ResultSet] - <{rset-100197} Header: [username, item_name, charge_month, house_code, item_code, meter_id, not_money, not_money_latefee, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-30 11:41:51,620 DEBUG [java.sql.ResultSet] - <{rset-100197} Result: [null, 供热费, 2017, 0101-001-01-01-01, A, 0, 2800.28, 1.05, 01, 0101, 0101-001, 李宝源, 2800.28, 0, 0, 2800.28, 0, null, A1, 28, null, null, 100.01, 2017-11-15, 2017-03-31, 0, 2017-11-01, 2017-11-01, 1.05, null, 1.05, null, 0, 0, 0, 0, 0, 0, 0, 0, 15132, 1]>
2018-01-30 11:41:51,620 DEBUG [java.sql.Connection] - <{conn-100198} Connection>
2018-01-30 11:41:51,620 DEBUG [java.sql.Connection] - <{conn-100198} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 11:41:51,620 DEBUG [java.sql.PreparedStatement] - <{pstm-100199} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 11:41:51,620 DEBUG [java.sql.PreparedStatement] - <{pstm-100199} Parameters: [0101-001-01-01-01]>
2018-01-30 11:41:51,621 DEBUG [java.sql.PreparedStatement] - <{pstm-100199} Types: [java.lang.String]>
2018-01-30 11:41:51,622 DEBUG [java.sql.ResultSet] - <{rset-100200} ResultSet>
2018-01-30 11:41:51,622 DEBUG [java.sql.ResultSet] - <{rset-100200} Header: [count(*)]>
2018-01-30 11:41:51,622 DEBUG [java.sql.ResultSet] - <{rset-100200} Result: [1]>
2018-01-30 11:41:51,707 DEBUG [java.sql.Connection] - <{conn-100201} Connection>
2018-01-30 11:41:51,707 DEBUG [java.sql.Connection] - <{conn-100201} Preparing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-30 11:41:51,708 DEBUG [java.sql.PreparedStatement] - <{pstm-100202} Executing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-30 11:41:51,708 DEBUG [java.sql.PreparedStatement] - <{pstm-100202} Parameters: [100043, A]>
2018-01-30 11:41:51,708 DEBUG [java.sql.PreparedStatement] - <{pstm-100202} Types: [java.lang.String, java.lang.String]>
2018-01-30 11:41:51,709 DEBUG [java.sql.ResultSet] - <{rset-100203} ResultSet>
2018-01-30 11:41:51,714 DEBUG [java.sql.Connection] - <{conn-100204} Connection>
2018-01-30 11:41:51,718 DEBUG [java.sql.Connection] - <{conn-100204} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 11:41:51,718 DEBUG [java.sql.PreparedStatement] - <{pstm-100205} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 11:41:51,718 DEBUG [java.sql.PreparedStatement] - <{pstm-100205} Parameters: [0101-001-01-01-01]>
2018-01-30 11:41:51,719 DEBUG [java.sql.PreparedStatement] - <{pstm-100205} Types: [java.lang.String]>
2018-01-30 11:41:51,720 DEBUG [java.sql.ResultSet] - <{rset-100206} ResultSet>
2018-01-30 11:41:51,721 DEBUG [java.sql.ResultSet] - <{rset-100206} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-30 11:41:51,721 DEBUG [java.sql.ResultSet] - <{rset-100206} Result: [共1, 2800.28, 0, 0, 2800.28, 2800.28, 1.05, 0, null, null, 100.01, 1.05, null, 1.05, null]>
2018-01-30 11:41:51,757 DEBUG [java.sql.Connection] - <{conn-100207} Connection>
2018-01-30 11:41:51,758 DEBUG [java.sql.Connection] - <{conn-100207} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 11:41:51,758 DEBUG [java.sql.PreparedStatement] - <{pstm-100208} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 11:41:51,758 DEBUG [java.sql.PreparedStatement] - <{pstm-100208} Parameters: [0101-001-01-01-01]>
2018-01-30 11:41:51,758 DEBUG [java.sql.PreparedStatement] - <{pstm-100208} Types: [java.lang.String]>
2018-01-30 11:41:51,759 DEBUG [java.sql.ResultSet] - <{rset-100209} ResultSet>
2018-01-30 11:41:51,759 DEBUG [java.sql.ResultSet] - <{rset-100209} Header: [card_id, cluster_code, contact_man, house_manager, owner_name, address, telephone, stat_id, work_unit, apart_status, user_kind, heat_status]>
2018-01-30 11:41:51,760 DEBUG [java.sql.ResultSet] - <{rset-100209} Result: [null, null, null, null, 李宝源, null, null, null, null, null, null, null]>
2018-01-30 11:43:16,940 DEBUG [java.sql.Connection] - <{conn-100210} Connection>
2018-01-30 11:43:16,940 DEBUG [java.sql.Connection] - <{conn-100210} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 11:43:16,940 DEBUG [java.sql.PreparedStatement] - <{pstm-100211} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 11:43:16,941 DEBUG [java.sql.PreparedStatement] - <{pstm-100211} Parameters: [100043]>
2018-01-30 11:43:16,941 DEBUG [java.sql.PreparedStatement] - <{pstm-100211} Types: [java.lang.String]>
2018-01-30 11:43:16,942 DEBUG [java.sql.ResultSet] - <{rset-100212} ResultSet>
2018-01-30 11:43:16,942 DEBUG [java.sql.ResultSet] - <{rset-100212} Header: [theme]>
2018-01-30 11:43:16,942 DEBUG [java.sql.ResultSet] - <{rset-100212} Result: [default]>
2018-01-30 11:43:18,385 DEBUG [java.sql.Connection] - <{conn-100213} Connection>
2018-01-30 11:43:18,387 DEBUG [java.sql.Connection] - <{conn-100213} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 11:43:18,387 DEBUG [java.sql.PreparedStatement] - <{pstm-100214} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 11:43:18,387 DEBUG [java.sql.PreparedStatement] - <{pstm-100214} Parameters: [0101-001-01-01-01]>
2018-01-30 11:43:18,387 DEBUG [java.sql.PreparedStatement] - <{pstm-100214} Types: [java.lang.String]>
2018-01-30 11:43:18,389 DEBUG [java.sql.ResultSet] - <{rset-100215} ResultSet>
2018-01-30 11:43:18,390 DEBUG [java.sql.ResultSet] - <{rset-100215} Header: [username, item_name, charge_month, house_code, item_code, meter_id, not_money, not_money_latefee, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-30 11:43:18,390 DEBUG [java.sql.ResultSet] - <{rset-100215} Result: [null, 供热费, 2017, 0101-001-01-01-01, A, 0, 2800.28, 1.05, 01, 0101, 0101-001, 李宝源, 2800.28, 0, 0, 2800.28, 0, null, A1, 28, null, null, 100.01, 2017-11-15, 2017-03-31, 0, 2017-11-01, 2017-11-01, 1.05, null, 1.05, null, 0, 0, 0, 0, 0, 0, 0, 0, 15132, 1]>
2018-01-30 11:43:18,390 DEBUG [java.sql.Connection] - <{conn-100216} Connection>
2018-01-30 11:43:18,390 DEBUG [java.sql.Connection] - <{conn-100216} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 11:43:18,391 DEBUG [java.sql.PreparedStatement] - <{pstm-100217} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 11:43:18,391 DEBUG [java.sql.PreparedStatement] - <{pstm-100217} Parameters: [0101-001-01-01-01]>
2018-01-30 11:43:18,391 DEBUG [java.sql.PreparedStatement] - <{pstm-100217} Types: [java.lang.String]>
2018-01-30 11:43:18,392 DEBUG [java.sql.ResultSet] - <{rset-100218} ResultSet>
2018-01-30 11:43:18,392 DEBUG [java.sql.ResultSet] - <{rset-100218} Header: [count(*)]>
2018-01-30 11:43:18,392 DEBUG [java.sql.ResultSet] - <{rset-100218} Result: [1]>
2018-01-30 11:43:18,464 DEBUG [java.sql.Connection] - <{conn-100219} Connection>
2018-01-30 11:43:18,464 DEBUG [java.sql.Connection] - <{conn-100219} Preparing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-30 11:43:18,465 DEBUG [java.sql.PreparedStatement] - <{pstm-100220} Executing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-30 11:43:18,465 DEBUG [java.sql.PreparedStatement] - <{pstm-100220} Parameters: [100043, A]>
2018-01-30 11:43:18,465 DEBUG [java.sql.PreparedStatement] - <{pstm-100220} Types: [java.lang.String, java.lang.String]>
2018-01-30 11:43:18,467 DEBUG [java.sql.ResultSet] - <{rset-100221} ResultSet>
2018-01-30 11:43:18,469 DEBUG [java.sql.Connection] - <{conn-100222} Connection>
2018-01-30 11:43:18,469 DEBUG [java.sql.Connection] - <{conn-100222} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 11:43:18,470 DEBUG [java.sql.PreparedStatement] - <{pstm-100223} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 11:43:18,470 DEBUG [java.sql.PreparedStatement] - <{pstm-100223} Parameters: [0101-001-01-01-01]>
2018-01-30 11:43:18,470 DEBUG [java.sql.PreparedStatement] - <{pstm-100223} Types: [java.lang.String]>
2018-01-30 11:43:18,471 DEBUG [java.sql.ResultSet] - <{rset-100224} ResultSet>
2018-01-30 11:43:18,472 DEBUG [java.sql.ResultSet] - <{rset-100224} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-30 11:43:18,472 DEBUG [java.sql.ResultSet] - <{rset-100224} Result: [共1, 2800.28, 0, 0, 2800.28, 2800.28, 1.05, 0, null, null, 100.01, 1.05, null, 1.05, null]>
2018-01-30 11:43:18,520 DEBUG [java.sql.Connection] - <{conn-100225} Connection>
2018-01-30 11:43:18,520 DEBUG [java.sql.Connection] - <{conn-100225} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 11:43:18,520 DEBUG [java.sql.PreparedStatement] - <{pstm-100226} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 11:43:18,520 DEBUG [java.sql.PreparedStatement] - <{pstm-100226} Parameters: [0101-001-01-01-01]>
2018-01-30 11:43:18,520 DEBUG [java.sql.PreparedStatement] - <{pstm-100226} Types: [java.lang.String]>
2018-01-30 11:43:18,522 DEBUG [java.sql.ResultSet] - <{rset-100227} ResultSet>
2018-01-30 11:43:18,522 DEBUG [java.sql.ResultSet] - <{rset-100227} Header: [card_id, cluster_code, contact_man, house_manager, owner_name, address, telephone, stat_id, work_unit, apart_status, user_kind, heat_status]>
2018-01-30 11:43:18,522 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [null, null, null, null, 李宝源, null, null, null, null, null, null, null]>
2018-01-30 12:13:31,967 DEBUG [java.sql.Connection] - <{conn-100228} Connection>
2018-01-30 12:13:31,967 DEBUG [java.sql.Connection] - <{conn-100228} Preparing Statement:    DELETE      FROM eahttpsession   WHERE                sessionid = ?                >
2018-01-30 12:13:31,968 DEBUG [java.sql.PreparedStatement] - <{pstm-100229} Executing Statement:    DELETE      FROM eahttpsession   WHERE                sessionid = ?                >
2018-01-30 12:13:31,968 DEBUG [java.sql.PreparedStatement] - <{pstm-100229} Parameters: [edicbjt7fmim]>
2018-01-30 12:13:31,968 DEBUG [java.sql.PreparedStatement] - <{pstm-100229} Types: [java.lang.String]>
2018-01-30 13:13:23,390 DEBUG [java.sql.Connection] - <{conn-100230} Connection>
2018-01-30 13:13:23,395 DEBUG [java.sql.Connection] - <{conn-100230} Preparing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-01-30 13:13:23,395 DEBUG [java.sql.PreparedStatement] - <{pstm-100231} Executing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-01-30 13:13:23,395 DEBUG [java.sql.PreparedStatement] - <{pstm-100231} Parameters: [0, admin]>
2018-01-30 13:13:23,395 DEBUG [java.sql.PreparedStatement] - <{pstm-100231} Types: [java.lang.String, java.lang.String]>
2018-01-30 13:13:23,397 DEBUG [java.sql.ResultSet] - <{rset-100232} ResultSet>
2018-01-30 13:13:23,397 DEBUG [java.sql.ResultSet] - <{rset-100232} Header: [userid, username, account, password, sex, deptid, theme, customid, customname]>
2018-01-30 13:13:23,397 DEBUG [java.sql.ResultSet] - <{rset-100232} Result: [100043, 管理员, admin, RaFutWeh0ww=, 0, 001, default, 01, 供热]>
2018-01-30 13:13:23,398 DEBUG [java.sql.Connection] - <{conn-100233} Connection>
2018-01-30 13:13:23,398 DEBUG [java.sql.Connection] - <{conn-100233} Preparing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-01-30 13:13:23,398 DEBUG [java.sql.PreparedStatement] - <{pstm-100234} Executing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-01-30 13:13:23,398 DEBUG [java.sql.PreparedStatement] - <{pstm-100234} Parameters: [n95mzyork9vv]>
2018-01-30 13:13:23,398 DEBUG [java.sql.PreparedStatement] - <{pstm-100234} Types: [java.lang.String]>
2018-01-30 13:13:23,399 DEBUG [java.sql.ResultSet] - <{rset-100235} ResultSet>
2018-01-30 13:13:23,400 DEBUG [java.sql.Connection] - <{conn-100236} Connection>
2018-01-30 13:13:23,400 DEBUG [java.sql.Connection] - <{conn-100236} Preparing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-01-30 13:13:23,401 DEBUG [java.sql.PreparedStatement] - <{pstm-100237} Executing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-01-30 13:13:23,401 DEBUG [java.sql.PreparedStatement] - <{pstm-100237} Parameters: [n95mzyork9vv, 管理员, admin, 2018-01-30 13:13:23, 127.0.0.1, 100043, FIREFOX/57.]>
2018-01-30 13:13:23,401 DEBUG [java.sql.PreparedStatement] - <{pstm-100237} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-30 13:13:23,458 DEBUG [java.sql.Connection] - <{conn-100238} Connection>
2018-01-30 13:13:23,459 DEBUG [java.sql.Connection] - <{conn-100238} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 13:13:23,461 DEBUG [java.sql.PreparedStatement] - <{pstm-100239} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 13:13:23,461 DEBUG [java.sql.PreparedStatement] - <{pstm-100239} Parameters: [100043]>
2018-01-30 13:13:23,461 DEBUG [java.sql.PreparedStatement] - <{pstm-100239} Types: [java.lang.String]>
2018-01-30 13:13:23,463 DEBUG [java.sql.ResultSet] - <{rset-100240} ResultSet>
2018-01-30 13:13:23,464 DEBUG [java.sql.ResultSet] - <{rset-100240} Header: [theme]>
2018-01-30 13:13:23,464 DEBUG [java.sql.ResultSet] - <{rset-100240} Result: [default]>
2018-01-30 13:13:23,623 DEBUG [java.sql.Connection] - <{conn-100241} Connection>
2018-01-30 13:13:23,623 DEBUG [java.sql.Connection] - <{conn-100241} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 13:13:23,623 DEBUG [java.sql.PreparedStatement] - <{pstm-100242} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 13:13:23,623 DEBUG [java.sql.PreparedStatement] - <{pstm-100242} Parameters: [100043]>
2018-01-30 13:13:23,623 DEBUG [java.sql.PreparedStatement] - <{pstm-100242} Types: [java.lang.String]>
2018-01-30 13:13:23,626 DEBUG [java.sql.ResultSet] - <{rset-100243} ResultSet>
2018-01-30 13:13:23,626 DEBUG [java.sql.ResultSet] - <{rset-100243} Header: [menuid, menuname, iconcls]>
2018-01-30 13:13:23,626 DEBUG [java.sql.ResultSet] - <{rset-100243} Result: [0103, 基础信息, null]>
2018-01-30 13:13:23,626 DEBUG [java.sql.ResultSet] - <{rset-100243} Result: [0104, 收费管理, null]>
2018-01-30 13:13:23,626 DEBUG [java.sql.ResultSet] - <{rset-100243} Result: [0105, 统计分析, null]>
2018-01-30 13:13:23,626 DEBUG [java.sql.ResultSet] - <{rset-100243} Result: [0101, 系统管理, null]>
2018-01-30 13:13:23,626 DEBUG [java.sql.Connection] - <{conn-100244} Connection>
2018-01-30 13:13:23,627 DEBUG [java.sql.Connection] - <{conn-100244} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-01-30 13:13:23,627 DEBUG [java.sql.PreparedStatement] - <{pstm-100245} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-01-30 13:13:23,627 DEBUG [java.sql.PreparedStatement] - <{pstm-100245} Parameters: [100043]>
2018-01-30 13:13:23,627 DEBUG [java.sql.PreparedStatement] - <{pstm-100245} Types: [java.lang.String]>
2018-01-30 13:13:23,630 DEBUG [java.sql.ResultSet] - <{rset-100246} ResultSet>
2018-01-30 13:13:23,632 DEBUG [java.sql.Connection] - <{conn-100247} Connection>
2018-01-30 13:13:23,632 DEBUG [java.sql.Connection] - <{conn-100247} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 13:13:23,632 DEBUG [java.sql.PreparedStatement] - <{pstm-100248} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 13:13:23,632 DEBUG [java.sql.PreparedStatement] - <{pstm-100248} Parameters: [001]>
2018-01-30 13:13:23,632 DEBUG [java.sql.PreparedStatement] - <{pstm-100248} Types: [java.lang.String]>
2018-01-30 13:13:23,633 DEBUG [java.sql.ResultSet] - <{rset-100249} ResultSet>
2018-01-30 13:13:23,634 DEBUG [java.sql.ResultSet] - <{rset-100249} Header: [deptid, deptname]>
2018-01-30 13:13:23,634 DEBUG [java.sql.ResultSet] - <{rset-100249} Result: [001, XX供热公司]>
2018-01-30 13:13:23,634 DEBUG [java.sql.Connection] - <{conn-100250} Connection>
2018-01-30 13:13:23,634 DEBUG [java.sql.Connection] - <{conn-100250} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 13:13:23,634 DEBUG [java.sql.PreparedStatement] - <{pstm-100251} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 13:13:23,634 DEBUG [java.sql.PreparedStatement] - <{pstm-100251} Parameters: [001]>
2018-01-30 13:13:23,635 DEBUG [java.sql.PreparedStatement] - <{pstm-100251} Types: [java.lang.String]>
2018-01-30 13:13:23,636 DEBUG [java.sql.ResultSet] - <{rset-100252} ResultSet>
2018-01-30 13:13:23,636 DEBUG [java.sql.ResultSet] - <{rset-100252} Header: [deptid, deptname]>
2018-01-30 13:13:23,636 DEBUG [java.sql.ResultSet] - <{rset-100252} Result: [001, XX供热公司]>
2018-01-30 13:13:23,636 DEBUG [java.sql.Connection] - <{conn-100253} Connection>
2018-01-30 13:13:23,637 DEBUG [java.sql.Connection] - <{conn-100253} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 13:13:23,637 DEBUG [java.sql.PreparedStatement] - <{pstm-100254} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 13:13:23,637 DEBUG [java.sql.PreparedStatement] - <{pstm-100254} Parameters: [100043]>
2018-01-30 13:13:23,637 DEBUG [java.sql.PreparedStatement] - <{pstm-100254} Types: [java.lang.String]>
2018-01-30 13:13:23,638 DEBUG [java.sql.ResultSet] - <{rset-100255} ResultSet>
2018-01-30 13:13:23,639 DEBUG [java.sql.ResultSet] - <{rset-100255} Header: [theme]>
2018-01-30 13:13:23,639 DEBUG [java.sql.ResultSet] - <{rset-100255} Result: [default]>
2018-01-30 13:13:23,650 DEBUG [java.sql.Connection] - <{conn-100256} Connection>
2018-01-30 13:13:23,651 DEBUG [java.sql.Connection] - <{conn-100256} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 13:13:23,651 DEBUG [java.sql.PreparedStatement] - <{pstm-100257} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 13:13:23,651 DEBUG [java.sql.PreparedStatement] - <{pstm-100257} Parameters: [100043]>
2018-01-30 13:13:23,651 DEBUG [java.sql.PreparedStatement] - <{pstm-100257} Types: [java.lang.String]>
2018-01-30 13:13:23,654 DEBUG [java.sql.ResultSet] - <{rset-100258} ResultSet>
2018-01-30 13:13:23,654 DEBUG [java.sql.ResultSet] - <{rset-100258} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 13:13:23,654 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [01030404, 新建换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,654 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [01030403, 删除热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,654 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [01030406, 删除换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,654 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [010305, 入网管理, null, 0103, module/iw.ered?reqCode=intoWebInit, 0, false, false, tab_blank.png]>
2018-01-30 13:13:23,655 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [01030405, 修改换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,655 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [01030401, 新建热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,655 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [01030201, 选择导入文件, null, 010302, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,655 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [01030312, 删除面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,655 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [0103, 基础信息, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 13:13:23,656 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [01030311, 修改面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,656 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [01030301, 新建小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,656 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [01030310, 添加面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,656 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [010304, 热源站所管理, null, 0103, module/sr.ered?reqCode=sourceInit, 0, false, false, tab_blank.png]>
2018-01-30 13:13:23,657 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [01030313, 删除面积1, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,657 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [01030202, 导入模板下载, null, 010302, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,657 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [01030501, 新增入网, null, 010305, null, 1, false, true, tab_blank.png]>
2018-01-30 13:13:23,657 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [01030402, 修改热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,657 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [010303, 基础信息维护, null, 0103, module/fc.ered?reqCode=communityInit, 0, false, false, tab_blank.png]>
2018-01-30 13:13:23,657 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [01030502, 修改入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,658 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [01030302, 修改小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,658 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [010302, 基础数据导入, null, 0103, module/importHouse.ered?reqCode=importInit, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,658 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [01030303, 删除小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,659 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [01030503, 删除入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,659 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [01030304, 新建大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,659 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [01030305, 修改大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,659 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [01030306, 删除大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,659 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [01030307, 新建用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,659 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [01030308, 修改用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,659 DEBUG [java.sql.ResultSet] - <{rset-100258} Result: [01030309, 删除用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,659 DEBUG [java.sql.Connection] - <{conn-100259} Connection>
2018-01-30 13:13:23,660 DEBUG [java.sql.Connection] - <{conn-100259} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 13:13:23,661 DEBUG [java.sql.PreparedStatement] - <{pstm-100260} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 13:13:23,661 DEBUG [java.sql.PreparedStatement] - <{pstm-100260} Parameters: [100043]>
2018-01-30 13:13:23,661 DEBUG [java.sql.PreparedStatement] - <{pstm-100260} Types: [java.lang.String]>
2018-01-30 13:13:23,663 DEBUG [java.sql.ResultSet] - <{rset-100261} ResultSet>
2018-01-30 13:13:23,664 DEBUG [java.sql.Connection] - <{conn-100262} Connection>
2018-01-30 13:13:23,664 DEBUG [java.sql.Connection] - <{conn-100262} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 13:13:23,664 DEBUG [java.sql.PreparedStatement] - <{pstm-100263} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 13:13:23,664 DEBUG [java.sql.PreparedStatement] - <{pstm-100263} Parameters: [01]>
2018-01-30 13:13:23,664 DEBUG [java.sql.PreparedStatement] - <{pstm-100263} Types: [java.lang.String]>
2018-01-30 13:13:23,666 DEBUG [java.sql.ResultSet] - <{rset-100264} ResultSet>
2018-01-30 13:13:23,666 DEBUG [java.sql.ResultSet] - <{rset-100264} Header: [menuname]>
2018-01-30 13:13:23,666 DEBUG [java.sql.ResultSet] - <{rset-100264} Result: [供热收费管理信息系统]>
2018-01-30 13:13:23,679 DEBUG [java.sql.Connection] - <{conn-100265} Connection>
2018-01-30 13:13:23,679 DEBUG [java.sql.Connection] - <{conn-100265} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 13:13:23,682 DEBUG [java.sql.PreparedStatement] - <{pstm-100266} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 13:13:23,682 DEBUG [java.sql.PreparedStatement] - <{pstm-100266} Parameters: [100043]>
2018-01-30 13:13:23,682 DEBUG [java.sql.PreparedStatement] - <{pstm-100266} Types: [java.lang.String]>
2018-01-30 13:13:23,685 DEBUG [java.sql.ResultSet] - <{rset-100267} ResultSet>
2018-01-30 13:13:23,685 DEBUG [java.sql.ResultSet] - <{rset-100267} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 13:13:23,685 DEBUG [java.sql.ResultSet] - <{rset-100267} Result: [010402, 收费管理, null, 0104, module/chg.ered?reqCode=chargeInit, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,686 DEBUG [java.sql.ResultSet] - <{rset-100267} Result: [01040503, 作废票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,686 DEBUG [java.sql.ResultSet] - <{rset-100267} Result: [01040501, 票据入库, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,686 DEBUG [java.sql.ResultSet] - <{rset-100267} Result: [01040401, 冲账, null, 010404, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,686 DEBUG [java.sql.ResultSet] - <{rset-100267} Result: [01040101, 生成应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,686 DEBUG [java.sql.ResultSet] - <{rset-100267} Result: [01040505, 领用票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,686 DEBUG [java.sql.ResultSet] - <{rset-100267} Result: [01040302, 删除减免, null, 010403, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,686 DEBUG [java.sql.ResultSet] - <{rset-100267} Result: [01040301, 减免应收, null, 010403, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,686 DEBUG [java.sql.ResultSet] - <{rset-100267} Result: [01040502, 删除票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,687 DEBUG [java.sql.ResultSet] - <{rset-100267} Result: [01040201, 收费, null, 010402, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,688 DEBUG [java.sql.ResultSet] - <{rset-100267} Result: [01040102, 删除应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,688 DEBUG [java.sql.ResultSet] - <{rset-100267} Result: [01040504, 返还票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,688 DEBUG [java.sql.ResultSet] - <{rset-100267} Result: [010401, 生成应收, null, 0104, module/crp.ered?reqCode=creatPlanInit, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,688 DEBUG [java.sql.ResultSet] - <{rset-100267} Result: [0104, 收费管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 13:13:23,688 DEBUG [java.sql.ResultSet] - <{rset-100267} Result: [010403, 减免管理, null, 0104, module/mns.ered?reqCode=minusInit, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,688 DEBUG [java.sql.ResultSet] - <{rset-100267} Result: [010404, 冲账管理, null, 0104, module/rlb.ered?reqCode=rollbackInit, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,689 DEBUG [java.sql.ResultSet] - <{rset-100267} Result: [010405, 票据管理, null, 0104, module/inv.ered?reqCode=invoiceInit, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,689 DEBUG [java.sql.Connection] - <{conn-100268} Connection>
2018-01-30 13:13:23,689 DEBUG [java.sql.Connection] - <{conn-100268} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 13:13:23,689 DEBUG [java.sql.PreparedStatement] - <{pstm-100269} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 13:13:23,690 DEBUG [java.sql.PreparedStatement] - <{pstm-100269} Parameters: [100043]>
2018-01-30 13:13:23,690 DEBUG [java.sql.PreparedStatement] - <{pstm-100269} Types: [java.lang.String]>
2018-01-30 13:13:23,691 DEBUG [java.sql.ResultSet] - <{rset-100270} ResultSet>
2018-01-30 13:13:23,692 DEBUG [java.sql.Connection] - <{conn-100271} Connection>
2018-01-30 13:13:23,692 DEBUG [java.sql.Connection] - <{conn-100271} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 13:13:23,692 DEBUG [java.sql.PreparedStatement] - <{pstm-100272} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 13:13:23,692 DEBUG [java.sql.PreparedStatement] - <{pstm-100272} Parameters: [01]>
2018-01-30 13:13:23,692 DEBUG [java.sql.PreparedStatement] - <{pstm-100272} Types: [java.lang.String]>
2018-01-30 13:13:23,693 DEBUG [java.sql.ResultSet] - <{rset-100273} ResultSet>
2018-01-30 13:13:23,693 DEBUG [java.sql.ResultSet] - <{rset-100273} Header: [menuname]>
2018-01-30 13:13:23,694 DEBUG [java.sql.ResultSet] - <{rset-100273} Result: [供热收费管理信息系统]>
2018-01-30 13:13:23,705 DEBUG [java.sql.Connection] - <{conn-100274} Connection>
2018-01-30 13:13:23,705 DEBUG [java.sql.Connection] - <{conn-100274} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 13:13:23,706 DEBUG [java.sql.PreparedStatement] - <{pstm-100275} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 13:13:23,706 DEBUG [java.sql.PreparedStatement] - <{pstm-100275} Parameters: [100043]>
2018-01-30 13:13:23,706 DEBUG [java.sql.PreparedStatement] - <{pstm-100275} Types: [java.lang.String]>
2018-01-30 13:13:23,708 DEBUG [java.sql.ResultSet] - <{rset-100276} ResultSet>
2018-01-30 13:13:23,709 DEBUG [java.sql.ResultSet] - <{rset-100276} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 13:13:23,709 DEBUG [java.sql.ResultSet] - <{rset-100276} Result: [010502, 收费报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-01-30 13:13:23,709 DEBUG [java.sql.ResultSet] - <{rset-100276} Result: [010501, 基础报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-01-30 13:13:23,709 DEBUG [java.sql.ResultSet] - <{rset-100276} Result: [01050202, 欠费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050201, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,709 DEBUG [java.sql.ResultSet] - <{rset-100276} Result: [01050101, 用户情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=f01050101, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,709 DEBUG [java.sql.ResultSet] - <{rset-100276} Result: [01050102, 入网情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=w01050301, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,709 DEBUG [java.sql.ResultSet] - <{rset-100276} Result: [01050203, 收费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050202, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,710 DEBUG [java.sql.ResultSet] - <{rset-100276} Result: [01050201, 收费情况表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050401, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,710 DEBUG [java.sql.ResultSet] - <{rset-100276} Result: [0105, 统计分析, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 13:13:23,710 DEBUG [java.sql.ResultSet] - <{rset-100276} Result: [01050204, 减免明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050204, 1, false, false, tab_blank.png]>
2018-01-30 13:13:23,710 DEBUG [java.sql.Connection] - <{conn-100277} Connection>
2018-01-30 13:13:23,710 DEBUG [java.sql.Connection] - <{conn-100277} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 13:13:23,711 DEBUG [java.sql.PreparedStatement] - <{pstm-100278} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 13:13:23,711 DEBUG [java.sql.PreparedStatement] - <{pstm-100278} Parameters: [100043]>
2018-01-30 13:13:23,711 DEBUG [java.sql.PreparedStatement] - <{pstm-100278} Types: [java.lang.String]>
2018-01-30 13:13:23,713 DEBUG [java.sql.ResultSet] - <{rset-100279} ResultSet>
2018-01-30 13:13:23,713 DEBUG [java.sql.Connection] - <{conn-100280} Connection>
2018-01-30 13:13:23,714 DEBUG [java.sql.Connection] - <{conn-100280} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 13:13:23,714 DEBUG [java.sql.PreparedStatement] - <{pstm-100281} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 13:13:23,714 DEBUG [java.sql.PreparedStatement] - <{pstm-100281} Parameters: [01]>
2018-01-30 13:13:23,714 DEBUG [java.sql.PreparedStatement] - <{pstm-100281} Types: [java.lang.String]>
2018-01-30 13:13:23,715 DEBUG [java.sql.ResultSet] - <{rset-100282} ResultSet>
2018-01-30 13:13:23,715 DEBUG [java.sql.ResultSet] - <{rset-100282} Header: [menuname]>
2018-01-30 13:13:23,716 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [供热收费管理信息系统]>
2018-01-30 13:13:23,730 DEBUG [java.sql.Connection] - <{conn-100283} Connection>
2018-01-30 13:13:23,731 DEBUG [java.sql.Connection] - <{conn-100283} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 13:13:23,732 DEBUG [java.sql.PreparedStatement] - <{pstm-100284} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 13:13:23,732 DEBUG [java.sql.PreparedStatement] - <{pstm-100284} Parameters: [100043]>
2018-01-30 13:13:23,732 DEBUG [java.sql.PreparedStatement] - <{pstm-100284} Types: [java.lang.String]>
2018-01-30 13:13:23,735 DEBUG [java.sql.ResultSet] - <{rset-100285} ResultSet>
2018-01-30 13:13:23,735 DEBUG [java.sql.ResultSet] - <{rset-100285} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 13:13:23,735 DEBUG [java.sql.ResultSet] - <{rset-100285} Result: [01010305, 优惠设置, server_connectIcon, 010103, module/dic.ered?reqCode=discountInit, 1, false, false, server_connect.png]>
2018-01-30 13:13:23,735 DEBUG [java.sql.ResultSet] - <{rset-100285} Result: [01010304, 收费标准, server_connectIcon, 010103, module/std.ered?reqCode=standardInit, 1, false, false, server_connect.png]>
2018-01-30 13:13:23,735 DEBUG [java.sql.ResultSet] - <{rset-100285} Result: [010102, 权限管理, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 13:13:23,736 DEBUG [java.sql.ResultSet] - <{rset-100285} Result: [01010201, 组织机构管理, chart_organisationIcon, 010102, organization.ered?reqCode=departmentInit, 1, false, false, chart_organisation.png]>
2018-01-30 13:13:23,736 DEBUG [java.sql.ResultSet] - <{rset-100285} Result: [01010301, 字典维护, application_view_listIcon, 010103, resource.ered?reqCode=codeTableInit, 1, false, false, application_view_list.png]>
2018-01-30 13:13:23,736 DEBUG [java.sql.ResultSet] - <{rset-100285} Result: [01010403, Requst请求跟踪, server_connectIcon, 010104, eventTrack.ered?reqCode=init, 1, false, false, server_connect.png]>
2018-01-30 13:13:23,736 DEBUG [java.sql.ResultSet] - <{rset-100285} Result: [01010401, Session会话监控, user_commentIcon, 010104, sessionMonitor.ered?reqCode=init, 1, false, false, user_comment.png]>
2018-01-30 13:13:23,736 DEBUG [java.sql.ResultSet] - <{rset-100285} Result: [01010204, 角色管理与授权, award_star_silver_3Icon, 010102, role.ered?reqCode=roleInit, 1, false, false, award_star_silver_3.png]>
2018-01-30 13:13:23,736 DEBUG [java.sql.ResultSet] - <{rset-100285} Result: [01010303, 全局参数表维护, configIcon, 010103, param.ered?reqCode=init, 1, false, false, config.png]>
2018-01-30 13:13:23,737 DEBUG [java.sql.ResultSet] - <{rset-100285} Result: [010103, 基础数据维护, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 13:13:23,737 DEBUG [java.sql.ResultSet] - <{rset-100285} Result: [010104, 运行监控, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 13:13:23,737 DEBUG [java.sql.ResultSet] - <{rset-100285} Result: [01010202, 人员管理与授权, group_linkIcon, 010102, user.ered?reqCode=userInit, 1, false, false, group_link.png]>
2018-01-30 13:13:23,738 DEBUG [java.sql.ResultSet] - <{rset-100285} Result: [01010405, JDBC执行监控, database_refreshIcon, 010104, jdbcMonitor.ered?reqCode=jdbcInit, 1, false, false, database_refresh.png]>
2018-01-30 13:13:23,738 DEBUG [java.sql.ResultSet] - <{rset-100285} Result: [01010406, Service监控, pluginIcon, 010104, beanMonitor.ered?reqCode=init, 1, false, false, plugin.png]>
2018-01-30 13:13:23,738 DEBUG [java.sql.ResultSet] - <{rset-100285} Result: [01010205, 菜单资源管理, layout_contentIcon, 010102, resource.ered?reqCode=menuResourceInit, 1, false, false, layout_content.png]>
2018-01-30 13:13:23,738 DEBUG [java.sql.ResultSet] - <{rset-100285} Result: [0101, 系统管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 13:13:23,738 DEBUG [java.sql.Connection] - <{conn-100286} Connection>
2018-01-30 13:13:23,739 DEBUG [java.sql.Connection] - <{conn-100286} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 13:13:23,739 DEBUG [java.sql.PreparedStatement] - <{pstm-100287} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 13:13:23,739 DEBUG [java.sql.PreparedStatement] - <{pstm-100287} Parameters: [100043]>
2018-01-30 13:13:23,739 DEBUG [java.sql.PreparedStatement] - <{pstm-100287} Types: [java.lang.String]>
2018-01-30 13:13:23,740 DEBUG [java.sql.ResultSet] - <{rset-100288} ResultSet>
2018-01-30 13:13:23,741 DEBUG [java.sql.Connection] - <{conn-100289} Connection>
2018-01-30 13:13:23,741 DEBUG [java.sql.Connection] - <{conn-100289} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 13:13:23,741 DEBUG [java.sql.PreparedStatement] - <{pstm-100290} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 13:13:23,741 DEBUG [java.sql.PreparedStatement] - <{pstm-100290} Parameters: [01]>
2018-01-30 13:13:23,741 DEBUG [java.sql.PreparedStatement] - <{pstm-100290} Types: [java.lang.String]>
2018-01-30 13:13:23,742 DEBUG [java.sql.ResultSet] - <{rset-100291} ResultSet>
2018-01-30 13:13:23,742 DEBUG [java.sql.ResultSet] - <{rset-100291} Header: [menuname]>
2018-01-30 13:13:23,742 DEBUG [java.sql.ResultSet] - <{rset-100291} Result: [供热收费管理信息系统]>
2018-01-30 13:13:24,268 DEBUG [java.sql.Connection] - <{conn-100292} Connection>
2018-01-30 13:13:24,268 DEBUG [java.sql.Connection] - <{conn-100292} Preparing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-01-30 13:13:24,269 DEBUG [java.sql.PreparedStatement] - <{pstm-100293} Executing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-01-30 13:13:24,269 DEBUG [java.sql.PreparedStatement] - <{pstm-100293} Parameters: []>
2018-01-30 13:13:24,269 DEBUG [java.sql.PreparedStatement] - <{pstm-100293} Types: []>
2018-01-30 13:13:24,270 DEBUG [java.sql.ResultSet] - <{rset-100294} ResultSet>
2018-01-30 13:13:24,271 DEBUG [java.sql.ResultSet] - <{rset-100294} Header: [id, text, child_count]>
2018-01-30 13:13:24,271 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0101, 0101 经贸局家属楼 (3), 3]>
2018-01-30 13:13:24,271 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0102, 0102 法院家属楼 (2), 2]>
2018-01-30 13:13:24,271 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0103, 0103 长治县电视台 (1), 1]>
2018-01-30 13:13:24,271 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0104, 0104 广播北二巷（一至三排） (1), 1]>
2018-01-30 13:13:24,271 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0105, 0105 广播南二巷（公安家属西五排） (1), 1]>
2018-01-30 13:13:24,272 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0106, 0106 广播北四巷第一组（南6户） (1), 1]>
2018-01-30 13:13:24,272 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0107, 0107 广播北四巷第一组（北19户） (1), 1]>
2018-01-30 13:13:24,272 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0108, 0108 广播北四巷第二组（16户） (1), 1]>
2018-01-30 13:13:24,272 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0109, 0109 工业巷北一排-北八排 (1), 1]>
2018-01-30 13:13:24,273 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0110, 0110 法院家属院17户 (1), 1]>
2018-01-30 13:13:24,273 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0111, 0111 公安西家属区60户 (1), 1]>
2018-01-30 13:13:24,273 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0112, 0112 建筑工程公司 (2), 2]>
2018-01-30 13:13:24,273 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0113, 0113 工会家属楼 (1), 1]>
2018-01-30 13:13:24,273 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0114, 0114 工会二层独院5户 (1), 1]>
2018-01-30 13:13:24,273 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0115, 0115 政府平房南一排 (2), 2]>
2018-01-30 13:13:24,273 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0116, 0116 政府平房南二排6户 (1), 1]>
2018-01-30 13:13:24,273 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0117, 0117 政府平房南三排5户 (1), 1]>
2018-01-30 13:13:24,274 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0118, 0118 政府平房南四排4户 (1), 1]>
2018-01-30 13:13:24,274 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0119, 0119 政府平房南五排5户（北二排） (1), 1]>
2018-01-30 13:13:24,274 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0120, 0120 政府平房南六排5户（北一排） (1), 1]>
2018-01-30 13:13:24,275 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0121, 0121 政府平房后六户 (1), 1]>
2018-01-30 13:13:24,275 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0122, 0122 政府第三家属楼32户 (1), 1]>
2018-01-30 13:13:24,275 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0123, 0123 政府黄楼家属区 (1), 1]>
2018-01-30 13:13:24,275 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0124, 0124 五交化家属楼 (2), 2]>
2018-01-30 13:13:24,275 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0125, 0125 通达供销公司综合楼 (1), 1]>
2018-01-30 13:13:24,275 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0126, 0126 供销联社家属楼 (3), 3]>
2018-01-30 13:13:24,275 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [0127, 0127 二轻局底商 (1), 1]>
2018-01-30 13:13:24,275 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [2001, 2001 南董村西南一巷 (1), 1]>
2018-01-30 13:13:24,276 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [2002, 2002 南董村正街路北 (1), 1]>
2018-01-30 13:13:24,277 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [2003, 2003 南董村正街路南 (1), 1]>
2018-01-30 13:13:24,277 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [2004, 2004 南董村西散户 (1), 1]>
2018-01-30 13:13:24,277 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [2005, 2005 伍龙小区 (3), 3]>
2018-01-30 13:13:24,438 DEBUG [java.sql.Connection] - <{conn-100295} Connection>
2018-01-30 13:13:24,438 DEBUG [java.sql.Connection] - <{conn-100295} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 13:13:24,438 DEBUG [java.sql.PreparedStatement] - <{pstm-100296} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 13:13:24,439 DEBUG [java.sql.PreparedStatement] - <{pstm-100296} Parameters: [100043]>
2018-01-30 13:13:24,439 DEBUG [java.sql.PreparedStatement] - <{pstm-100296} Types: [java.lang.String]>
2018-01-30 13:13:24,440 DEBUG [java.sql.ResultSet] - <{rset-100297} ResultSet>
2018-01-30 13:13:24,440 DEBUG [java.sql.ResultSet] - <{rset-100297} Header: [theme]>
2018-01-30 13:13:24,440 DEBUG [java.sql.ResultSet] - <{rset-100297} Result: [default]>
2018-01-30 13:24:00,936 DEBUG [java.sql.Connection] - <{conn-100298} Connection>
2018-01-30 13:24:00,937 DEBUG [java.sql.Connection] - <{conn-100298} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 13:24:00,937 DEBUG [java.sql.PreparedStatement] - <{pstm-100299} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 13:24:00,937 DEBUG [java.sql.PreparedStatement] - <{pstm-100299} Parameters: [100043]>
2018-01-30 13:24:00,937 DEBUG [java.sql.PreparedStatement] - <{pstm-100299} Types: [java.lang.String]>
2018-01-30 13:24:00,938 DEBUG [java.sql.ResultSet] - <{rset-100300} ResultSet>
2018-01-30 13:24:00,939 DEBUG [java.sql.ResultSet] - <{rset-100300} Header: [theme]>
2018-01-30 13:24:00,939 DEBUG [java.sql.ResultSet] - <{rset-100300} Result: [default]>
2018-01-30 13:24:01,277 DEBUG [java.sql.Connection] - <{conn-100301} Connection>
2018-01-30 13:24:01,277 DEBUG [java.sql.Connection] - <{conn-100301} Preparing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-30 13:24:01,277 DEBUG [java.sql.PreparedStatement] - <{pstm-100302} Executing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-30 13:24:01,277 DEBUG [java.sql.PreparedStatement] - <{pstm-100302} Parameters: []>
2018-01-30 13:24:01,277 DEBUG [java.sql.PreparedStatement] - <{pstm-100302} Types: []>
2018-01-30 13:24:01,279 DEBUG [java.sql.ResultSet] - <{rset-100303} ResultSet>
2018-01-30 13:24:01,279 DEBUG [java.sql.ResultSet] - <{rset-100303} Header: [value, text]>
2018-01-30 13:24:01,279 DEBUG [java.sql.ResultSet] - <{rset-100303} Result: [A, 供热费]>
2018-01-30 13:24:01,279 DEBUG [java.sql.ResultSet] - <{rset-100303} Result: [B, 入网费]>
2018-01-30 13:44:06,486 DEBUG [java.sql.Connection] - <{conn-100304} Connection>
2018-01-30 13:44:06,487 DEBUG [java.sql.Connection] - <{conn-100304} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 13:44:06,487 DEBUG [java.sql.PreparedStatement] - <{pstm-100305} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 13:44:06,487 DEBUG [java.sql.PreparedStatement] - <{pstm-100305} Parameters: [100043]>
2018-01-30 13:44:06,488 DEBUG [java.sql.PreparedStatement] - <{pstm-100305} Types: [java.lang.String]>
2018-01-30 13:44:06,489 DEBUG [java.sql.ResultSet] - <{rset-100306} ResultSet>
2018-01-30 13:44:06,489 DEBUG [java.sql.ResultSet] - <{rset-100306} Header: [theme]>
2018-01-30 13:44:06,492 DEBUG [java.sql.ResultSet] - <{rset-100306} Result: [default]>
2018-01-30 13:44:06,966 DEBUG [java.sql.Connection] - <{conn-100307} Connection>
2018-01-30 13:44:06,966 DEBUG [java.sql.Connection] - <{conn-100307} Preparing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-30 13:44:06,967 DEBUG [java.sql.PreparedStatement] - <{pstm-100308} Executing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-30 13:44:06,967 DEBUG [java.sql.PreparedStatement] - <{pstm-100308} Parameters: []>
2018-01-30 13:44:06,967 DEBUG [java.sql.PreparedStatement] - <{pstm-100308} Types: []>
2018-01-30 13:44:06,968 DEBUG [java.sql.ResultSet] - <{rset-100309} ResultSet>
2018-01-30 13:44:06,968 DEBUG [java.sql.ResultSet] - <{rset-100309} Header: [value, text]>
2018-01-30 13:44:06,968 DEBUG [java.sql.ResultSet] - <{rset-100309} Result: [A, 供热费]>
2018-01-30 13:44:06,969 DEBUG [java.sql.ResultSet] - <{rset-100309} Result: [B, 入网费]>
2018-01-30 13:44:07,009 DEBUG [java.sql.Connection] - <{conn-100310} Connection>
2018-01-30 13:44:07,009 DEBUG [java.sql.Connection] - <{conn-100310} Preparing Statement:   SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD') currentDate FROM DUAL  >
2018-01-30 13:44:07,009 DEBUG [java.sql.PreparedStatement] - <{pstm-100311} Executing Statement:   SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD') currentDate FROM DUAL  >
2018-01-30 13:44:07,009 DEBUG [java.sql.PreparedStatement] - <{pstm-100311} Parameters: []>
2018-01-30 13:44:07,009 DEBUG [java.sql.PreparedStatement] - <{pstm-100311} Types: []>
2018-01-30 13:44:07,010 DEBUG [java.sql.ResultSet] - <{rset-100312} ResultSet>
2018-01-30 13:44:07,011 DEBUG [java.sql.ResultSet] - <{rset-100312} Header: [currentdate]>
2018-01-30 13:44:07,011 DEBUG [java.sql.ResultSet] - <{rset-100312} Result: [2018-01-30]>
2018-01-30 13:44:08,631 DEBUG [java.sql.Connection] - <{conn-100313} Connection>
2018-01-30 13:44:08,632 DEBUG [java.sql.Connection] - <{conn-100313} Preparing Statement:    select pay_mode,count(house_code) house_count,   sum(real_charge) real_charge    from (   select     b.bill_date ,        e.community_name,     b.community_code,     b.building_code,     b.house_code,        b.owner_name,        b.charge_price,      b.charge_area,      b.USE_PREPAY,       b.PAY_MODE,       f.invoice_code,       f.invoice_number,     c.userName operatorName,     b.operator,       b.operate_date,      b.item_code,      b.charge_type,      case when b.charge_month='0' then '' else b.charge_month end as charge_month,       b.real_charge ,     case when g.status='2' then 1 else 0 end cancelCount   from      SF_DETAIL b,EAUSER c,SF_ITEM d,FC_COMMUNITY e,SF_INVOICEUSE f,sf_invoice g   where      b.community_code=e.community_code     and b.operator=c.userid     and b.item_code=d.item_code     and b.b_id=f.b_id(+)     and b.rollback_flag='0'     and f.invoice_code=g.invoice_code(+)     and f.invoice_number=g.invoice_number(+)     and f.item_code=g.item_code(+)     and f.invoice_type=g.invoice_type(+)    ) a  where 1=1      AND          operate_date>='2018-01-30 00:00:00'      AND          operate_date<='2018-01-30 23:59:59'               group by pay_mode  >
2018-01-30 13:44:08,633 DEBUG [java.sql.PreparedStatement] - <{pstm-100314} Executing Statement:    select pay_mode,count(house_code) house_count,   sum(real_charge) real_charge    from (   select     b.bill_date ,        e.community_name,     b.community_code,     b.building_code,     b.house_code,        b.owner_name,        b.charge_price,      b.charge_area,      b.USE_PREPAY,       b.PAY_MODE,       f.invoice_code,       f.invoice_number,     c.userName operatorName,     b.operator,       b.operate_date,      b.item_code,      b.charge_type,      case when b.charge_month='0' then '' else b.charge_month end as charge_month,       b.real_charge ,     case when g.status='2' then 1 else 0 end cancelCount   from      SF_DETAIL b,EAUSER c,SF_ITEM d,FC_COMMUNITY e,SF_INVOICEUSE f,sf_invoice g   where      b.community_code=e.community_code     and b.operator=c.userid     and b.item_code=d.item_code     and b.b_id=f.b_id(+)     and b.rollback_flag='0'     and f.invoice_code=g.invoice_code(+)     and f.invoice_number=g.invoice_number(+)     and f.item_code=g.item_code(+)     and f.invoice_type=g.invoice_type(+)    ) a  where 1=1      AND          operate_date>='2018-01-30 00:00:00'      AND          operate_date<='2018-01-30 23:59:59'               group by pay_mode  >
2018-01-30 13:44:08,633 DEBUG [java.sql.PreparedStatement] - <{pstm-100314} Parameters: []>
2018-01-30 13:44:08,633 DEBUG [java.sql.PreparedStatement] - <{pstm-100314} Types: []>
2018-01-30 13:44:08,687 DEBUG [java.sql.ResultSet] - <{rset-100315} ResultSet>
2018-01-30 13:44:26,919 DEBUG [java.sql.Connection] - <{conn-100316} Connection>
2018-01-30 13:44:26,919 DEBUG [java.sql.Connection] - <{conn-100316} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 13:44:26,920 DEBUG [java.sql.PreparedStatement] - <{pstm-100317} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 13:44:26,920 DEBUG [java.sql.PreparedStatement] - <{pstm-100317} Parameters: [100043]>
2018-01-30 13:44:26,920 DEBUG [java.sql.PreparedStatement] - <{pstm-100317} Types: [java.lang.String]>
2018-01-30 13:44:26,921 DEBUG [java.sql.ResultSet] - <{rset-100318} ResultSet>
2018-01-30 13:44:26,921 DEBUG [java.sql.ResultSet] - <{rset-100318} Header: [theme]>
2018-01-30 13:44:26,921 DEBUG [java.sql.ResultSet] - <{rset-100318} Result: [default]>
2018-01-30 13:44:28,389 DEBUG [java.sql.Connection] - <{conn-100319} Connection>
2018-01-30 13:44:28,390 DEBUG [java.sql.Connection] - <{conn-100319} Preparing Statement:    SELECT building_code as id, building_code||' '||building_name||' ('||house_count||')' as text,nvl(house_count,0) as child_Count   FROM fc_building a WHERE   a.community_code = '0101'  order by building_code  >
2018-01-30 13:44:28,391 DEBUG [java.sql.PreparedStatement] - <{pstm-100320} Executing Statement:    SELECT building_code as id, building_code||' '||building_name||' ('||house_count||')' as text,nvl(house_count,0) as child_Count   FROM fc_building a WHERE   a.community_code = '0101'  order by building_code  >
2018-01-30 13:44:28,391 DEBUG [java.sql.PreparedStatement] - <{pstm-100320} Parameters: []>
2018-01-30 13:44:28,391 DEBUG [java.sql.PreparedStatement] - <{pstm-100320} Types: []>
2018-01-30 13:44:28,392 DEBUG [java.sql.ResultSet] - <{rset-100321} ResultSet>
2018-01-30 13:44:28,393 DEBUG [java.sql.ResultSet] - <{rset-100321} Header: [id, text, child_count]>
2018-01-30 13:44:28,393 DEBUG [java.sql.ResultSet] - <{rset-100321} Result: [0101-001, 0101-001 家属楼 (21), 21]>
2018-01-30 13:44:28,393 DEBUG [java.sql.ResultSet] - <{rset-100321} Result: [0101-002, 0101-002 大北门 (1), 1]>
2018-01-30 13:44:28,393 DEBUG [java.sql.ResultSet] - <{rset-100321} Result: [0101-999, 0101-999 商业 (2), 2]>
2018-01-30 13:44:29,434 DEBUG [java.sql.Connection] - <{conn-100322} Connection>
2018-01-30 13:44:29,435 DEBUG [java.sql.Connection] - <{conn-100322} Preparing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0101-001'   order by a.house_code  >
2018-01-30 13:44:29,436 DEBUG [java.sql.PreparedStatement] - <{pstm-100323} Executing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0101-001'   order by a.house_code  >
2018-01-30 13:44:29,436 DEBUG [java.sql.PreparedStatement] - <{pstm-100323} Parameters: []>
2018-01-30 13:44:29,436 DEBUG [java.sql.PreparedStatement] - <{pstm-100323} Types: []>
2018-01-30 13:44:29,437 DEBUG [java.sql.ResultSet] - <{rset-100324} ResultSet>
2018-01-30 13:44:29,437 DEBUG [java.sql.ResultSet] - <{rset-100324} Header: [id, text, child_count]>
2018-01-30 13:44:29,437 DEBUG [java.sql.ResultSet] - <{rset-100324} Result: [0101-001-01-01-01, 01-01-01 李宝源, 0]>
2018-01-30 13:44:29,438 DEBUG [java.sql.ResultSet] - <{rset-100324} Result: [0101-001-01-01-02, 01-01-02 崔志兵, 0]>
2018-01-30 13:44:29,438 DEBUG [java.sql.ResultSet] - <{rset-100324} Result: [0101-001-01-02-01, 01-02-01 牛忠清, 0]>
2018-01-30 13:44:29,438 DEBUG [java.sql.ResultSet] - <{rset-100324} Result: [0101-001-01-02-02, 01-02-02 郝旭刚, 0]>
2018-01-30 13:44:29,438 DEBUG [java.sql.ResultSet] - <{rset-100324} Result: [0101-001-01-03-01, 01-03-01 王志兵, 0]>
2018-01-30 13:44:29,438 DEBUG [java.sql.ResultSet] - <{rset-100324} Result: [0101-001-01-03-02, 01-03-02 李旭红, 0]>
2018-01-30 13:44:29,438 DEBUG [java.sql.ResultSet] - <{rset-100324} Result: [0101-001-02-01-01, 02-01-01 曹贵胜, 0]>
2018-01-30 13:44:29,438 DEBUG [java.sql.ResultSet] - <{rset-100324} Result: [0101-001-02-01-02, 02-01-02 段发书, 0]>
2018-01-30 13:44:29,438 DEBUG [java.sql.ResultSet] - <{rset-100324} Result: [0101-001-02-02-01, 02-02-01 郝秀好, 0]>
2018-01-30 13:44:29,439 DEBUG [java.sql.ResultSet] - <{rset-100324} Result: [0101-001-02-02-02, 02-02-02 任元宝, 0]>
2018-01-30 13:44:29,439 DEBUG [java.sql.ResultSet] - <{rset-100324} Result: [0101-001-02-03-01, 02-03-01 张志刚, 0]>
2018-01-30 13:44:29,439 DEBUG [java.sql.ResultSet] - <{rset-100324} Result: [0101-001-02-03-02, 02-03-02 李国芳, 0]>
2018-01-30 13:44:29,439 DEBUG [java.sql.ResultSet] - <{rset-100324} Result: [0101-001-03-01-01, 03-01-01 秦凤祥, 0]>
2018-01-30 13:44:29,439 DEBUG [java.sql.ResultSet] - <{rset-100324} Result: [0101-001-03-01-02, 03-01-02 史春华, 0]>
2018-01-30 13:44:29,439 DEBUG [java.sql.ResultSet] - <{rset-100324} Result: [0101-001-03-02-01, 03-02-01 张志明, 0]>
2018-01-30 13:44:29,440 DEBUG [java.sql.ResultSet] - <{rset-100324} Result: [0101-001-03-02-02, 03-02-02 靳锁明, 0]>
2018-01-30 13:44:29,440 DEBUG [java.sql.ResultSet] - <{rset-100324} Result: [0101-001-03-03-01, 03-03-01 张志强, 0]>
2018-01-30 13:44:29,440 DEBUG [java.sql.ResultSet] - <{rset-100324} Result: [0101-001-03-03-02, 03-03-02 李  凡, 0]>
2018-01-30 13:44:29,440 DEBUG [java.sql.ResultSet] - <{rset-100324} Result: [0101-001-04-01-01, 04-01-01 牛泽玲, 0]>
2018-01-30 13:44:29,441 DEBUG [java.sql.ResultSet] - <{rset-100324} Result: [0101-001-04-01-02, 04-01-02 王泽宇, 0]>
2018-01-30 13:44:29,441 DEBUG [java.sql.ResultSet] - <{rset-100324} Result: [0101-001-04-02-01, 04-02-01 赵明泽, 0]>
2018-01-30 13:44:30,381 DEBUG [java.sql.Connection] - <{conn-100325} Connection>
2018-01-30 13:44:30,382 DEBUG [java.sql.Connection] - <{conn-100325} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 13:44:30,383 DEBUG [java.sql.PreparedStatement] - <{pstm-100326} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 13:44:30,383 DEBUG [java.sql.PreparedStatement] - <{pstm-100326} Parameters: [0101-001-01-01-01]>
2018-01-30 13:44:30,383 DEBUG [java.sql.PreparedStatement] - <{pstm-100326} Types: [java.lang.String]>
2018-01-30 13:44:30,385 DEBUG [java.sql.ResultSet] - <{rset-100327} ResultSet>
2018-01-30 13:44:30,386 DEBUG [java.sql.ResultSet] - <{rset-100327} Header: [username, item_name, charge_month, house_code, item_code, meter_id, not_money, not_money_latefee, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-30 13:44:30,386 DEBUG [java.sql.ResultSet] - <{rset-100327} Result: [null, 供热费, 2017, 0101-001-01-01-01, A, 0, 2800.28, 1.05, 01, 0101, 0101-001, 李宝源, 2800.28, 0, 0, 2800.28, 0, null, A1, 28, null, null, 100.01, 2017-11-15, 2017-03-31, 0, 2017-11-01, 2017-11-01, 1.05, null, 1.05, null, 0, 0, 0, 0, 0, 0, 0, 0, 15132, 1]>
2018-01-30 13:44:30,386 DEBUG [java.sql.Connection] - <{conn-100328} Connection>
2018-01-30 13:44:30,387 DEBUG [java.sql.Connection] - <{conn-100328} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 13:44:30,387 DEBUG [java.sql.PreparedStatement] - <{pstm-100329} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 13:44:30,389 DEBUG [java.sql.PreparedStatement] - <{pstm-100329} Parameters: [0101-001-01-01-01]>
2018-01-30 13:44:30,389 DEBUG [java.sql.PreparedStatement] - <{pstm-100329} Types: [java.lang.String]>
2018-01-30 13:44:30,391 DEBUG [java.sql.ResultSet] - <{rset-100330} ResultSet>
2018-01-30 13:44:30,391 DEBUG [java.sql.ResultSet] - <{rset-100330} Header: [count(*)]>
2018-01-30 13:44:30,391 DEBUG [java.sql.ResultSet] - <{rset-100330} Result: [1]>
2018-01-30 13:44:30,474 DEBUG [java.sql.Connection] - <{conn-100331} Connection>
2018-01-30 13:44:30,475 DEBUG [java.sql.Connection] - <{conn-100331} Preparing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-30 13:44:30,478 DEBUG [java.sql.PreparedStatement] - <{pstm-100332} Executing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-30 13:44:30,478 DEBUG [java.sql.PreparedStatement] - <{pstm-100332} Parameters: [100043, A]>
2018-01-30 13:44:30,478 DEBUG [java.sql.PreparedStatement] - <{pstm-100332} Types: [java.lang.String, java.lang.String]>
2018-01-30 13:44:30,480 DEBUG [java.sql.ResultSet] - <{rset-100333} ResultSet>
2018-01-30 13:44:30,483 DEBUG [java.sql.Connection] - <{conn-100334} Connection>
2018-01-30 13:44:30,486 DEBUG [java.sql.Connection] - <{conn-100334} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 13:44:30,486 DEBUG [java.sql.PreparedStatement] - <{pstm-100335} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 13:44:30,486 DEBUG [java.sql.PreparedStatement] - <{pstm-100335} Parameters: [0101-001-01-01-01]>
2018-01-30 13:44:30,486 DEBUG [java.sql.PreparedStatement] - <{pstm-100335} Types: [java.lang.String]>
2018-01-30 13:44:30,488 DEBUG [java.sql.ResultSet] - <{rset-100336} ResultSet>
2018-01-30 13:44:30,489 DEBUG [java.sql.ResultSet] - <{rset-100336} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-30 13:44:30,489 DEBUG [java.sql.ResultSet] - <{rset-100336} Result: [共1, 2800.28, 0, 0, 2800.28, 2800.28, 1.05, 0, null, null, 100.01, 1.05, null, 1.05, null]>
2018-01-30 13:44:30,550 DEBUG [java.sql.Connection] - <{conn-100337} Connection>
2018-01-30 13:44:30,551 DEBUG [java.sql.Connection] - <{conn-100337} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 13:44:30,551 DEBUG [java.sql.PreparedStatement] - <{pstm-100338} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 13:44:30,551 DEBUG [java.sql.PreparedStatement] - <{pstm-100338} Parameters: [0101-001-01-01-01]>
2018-01-30 13:44:30,551 DEBUG [java.sql.PreparedStatement] - <{pstm-100338} Types: [java.lang.String]>
2018-01-30 13:44:30,553 DEBUG [java.sql.ResultSet] - <{rset-100339} ResultSet>
2018-01-30 13:44:30,553 DEBUG [java.sql.ResultSet] - <{rset-100339} Header: [card_id, cluster_code, contact_man, house_manager, owner_name, address, telephone, stat_id, work_unit, apart_status, user_kind, heat_status]>
2018-01-30 13:44:30,553 DEBUG [java.sql.ResultSet] - <{rset-100339} Result: [null, null, null, null, 李宝源, null, null, null, null, null, null, null]>
2018-01-30 13:44:32,106 DEBUG [java.sql.Connection] - <{conn-100340} Connection>
2018-01-30 13:44:32,106 DEBUG [java.sql.Connection] - <{conn-100340} Preparing Statement:    SELECT       sequenceid as sequenceid, fieldname as fieldname, maxid as maxid, remark as remark,       pattern as pattern, idtype as idtype   FROM easequence WHERE fieldname = ?  >
2018-01-30 13:44:32,106 DEBUG [java.sql.PreparedStatement] - <{pstm-100341} Executing Statement:    SELECT       sequenceid as sequenceid, fieldname as fieldname, maxid as maxid, remark as remark,       pattern as pattern, idtype as idtype   FROM easequence WHERE fieldname = ?  >
2018-01-30 13:44:32,107 DEBUG [java.sql.PreparedStatement] - <{pstm-100341} Parameters: [B_ID]>
2018-01-30 13:44:32,107 DEBUG [java.sql.PreparedStatement] - <{pstm-100341} Types: [java.lang.String]>
2018-01-30 13:44:32,108 DEBUG [java.sql.ResultSet] - <{rset-100342} ResultSet>
2018-01-30 13:44:32,108 DEBUG [java.sql.ResultSet] - <{rset-100342} Header: [sequenceid, fieldname, maxid, remark, pattern, idtype]>
2018-01-30 13:44:32,108 DEBUG [java.sql.ResultSet] - <{rset-100342} Result: [1012, B_ID, 100000000208, 收费单编号, 00000000000, 1]>
2018-01-30 13:44:32,187 DEBUG [java.sql.Connection] - <{conn-100343} Connection>
2018-01-30 13:44:32,187 DEBUG [java.sql.Connection] - <{conn-100343} Preparing Statement:    SELECT       sequenceid as sequenceid, fieldname as fieldname, maxid as maxid, remark as remark,       pattern as pattern, idtype as idtype   FROM easequence WHERE fieldname = ?  >
2018-01-30 13:44:32,187 DEBUG [java.sql.PreparedStatement] - <{pstm-100344} Executing Statement:    SELECT       sequenceid as sequenceid, fieldname as fieldname, maxid as maxid, remark as remark,       pattern as pattern, idtype as idtype   FROM easequence WHERE fieldname = ?  >
2018-01-30 13:44:32,187 DEBUG [java.sql.PreparedStatement] - <{pstm-100344} Parameters: [I_ID]>
2018-01-30 13:44:32,188 DEBUG [java.sql.PreparedStatement] - <{pstm-100344} Types: [java.lang.String]>
2018-01-30 13:44:32,189 DEBUG [java.sql.ResultSet] - <{rset-100345} ResultSet>
2018-01-30 13:44:32,189 DEBUG [java.sql.ResultSet] - <{rset-100345} Header: [sequenceid, fieldname, maxid, remark, pattern, idtype]>
2018-01-30 13:44:32,189 DEBUG [java.sql.ResultSet] - <{rset-100345} Result: [1013, I_ID, 10000001, 入网编号, 00000000, 1]>
2018-01-30 13:44:32,190 DEBUG [java.sql.Connection] - <{conn-100346} Connection>
2018-01-30 13:44:32,190 DEBUG [java.sql.Connection] - <{conn-100346} Preparing Statement:    SELECT       sequenceid as sequenceid, fieldname as fieldname, maxid as maxid, remark as remark,       pattern as pattern, idtype as idtype   FROM easequence WHERE fieldname = ?  >
2018-01-30 13:44:32,190 DEBUG [java.sql.PreparedStatement] - <{pstm-100347} Executing Statement:    SELECT       sequenceid as sequenceid, fieldname as fieldname, maxid as maxid, remark as remark,       pattern as pattern, idtype as idtype   FROM easequence WHERE fieldname = ?  >
2018-01-30 13:44:32,190 DEBUG [java.sql.PreparedStatement] - <{pstm-100347} Parameters: [B_ID]>
2018-01-30 13:44:32,190 DEBUG [java.sql.PreparedStatement] - <{pstm-100347} Types: [java.lang.String]>
2018-01-30 13:44:32,191 DEBUG [java.sql.ResultSet] - <{rset-100348} ResultSet>
2018-01-30 13:44:32,192 DEBUG [java.sql.ResultSet] - <{rset-100348} Header: [sequenceid, fieldname, maxid, remark, pattern, idtype]>
2018-01-30 13:44:32,192 DEBUG [java.sql.ResultSet] - <{rset-100348} Result: [1012, B_ID, 100000000208, 收费单编号, 00000000000, 1]>
2018-01-30 13:44:32,330 DEBUG [java.sql.Connection] - <{conn-100349} Connection>
2018-01-30 13:44:32,330 DEBUG [java.sql.Connection] - <{conn-100349} Preparing Statement:          UPDATE easequence SET maxid = ? WHERE fieldname = ?  >
2018-01-30 13:44:32,330 DEBUG [java.sql.PreparedStatement] - <{pstm-100350} Executing Statement:          UPDATE easequence SET maxid = ? WHERE fieldname = ?  >
2018-01-30 13:44:32,331 DEBUG [java.sql.PreparedStatement] - <{pstm-100350} Parameters: [100000000209, B_ID]>
2018-01-30 13:44:32,331 DEBUG [java.sql.PreparedStatement] - <{pstm-100350} Types: [java.lang.String, java.lang.String]>
2018-01-30 13:44:32,333 DEBUG [java.sql.Connection] - <{conn-100351} Connection>
2018-01-30 13:44:32,334 DEBUG [java.sql.Connection] - <{conn-100351} Preparing Call: {call pkg_charge.Charge_A( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,  ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}>
2018-01-30 13:44:32,334 DEBUG [java.sql.PreparedStatement] - <{pstm-100352} Executing Statement: {call pkg_charge.Charge_A( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,  ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}>
2018-01-30 13:44:32,334 DEBUG [java.sql.PreparedStatement] - <{pstm-100352} Parameters: [100000000209, 15132, 0101-001-01-01-01, , , , , , 28, 100.01, 现金, , , 2800.28, 0, , , null, null, null, null, 2017-11-01, 1.05, 1.05, , , 100043, null]>
2018-01-30 13:44:32,334 DEBUG [java.sql.PreparedStatement] - <{pstm-100352} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, null, null, null, null, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, java.lang.String, null]>
2018-01-30 13:44:32,381 DEBUG [java.sql.Connection] - <{conn-100353} Connection>
2018-01-30 13:44:32,381 DEBUG [java.sql.Connection] - <{conn-100353} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 13:44:32,381 DEBUG [java.sql.PreparedStatement] - <{pstm-100354} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 13:44:32,382 DEBUG [java.sql.PreparedStatement] - <{pstm-100354} Parameters: [0101-001-01-01-01]>
2018-01-30 13:44:32,382 DEBUG [java.sql.PreparedStatement] - <{pstm-100354} Types: [java.lang.String]>
2018-01-30 13:44:32,385 DEBUG [java.sql.ResultSet] - <{rset-100355} ResultSet>
2018-01-30 13:44:32,385 DEBUG [java.sql.Connection] - <{conn-100356} Connection>
2018-01-30 13:44:32,386 DEBUG [java.sql.Connection] - <{conn-100356} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 13:44:32,386 DEBUG [java.sql.PreparedStatement] - <{pstm-100357} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 13:44:32,391 DEBUG [java.sql.PreparedStatement] - <{pstm-100357} Parameters: [0101-001-01-01-01]>
2018-01-30 13:44:32,391 DEBUG [java.sql.PreparedStatement] - <{pstm-100357} Types: [java.lang.String]>
2018-01-30 13:44:32,393 DEBUG [java.sql.ResultSet] - <{rset-100358} ResultSet>
2018-01-30 13:44:32,393 DEBUG [java.sql.ResultSet] - <{rset-100358} Header: [count(*)]>
2018-01-30 13:44:32,393 DEBUG [java.sql.ResultSet] - <{rset-100358} Result: [0]>
2018-01-30 13:44:32,603 DEBUG [java.sql.Connection] - <{conn-100359} Connection>
2018-01-30 13:44:32,604 DEBUG [java.sql.Connection] - <{conn-100359} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 13:44:32,604 DEBUG [java.sql.PreparedStatement] - <{pstm-100360} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 13:44:32,604 DEBUG [java.sql.PreparedStatement] - <{pstm-100360} Parameters: [0101-001-01-01-01]>
2018-01-30 13:44:32,604 DEBUG [java.sql.PreparedStatement] - <{pstm-100360} Types: [java.lang.String]>
2018-01-30 13:44:32,606 DEBUG [java.sql.ResultSet] - <{rset-100361} ResultSet>
2018-01-30 13:44:32,606 DEBUG [java.sql.ResultSet] - <{rset-100361} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-30 13:44:32,606 DEBUG [java.sql.ResultSet] - <{rset-100361} Result: [共0, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-01-30 14:15:02,196 DEBUG [java.sql.Connection] - <{conn-100362} Connection>
2018-01-30 14:15:02,197 DEBUG [java.sql.Connection] - <{conn-100362} Preparing Statement:    DELETE      FROM eahttpsession   WHERE                sessionid = ?                >
2018-01-30 14:15:02,197 DEBUG [java.sql.PreparedStatement] - <{pstm-100363} Executing Statement:    DELETE      FROM eahttpsession   WHERE                sessionid = ?                >
2018-01-30 14:15:02,198 DEBUG [java.sql.PreparedStatement] - <{pstm-100363} Parameters: [n95mzyork9vv]>
2018-01-30 14:15:02,198 DEBUG [java.sql.PreparedStatement] - <{pstm-100363} Types: [java.lang.String]>
2018-01-30 14:35:25,383 DEBUG [java.sql.Connection] - <{conn-100364} Connection>
2018-01-30 14:35:25,384 DEBUG [java.sql.Connection] - <{conn-100364} Preparing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-01-30 14:35:25,384 DEBUG [java.sql.PreparedStatement] - <{pstm-100365} Executing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-01-30 14:35:25,384 DEBUG [java.sql.PreparedStatement] - <{pstm-100365} Parameters: [0, admin]>
2018-01-30 14:35:25,384 DEBUG [java.sql.PreparedStatement] - <{pstm-100365} Types: [java.lang.String, java.lang.String]>
2018-01-30 14:35:25,386 DEBUG [java.sql.ResultSet] - <{rset-100366} ResultSet>
2018-01-30 14:35:25,386 DEBUG [java.sql.ResultSet] - <{rset-100366} Header: [userid, username, account, password, sex, deptid, theme, customid, customname]>
2018-01-30 14:35:25,386 DEBUG [java.sql.ResultSet] - <{rset-100366} Result: [100043, 管理员, admin, RaFutWeh0ww=, 0, 001, default, 01, 供热]>
2018-01-30 14:35:25,387 DEBUG [java.sql.Connection] - <{conn-100367} Connection>
2018-01-30 14:35:25,387 DEBUG [java.sql.Connection] - <{conn-100367} Preparing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-01-30 14:35:25,387 DEBUG [java.sql.PreparedStatement] - <{pstm-100368} Executing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-01-30 14:35:25,387 DEBUG [java.sql.PreparedStatement] - <{pstm-100368} Parameters: [wz0agy6euj2u]>
2018-01-30 14:35:25,388 DEBUG [java.sql.PreparedStatement] - <{pstm-100368} Types: [java.lang.String]>
2018-01-30 14:35:25,389 DEBUG [java.sql.ResultSet] - <{rset-100369} ResultSet>
2018-01-30 14:35:25,389 DEBUG [java.sql.Connection] - <{conn-100370} Connection>
2018-01-30 14:35:25,389 DEBUG [java.sql.Connection] - <{conn-100370} Preparing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-01-30 14:35:25,390 DEBUG [java.sql.PreparedStatement] - <{pstm-100371} Executing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-01-30 14:35:25,390 DEBUG [java.sql.PreparedStatement] - <{pstm-100371} Parameters: [wz0agy6euj2u, 管理员, admin, 2018-01-30 14:35:25, 127.0.0.1, 100043, FIREFOX/57.]>
2018-01-30 14:35:25,390 DEBUG [java.sql.PreparedStatement] - <{pstm-100371} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-30 14:35:25,465 DEBUG [java.sql.Connection] - <{conn-100372} Connection>
2018-01-30 14:35:25,465 DEBUG [java.sql.Connection] - <{conn-100372} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 14:35:25,465 DEBUG [java.sql.PreparedStatement] - <{pstm-100373} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 14:35:25,465 DEBUG [java.sql.PreparedStatement] - <{pstm-100373} Parameters: [100043]>
2018-01-30 14:35:25,466 DEBUG [java.sql.PreparedStatement] - <{pstm-100373} Types: [java.lang.String]>
2018-01-30 14:35:25,467 DEBUG [java.sql.ResultSet] - <{rset-100374} ResultSet>
2018-01-30 14:35:25,468 DEBUG [java.sql.ResultSet] - <{rset-100374} Header: [theme]>
2018-01-30 14:35:25,468 DEBUG [java.sql.ResultSet] - <{rset-100374} Result: [default]>
2018-01-30 14:35:25,507 DEBUG [java.sql.Connection] - <{conn-100375} Connection>
2018-01-30 14:35:25,507 DEBUG [java.sql.Connection] - <{conn-100375} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 14:35:25,508 DEBUG [java.sql.PreparedStatement] - <{pstm-100376} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 14:35:25,508 DEBUG [java.sql.PreparedStatement] - <{pstm-100376} Parameters: [100043]>
2018-01-30 14:35:25,508 DEBUG [java.sql.PreparedStatement] - <{pstm-100376} Types: [java.lang.String]>
2018-01-30 14:35:25,510 DEBUG [java.sql.ResultSet] - <{rset-100377} ResultSet>
2018-01-30 14:35:25,510 DEBUG [java.sql.ResultSet] - <{rset-100377} Header: [menuid, menuname, iconcls]>
2018-01-30 14:35:25,510 DEBUG [java.sql.ResultSet] - <{rset-100377} Result: [0103, 基础信息, null]>
2018-01-30 14:35:25,510 DEBUG [java.sql.ResultSet] - <{rset-100377} Result: [0104, 收费管理, null]>
2018-01-30 14:35:25,511 DEBUG [java.sql.ResultSet] - <{rset-100377} Result: [0105, 统计分析, null]>
2018-01-30 14:35:25,511 DEBUG [java.sql.ResultSet] - <{rset-100377} Result: [0101, 系统管理, null]>
2018-01-30 14:35:25,511 DEBUG [java.sql.Connection] - <{conn-100378} Connection>
2018-01-30 14:35:25,511 DEBUG [java.sql.Connection] - <{conn-100378} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-01-30 14:35:25,511 DEBUG [java.sql.PreparedStatement] - <{pstm-100379} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-01-30 14:35:25,511 DEBUG [java.sql.PreparedStatement] - <{pstm-100379} Parameters: [100043]>
2018-01-30 14:35:25,511 DEBUG [java.sql.PreparedStatement] - <{pstm-100379} Types: [java.lang.String]>
2018-01-30 14:35:25,512 DEBUG [java.sql.ResultSet] - <{rset-100380} ResultSet>
2018-01-30 14:35:25,513 DEBUG [java.sql.Connection] - <{conn-100381} Connection>
2018-01-30 14:35:25,513 DEBUG [java.sql.Connection] - <{conn-100381} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 14:35:25,513 DEBUG [java.sql.PreparedStatement] - <{pstm-100382} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 14:35:25,514 DEBUG [java.sql.PreparedStatement] - <{pstm-100382} Parameters: [001]>
2018-01-30 14:35:25,514 DEBUG [java.sql.PreparedStatement] - <{pstm-100382} Types: [java.lang.String]>
2018-01-30 14:35:25,514 DEBUG [java.sql.ResultSet] - <{rset-100383} ResultSet>
2018-01-30 14:35:25,514 DEBUG [java.sql.ResultSet] - <{rset-100383} Header: [deptid, deptname]>
2018-01-30 14:35:25,514 DEBUG [java.sql.ResultSet] - <{rset-100383} Result: [001, XX供热公司]>
2018-01-30 14:35:25,515 DEBUG [java.sql.Connection] - <{conn-100384} Connection>
2018-01-30 14:35:25,515 DEBUG [java.sql.Connection] - <{conn-100384} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 14:35:25,515 DEBUG [java.sql.PreparedStatement] - <{pstm-100385} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 14:35:25,515 DEBUG [java.sql.PreparedStatement] - <{pstm-100385} Parameters: [001]>
2018-01-30 14:35:25,515 DEBUG [java.sql.PreparedStatement] - <{pstm-100385} Types: [java.lang.String]>
2018-01-30 14:35:25,516 DEBUG [java.sql.ResultSet] - <{rset-100386} ResultSet>
2018-01-30 14:35:25,516 DEBUG [java.sql.ResultSet] - <{rset-100386} Header: [deptid, deptname]>
2018-01-30 14:35:25,516 DEBUG [java.sql.ResultSet] - <{rset-100386} Result: [001, XX供热公司]>
2018-01-30 14:35:25,517 DEBUG [java.sql.Connection] - <{conn-100387} Connection>
2018-01-30 14:35:25,517 DEBUG [java.sql.Connection] - <{conn-100387} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 14:35:25,517 DEBUG [java.sql.PreparedStatement] - <{pstm-100388} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 14:35:25,518 DEBUG [java.sql.PreparedStatement] - <{pstm-100388} Parameters: [100043]>
2018-01-30 14:35:25,518 DEBUG [java.sql.PreparedStatement] - <{pstm-100388} Types: [java.lang.String]>
2018-01-30 14:35:25,519 DEBUG [java.sql.ResultSet] - <{rset-100389} ResultSet>
2018-01-30 14:35:25,520 DEBUG [java.sql.ResultSet] - <{rset-100389} Header: [theme]>
2018-01-30 14:35:25,520 DEBUG [java.sql.ResultSet] - <{rset-100389} Result: [default]>
2018-01-30 14:35:25,559 DEBUG [java.sql.Connection] - <{conn-100390} Connection>
2018-01-30 14:35:25,559 DEBUG [java.sql.Connection] - <{conn-100390} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 14:35:25,559 DEBUG [java.sql.PreparedStatement] - <{pstm-100391} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 14:35:25,559 DEBUG [java.sql.PreparedStatement] - <{pstm-100391} Parameters: [100043]>
2018-01-30 14:35:25,559 DEBUG [java.sql.PreparedStatement] - <{pstm-100391} Types: [java.lang.String]>
2018-01-30 14:35:25,561 DEBUG [java.sql.ResultSet] - <{rset-100392} ResultSet>
2018-01-30 14:35:25,562 DEBUG [java.sql.ResultSet] - <{rset-100392} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 14:35:25,562 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [01030404, 新建换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,562 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [01030403, 删除热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,562 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [01030406, 删除换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,562 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [010305, 入网管理, null, 0103, module/iw.ered?reqCode=intoWebInit, 0, false, false, tab_blank.png]>
2018-01-30 14:35:25,562 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [01030405, 修改换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,562 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [01030401, 新建热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,562 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [01030201, 选择导入文件, null, 010302, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,562 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [01030312, 删除面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,562 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [0103, 基础信息, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 14:35:25,563 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [01030311, 修改面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,563 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [01030301, 新建小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,563 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [01030310, 添加面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,563 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [010304, 热源站所管理, null, 0103, module/sr.ered?reqCode=sourceInit, 0, false, false, tab_blank.png]>
2018-01-30 14:35:25,563 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [01030313, 删除面积1, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,563 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [01030202, 导入模板下载, null, 010302, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,564 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [01030501, 新增入网, null, 010305, null, 1, false, true, tab_blank.png]>
2018-01-30 14:35:25,564 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [01030402, 修改热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,564 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [010303, 基础信息维护, null, 0103, module/fc.ered?reqCode=communityInit, 0, false, false, tab_blank.png]>
2018-01-30 14:35:25,564 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [01030502, 修改入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,564 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [01030302, 修改小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,564 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [010302, 基础数据导入, null, 0103, module/importHouse.ered?reqCode=importInit, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,565 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [01030303, 删除小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,565 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [01030503, 删除入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,565 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [01030304, 新建大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,565 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [01030305, 修改大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,565 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [01030306, 删除大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,565 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [01030307, 新建用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,565 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [01030308, 修改用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,565 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [01030309, 删除用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,565 DEBUG [java.sql.Connection] - <{conn-100393} Connection>
2018-01-30 14:35:25,565 DEBUG [java.sql.Connection] - <{conn-100393} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 14:35:25,566 DEBUG [java.sql.PreparedStatement] - <{pstm-100394} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 14:35:25,566 DEBUG [java.sql.PreparedStatement] - <{pstm-100394} Parameters: [100043]>
2018-01-30 14:35:25,566 DEBUG [java.sql.PreparedStatement] - <{pstm-100394} Types: [java.lang.String]>
2018-01-30 14:35:25,568 DEBUG [java.sql.ResultSet] - <{rset-100395} ResultSet>
2018-01-30 14:35:25,568 DEBUG [java.sql.Connection] - <{conn-100396} Connection>
2018-01-30 14:35:25,569 DEBUG [java.sql.Connection] - <{conn-100396} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 14:35:25,569 DEBUG [java.sql.PreparedStatement] - <{pstm-100397} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 14:35:25,569 DEBUG [java.sql.PreparedStatement] - <{pstm-100397} Parameters: [01]>
2018-01-30 14:35:25,569 DEBUG [java.sql.PreparedStatement] - <{pstm-100397} Types: [java.lang.String]>
2018-01-30 14:35:25,570 DEBUG [java.sql.ResultSet] - <{rset-100398} ResultSet>
2018-01-30 14:35:25,570 DEBUG [java.sql.ResultSet] - <{rset-100398} Header: [menuname]>
2018-01-30 14:35:25,570 DEBUG [java.sql.ResultSet] - <{rset-100398} Result: [供热收费管理信息系统]>
2018-01-30 14:35:25,728 DEBUG [java.sql.Connection] - <{conn-100399} Connection>
2018-01-30 14:35:25,977 DEBUG [java.sql.Connection] - <{conn-100399} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 14:35:25,977 DEBUG [java.sql.PreparedStatement] - <{pstm-100400} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 14:35:25,978 DEBUG [java.sql.PreparedStatement] - <{pstm-100400} Parameters: [100043]>
2018-01-30 14:35:25,978 DEBUG [java.sql.PreparedStatement] - <{pstm-100400} Types: [java.lang.String]>
2018-01-30 14:35:25,980 DEBUG [java.sql.ResultSet] - <{rset-100401} ResultSet>
2018-01-30 14:35:25,980 DEBUG [java.sql.ResultSet] - <{rset-100401} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 14:35:25,980 DEBUG [java.sql.ResultSet] - <{rset-100401} Result: [010402, 收费管理, null, 0104, module/chg.ered?reqCode=chargeInit, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,980 DEBUG [java.sql.ResultSet] - <{rset-100401} Result: [01040503, 作废票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,980 DEBUG [java.sql.ResultSet] - <{rset-100401} Result: [01040501, 票据入库, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,980 DEBUG [java.sql.ResultSet] - <{rset-100401} Result: [01040401, 冲账, null, 010404, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,981 DEBUG [java.sql.ResultSet] - <{rset-100401} Result: [01040101, 生成应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,981 DEBUG [java.sql.ResultSet] - <{rset-100401} Result: [01040505, 领用票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,981 DEBUG [java.sql.ResultSet] - <{rset-100401} Result: [01040302, 删除减免, null, 010403, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,981 DEBUG [java.sql.ResultSet] - <{rset-100401} Result: [01040301, 减免应收, null, 010403, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,981 DEBUG [java.sql.ResultSet] - <{rset-100401} Result: [01040502, 删除票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,984 DEBUG [java.sql.ResultSet] - <{rset-100401} Result: [01040201, 收费, null, 010402, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,984 DEBUG [java.sql.ResultSet] - <{rset-100401} Result: [01040102, 删除应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,984 DEBUG [java.sql.ResultSet] - <{rset-100401} Result: [01040504, 返还票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,984 DEBUG [java.sql.ResultSet] - <{rset-100401} Result: [010401, 生成应收, null, 0104, module/crp.ered?reqCode=creatPlanInit, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,984 DEBUG [java.sql.ResultSet] - <{rset-100401} Result: [0104, 收费管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 14:35:25,984 DEBUG [java.sql.ResultSet] - <{rset-100401} Result: [010403, 减免管理, null, 0104, module/mns.ered?reqCode=minusInit, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,984 DEBUG [java.sql.ResultSet] - <{rset-100401} Result: [010404, 冲账管理, null, 0104, module/rlb.ered?reqCode=rollbackInit, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,985 DEBUG [java.sql.ResultSet] - <{rset-100401} Result: [010405, 票据管理, null, 0104, module/inv.ered?reqCode=invoiceInit, 1, false, false, tab_blank.png]>
2018-01-30 14:35:25,986 DEBUG [java.sql.Connection] - <{conn-100402} Connection>
2018-01-30 14:35:25,986 DEBUG [java.sql.Connection] - <{conn-100402} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 14:35:25,986 DEBUG [java.sql.PreparedStatement] - <{pstm-100403} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 14:35:25,986 DEBUG [java.sql.PreparedStatement] - <{pstm-100403} Parameters: [100043]>
2018-01-30 14:35:25,986 DEBUG [java.sql.PreparedStatement] - <{pstm-100403} Types: [java.lang.String]>
2018-01-30 14:35:25,988 DEBUG [java.sql.ResultSet] - <{rset-100404} ResultSet>
2018-01-30 14:35:25,988 DEBUG [java.sql.Connection] - <{conn-100405} Connection>
2018-01-30 14:35:25,988 DEBUG [java.sql.Connection] - <{conn-100405} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 14:35:25,988 DEBUG [java.sql.PreparedStatement] - <{pstm-100406} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 14:35:25,989 DEBUG [java.sql.PreparedStatement] - <{pstm-100406} Parameters: [01]>
2018-01-30 14:35:25,989 DEBUG [java.sql.PreparedStatement] - <{pstm-100406} Types: [java.lang.String]>
2018-01-30 14:35:25,990 DEBUG [java.sql.ResultSet] - <{rset-100407} ResultSet>
2018-01-30 14:35:25,990 DEBUG [java.sql.ResultSet] - <{rset-100407} Header: [menuname]>
2018-01-30 14:35:25,990 DEBUG [java.sql.ResultSet] - <{rset-100407} Result: [供热收费管理信息系统]>
2018-01-30 14:35:26,000 DEBUG [java.sql.Connection] - <{conn-100408} Connection>
2018-01-30 14:35:26,001 DEBUG [java.sql.Connection] - <{conn-100408} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 14:35:26,001 DEBUG [java.sql.PreparedStatement] - <{pstm-100409} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 14:35:26,001 DEBUG [java.sql.PreparedStatement] - <{pstm-100409} Parameters: [100043]>
2018-01-30 14:35:26,001 DEBUG [java.sql.PreparedStatement] - <{pstm-100409} Types: [java.lang.String]>
2018-01-30 14:35:26,003 DEBUG [java.sql.ResultSet] - <{rset-100410} ResultSet>
2018-01-30 14:35:26,003 DEBUG [java.sql.ResultSet] - <{rset-100410} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 14:35:26,003 DEBUG [java.sql.ResultSet] - <{rset-100410} Result: [010502, 收费报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-01-30 14:35:26,004 DEBUG [java.sql.ResultSet] - <{rset-100410} Result: [010501, 基础报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-01-30 14:35:26,004 DEBUG [java.sql.ResultSet] - <{rset-100410} Result: [01050202, 欠费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050201, 1, false, false, tab_blank.png]>
2018-01-30 14:35:26,004 DEBUG [java.sql.ResultSet] - <{rset-100410} Result: [01050101, 用户情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=f01050101, 1, false, false, tab_blank.png]>
2018-01-30 14:35:26,004 DEBUG [java.sql.ResultSet] - <{rset-100410} Result: [01050102, 入网情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=w01050301, 1, false, false, tab_blank.png]>
2018-01-30 14:35:26,005 DEBUG [java.sql.ResultSet] - <{rset-100410} Result: [01050203, 收费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050202, 1, false, false, tab_blank.png]>
2018-01-30 14:35:26,005 DEBUG [java.sql.ResultSet] - <{rset-100410} Result: [01050201, 收费情况表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050401, 1, false, false, tab_blank.png]>
2018-01-30 14:35:26,005 DEBUG [java.sql.ResultSet] - <{rset-100410} Result: [0105, 统计分析, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 14:35:26,005 DEBUG [java.sql.ResultSet] - <{rset-100410} Result: [01050204, 减免明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050204, 1, false, false, tab_blank.png]>
2018-01-30 14:35:26,005 DEBUG [java.sql.Connection] - <{conn-100411} Connection>
2018-01-30 14:35:26,005 DEBUG [java.sql.Connection] - <{conn-100411} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 14:35:26,006 DEBUG [java.sql.PreparedStatement] - <{pstm-100412} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 14:35:26,006 DEBUG [java.sql.PreparedStatement] - <{pstm-100412} Parameters: [100043]>
2018-01-30 14:35:26,006 DEBUG [java.sql.PreparedStatement] - <{pstm-100412} Types: [java.lang.String]>
2018-01-30 14:35:26,007 DEBUG [java.sql.ResultSet] - <{rset-100413} ResultSet>
2018-01-30 14:35:26,008 DEBUG [java.sql.Connection] - <{conn-100414} Connection>
2018-01-30 14:35:26,008 DEBUG [java.sql.Connection] - <{conn-100414} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 14:35:26,008 DEBUG [java.sql.PreparedStatement] - <{pstm-100415} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 14:35:26,008 DEBUG [java.sql.PreparedStatement] - <{pstm-100415} Parameters: [01]>
2018-01-30 14:35:26,008 DEBUG [java.sql.PreparedStatement] - <{pstm-100415} Types: [java.lang.String]>
2018-01-30 14:35:26,013 DEBUG [java.sql.ResultSet] - <{rset-100416} ResultSet>
2018-01-30 14:35:26,013 DEBUG [java.sql.ResultSet] - <{rset-100416} Header: [menuname]>
2018-01-30 14:35:26,013 DEBUG [java.sql.ResultSet] - <{rset-100416} Result: [供热收费管理信息系统]>
2018-01-30 14:35:26,024 DEBUG [java.sql.Connection] - <{conn-100417} Connection>
2018-01-30 14:35:26,025 DEBUG [java.sql.Connection] - <{conn-100417} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 14:35:26,025 DEBUG [java.sql.PreparedStatement] - <{pstm-100418} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 14:35:26,025 DEBUG [java.sql.PreparedStatement] - <{pstm-100418} Parameters: [100043]>
2018-01-30 14:35:26,025 DEBUG [java.sql.PreparedStatement] - <{pstm-100418} Types: [java.lang.String]>
2018-01-30 14:35:26,027 DEBUG [java.sql.ResultSet] - <{rset-100419} ResultSet>
2018-01-30 14:35:26,028 DEBUG [java.sql.ResultSet] - <{rset-100419} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 14:35:26,028 DEBUG [java.sql.ResultSet] - <{rset-100419} Result: [01010305, 优惠设置, server_connectIcon, 010103, module/dic.ered?reqCode=discountInit, 1, false, false, server_connect.png]>
2018-01-30 14:35:26,028 DEBUG [java.sql.ResultSet] - <{rset-100419} Result: [01010304, 收费标准, server_connectIcon, 010103, module/std.ered?reqCode=standardInit, 1, false, false, server_connect.png]>
2018-01-30 14:35:26,028 DEBUG [java.sql.ResultSet] - <{rset-100419} Result: [010102, 权限管理, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 14:35:26,028 DEBUG [java.sql.ResultSet] - <{rset-100419} Result: [01010201, 组织机构管理, chart_organisationIcon, 010102, organization.ered?reqCode=departmentInit, 1, false, false, chart_organisation.png]>
2018-01-30 14:35:26,028 DEBUG [java.sql.ResultSet] - <{rset-100419} Result: [01010301, 字典维护, application_view_listIcon, 010103, resource.ered?reqCode=codeTableInit, 1, false, false, application_view_list.png]>
2018-01-30 14:35:26,028 DEBUG [java.sql.ResultSet] - <{rset-100419} Result: [01010403, Requst请求跟踪, server_connectIcon, 010104, eventTrack.ered?reqCode=init, 1, false, false, server_connect.png]>
2018-01-30 14:35:26,028 DEBUG [java.sql.ResultSet] - <{rset-100419} Result: [01010401, Session会话监控, user_commentIcon, 010104, sessionMonitor.ered?reqCode=init, 1, false, false, user_comment.png]>
2018-01-30 14:35:26,029 DEBUG [java.sql.ResultSet] - <{rset-100419} Result: [01010204, 角色管理与授权, award_star_silver_3Icon, 010102, role.ered?reqCode=roleInit, 1, false, false, award_star_silver_3.png]>
2018-01-30 14:35:26,029 DEBUG [java.sql.ResultSet] - <{rset-100419} Result: [01010303, 全局参数表维护, configIcon, 010103, param.ered?reqCode=init, 1, false, false, config.png]>
2018-01-30 14:35:26,029 DEBUG [java.sql.ResultSet] - <{rset-100419} Result: [010103, 基础数据维护, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 14:35:26,029 DEBUG [java.sql.ResultSet] - <{rset-100419} Result: [010104, 运行监控, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 14:35:26,031 DEBUG [java.sql.ResultSet] - <{rset-100419} Result: [01010202, 人员管理与授权, group_linkIcon, 010102, user.ered?reqCode=userInit, 1, false, false, group_link.png]>
2018-01-30 14:35:26,031 DEBUG [java.sql.ResultSet] - <{rset-100419} Result: [01010405, JDBC执行监控, database_refreshIcon, 010104, jdbcMonitor.ered?reqCode=jdbcInit, 1, false, false, database_refresh.png]>
2018-01-30 14:35:26,031 DEBUG [java.sql.ResultSet] - <{rset-100419} Result: [01010406, Service监控, pluginIcon, 010104, beanMonitor.ered?reqCode=init, 1, false, false, plugin.png]>
2018-01-30 14:35:26,031 DEBUG [java.sql.ResultSet] - <{rset-100419} Result: [01010205, 菜单资源管理, layout_contentIcon, 010102, resource.ered?reqCode=menuResourceInit, 1, false, false, layout_content.png]>
2018-01-30 14:35:26,031 DEBUG [java.sql.ResultSet] - <{rset-100419} Result: [0101, 系统管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 14:35:26,031 DEBUG [java.sql.Connection] - <{conn-100420} Connection>
2018-01-30 14:35:26,031 DEBUG [java.sql.Connection] - <{conn-100420} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 14:35:26,032 DEBUG [java.sql.PreparedStatement] - <{pstm-100421} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 14:35:26,032 DEBUG [java.sql.PreparedStatement] - <{pstm-100421} Parameters: [100043]>
2018-01-30 14:35:26,032 DEBUG [java.sql.PreparedStatement] - <{pstm-100421} Types: [java.lang.String]>
2018-01-30 14:35:26,033 DEBUG [java.sql.ResultSet] - <{rset-100422} ResultSet>
2018-01-30 14:35:26,034 DEBUG [java.sql.Connection] - <{conn-100423} Connection>
2018-01-30 14:35:26,034 DEBUG [java.sql.Connection] - <{conn-100423} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 14:35:26,034 DEBUG [java.sql.PreparedStatement] - <{pstm-100424} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 14:35:26,034 DEBUG [java.sql.PreparedStatement] - <{pstm-100424} Parameters: [01]>
2018-01-30 14:35:26,035 DEBUG [java.sql.PreparedStatement] - <{pstm-100424} Types: [java.lang.String]>
2018-01-30 14:35:26,036 DEBUG [java.sql.ResultSet] - <{rset-100425} ResultSet>
2018-01-30 14:35:26,036 DEBUG [java.sql.ResultSet] - <{rset-100425} Header: [menuname]>
2018-01-30 14:35:26,036 DEBUG [java.sql.ResultSet] - <{rset-100425} Result: [供热收费管理信息系统]>
2018-01-30 14:35:26,490 DEBUG [java.sql.Connection] - <{conn-100426} Connection>
2018-01-30 14:35:26,490 DEBUG [java.sql.Connection] - <{conn-100426} Preparing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-01-30 14:35:26,490 DEBUG [java.sql.PreparedStatement] - <{pstm-100427} Executing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-01-30 14:35:26,491 DEBUG [java.sql.PreparedStatement] - <{pstm-100427} Parameters: []>
2018-01-30 14:35:26,491 DEBUG [java.sql.PreparedStatement] - <{pstm-100427} Types: []>
2018-01-30 14:35:26,492 DEBUG [java.sql.ResultSet] - <{rset-100428} ResultSet>
2018-01-30 14:35:26,492 DEBUG [java.sql.ResultSet] - <{rset-100428} Header: [id, text, child_count]>
2018-01-30 14:35:26,492 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0101, 0101 经贸局家属楼 (3), 3]>
2018-01-30 14:35:26,493 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0102, 0102 法院家属楼 (2), 2]>
2018-01-30 14:35:26,493 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0103, 0103 长治县电视台 (1), 1]>
2018-01-30 14:35:26,493 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0104, 0104 广播北二巷（一至三排） (1), 1]>
2018-01-30 14:35:26,495 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0105, 0105 广播南二巷（公安家属西五排） (1), 1]>
2018-01-30 14:35:26,495 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0106, 0106 广播北四巷第一组（南6户） (1), 1]>
2018-01-30 14:35:26,495 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0107, 0107 广播北四巷第一组（北19户） (1), 1]>
2018-01-30 14:35:26,495 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0108, 0108 广播北四巷第二组（16户） (1), 1]>
2018-01-30 14:35:26,495 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0109, 0109 工业巷北一排-北八排 (1), 1]>
2018-01-30 14:35:26,498 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0110, 0110 法院家属院17户 (1), 1]>
2018-01-30 14:35:26,498 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0111, 0111 公安西家属区60户 (1), 1]>
2018-01-30 14:35:26,498 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0112, 0112 建筑工程公司 (2), 2]>
2018-01-30 14:35:26,498 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0113, 0113 工会家属楼 (1), 1]>
2018-01-30 14:35:26,498 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0114, 0114 工会二层独院5户 (1), 1]>
2018-01-30 14:35:26,503 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0115, 0115 政府平房南一排 (2), 2]>
2018-01-30 14:35:26,503 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0116, 0116 政府平房南二排6户 (1), 1]>
2018-01-30 14:35:26,503 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0117, 0117 政府平房南三排5户 (1), 1]>
2018-01-30 14:35:26,503 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0118, 0118 政府平房南四排4户 (1), 1]>
2018-01-30 14:35:26,503 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0119, 0119 政府平房南五排5户（北二排） (1), 1]>
2018-01-30 14:35:26,504 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0120, 0120 政府平房南六排5户（北一排） (1), 1]>
2018-01-30 14:35:26,504 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0121, 0121 政府平房后六户 (1), 1]>
2018-01-30 14:35:26,504 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0122, 0122 政府第三家属楼32户 (1), 1]>
2018-01-30 14:35:26,504 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0123, 0123 政府黄楼家属区 (1), 1]>
2018-01-30 14:35:26,504 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0124, 0124 五交化家属楼 (2), 2]>
2018-01-30 14:35:26,505 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0125, 0125 通达供销公司综合楼 (1), 1]>
2018-01-30 14:35:26,505 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0126, 0126 供销联社家属楼 (3), 3]>
2018-01-30 14:35:26,505 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [0127, 0127 二轻局底商 (1), 1]>
2018-01-30 14:35:26,505 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [2001, 2001 南董村西南一巷 (1), 1]>
2018-01-30 14:35:26,505 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [2002, 2002 南董村正街路北 (1), 1]>
2018-01-30 14:35:26,506 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [2003, 2003 南董村正街路南 (1), 1]>
2018-01-30 14:35:26,506 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [2004, 2004 南董村西散户 (1), 1]>
2018-01-30 14:35:26,506 DEBUG [java.sql.ResultSet] - <{rset-100428} Result: [2005, 2005 伍龙小区 (3), 3]>
2018-01-30 14:35:26,768 DEBUG [java.sql.Connection] - <{conn-100429} Connection>
2018-01-30 14:35:26,769 DEBUG [java.sql.Connection] - <{conn-100429} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 14:35:26,769 DEBUG [java.sql.PreparedStatement] - <{pstm-100430} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 14:35:26,769 DEBUG [java.sql.PreparedStatement] - <{pstm-100430} Parameters: [100043]>
2018-01-30 14:35:26,769 DEBUG [java.sql.PreparedStatement] - <{pstm-100430} Types: [java.lang.String]>
2018-01-30 14:35:26,771 DEBUG [java.sql.ResultSet] - <{rset-100431} ResultSet>
2018-01-30 14:35:26,771 DEBUG [java.sql.ResultSet] - <{rset-100431} Header: [theme]>
2018-01-30 14:35:26,771 DEBUG [java.sql.ResultSet] - <{rset-100431} Result: [default]>
2018-01-30 14:35:30,592 DEBUG [java.sql.Connection] - <{conn-100432} Connection>
2018-01-30 14:35:30,592 DEBUG [java.sql.Connection] - <{conn-100432} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 14:35:30,592 DEBUG [java.sql.PreparedStatement] - <{pstm-100433} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 14:35:30,592 DEBUG [java.sql.PreparedStatement] - <{pstm-100433} Parameters: [100043]>
2018-01-30 14:35:30,592 DEBUG [java.sql.PreparedStatement] - <{pstm-100433} Types: [java.lang.String]>
2018-01-30 14:35:30,594 DEBUG [java.sql.ResultSet] - <{rset-100434} ResultSet>
2018-01-30 14:35:30,594 DEBUG [java.sql.ResultSet] - <{rset-100434} Header: [theme]>
2018-01-30 14:35:30,594 DEBUG [java.sql.ResultSet] - <{rset-100434} Result: [default]>
2018-01-30 14:35:30,963 DEBUG [java.sql.Connection] - <{conn-100435} Connection>
2018-01-30 14:35:30,963 DEBUG [java.sql.Connection] - <{conn-100435} Preparing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-30 14:35:30,963 DEBUG [java.sql.PreparedStatement] - <{pstm-100436} Executing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-30 14:35:30,963 DEBUG [java.sql.PreparedStatement] - <{pstm-100436} Parameters: []>
2018-01-30 14:35:30,963 DEBUG [java.sql.PreparedStatement] - <{pstm-100436} Types: []>
2018-01-30 14:35:30,965 DEBUG [java.sql.ResultSet] - <{rset-100437} ResultSet>
2018-01-30 14:35:30,965 DEBUG [java.sql.ResultSet] - <{rset-100437} Header: [value, text]>
2018-01-30 14:35:30,965 DEBUG [java.sql.ResultSet] - <{rset-100437} Result: [A, 供热费]>
2018-01-30 14:35:30,965 DEBUG [java.sql.ResultSet] - <{rset-100437} Result: [B, 入网费]>
2018-01-30 14:35:30,999 DEBUG [java.sql.Connection] - <{conn-100438} Connection>
2018-01-30 14:35:30,999 DEBUG [java.sql.Connection] - <{conn-100438} Preparing Statement:   SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD') currentDate FROM DUAL  >
2018-01-30 14:35:30,999 DEBUG [java.sql.PreparedStatement] - <{pstm-100439} Executing Statement:   SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD') currentDate FROM DUAL  >
2018-01-30 14:35:30,999 DEBUG [java.sql.PreparedStatement] - <{pstm-100439} Parameters: []>
2018-01-30 14:35:30,999 DEBUG [java.sql.PreparedStatement] - <{pstm-100439} Types: []>
2018-01-30 14:35:31,000 DEBUG [java.sql.ResultSet] - <{rset-100440} ResultSet>
2018-01-30 14:35:31,001 DEBUG [java.sql.ResultSet] - <{rset-100440} Header: [currentdate]>
2018-01-30 14:35:31,001 DEBUG [java.sql.ResultSet] - <{rset-100440} Result: [2018-01-30]>
2018-01-30 14:35:32,752 DEBUG [java.sql.Connection] - <{conn-100441} Connection>
2018-01-30 14:35:32,753 DEBUG [java.sql.Connection] - <{conn-100441} Preparing Statement:    select pay_mode,count(house_code) house_count,   sum(real_charge) real_charge    from (   select     b.bill_date ,        e.community_name,     b.community_code,     b.building_code,     b.house_code,        b.owner_name,        b.charge_price,      b.charge_area,      b.USE_PREPAY,       b.PAY_MODE,       f.invoice_code,       f.invoice_number,     c.userName operatorName,     b.operator,       b.operate_date,      b.item_code,      b.charge_type,      case when b.charge_month='0' then '' else b.charge_month end as charge_month,       b.real_charge ,     case when g.status='2' then 1 else 0 end cancelCount   from      SF_DETAIL b,EAUSER c,SF_ITEM d,FC_COMMUNITY e,SF_INVOICEUSE f,sf_invoice g   where      b.community_code=e.community_code     and b.operator=c.userid     and b.item_code=d.item_code     and b.b_id=f.b_id(+)     and b.rollback_flag='0'     and f.invoice_code=g.invoice_code(+)     and f.invoice_number=g.invoice_number(+)     and f.item_code=g.item_code(+)     and f.invoice_type=g.invoice_type(+)    ) a  where 1=1      AND          operate_date>='2018-01-30 00:00:00'      AND          operate_date<='2018-01-30 23:59:59'               group by pay_mode  >
2018-01-30 14:35:32,753 DEBUG [java.sql.PreparedStatement] - <{pstm-100442} Executing Statement:    select pay_mode,count(house_code) house_count,   sum(real_charge) real_charge    from (   select     b.bill_date ,        e.community_name,     b.community_code,     b.building_code,     b.house_code,        b.owner_name,        b.charge_price,      b.charge_area,      b.USE_PREPAY,       b.PAY_MODE,       f.invoice_code,       f.invoice_number,     c.userName operatorName,     b.operator,       b.operate_date,      b.item_code,      b.charge_type,      case when b.charge_month='0' then '' else b.charge_month end as charge_month,       b.real_charge ,     case when g.status='2' then 1 else 0 end cancelCount   from      SF_DETAIL b,EAUSER c,SF_ITEM d,FC_COMMUNITY e,SF_INVOICEUSE f,sf_invoice g   where      b.community_code=e.community_code     and b.operator=c.userid     and b.item_code=d.item_code     and b.b_id=f.b_id(+)     and b.rollback_flag='0'     and f.invoice_code=g.invoice_code(+)     and f.invoice_number=g.invoice_number(+)     and f.item_code=g.item_code(+)     and f.invoice_type=g.invoice_type(+)    ) a  where 1=1      AND          operate_date>='2018-01-30 00:00:00'      AND          operate_date<='2018-01-30 23:59:59'               group by pay_mode  >
2018-01-30 14:35:32,753 DEBUG [java.sql.PreparedStatement] - <{pstm-100442} Parameters: []>
2018-01-30 14:35:32,753 DEBUG [java.sql.PreparedStatement] - <{pstm-100442} Types: []>
2018-01-30 14:35:32,755 DEBUG [java.sql.ResultSet] - <{rset-100443} ResultSet>
2018-01-30 14:35:32,756 DEBUG [java.sql.ResultSet] - <{rset-100443} Header: [pay_mode, house_count, real_charge]>
2018-01-30 14:35:32,756 DEBUG [java.sql.ResultSet] - <{rset-100443} Result: [现金, 1, 2800.28]>
2018-01-30 15:06:02,301 DEBUG [java.sql.Connection] - <{conn-100444} Connection>
2018-01-30 15:06:02,302 DEBUG [java.sql.Connection] - <{conn-100444} Preparing Statement:    DELETE      FROM eahttpsession   WHERE                sessionid = ?                >
2018-01-30 15:06:02,303 DEBUG [java.sql.PreparedStatement] - <{pstm-100445} Executing Statement:    DELETE      FROM eahttpsession   WHERE                sessionid = ?                >
2018-01-30 15:06:02,303 DEBUG [java.sql.PreparedStatement] - <{pstm-100445} Parameters: [wz0agy6euj2u]>
2018-01-30 15:06:02,303 DEBUG [java.sql.PreparedStatement] - <{pstm-100445} Types: [java.lang.String]>
2018-01-30 15:28:43,234 DEBUG [java.sql.Connection] - <{conn-100446} Connection>
2018-01-30 15:28:43,236 DEBUG [java.sql.Connection] - <{conn-100446} Preparing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-01-30 15:28:43,236 DEBUG [java.sql.PreparedStatement] - <{pstm-100447} Executing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-01-30 15:28:43,236 DEBUG [java.sql.PreparedStatement] - <{pstm-100447} Parameters: [0, admin]>
2018-01-30 15:28:43,236 DEBUG [java.sql.PreparedStatement] - <{pstm-100447} Types: [java.lang.String, java.lang.String]>
2018-01-30 15:28:43,237 DEBUG [java.sql.ResultSet] - <{rset-100448} ResultSet>
2018-01-30 15:28:43,238 DEBUG [java.sql.ResultSet] - <{rset-100448} Header: [userid, username, account, password, sex, deptid, theme, customid, customname]>
2018-01-30 15:28:43,238 DEBUG [java.sql.ResultSet] - <{rset-100448} Result: [100043, 管理员, admin, RaFutWeh0ww=, 0, 001, default, 01, 供热]>
2018-01-30 15:28:43,239 DEBUG [java.sql.Connection] - <{conn-100449} Connection>
2018-01-30 15:28:43,239 DEBUG [java.sql.Connection] - <{conn-100449} Preparing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-01-30 15:28:43,239 DEBUG [java.sql.PreparedStatement] - <{pstm-100450} Executing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-01-30 15:28:43,239 DEBUG [java.sql.PreparedStatement] - <{pstm-100450} Parameters: [1b1x5kzocxopm]>
2018-01-30 15:28:43,239 DEBUG [java.sql.PreparedStatement] - <{pstm-100450} Types: [java.lang.String]>
2018-01-30 15:28:43,241 DEBUG [java.sql.ResultSet] - <{rset-100451} ResultSet>
2018-01-30 15:28:43,241 DEBUG [java.sql.Connection] - <{conn-100452} Connection>
2018-01-30 15:28:43,242 DEBUG [java.sql.Connection] - <{conn-100452} Preparing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-01-30 15:28:43,242 DEBUG [java.sql.PreparedStatement] - <{pstm-100453} Executing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-01-30 15:28:43,242 DEBUG [java.sql.PreparedStatement] - <{pstm-100453} Parameters: [1b1x5kzocxopm, 管理员, admin, 2018-01-30 15:28:43, 127.0.0.1, 100043, FIREFOX/57.]>
2018-01-30 15:28:43,242 DEBUG [java.sql.PreparedStatement] - <{pstm-100453} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-30 15:28:43,307 DEBUG [java.sql.Connection] - <{conn-100454} Connection>
2018-01-30 15:28:43,307 DEBUG [java.sql.Connection] - <{conn-100454} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 15:28:43,308 DEBUG [java.sql.PreparedStatement] - <{pstm-100455} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 15:28:43,308 DEBUG [java.sql.PreparedStatement] - <{pstm-100455} Parameters: [100043]>
2018-01-30 15:28:43,308 DEBUG [java.sql.PreparedStatement] - <{pstm-100455} Types: [java.lang.String]>
2018-01-30 15:28:43,314 DEBUG [java.sql.ResultSet] - <{rset-100456} ResultSet>
2018-01-30 15:28:43,314 DEBUG [java.sql.ResultSet] - <{rset-100456} Header: [theme]>
2018-01-30 15:28:43,314 DEBUG [java.sql.ResultSet] - <{rset-100456} Result: [default]>
2018-01-30 15:28:43,357 DEBUG [java.sql.Connection] - <{conn-100457} Connection>
2018-01-30 15:28:43,358 DEBUG [java.sql.Connection] - <{conn-100457} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 15:28:43,358 DEBUG [java.sql.PreparedStatement] - <{pstm-100458} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 15:28:43,358 DEBUG [java.sql.PreparedStatement] - <{pstm-100458} Parameters: [100043]>
2018-01-30 15:28:43,358 DEBUG [java.sql.PreparedStatement] - <{pstm-100458} Types: [java.lang.String]>
2018-01-30 15:28:43,362 DEBUG [java.sql.ResultSet] - <{rset-100459} ResultSet>
2018-01-30 15:28:43,362 DEBUG [java.sql.ResultSet] - <{rset-100459} Header: [menuid, menuname, iconcls]>
2018-01-30 15:28:43,362 DEBUG [java.sql.ResultSet] - <{rset-100459} Result: [0103, 基础信息, null]>
2018-01-30 15:28:43,362 DEBUG [java.sql.ResultSet] - <{rset-100459} Result: [0104, 收费管理, null]>
2018-01-30 15:28:43,362 DEBUG [java.sql.ResultSet] - <{rset-100459} Result: [0105, 统计分析, null]>
2018-01-30 15:28:43,362 DEBUG [java.sql.ResultSet] - <{rset-100459} Result: [0101, 系统管理, null]>
2018-01-30 15:28:43,363 DEBUG [java.sql.Connection] - <{conn-100460} Connection>
2018-01-30 15:28:43,363 DEBUG [java.sql.Connection] - <{conn-100460} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-01-30 15:28:43,363 DEBUG [java.sql.PreparedStatement] - <{pstm-100461} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-01-30 15:28:43,363 DEBUG [java.sql.PreparedStatement] - <{pstm-100461} Parameters: [100043]>
2018-01-30 15:28:43,363 DEBUG [java.sql.PreparedStatement] - <{pstm-100461} Types: [java.lang.String]>
2018-01-30 15:28:43,365 DEBUG [java.sql.ResultSet] - <{rset-100462} ResultSet>
2018-01-30 15:28:43,367 DEBUG [java.sql.Connection] - <{conn-100463} Connection>
2018-01-30 15:28:43,367 DEBUG [java.sql.Connection] - <{conn-100463} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 15:28:43,367 DEBUG [java.sql.PreparedStatement] - <{pstm-100464} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 15:28:43,367 DEBUG [java.sql.PreparedStatement] - <{pstm-100464} Parameters: [001]>
2018-01-30 15:28:43,367 DEBUG [java.sql.PreparedStatement] - <{pstm-100464} Types: [java.lang.String]>
2018-01-30 15:28:43,369 DEBUG [java.sql.ResultSet] - <{rset-100465} ResultSet>
2018-01-30 15:28:43,369 DEBUG [java.sql.ResultSet] - <{rset-100465} Header: [deptid, deptname]>
2018-01-30 15:28:43,369 DEBUG [java.sql.ResultSet] - <{rset-100465} Result: [001, XX供热公司]>
2018-01-30 15:28:43,369 DEBUG [java.sql.Connection] - <{conn-100466} Connection>
2018-01-30 15:28:43,369 DEBUG [java.sql.Connection] - <{conn-100466} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 15:28:43,370 DEBUG [java.sql.PreparedStatement] - <{pstm-100467} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 15:28:43,370 DEBUG [java.sql.PreparedStatement] - <{pstm-100467} Parameters: [001]>
2018-01-30 15:28:43,370 DEBUG [java.sql.PreparedStatement] - <{pstm-100467} Types: [java.lang.String]>
2018-01-30 15:28:43,371 DEBUG [java.sql.ResultSet] - <{rset-100468} ResultSet>
2018-01-30 15:28:43,371 DEBUG [java.sql.ResultSet] - <{rset-100468} Header: [deptid, deptname]>
2018-01-30 15:28:43,371 DEBUG [java.sql.ResultSet] - <{rset-100468} Result: [001, XX供热公司]>
2018-01-30 15:28:43,372 DEBUG [java.sql.Connection] - <{conn-100469} Connection>
2018-01-30 15:28:43,372 DEBUG [java.sql.Connection] - <{conn-100469} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 15:28:43,372 DEBUG [java.sql.PreparedStatement] - <{pstm-100470} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 15:28:43,373 DEBUG [java.sql.PreparedStatement] - <{pstm-100470} Parameters: [100043]>
2018-01-30 15:28:43,373 DEBUG [java.sql.PreparedStatement] - <{pstm-100470} Types: [java.lang.String]>
2018-01-30 15:28:43,374 DEBUG [java.sql.ResultSet] - <{rset-100471} ResultSet>
2018-01-30 15:28:43,374 DEBUG [java.sql.ResultSet] - <{rset-100471} Header: [theme]>
2018-01-30 15:28:43,374 DEBUG [java.sql.ResultSet] - <{rset-100471} Result: [default]>
2018-01-30 15:28:43,515 DEBUG [java.sql.Connection] - <{conn-100472} Connection>
2018-01-30 15:28:43,515 DEBUG [java.sql.Connection] - <{conn-100472} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 15:28:43,516 DEBUG [java.sql.PreparedStatement] - <{pstm-100473} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 15:28:43,516 DEBUG [java.sql.PreparedStatement] - <{pstm-100473} Parameters: [100043]>
2018-01-30 15:28:43,516 DEBUG [java.sql.PreparedStatement] - <{pstm-100473} Types: [java.lang.String]>
2018-01-30 15:28:43,518 DEBUG [java.sql.ResultSet] - <{rset-100474} ResultSet>
2018-01-30 15:28:43,518 DEBUG [java.sql.ResultSet] - <{rset-100474} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 15:28:43,518 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [01030404, 新建换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,518 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [01030403, 删除热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,519 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [01030406, 删除换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,519 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [010305, 入网管理, null, 0103, module/iw.ered?reqCode=intoWebInit, 0, false, false, tab_blank.png]>
2018-01-30 15:28:43,519 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [01030405, 修改换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,519 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [01030401, 新建热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,519 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [01030201, 选择导入文件, null, 010302, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,519 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [01030312, 删除面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,519 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [0103, 基础信息, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 15:28:43,520 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [01030311, 修改面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,520 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [01030301, 新建小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,520 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [01030310, 添加面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,520 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [010304, 热源站所管理, null, 0103, module/sr.ered?reqCode=sourceInit, 0, false, false, tab_blank.png]>
2018-01-30 15:28:43,520 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [01030313, 删除面积1, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,520 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [01030202, 导入模板下载, null, 010302, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,520 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [01030501, 新增入网, null, 010305, null, 1, false, true, tab_blank.png]>
2018-01-30 15:28:43,520 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [01030402, 修改热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,520 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [010303, 基础信息维护, null, 0103, module/fc.ered?reqCode=communityInit, 0, false, false, tab_blank.png]>
2018-01-30 15:28:43,521 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [01030502, 修改入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,521 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [01030302, 修改小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,521 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [010302, 基础数据导入, null, 0103, module/importHouse.ered?reqCode=importInit, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,521 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [01030303, 删除小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,522 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [01030503, 删除入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,522 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [01030304, 新建大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,522 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [01030305, 修改大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,522 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [01030306, 删除大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,522 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [01030307, 新建用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,522 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [01030308, 修改用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,523 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [01030309, 删除用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,523 DEBUG [java.sql.Connection] - <{conn-100475} Connection>
2018-01-30 15:28:43,523 DEBUG [java.sql.Connection] - <{conn-100475} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 15:28:43,523 DEBUG [java.sql.PreparedStatement] - <{pstm-100476} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 15:28:43,523 DEBUG [java.sql.PreparedStatement] - <{pstm-100476} Parameters: [100043]>
2018-01-30 15:28:43,523 DEBUG [java.sql.PreparedStatement] - <{pstm-100476} Types: [java.lang.String]>
2018-01-30 15:28:43,525 DEBUG [java.sql.ResultSet] - <{rset-100477} ResultSet>
2018-01-30 15:28:43,525 DEBUG [java.sql.Connection] - <{conn-100478} Connection>
2018-01-30 15:28:43,525 DEBUG [java.sql.Connection] - <{conn-100478} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 15:28:43,525 DEBUG [java.sql.PreparedStatement] - <{pstm-100479} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 15:28:43,525 DEBUG [java.sql.PreparedStatement] - <{pstm-100479} Parameters: [01]>
2018-01-30 15:28:43,526 DEBUG [java.sql.PreparedStatement] - <{pstm-100479} Types: [java.lang.String]>
2018-01-30 15:28:43,527 DEBUG [java.sql.ResultSet] - <{rset-100480} ResultSet>
2018-01-30 15:28:43,528 DEBUG [java.sql.ResultSet] - <{rset-100480} Header: [menuname]>
2018-01-30 15:28:43,528 DEBUG [java.sql.ResultSet] - <{rset-100480} Result: [供热收费管理信息系统]>
2018-01-30 15:28:43,539 DEBUG [java.sql.Connection] - <{conn-100481} Connection>
2018-01-30 15:28:43,540 DEBUG [java.sql.Connection] - <{conn-100481} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 15:28:43,541 DEBUG [java.sql.PreparedStatement] - <{pstm-100482} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 15:28:43,541 DEBUG [java.sql.PreparedStatement] - <{pstm-100482} Parameters: [100043]>
2018-01-30 15:28:43,541 DEBUG [java.sql.PreparedStatement] - <{pstm-100482} Types: [java.lang.String]>
2018-01-30 15:28:43,544 DEBUG [java.sql.ResultSet] - <{rset-100483} ResultSet>
2018-01-30 15:28:43,544 DEBUG [java.sql.ResultSet] - <{rset-100483} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 15:28:43,544 DEBUG [java.sql.ResultSet] - <{rset-100483} Result: [010402, 收费管理, null, 0104, module/chg.ered?reqCode=chargeInit, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,544 DEBUG [java.sql.ResultSet] - <{rset-100483} Result: [01040503, 作废票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,544 DEBUG [java.sql.ResultSet] - <{rset-100483} Result: [01040501, 票据入库, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,544 DEBUG [java.sql.ResultSet] - <{rset-100483} Result: [01040401, 冲账, null, 010404, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,545 DEBUG [java.sql.ResultSet] - <{rset-100483} Result: [01040101, 生成应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,545 DEBUG [java.sql.ResultSet] - <{rset-100483} Result: [01040505, 领用票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,545 DEBUG [java.sql.ResultSet] - <{rset-100483} Result: [01040302, 删除减免, null, 010403, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,545 DEBUG [java.sql.ResultSet] - <{rset-100483} Result: [01040301, 减免应收, null, 010403, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,545 DEBUG [java.sql.ResultSet] - <{rset-100483} Result: [01040502, 删除票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,546 DEBUG [java.sql.ResultSet] - <{rset-100483} Result: [01040201, 收费, null, 010402, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,546 DEBUG [java.sql.ResultSet] - <{rset-100483} Result: [01040102, 删除应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,546 DEBUG [java.sql.ResultSet] - <{rset-100483} Result: [01040504, 返还票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,547 DEBUG [java.sql.ResultSet] - <{rset-100483} Result: [010401, 生成应收, null, 0104, module/crp.ered?reqCode=creatPlanInit, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,547 DEBUG [java.sql.ResultSet] - <{rset-100483} Result: [0104, 收费管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 15:28:43,547 DEBUG [java.sql.ResultSet] - <{rset-100483} Result: [010403, 减免管理, null, 0104, module/mns.ered?reqCode=minusInit, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,547 DEBUG [java.sql.ResultSet] - <{rset-100483} Result: [010404, 冲账管理, null, 0104, module/rlb.ered?reqCode=rollbackInit, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,547 DEBUG [java.sql.ResultSet] - <{rset-100483} Result: [010405, 票据管理, null, 0104, module/inv.ered?reqCode=invoiceInit, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,547 DEBUG [java.sql.Connection] - <{conn-100484} Connection>
2018-01-30 15:28:43,547 DEBUG [java.sql.Connection] - <{conn-100484} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 15:28:43,547 DEBUG [java.sql.PreparedStatement] - <{pstm-100485} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 15:28:43,548 DEBUG [java.sql.PreparedStatement] - <{pstm-100485} Parameters: [100043]>
2018-01-30 15:28:43,548 DEBUG [java.sql.PreparedStatement] - <{pstm-100485} Types: [java.lang.String]>
2018-01-30 15:28:43,549 DEBUG [java.sql.ResultSet] - <{rset-100486} ResultSet>
2018-01-30 15:28:43,549 DEBUG [java.sql.Connection] - <{conn-100487} Connection>
2018-01-30 15:28:43,550 DEBUG [java.sql.Connection] - <{conn-100487} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 15:28:43,550 DEBUG [java.sql.PreparedStatement] - <{pstm-100488} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 15:28:43,550 DEBUG [java.sql.PreparedStatement] - <{pstm-100488} Parameters: [01]>
2018-01-30 15:28:43,550 DEBUG [java.sql.PreparedStatement] - <{pstm-100488} Types: [java.lang.String]>
2018-01-30 15:28:43,551 DEBUG [java.sql.ResultSet] - <{rset-100489} ResultSet>
2018-01-30 15:28:43,551 DEBUG [java.sql.ResultSet] - <{rset-100489} Header: [menuname]>
2018-01-30 15:28:43,551 DEBUG [java.sql.ResultSet] - <{rset-100489} Result: [供热收费管理信息系统]>
2018-01-30 15:28:43,563 DEBUG [java.sql.Connection] - <{conn-100490} Connection>
2018-01-30 15:28:43,563 DEBUG [java.sql.Connection] - <{conn-100490} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 15:28:43,564 DEBUG [java.sql.PreparedStatement] - <{pstm-100491} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 15:28:43,564 DEBUG [java.sql.PreparedStatement] - <{pstm-100491} Parameters: [100043]>
2018-01-30 15:28:43,564 DEBUG [java.sql.PreparedStatement] - <{pstm-100491} Types: [java.lang.String]>
2018-01-30 15:28:43,566 DEBUG [java.sql.ResultSet] - <{rset-100492} ResultSet>
2018-01-30 15:28:43,566 DEBUG [java.sql.ResultSet] - <{rset-100492} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 15:28:43,566 DEBUG [java.sql.ResultSet] - <{rset-100492} Result: [010502, 收费报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-01-30 15:28:43,566 DEBUG [java.sql.ResultSet] - <{rset-100492} Result: [010501, 基础报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-01-30 15:28:43,566 DEBUG [java.sql.ResultSet] - <{rset-100492} Result: [01050202, 欠费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050201, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,566 DEBUG [java.sql.ResultSet] - <{rset-100492} Result: [01050101, 用户情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=f01050101, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,566 DEBUG [java.sql.ResultSet] - <{rset-100492} Result: [01050102, 入网情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=w01050301, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,566 DEBUG [java.sql.ResultSet] - <{rset-100492} Result: [01050203, 收费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050202, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,566 DEBUG [java.sql.ResultSet] - <{rset-100492} Result: [01050201, 收费情况表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050401, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,566 DEBUG [java.sql.ResultSet] - <{rset-100492} Result: [0105, 统计分析, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 15:28:43,567 DEBUG [java.sql.ResultSet] - <{rset-100492} Result: [01050204, 减免明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050204, 1, false, false, tab_blank.png]>
2018-01-30 15:28:43,571 DEBUG [java.sql.Connection] - <{conn-100493} Connection>
2018-01-30 15:28:43,572 DEBUG [java.sql.Connection] - <{conn-100493} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 15:28:43,572 DEBUG [java.sql.PreparedStatement] - <{pstm-100494} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 15:28:43,572 DEBUG [java.sql.PreparedStatement] - <{pstm-100494} Parameters: [100043]>
2018-01-30 15:28:43,573 DEBUG [java.sql.PreparedStatement] - <{pstm-100494} Types: [java.lang.String]>
2018-01-30 15:28:43,574 DEBUG [java.sql.ResultSet] - <{rset-100495} ResultSet>
2018-01-30 15:28:43,575 DEBUG [java.sql.Connection] - <{conn-100496} Connection>
2018-01-30 15:28:43,575 DEBUG [java.sql.Connection] - <{conn-100496} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 15:28:43,575 DEBUG [java.sql.PreparedStatement] - <{pstm-100497} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 15:28:43,575 DEBUG [java.sql.PreparedStatement] - <{pstm-100497} Parameters: [01]>
2018-01-30 15:28:43,575 DEBUG [java.sql.PreparedStatement] - <{pstm-100497} Types: [java.lang.String]>
2018-01-30 15:28:43,577 DEBUG [java.sql.ResultSet] - <{rset-100498} ResultSet>
2018-01-30 15:28:43,577 DEBUG [java.sql.ResultSet] - <{rset-100498} Header: [menuname]>
2018-01-30 15:28:43,577 DEBUG [java.sql.ResultSet] - <{rset-100498} Result: [供热收费管理信息系统]>
2018-01-30 15:28:43,587 DEBUG [java.sql.Connection] - <{conn-100499} Connection>
2018-01-30 15:28:43,587 DEBUG [java.sql.Connection] - <{conn-100499} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 15:28:43,587 DEBUG [java.sql.PreparedStatement] - <{pstm-100500} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 15:28:43,587 DEBUG [java.sql.PreparedStatement] - <{pstm-100500} Parameters: [100043]>
2018-01-30 15:28:43,587 DEBUG [java.sql.PreparedStatement] - <{pstm-100500} Types: [java.lang.String]>
2018-01-30 15:28:43,589 DEBUG [java.sql.ResultSet] - <{rset-100501} ResultSet>
2018-01-30 15:28:43,590 DEBUG [java.sql.ResultSet] - <{rset-100501} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 15:28:43,590 DEBUG [java.sql.ResultSet] - <{rset-100501} Result: [01010305, 优惠设置, server_connectIcon, 010103, module/dic.ered?reqCode=discountInit, 1, false, false, server_connect.png]>
2018-01-30 15:28:43,590 DEBUG [java.sql.ResultSet] - <{rset-100501} Result: [01010304, 收费标准, server_connectIcon, 010103, module/std.ered?reqCode=standardInit, 1, false, false, server_connect.png]>
2018-01-30 15:28:43,590 DEBUG [java.sql.ResultSet] - <{rset-100501} Result: [010102, 权限管理, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 15:28:43,590 DEBUG [java.sql.ResultSet] - <{rset-100501} Result: [01010201, 组织机构管理, chart_organisationIcon, 010102, organization.ered?reqCode=departmentInit, 1, false, false, chart_organisation.png]>
2018-01-30 15:28:43,590 DEBUG [java.sql.ResultSet] - <{rset-100501} Result: [01010301, 字典维护, application_view_listIcon, 010103, resource.ered?reqCode=codeTableInit, 1, false, false, application_view_list.png]>
2018-01-30 15:28:43,590 DEBUG [java.sql.ResultSet] - <{rset-100501} Result: [01010403, Requst请求跟踪, server_connectIcon, 010104, eventTrack.ered?reqCode=init, 1, false, false, server_connect.png]>
2018-01-30 15:28:43,590 DEBUG [java.sql.ResultSet] - <{rset-100501} Result: [01010401, Session会话监控, user_commentIcon, 010104, sessionMonitor.ered?reqCode=init, 1, false, false, user_comment.png]>
2018-01-30 15:28:43,590 DEBUG [java.sql.ResultSet] - <{rset-100501} Result: [01010204, 角色管理与授权, award_star_silver_3Icon, 010102, role.ered?reqCode=roleInit, 1, false, false, award_star_silver_3.png]>
2018-01-30 15:28:43,590 DEBUG [java.sql.ResultSet] - <{rset-100501} Result: [01010303, 全局参数表维护, configIcon, 010103, param.ered?reqCode=init, 1, false, false, config.png]>
2018-01-30 15:28:43,591 DEBUG [java.sql.ResultSet] - <{rset-100501} Result: [010103, 基础数据维护, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 15:28:43,591 DEBUG [java.sql.ResultSet] - <{rset-100501} Result: [010104, 运行监控, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 15:28:43,591 DEBUG [java.sql.ResultSet] - <{rset-100501} Result: [01010202, 人员管理与授权, group_linkIcon, 010102, user.ered?reqCode=userInit, 1, false, false, group_link.png]>
2018-01-30 15:28:43,591 DEBUG [java.sql.ResultSet] - <{rset-100501} Result: [01010405, JDBC执行监控, database_refreshIcon, 010104, jdbcMonitor.ered?reqCode=jdbcInit, 1, false, false, database_refresh.png]>
2018-01-30 15:28:43,591 DEBUG [java.sql.ResultSet] - <{rset-100501} Result: [01010406, Service监控, pluginIcon, 010104, beanMonitor.ered?reqCode=init, 1, false, false, plugin.png]>
2018-01-30 15:28:43,591 DEBUG [java.sql.ResultSet] - <{rset-100501} Result: [01010205, 菜单资源管理, layout_contentIcon, 010102, resource.ered?reqCode=menuResourceInit, 1, false, false, layout_content.png]>
2018-01-30 15:28:43,591 DEBUG [java.sql.ResultSet] - <{rset-100501} Result: [0101, 系统管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 15:28:43,591 DEBUG [java.sql.Connection] - <{conn-100502} Connection>
2018-01-30 15:28:43,591 DEBUG [java.sql.Connection] - <{conn-100502} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 15:28:43,591 DEBUG [java.sql.PreparedStatement] - <{pstm-100503} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 15:28:43,592 DEBUG [java.sql.PreparedStatement] - <{pstm-100503} Parameters: [100043]>
2018-01-30 15:28:43,592 DEBUG [java.sql.PreparedStatement] - <{pstm-100503} Types: [java.lang.String]>
2018-01-30 15:28:43,593 DEBUG [java.sql.ResultSet] - <{rset-100504} ResultSet>
2018-01-30 15:28:43,593 DEBUG [java.sql.Connection] - <{conn-100505} Connection>
2018-01-30 15:28:43,594 DEBUG [java.sql.Connection] - <{conn-100505} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 15:28:43,594 DEBUG [java.sql.PreparedStatement] - <{pstm-100506} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 15:28:43,594 DEBUG [java.sql.PreparedStatement] - <{pstm-100506} Parameters: [01]>
2018-01-30 15:28:43,594 DEBUG [java.sql.PreparedStatement] - <{pstm-100506} Types: [java.lang.String]>
2018-01-30 15:28:43,595 DEBUG [java.sql.ResultSet] - <{rset-100507} ResultSet>
2018-01-30 15:28:43,595 DEBUG [java.sql.ResultSet] - <{rset-100507} Header: [menuname]>
2018-01-30 15:28:43,595 DEBUG [java.sql.ResultSet] - <{rset-100507} Result: [供热收费管理信息系统]>
2018-01-30 15:28:44,129 DEBUG [java.sql.Connection] - <{conn-100508} Connection>
2018-01-30 15:28:44,129 DEBUG [java.sql.Connection] - <{conn-100508} Preparing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-01-30 15:28:44,129 DEBUG [java.sql.PreparedStatement] - <{pstm-100509} Executing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-01-30 15:28:44,129 DEBUG [java.sql.PreparedStatement] - <{pstm-100509} Parameters: []>
2018-01-30 15:28:44,129 DEBUG [java.sql.PreparedStatement] - <{pstm-100509} Types: []>
2018-01-30 15:28:44,131 DEBUG [java.sql.ResultSet] - <{rset-100510} ResultSet>
2018-01-30 15:28:44,131 DEBUG [java.sql.ResultSet] - <{rset-100510} Header: [id, text, child_count]>
2018-01-30 15:28:44,131 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0101, 0101 经贸局家属楼 (3), 3]>
2018-01-30 15:28:44,131 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0102, 0102 法院家属楼 (2), 2]>
2018-01-30 15:28:44,131 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0103, 0103 长治县电视台 (1), 1]>
2018-01-30 15:28:44,131 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0104, 0104 广播北二巷（一至三排） (1), 1]>
2018-01-30 15:28:44,131 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0105, 0105 广播南二巷（公安家属西五排） (1), 1]>
2018-01-30 15:28:44,132 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0106, 0106 广播北四巷第一组（南6户） (1), 1]>
2018-01-30 15:28:44,132 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0107, 0107 广播北四巷第一组（北19户） (1), 1]>
2018-01-30 15:28:44,132 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0108, 0108 广播北四巷第二组（16户） (1), 1]>
2018-01-30 15:28:44,132 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0109, 0109 工业巷北一排-北八排 (1), 1]>
2018-01-30 15:28:44,133 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0110, 0110 法院家属院17户 (1), 1]>
2018-01-30 15:28:44,133 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0111, 0111 公安西家属区60户 (1), 1]>
2018-01-30 15:28:44,133 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0112, 0112 建筑工程公司 (2), 2]>
2018-01-30 15:28:44,133 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0113, 0113 工会家属楼 (1), 1]>
2018-01-30 15:28:44,133 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0114, 0114 工会二层独院5户 (1), 1]>
2018-01-30 15:28:44,133 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0115, 0115 政府平房南一排 (2), 2]>
2018-01-30 15:28:44,133 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0116, 0116 政府平房南二排6户 (1), 1]>
2018-01-30 15:28:44,134 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0117, 0117 政府平房南三排5户 (1), 1]>
2018-01-30 15:28:44,134 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0118, 0118 政府平房南四排4户 (1), 1]>
2018-01-30 15:28:44,134 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0119, 0119 政府平房南五排5户（北二排） (1), 1]>
2018-01-30 15:28:44,134 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0120, 0120 政府平房南六排5户（北一排） (1), 1]>
2018-01-30 15:28:44,135 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0121, 0121 政府平房后六户 (1), 1]>
2018-01-30 15:28:44,135 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0122, 0122 政府第三家属楼32户 (1), 1]>
2018-01-30 15:28:44,135 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0123, 0123 政府黄楼家属区 (1), 1]>
2018-01-30 15:28:44,135 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0124, 0124 五交化家属楼 (2), 2]>
2018-01-30 15:28:44,135 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0125, 0125 通达供销公司综合楼 (1), 1]>
2018-01-30 15:28:44,135 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0126, 0126 供销联社家属楼 (3), 3]>
2018-01-30 15:28:44,135 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [0127, 0127 二轻局底商 (1), 1]>
2018-01-30 15:28:44,135 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [2001, 2001 南董村西南一巷 (1), 1]>
2018-01-30 15:28:44,136 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [2002, 2002 南董村正街路北 (1), 1]>
2018-01-30 15:28:44,136 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [2003, 2003 南董村正街路南 (1), 1]>
2018-01-30 15:28:44,136 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [2004, 2004 南董村西散户 (1), 1]>
2018-01-30 15:28:44,136 DEBUG [java.sql.ResultSet] - <{rset-100510} Result: [2005, 2005 伍龙小区 (3), 3]>
2018-01-30 15:28:44,311 DEBUG [java.sql.Connection] - <{conn-100511} Connection>
2018-01-30 15:28:44,311 DEBUG [java.sql.Connection] - <{conn-100511} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 15:28:44,311 DEBUG [java.sql.PreparedStatement] - <{pstm-100512} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 15:28:44,311 DEBUG [java.sql.PreparedStatement] - <{pstm-100512} Parameters: [100043]>
2018-01-30 15:28:44,312 DEBUG [java.sql.PreparedStatement] - <{pstm-100512} Types: [java.lang.String]>
2018-01-30 15:28:44,318 DEBUG [java.sql.ResultSet] - <{rset-100513} ResultSet>
2018-01-30 15:28:44,318 DEBUG [java.sql.ResultSet] - <{rset-100513} Header: [theme]>
2018-01-30 15:28:44,318 DEBUG [java.sql.ResultSet] - <{rset-100513} Result: [default]>
2018-01-30 15:28:48,216 DEBUG [java.sql.Connection] - <{conn-100514} Connection>
2018-01-30 15:28:48,216 DEBUG [java.sql.Connection] - <{conn-100514} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 15:28:48,216 DEBUG [java.sql.PreparedStatement] - <{pstm-100515} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 15:28:48,216 DEBUG [java.sql.PreparedStatement] - <{pstm-100515} Parameters: [100043]>
2018-01-30 15:28:48,216 DEBUG [java.sql.PreparedStatement] - <{pstm-100515} Types: [java.lang.String]>
2018-01-30 15:28:48,218 DEBUG [java.sql.ResultSet] - <{rset-100516} ResultSet>
2018-01-30 15:28:48,218 DEBUG [java.sql.ResultSet] - <{rset-100516} Header: [theme]>
2018-01-30 15:28:48,218 DEBUG [java.sql.ResultSet] - <{rset-100516} Result: [default]>
2018-01-30 15:28:51,146 DEBUG [java.sql.Connection] - <{conn-100517} Connection>
2018-01-30 15:28:51,146 DEBUG [java.sql.Connection] - <{conn-100517} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 15:28:51,146 DEBUG [java.sql.PreparedStatement] - <{pstm-100518} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 15:28:51,146 DEBUG [java.sql.PreparedStatement] - <{pstm-100518} Parameters: [100043]>
2018-01-30 15:28:51,146 DEBUG [java.sql.PreparedStatement] - <{pstm-100518} Types: [java.lang.String]>
2018-01-30 15:28:51,147 DEBUG [java.sql.ResultSet] - <{rset-100519} ResultSet>
2018-01-30 15:28:51,148 DEBUG [java.sql.ResultSet] - <{rset-100519} Header: [theme]>
2018-01-30 15:28:51,148 DEBUG [java.sql.ResultSet] - <{rset-100519} Result: [default]>
2018-01-30 15:28:51,392 DEBUG [java.sql.Connection] - <{conn-100520} Connection>
2018-01-30 15:28:51,392 DEBUG [java.sql.Connection] - <{conn-100520} Preparing Statement:    SELECT userid value,username text   FROM eauser    >
2018-01-30 15:28:51,392 DEBUG [java.sql.PreparedStatement] - <{pstm-100521} Executing Statement:    SELECT userid value,username text   FROM eauser    >
2018-01-30 15:28:51,392 DEBUG [java.sql.PreparedStatement] - <{pstm-100521} Parameters: []>
2018-01-30 15:28:51,392 DEBUG [java.sql.PreparedStatement] - <{pstm-100521} Types: []>
2018-01-30 15:28:51,393 DEBUG [java.sql.ResultSet] - <{rset-100522} ResultSet>
2018-01-30 15:28:51,393 DEBUG [java.sql.ResultSet] - <{rset-100522} Header: [value, text]>
2018-01-30 15:28:51,393 DEBUG [java.sql.ResultSet] - <{rset-100522} Result: [100000, 超级用户]>
2018-01-30 15:28:51,393 DEBUG [java.sql.ResultSet] - <{rset-100522} Result: [100001, 开发人员]>
2018-01-30 15:28:51,393 DEBUG [java.sql.ResultSet] - <{rset-100522} Result: [100043, 管理员]>
2018-01-30 15:28:51,393 DEBUG [java.sql.ResultSet] - <{rset-100522} Result: [100044, aa]>
2018-01-30 15:28:51,393 DEBUG [java.sql.ResultSet] - <{rset-100522} Result: [100047, 农村信用社]>
2018-01-30 15:28:54,180 DEBUG [java.sql.Connection] - <{conn-100523} Connection>
2018-01-30 15:28:54,183 DEBUG [java.sql.Connection] - <{conn-100523} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 15:28:54,183 DEBUG [java.sql.PreparedStatement] - <{pstm-100524} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 15:28:54,184 DEBUG [java.sql.PreparedStatement] - <{pstm-100524} Parameters: []>
2018-01-30 15:28:54,184 DEBUG [java.sql.PreparedStatement] - <{pstm-100524} Types: []>
2018-01-30 15:28:54,185 DEBUG [java.sql.ResultSet] - <{rset-100525} ResultSet>
2018-01-30 15:28:54,186 DEBUG [java.sql.ResultSet] - <{rset-100525} Header: [rollback_operator_name, rollback_operate_date, operator_name, operate_date, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, real_account, real_charge, charge_type, pay_unit, pay_man, charge_price, charge_area, address, pay_mode, delzero, bill_man, bill_date, b_id, rollback_flag_ora, rollback_flag, rollback_reason, rollback_remark, operator, rollback_operator, rn]>
2018-01-30 15:28:54,186 DEBUG [java.sql.ResultSet] - <{rset-100525} Result: [null, null, 管理员, 2018-01-30 13:44:32, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000209, 0, null, null, null, 100043, null, 1]>
2018-01-30 15:28:54,186 DEBUG [java.sql.ResultSet] - <{rset-100525} Result: [管理员, 2018-01-30 11:41:46, 管理员, 2018-01-29 19:06:34, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000208, 1, 已冲账, 操作错误, null, 100043, 100043, 2]>
2018-01-30 15:28:54,186 DEBUG [java.sql.ResultSet] - <{rset-100525} Result: [管理员, 2018-01-29 19:06:05, 管理员, 2018-01-29 19:04:35, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000207, 1, 已冲账, 操作错误, null, 100043, 100043, 3]>
2018-01-30 15:28:54,187 DEBUG [java.sql.ResultSet] - <{rset-100525} Result: [管理员, 2018-01-29 18:01:04, 管理员, 2018-01-29 17:58:33, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000206, 1, 已冲账, 操作错误, null, 100043, 100043, 4]>
2018-01-30 15:28:54,187 DEBUG [java.sql.ResultSet] - <{rset-100525} Result: [管理员, 2018-01-29 17:52:20, 管理员, 2018-01-29 17:49:55, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000205, 1, 已冲账, 操作错误, null, 100043, 100043, 5]>
2018-01-30 15:28:54,187 DEBUG [java.sql.ResultSet] - <{rset-100525} Result: [管理员, 2018-01-29 17:49:13, 管理员, 2018-01-29 17:48:45, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000204, 1, 已冲账, 操作错误, null, 100043, 100043, 6]>
2018-01-30 15:28:54,187 DEBUG [java.sql.Connection] - <{conn-100526} Connection>
2018-01-30 15:28:54,188 DEBUG [java.sql.Connection] - <{conn-100526} Preparing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 15:28:54,188 DEBUG [java.sql.PreparedStatement] - <{pstm-100527} Executing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 15:28:54,188 DEBUG [java.sql.PreparedStatement] - <{pstm-100527} Parameters: []>
2018-01-30 15:28:54,188 DEBUG [java.sql.PreparedStatement] - <{pstm-100527} Types: []>
2018-01-30 15:28:54,189 DEBUG [java.sql.ResultSet] - <{rset-100528} ResultSet>
2018-01-30 15:28:54,189 DEBUG [java.sql.ResultSet] - <{rset-100528} Header: [count(*)]>
2018-01-30 15:28:54,189 DEBUG [java.sql.ResultSet] - <{rset-100528} Result: [6]>
2018-01-30 15:28:54,275 DEBUG [java.sql.Connection] - <{conn-100529} Connection>
2018-01-30 15:28:54,276 DEBUG [java.sql.Connection] - <{conn-100529} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 15:28:54,276 DEBUG [java.sql.PreparedStatement] - <{pstm-100530} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 15:28:54,276 DEBUG [java.sql.PreparedStatement] - <{pstm-100530} Parameters: []>
2018-01-30 15:28:54,276 DEBUG [java.sql.PreparedStatement] - <{pstm-100530} Types: []>
2018-01-30 15:28:54,277 DEBUG [java.sql.ResultSet] - <{rset-100531} ResultSet>
2018-01-30 15:28:54,277 DEBUG [java.sql.ResultSet] - <{rset-100531} Header: [house_count, total_account, real_account, now_cash]>
2018-01-30 15:28:54,278 DEBUG [java.sql.ResultSet] - <{rset-100531} Result: [共6, 16801.68, 16801.68, 11201.12]>
2018-01-30 15:29:02,219 DEBUG [java.sql.Connection] - <{conn-100532} Connection>
2018-01-30 15:29:02,219 DEBUG [java.sql.Connection] - <{conn-100532} Preparing Call: {call pkg_charge.rollback(?,?,?,?,?,?,?,?)}>
2018-01-30 15:29:02,219 DEBUG [java.sql.PreparedStatement] - <{pstm-100533} Executing Statement: {call pkg_charge.rollback(?,?,?,?,?,?,?,?)}>
2018-01-30 15:29:02,219 DEBUG [java.sql.PreparedStatement] - <{pstm-100533} Parameters: [100000000209, 1, 操作错误, , 100043, null]>
2018-01-30 15:29:02,219 DEBUG [java.sql.PreparedStatement] - <{pstm-100533} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, null]>
2018-01-30 15:29:02,322 DEBUG [java.sql.Connection] - <{conn-100534} Connection>
2018-01-30 15:29:02,323 DEBUG [java.sql.Connection] - <{conn-100534} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 15:29:02,323 DEBUG [java.sql.PreparedStatement] - <{pstm-100535} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 15:29:02,323 DEBUG [java.sql.PreparedStatement] - <{pstm-100535} Parameters: []>
2018-01-30 15:29:02,323 DEBUG [java.sql.PreparedStatement] - <{pstm-100535} Types: []>
2018-01-30 15:29:02,438 DEBUG [java.sql.ResultSet] - <{rset-100536} ResultSet>
2018-01-30 15:29:02,438 DEBUG [java.sql.ResultSet] - <{rset-100536} Header: [rollback_operator_name, rollback_operate_date, operator_name, operate_date, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, real_account, real_charge, charge_type, pay_unit, pay_man, charge_price, charge_area, address, pay_mode, delzero, bill_man, bill_date, b_id, rollback_flag_ora, rollback_flag, rollback_reason, rollback_remark, operator, rollback_operator, rn]>
2018-01-30 15:29:02,438 DEBUG [java.sql.ResultSet] - <{rset-100536} Result: [管理员, 2018-01-30 15:29:02, 管理员, 2018-01-30 13:44:32, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000209, 1, 已冲账, 操作错误, null, 100043, 100043, 1]>
2018-01-30 15:29:02,439 DEBUG [java.sql.ResultSet] - <{rset-100536} Result: [管理员, 2018-01-30 11:41:46, 管理员, 2018-01-29 19:06:34, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000208, 1, 已冲账, 操作错误, null, 100043, 100043, 2]>
2018-01-30 15:29:02,439 DEBUG [java.sql.ResultSet] - <{rset-100536} Result: [管理员, 2018-01-29 19:06:05, 管理员, 2018-01-29 19:04:35, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000207, 1, 已冲账, 操作错误, null, 100043, 100043, 3]>
2018-01-30 15:29:02,439 DEBUG [java.sql.ResultSet] - <{rset-100536} Result: [管理员, 2018-01-29 18:01:04, 管理员, 2018-01-29 17:58:33, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000206, 1, 已冲账, 操作错误, null, 100043, 100043, 4]>
2018-01-30 15:29:02,439 DEBUG [java.sql.ResultSet] - <{rset-100536} Result: [管理员, 2018-01-29 17:52:20, 管理员, 2018-01-29 17:49:55, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000205, 1, 已冲账, 操作错误, null, 100043, 100043, 5]>
2018-01-30 15:29:02,440 DEBUG [java.sql.ResultSet] - <{rset-100536} Result: [管理员, 2018-01-29 17:49:13, 管理员, 2018-01-29 17:48:45, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000204, 1, 已冲账, 操作错误, null, 100043, 100043, 6]>
2018-01-30 15:29:02,440 DEBUG [java.sql.Connection] - <{conn-100537} Connection>
2018-01-30 15:29:02,440 DEBUG [java.sql.Connection] - <{conn-100537} Preparing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 15:29:02,441 DEBUG [java.sql.PreparedStatement] - <{pstm-100538} Executing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 15:29:02,441 DEBUG [java.sql.PreparedStatement] - <{pstm-100538} Parameters: []>
2018-01-30 15:29:02,441 DEBUG [java.sql.PreparedStatement] - <{pstm-100538} Types: []>
2018-01-30 15:29:02,442 DEBUG [java.sql.ResultSet] - <{rset-100539} ResultSet>
2018-01-30 15:29:02,442 DEBUG [java.sql.ResultSet] - <{rset-100539} Header: [count(*)]>
2018-01-30 15:29:02,442 DEBUG [java.sql.ResultSet] - <{rset-100539} Result: [6]>
2018-01-30 15:29:02,521 DEBUG [java.sql.Connection] - <{conn-100540} Connection>
2018-01-30 15:29:02,521 DEBUG [java.sql.Connection] - <{conn-100540} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 15:29:02,522 DEBUG [java.sql.PreparedStatement] - <{pstm-100541} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 15:29:02,522 DEBUG [java.sql.PreparedStatement] - <{pstm-100541} Parameters: []>
2018-01-30 15:29:02,522 DEBUG [java.sql.PreparedStatement] - <{pstm-100541} Types: []>
2018-01-30 15:29:02,523 DEBUG [java.sql.ResultSet] - <{rset-100542} ResultSet>
2018-01-30 15:29:02,523 DEBUG [java.sql.ResultSet] - <{rset-100542} Header: [house_count, total_account, real_account, now_cash]>
2018-01-30 15:29:02,523 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [共6, 16801.68, 16801.68, 11201.12]>
2018-01-30 15:32:41,673 DEBUG [java.sql.Connection] - <{conn-100543} Connection>
2018-01-30 15:32:41,673 DEBUG [java.sql.Connection] - <{conn-100543} Preparing Statement:    SELECT building_code as id, building_code||' '||building_name||' ('||house_count||')' as text,nvl(house_count,0) as child_Count   FROM fc_building a WHERE   a.community_code = '0101'  order by building_code  >
2018-01-30 15:32:41,674 DEBUG [java.sql.PreparedStatement] - <{pstm-100544} Executing Statement:    SELECT building_code as id, building_code||' '||building_name||' ('||house_count||')' as text,nvl(house_count,0) as child_Count   FROM fc_building a WHERE   a.community_code = '0101'  order by building_code  >
2018-01-30 15:32:41,674 DEBUG [java.sql.PreparedStatement] - <{pstm-100544} Parameters: []>
2018-01-30 15:32:41,674 DEBUG [java.sql.PreparedStatement] - <{pstm-100544} Types: []>
2018-01-30 15:32:41,675 DEBUG [java.sql.ResultSet] - <{rset-100545} ResultSet>
2018-01-30 15:32:41,675 DEBUG [java.sql.ResultSet] - <{rset-100545} Header: [id, text, child_count]>
2018-01-30 15:32:41,675 DEBUG [java.sql.ResultSet] - <{rset-100545} Result: [0101-001, 0101-001 家属楼 (21), 21]>
2018-01-30 15:32:41,675 DEBUG [java.sql.ResultSet] - <{rset-100545} Result: [0101-002, 0101-002 大北门 (1), 1]>
2018-01-30 15:32:41,675 DEBUG [java.sql.ResultSet] - <{rset-100545} Result: [0101-999, 0101-999 商业 (2), 2]>
2018-01-30 15:32:42,302 DEBUG [java.sql.Connection] - <{conn-100546} Connection>
2018-01-30 15:32:42,303 DEBUG [java.sql.Connection] - <{conn-100546} Preparing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0101-001'   order by a.house_code  >
2018-01-30 15:32:42,303 DEBUG [java.sql.PreparedStatement] - <{pstm-100547} Executing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0101-001'   order by a.house_code  >
2018-01-30 15:32:42,303 DEBUG [java.sql.PreparedStatement] - <{pstm-100547} Parameters: []>
2018-01-30 15:32:42,303 DEBUG [java.sql.PreparedStatement] - <{pstm-100547} Types: []>
2018-01-30 15:32:42,304 DEBUG [java.sql.ResultSet] - <{rset-100548} ResultSet>
2018-01-30 15:32:42,304 DEBUG [java.sql.ResultSet] - <{rset-100548} Header: [id, text, child_count]>
2018-01-30 15:32:42,304 DEBUG [java.sql.ResultSet] - <{rset-100548} Result: [0101-001-01-01-01, 01-01-01 李宝源, 0]>
2018-01-30 15:32:42,304 DEBUG [java.sql.ResultSet] - <{rset-100548} Result: [0101-001-01-01-02, 01-01-02 崔志兵, 0]>
2018-01-30 15:32:42,305 DEBUG [java.sql.ResultSet] - <{rset-100548} Result: [0101-001-01-02-01, 01-02-01 牛忠清, 0]>
2018-01-30 15:32:42,305 DEBUG [java.sql.ResultSet] - <{rset-100548} Result: [0101-001-01-02-02, 01-02-02 郝旭刚, 0]>
2018-01-30 15:32:42,305 DEBUG [java.sql.ResultSet] - <{rset-100548} Result: [0101-001-01-03-01, 01-03-01 王志兵, 0]>
2018-01-30 15:32:42,305 DEBUG [java.sql.ResultSet] - <{rset-100548} Result: [0101-001-01-03-02, 01-03-02 李旭红, 0]>
2018-01-30 15:32:42,305 DEBUG [java.sql.ResultSet] - <{rset-100548} Result: [0101-001-02-01-01, 02-01-01 曹贵胜, 0]>
2018-01-30 15:32:42,305 DEBUG [java.sql.ResultSet] - <{rset-100548} Result: [0101-001-02-01-02, 02-01-02 段发书, 0]>
2018-01-30 15:32:42,305 DEBUG [java.sql.ResultSet] - <{rset-100548} Result: [0101-001-02-02-01, 02-02-01 郝秀好, 0]>
2018-01-30 15:32:42,305 DEBUG [java.sql.ResultSet] - <{rset-100548} Result: [0101-001-02-02-02, 02-02-02 任元宝, 0]>
2018-01-30 15:32:42,306 DEBUG [java.sql.ResultSet] - <{rset-100548} Result: [0101-001-02-03-01, 02-03-01 张志刚, 0]>
2018-01-30 15:32:42,306 DEBUG [java.sql.ResultSet] - <{rset-100548} Result: [0101-001-02-03-02, 02-03-02 李国芳, 0]>
2018-01-30 15:32:42,306 DEBUG [java.sql.ResultSet] - <{rset-100548} Result: [0101-001-03-01-01, 03-01-01 秦凤祥, 0]>
2018-01-30 15:32:42,306 DEBUG [java.sql.ResultSet] - <{rset-100548} Result: [0101-001-03-01-02, 03-01-02 史春华, 0]>
2018-01-30 15:32:42,306 DEBUG [java.sql.ResultSet] - <{rset-100548} Result: [0101-001-03-02-01, 03-02-01 张志明, 0]>
2018-01-30 15:32:42,306 DEBUG [java.sql.ResultSet] - <{rset-100548} Result: [0101-001-03-02-02, 03-02-02 靳锁明, 0]>
2018-01-30 15:32:42,306 DEBUG [java.sql.ResultSet] - <{rset-100548} Result: [0101-001-03-03-01, 03-03-01 张志强, 0]>
2018-01-30 15:32:42,306 DEBUG [java.sql.ResultSet] - <{rset-100548} Result: [0101-001-03-03-02, 03-03-02 李  凡, 0]>
2018-01-30 15:32:42,306 DEBUG [java.sql.ResultSet] - <{rset-100548} Result: [0101-001-04-01-01, 04-01-01 牛泽玲, 0]>
2018-01-30 15:32:42,307 DEBUG [java.sql.ResultSet] - <{rset-100548} Result: [0101-001-04-01-02, 04-01-02 王泽宇, 0]>
2018-01-30 15:32:42,307 DEBUG [java.sql.ResultSet] - <{rset-100548} Result: [0101-001-04-02-01, 04-02-01 赵明泽, 0]>
2018-01-30 15:32:43,009 DEBUG [java.sql.Connection] - <{conn-100549} Connection>
2018-01-30 15:32:43,010 DEBUG [java.sql.Connection] - <{conn-100549} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 15:32:43,010 DEBUG [java.sql.PreparedStatement] - <{pstm-100550} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 15:32:43,010 DEBUG [java.sql.PreparedStatement] - <{pstm-100550} Parameters: [0101-001-01-01-01]>
2018-01-30 15:32:43,010 DEBUG [java.sql.PreparedStatement] - <{pstm-100550} Types: [java.lang.String]>
2018-01-30 15:32:43,012 DEBUG [java.sql.ResultSet] - <{rset-100551} ResultSet>
2018-01-30 15:32:43,013 DEBUG [java.sql.ResultSet] - <{rset-100551} Header: [username, item_name, charge_month, house_code, item_code, meter_id, not_money, not_money_latefee, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-30 15:32:43,013 DEBUG [java.sql.ResultSet] - <{rset-100551} Result: [null, 供热费, 2017, 0101-001-01-01-01, A, 0, 2800.28, 1.05, 01, 0101, 0101-001, 李宝源, 2800.28, 0, 0, 2800.28, 0, null, A1, 28, null, null, 100.01, 2017-11-15, 2017-03-31, 0, 2017-11-01, 2017-11-01, 1.05, null, 1.05, null, 0, 0, 0, 0, 0, 0, 0, 0, 15132, 1]>
2018-01-30 15:32:43,013 DEBUG [java.sql.Connection] - <{conn-100552} Connection>
2018-01-30 15:32:43,014 DEBUG [java.sql.Connection] - <{conn-100552} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 15:32:43,014 DEBUG [java.sql.PreparedStatement] - <{pstm-100553} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 15:32:43,014 DEBUG [java.sql.PreparedStatement] - <{pstm-100553} Parameters: [0101-001-01-01-01]>
2018-01-30 15:32:43,014 DEBUG [java.sql.PreparedStatement] - <{pstm-100553} Types: [java.lang.String]>
2018-01-30 15:32:43,015 DEBUG [java.sql.ResultSet] - <{rset-100554} ResultSet>
2018-01-30 15:32:43,015 DEBUG [java.sql.ResultSet] - <{rset-100554} Header: [count(*)]>
2018-01-30 15:32:43,016 DEBUG [java.sql.ResultSet] - <{rset-100554} Result: [1]>
2018-01-30 15:32:43,101 DEBUG [java.sql.Connection] - <{conn-100555} Connection>
2018-01-30 15:32:43,102 DEBUG [java.sql.Connection] - <{conn-100555} Preparing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-30 15:32:43,102 DEBUG [java.sql.PreparedStatement] - <{pstm-100556} Executing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-30 15:32:43,102 DEBUG [java.sql.PreparedStatement] - <{pstm-100556} Parameters: [100043, A]>
2018-01-30 15:32:43,102 DEBUG [java.sql.PreparedStatement] - <{pstm-100556} Types: [java.lang.String, java.lang.String]>
2018-01-30 15:32:43,103 DEBUG [java.sql.ResultSet] - <{rset-100557} ResultSet>
2018-01-30 15:32:43,107 DEBUG [java.sql.Connection] - <{conn-100558} Connection>
2018-01-30 15:32:43,107 DEBUG [java.sql.Connection] - <{conn-100558} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 15:32:43,108 DEBUG [java.sql.PreparedStatement] - <{pstm-100559} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 15:32:43,108 DEBUG [java.sql.PreparedStatement] - <{pstm-100559} Parameters: [0101-001-01-01-01]>
2018-01-30 15:32:43,108 DEBUG [java.sql.PreparedStatement] - <{pstm-100559} Types: [java.lang.String]>
2018-01-30 15:32:43,109 DEBUG [java.sql.ResultSet] - <{rset-100560} ResultSet>
2018-01-30 15:32:43,110 DEBUG [java.sql.ResultSet] - <{rset-100560} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-30 15:32:43,110 DEBUG [java.sql.ResultSet] - <{rset-100560} Result: [共1, 2800.28, 0, 0, 2800.28, 2800.28, 1.05, 0, null, null, 100.01, 1.05, null, 1.05, null]>
2018-01-30 15:32:43,152 DEBUG [java.sql.Connection] - <{conn-100561} Connection>
2018-01-30 15:32:43,152 DEBUG [java.sql.Connection] - <{conn-100561} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 15:32:43,153 DEBUG [java.sql.PreparedStatement] - <{pstm-100562} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 15:32:43,153 DEBUG [java.sql.PreparedStatement] - <{pstm-100562} Parameters: [0101-001-01-01-01]>
2018-01-30 15:32:43,153 DEBUG [java.sql.PreparedStatement] - <{pstm-100562} Types: [java.lang.String]>
2018-01-30 15:32:43,154 DEBUG [java.sql.ResultSet] - <{rset-100563} ResultSet>
2018-01-30 15:32:43,154 DEBUG [java.sql.ResultSet] - <{rset-100563} Header: [card_id, cluster_code, contact_man, house_manager, owner_name, address, telephone, stat_id, work_unit, apart_status, user_kind, heat_status]>
2018-01-30 15:32:43,155 DEBUG [java.sql.ResultSet] - <{rset-100563} Result: [null, null, null, null, 李宝源, null, null, null, null, null, null, null]>
2018-01-30 15:32:46,046 DEBUG [java.sql.Connection] - <{conn-100564} Connection>
2018-01-30 15:32:46,046 DEBUG [java.sql.Connection] - <{conn-100564} Preparing Statement:          UPDATE easequence SET maxid = ? WHERE fieldname = ?  >
2018-01-30 15:32:46,046 DEBUG [java.sql.PreparedStatement] - <{pstm-100565} Executing Statement:          UPDATE easequence SET maxid = ? WHERE fieldname = ?  >
2018-01-30 15:32:46,046 DEBUG [java.sql.PreparedStatement] - <{pstm-100565} Parameters: [100000000210, B_ID]>
2018-01-30 15:32:46,046 DEBUG [java.sql.PreparedStatement] - <{pstm-100565} Types: [java.lang.String, java.lang.String]>
2018-01-30 15:32:46,052 DEBUG [java.sql.Connection] - <{conn-100566} Connection>
2018-01-30 15:32:46,052 DEBUG [java.sql.Connection] - <{conn-100566} Preparing Call: {call pkg_charge.Charge_A( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,  ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}>
2018-01-30 15:32:46,053 DEBUG [java.sql.PreparedStatement] - <{pstm-100567} Executing Statement: {call pkg_charge.Charge_A( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,  ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}>
2018-01-30 15:32:46,053 DEBUG [java.sql.PreparedStatement] - <{pstm-100567} Parameters: [100000000210, 15132, 0101-001-01-01-01, , , , , , 28, 100.01, 现金, , , 2800.28, 0, , , null, null, null, null, 2017-11-01, 1.05, 1.05, , , 100043, null]>
2018-01-30 15:32:46,054 DEBUG [java.sql.PreparedStatement] - <{pstm-100567} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, null, null, null, null, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, java.lang.String, null]>
2018-01-30 15:32:46,169 DEBUG [java.sql.Connection] - <{conn-100568} Connection>
2018-01-30 15:32:46,169 DEBUG [java.sql.Connection] - <{conn-100568} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 15:32:46,170 DEBUG [java.sql.PreparedStatement] - <{pstm-100569} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 15:32:46,170 DEBUG [java.sql.PreparedStatement] - <{pstm-100569} Parameters: [0101-001-01-01-01]>
2018-01-30 15:32:46,170 DEBUG [java.sql.PreparedStatement] - <{pstm-100569} Types: [java.lang.String]>
2018-01-30 15:32:46,171 DEBUG [java.sql.ResultSet] - <{rset-100570} ResultSet>
2018-01-30 15:32:46,172 DEBUG [java.sql.Connection] - <{conn-100571} Connection>
2018-01-30 15:32:46,172 DEBUG [java.sql.Connection] - <{conn-100571} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 15:32:46,172 DEBUG [java.sql.PreparedStatement] - <{pstm-100572} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 15:32:46,172 DEBUG [java.sql.PreparedStatement] - <{pstm-100572} Parameters: [0101-001-01-01-01]>
2018-01-30 15:32:46,172 DEBUG [java.sql.PreparedStatement] - <{pstm-100572} Types: [java.lang.String]>
2018-01-30 15:32:46,174 DEBUG [java.sql.ResultSet] - <{rset-100573} ResultSet>
2018-01-30 15:32:46,174 DEBUG [java.sql.ResultSet] - <{rset-100573} Header: [count(*)]>
2018-01-30 15:32:46,174 DEBUG [java.sql.ResultSet] - <{rset-100573} Result: [0]>
2018-01-30 15:32:46,377 DEBUG [java.sql.Connection] - <{conn-100574} Connection>
2018-01-30 15:32:46,378 DEBUG [java.sql.Connection] - <{conn-100574} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 15:32:46,378 DEBUG [java.sql.PreparedStatement] - <{pstm-100575} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 15:32:46,378 DEBUG [java.sql.PreparedStatement] - <{pstm-100575} Parameters: [0101-001-01-01-01]>
2018-01-30 15:32:46,378 DEBUG [java.sql.PreparedStatement] - <{pstm-100575} Types: [java.lang.String]>
2018-01-30 15:32:46,380 DEBUG [java.sql.ResultSet] - <{rset-100576} ResultSet>
2018-01-30 15:32:46,380 DEBUG [java.sql.ResultSet] - <{rset-100576} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-30 15:32:46,380 DEBUG [java.sql.ResultSet] - <{rset-100576} Result: [共0, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-01-30 15:41:22,037 DEBUG [java.sql.Connection] - <{conn-100008} Connection>
2018-01-30 15:41:22,038 DEBUG [java.sql.Connection] - <{conn-100008} Preparing Statement:    DELETE      FROM eahttpsession   WHERE                sessionid = ?                >
2018-01-30 15:41:22,038 DEBUG [java.sql.PreparedStatement] - <{pstm-100009} Executing Statement:    DELETE      FROM eahttpsession   WHERE                sessionid = ?                >
2018-01-30 15:41:22,039 DEBUG [java.sql.PreparedStatement] - <{pstm-100009} Parameters: [1stuvumtbkhjo]>
2018-01-30 15:41:22,039 DEBUG [java.sql.PreparedStatement] - <{pstm-100009} Types: [java.lang.String]>
2018-01-30 15:41:29,246 DEBUG [java.sql.Connection] - <{conn-100010} Connection>
2018-01-30 15:41:29,253 DEBUG [java.sql.Connection] - <{conn-100010} Preparing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-01-30 15:41:29,253 DEBUG [java.sql.PreparedStatement] - <{pstm-100011} Executing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-01-30 15:41:29,253 DEBUG [java.sql.PreparedStatement] - <{pstm-100011} Parameters: [0, admin]>
2018-01-30 15:41:29,254 DEBUG [java.sql.PreparedStatement] - <{pstm-100011} Types: [java.lang.String, java.lang.String]>
2018-01-30 15:41:29,255 DEBUG [java.sql.ResultSet] - <{rset-100012} ResultSet>
2018-01-30 15:41:29,256 DEBUG [java.sql.ResultSet] - <{rset-100012} Header: [userid, username, account, password, sex, deptid, theme, customid, customname]>
2018-01-30 15:41:29,256 DEBUG [java.sql.ResultSet] - <{rset-100012} Result: [100043, 管理员, admin, RaFutWeh0ww=, 0, 001, default, 01, 供热]>
2018-01-30 15:41:29,257 DEBUG [java.sql.Connection] - <{conn-100013} Connection>
2018-01-30 15:41:29,257 DEBUG [java.sql.Connection] - <{conn-100013} Preparing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-01-30 15:41:29,257 DEBUG [java.sql.PreparedStatement] - <{pstm-100014} Executing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-01-30 15:41:29,257 DEBUG [java.sql.PreparedStatement] - <{pstm-100014} Parameters: [8wmzj1yb3r5w]>
2018-01-30 15:41:29,257 DEBUG [java.sql.PreparedStatement] - <{pstm-100014} Types: [java.lang.String]>
2018-01-30 15:41:29,258 DEBUG [java.sql.ResultSet] - <{rset-100015} ResultSet>
2018-01-30 15:41:29,260 DEBUG [java.sql.Connection] - <{conn-100016} Connection>
2018-01-30 15:41:29,261 DEBUG [java.sql.Connection] - <{conn-100016} Preparing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-01-30 15:41:29,262 DEBUG [java.sql.PreparedStatement] - <{pstm-100017} Executing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-01-30 15:41:29,262 DEBUG [java.sql.PreparedStatement] - <{pstm-100017} Parameters: [8wmzj1yb3r5w, 管理员, admin, 2018-01-30 15:41:29, 127.0.0.1, 100043, FIREFOX/57.]>
2018-01-30 15:41:29,262 DEBUG [java.sql.PreparedStatement] - <{pstm-100017} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-30 15:41:29,656 DEBUG [java.sql.Connection] - <{conn-100018} Connection>
2018-01-30 15:41:29,656 DEBUG [java.sql.Connection] - <{conn-100018} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 15:41:29,657 DEBUG [java.sql.PreparedStatement] - <{pstm-100019} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 15:41:29,657 DEBUG [java.sql.PreparedStatement] - <{pstm-100019} Parameters: [100043]>
2018-01-30 15:41:29,657 DEBUG [java.sql.PreparedStatement] - <{pstm-100019} Types: [java.lang.String]>
2018-01-30 15:41:29,658 DEBUG [java.sql.ResultSet] - <{rset-100020} ResultSet>
2018-01-30 15:41:29,658 DEBUG [java.sql.ResultSet] - <{rset-100020} Header: [theme]>
2018-01-30 15:41:29,658 DEBUG [java.sql.ResultSet] - <{rset-100020} Result: [default]>
2018-01-30 15:41:29,853 DEBUG [java.sql.Connection] - <{conn-100021} Connection>
2018-01-30 15:41:29,854 DEBUG [java.sql.Connection] - <{conn-100021} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 15:41:29,854 DEBUG [java.sql.PreparedStatement] - <{pstm-100022} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 15:41:29,854 DEBUG [java.sql.PreparedStatement] - <{pstm-100022} Parameters: [100043]>
2018-01-30 15:41:29,855 DEBUG [java.sql.PreparedStatement] - <{pstm-100022} Types: [java.lang.String]>
2018-01-30 15:41:29,857 DEBUG [java.sql.ResultSet] - <{rset-100023} ResultSet>
2018-01-30 15:41:29,865 DEBUG [java.sql.ResultSet] - <{rset-100023} Header: [menuid, menuname, iconcls]>
2018-01-30 15:41:29,865 DEBUG [java.sql.ResultSet] - <{rset-100023} Result: [0103, 基础信息, null]>
2018-01-30 15:41:29,865 DEBUG [java.sql.ResultSet] - <{rset-100023} Result: [0104, 收费管理, null]>
2018-01-30 15:41:29,866 DEBUG [java.sql.ResultSet] - <{rset-100023} Result: [0105, 统计分析, null]>
2018-01-30 15:41:29,866 DEBUG [java.sql.ResultSet] - <{rset-100023} Result: [0101, 系统管理, null]>
2018-01-30 15:41:29,866 DEBUG [java.sql.Connection] - <{conn-100024} Connection>
2018-01-30 15:41:29,866 DEBUG [java.sql.Connection] - <{conn-100024} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-01-30 15:41:29,866 DEBUG [java.sql.PreparedStatement] - <{pstm-100025} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-01-30 15:41:29,867 DEBUG [java.sql.PreparedStatement] - <{pstm-100025} Parameters: [100043]>
2018-01-30 15:41:29,867 DEBUG [java.sql.PreparedStatement] - <{pstm-100025} Types: [java.lang.String]>
2018-01-30 15:41:29,868 DEBUG [java.sql.ResultSet] - <{rset-100026} ResultSet>
2018-01-30 15:41:29,872 DEBUG [java.sql.Connection] - <{conn-100027} Connection>
2018-01-30 15:41:29,873 DEBUG [java.sql.Connection] - <{conn-100027} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 15:41:29,873 DEBUG [java.sql.PreparedStatement] - <{pstm-100028} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 15:41:29,873 DEBUG [java.sql.PreparedStatement] - <{pstm-100028} Parameters: [001]>
2018-01-30 15:41:29,873 DEBUG [java.sql.PreparedStatement] - <{pstm-100028} Types: [java.lang.String]>
2018-01-30 15:41:29,874 DEBUG [java.sql.ResultSet] - <{rset-100029} ResultSet>
2018-01-30 15:41:29,875 DEBUG [java.sql.ResultSet] - <{rset-100029} Header: [deptid, deptname]>
2018-01-30 15:41:29,875 DEBUG [java.sql.ResultSet] - <{rset-100029} Result: [001, XX供热公司]>
2018-01-30 15:41:29,875 DEBUG [java.sql.Connection] - <{conn-100030} Connection>
2018-01-30 15:41:29,875 DEBUG [java.sql.Connection] - <{conn-100030} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 15:41:29,876 DEBUG [java.sql.PreparedStatement] - <{pstm-100031} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 15:41:29,876 DEBUG [java.sql.PreparedStatement] - <{pstm-100031} Parameters: [001]>
2018-01-30 15:41:29,876 DEBUG [java.sql.PreparedStatement] - <{pstm-100031} Types: [java.lang.String]>
2018-01-30 15:41:29,877 DEBUG [java.sql.ResultSet] - <{rset-100032} ResultSet>
2018-01-30 15:41:29,877 DEBUG [java.sql.ResultSet] - <{rset-100032} Header: [deptid, deptname]>
2018-01-30 15:41:29,877 DEBUG [java.sql.ResultSet] - <{rset-100032} Result: [001, XX供热公司]>
2018-01-30 15:41:29,878 DEBUG [java.sql.Connection] - <{conn-100033} Connection>
2018-01-30 15:41:29,878 DEBUG [java.sql.Connection] - <{conn-100033} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 15:41:29,878 DEBUG [java.sql.PreparedStatement] - <{pstm-100034} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 15:41:29,878 DEBUG [java.sql.PreparedStatement] - <{pstm-100034} Parameters: [100043]>
2018-01-30 15:41:29,878 DEBUG [java.sql.PreparedStatement] - <{pstm-100034} Types: [java.lang.String]>
2018-01-30 15:41:29,880 DEBUG [java.sql.ResultSet] - <{rset-100035} ResultSet>
2018-01-30 15:41:29,880 DEBUG [java.sql.ResultSet] - <{rset-100035} Header: [theme]>
2018-01-30 15:41:29,880 DEBUG [java.sql.ResultSet] - <{rset-100035} Result: [default]>
2018-01-30 15:41:30,022 DEBUG [java.sql.Connection] - <{conn-100036} Connection>
2018-01-30 15:41:30,023 DEBUG [java.sql.Connection] - <{conn-100036} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 15:41:30,023 DEBUG [java.sql.PreparedStatement] - <{pstm-100037} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 15:41:30,024 DEBUG [java.sql.PreparedStatement] - <{pstm-100037} Parameters: [100043]>
2018-01-30 15:41:30,024 DEBUG [java.sql.PreparedStatement] - <{pstm-100037} Types: [java.lang.String]>
2018-01-30 15:41:30,027 DEBUG [java.sql.ResultSet] - <{rset-100038} ResultSet>
2018-01-30 15:41:30,028 DEBUG [java.sql.ResultSet] - <{rset-100038} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 15:41:30,028 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030404, 新建换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,028 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030403, 删除热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,028 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030406, 删除换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,028 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [010305, 入网管理, null, 0103, module/iw.ered?reqCode=intoWebInit, 0, false, false, tab_blank.png]>
2018-01-30 15:41:30,029 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030405, 修改换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,029 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030401, 新建热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,029 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030201, 选择导入文件, null, 010302, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,030 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030312, 删除面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,030 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [0103, 基础信息, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 15:41:30,031 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030311, 修改面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,031 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030301, 新建小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,032 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030310, 添加面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,033 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [010304, 热源站所管理, null, 0103, module/sr.ered?reqCode=sourceInit, 0, false, false, tab_blank.png]>
2018-01-30 15:41:30,033 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030313, 删除面积1, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,033 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030202, 导入模板下载, null, 010302, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,035 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030501, 新增入网, null, 010305, null, 1, false, true, tab_blank.png]>
2018-01-30 15:41:30,036 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030402, 修改热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,036 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [010303, 基础信息维护, null, 0103, module/fc.ered?reqCode=communityInit, 0, false, false, tab_blank.png]>
2018-01-30 15:41:30,036 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030502, 修改入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,037 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030302, 修改小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,038 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [010302, 基础数据导入, null, 0103, module/importHouse.ered?reqCode=importInit, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,038 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030303, 删除小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,038 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030503, 删除入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,038 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030304, 新建大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,039 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030305, 修改大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,039 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030306, 删除大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,039 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030307, 新建用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,039 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030308, 修改用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,040 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030309, 删除用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,040 DEBUG [java.sql.Connection] - <{conn-100039} Connection>
2018-01-30 15:41:30,041 DEBUG [java.sql.Connection] - <{conn-100039} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 15:41:30,041 DEBUG [java.sql.PreparedStatement] - <{pstm-100040} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 15:41:30,041 DEBUG [java.sql.PreparedStatement] - <{pstm-100040} Parameters: [100043]>
2018-01-30 15:41:30,041 DEBUG [java.sql.PreparedStatement] - <{pstm-100040} Types: [java.lang.String]>
2018-01-30 15:41:30,043 DEBUG [java.sql.ResultSet] - <{rset-100041} ResultSet>
2018-01-30 15:41:30,044 DEBUG [java.sql.Connection] - <{conn-100042} Connection>
2018-01-30 15:41:30,044 DEBUG [java.sql.Connection] - <{conn-100042} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 15:41:30,045 DEBUG [java.sql.PreparedStatement] - <{pstm-100043} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 15:41:30,045 DEBUG [java.sql.PreparedStatement] - <{pstm-100043} Parameters: [01]>
2018-01-30 15:41:30,045 DEBUG [java.sql.PreparedStatement] - <{pstm-100043} Types: [java.lang.String]>
2018-01-30 15:41:30,046 DEBUG [java.sql.ResultSet] - <{rset-100044} ResultSet>
2018-01-30 15:41:30,047 DEBUG [java.sql.ResultSet] - <{rset-100044} Header: [menuname]>
2018-01-30 15:41:30,047 DEBUG [java.sql.ResultSet] - <{rset-100044} Result: [供热收费管理信息系统]>
2018-01-30 15:41:30,142 DEBUG [java.sql.Connection] - <{conn-100045} Connection>
2018-01-30 15:41:30,143 DEBUG [java.sql.Connection] - <{conn-100045} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 15:41:30,143 DEBUG [java.sql.PreparedStatement] - <{pstm-100046} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 15:41:30,143 DEBUG [java.sql.PreparedStatement] - <{pstm-100046} Parameters: [100043]>
2018-01-30 15:41:30,143 DEBUG [java.sql.PreparedStatement] - <{pstm-100046} Types: [java.lang.String]>
2018-01-30 15:41:30,146 DEBUG [java.sql.ResultSet] - <{rset-100047} ResultSet>
2018-01-30 15:41:30,147 DEBUG [java.sql.ResultSet] - <{rset-100047} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 15:41:30,147 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [010402, 收费管理, null, 0104, module/chg.ered?reqCode=chargeInit, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,147 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040503, 作废票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,147 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040501, 票据入库, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,148 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040401, 冲账, null, 010404, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,148 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040101, 生成应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,148 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040505, 领用票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,148 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040302, 删除减免, null, 010403, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,149 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040301, 减免应收, null, 010403, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,149 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040502, 删除票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,150 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040201, 收费, null, 010402, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,150 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040102, 删除应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,151 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040504, 返还票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,151 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [010401, 生成应收, null, 0104, module/crp.ered?reqCode=creatPlanInit, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,151 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [0104, 收费管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 15:41:30,151 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [010403, 减免管理, null, 0104, module/mns.ered?reqCode=minusInit, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,152 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [010404, 冲账管理, null, 0104, module/rlb.ered?reqCode=rollbackInit, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,152 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [010405, 票据管理, null, 0104, module/inv.ered?reqCode=invoiceInit, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,152 DEBUG [java.sql.Connection] - <{conn-100048} Connection>
2018-01-30 15:41:30,153 DEBUG [java.sql.Connection] - <{conn-100048} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 15:41:30,153 DEBUG [java.sql.PreparedStatement] - <{pstm-100049} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 15:41:30,153 DEBUG [java.sql.PreparedStatement] - <{pstm-100049} Parameters: [100043]>
2018-01-30 15:41:30,153 DEBUG [java.sql.PreparedStatement] - <{pstm-100049} Types: [java.lang.String]>
2018-01-30 15:41:30,155 DEBUG [java.sql.ResultSet] - <{rset-100050} ResultSet>
2018-01-30 15:41:30,156 DEBUG [java.sql.Connection] - <{conn-100051} Connection>
2018-01-30 15:41:30,156 DEBUG [java.sql.Connection] - <{conn-100051} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 15:41:30,156 DEBUG [java.sql.PreparedStatement] - <{pstm-100052} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 15:41:30,156 DEBUG [java.sql.PreparedStatement] - <{pstm-100052} Parameters: [01]>
2018-01-30 15:41:30,156 DEBUG [java.sql.PreparedStatement] - <{pstm-100052} Types: [java.lang.String]>
2018-01-30 15:41:30,158 DEBUG [java.sql.ResultSet] - <{rset-100053} ResultSet>
2018-01-30 15:41:30,159 DEBUG [java.sql.ResultSet] - <{rset-100053} Header: [menuname]>
2018-01-30 15:41:30,159 DEBUG [java.sql.ResultSet] - <{rset-100053} Result: [供热收费管理信息系统]>
2018-01-30 15:41:30,248 DEBUG [java.sql.Connection] - <{conn-100054} Connection>
2018-01-30 15:41:30,250 DEBUG [java.sql.Connection] - <{conn-100054} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 15:41:30,250 DEBUG [java.sql.PreparedStatement] - <{pstm-100055} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 15:41:30,250 DEBUG [java.sql.PreparedStatement] - <{pstm-100055} Parameters: [100043]>
2018-01-30 15:41:30,250 DEBUG [java.sql.PreparedStatement] - <{pstm-100055} Types: [java.lang.String]>
2018-01-30 15:41:30,253 DEBUG [java.sql.ResultSet] - <{rset-100056} ResultSet>
2018-01-30 15:41:30,254 DEBUG [java.sql.ResultSet] - <{rset-100056} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 15:41:30,254 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [010502, 收费报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-01-30 15:41:30,254 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [010501, 基础报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-01-30 15:41:30,254 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [01050202, 欠费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050201, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,254 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [01050101, 用户情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=f01050101, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,255 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [01050102, 入网情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=w01050301, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,255 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [01050203, 收费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050202, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,255 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [01050201, 收费情况表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050401, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,255 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [0105, 统计分析, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 15:41:30,256 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [01050204, 减免明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050204, 1, false, false, tab_blank.png]>
2018-01-30 15:41:30,256 DEBUG [java.sql.Connection] - <{conn-100057} Connection>
2018-01-30 15:41:30,256 DEBUG [java.sql.Connection] - <{conn-100057} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 15:41:30,257 DEBUG [java.sql.PreparedStatement] - <{pstm-100058} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 15:41:30,257 DEBUG [java.sql.PreparedStatement] - <{pstm-100058} Parameters: [100043]>
2018-01-30 15:41:30,257 DEBUG [java.sql.PreparedStatement] - <{pstm-100058} Types: [java.lang.String]>
2018-01-30 15:41:30,258 DEBUG [java.sql.ResultSet] - <{rset-100059} ResultSet>
2018-01-30 15:41:30,259 DEBUG [java.sql.Connection] - <{conn-100060} Connection>
2018-01-30 15:41:30,259 DEBUG [java.sql.Connection] - <{conn-100060} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 15:41:30,259 DEBUG [java.sql.PreparedStatement] - <{pstm-100061} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 15:41:30,260 DEBUG [java.sql.PreparedStatement] - <{pstm-100061} Parameters: [01]>
2018-01-30 15:41:30,260 DEBUG [java.sql.PreparedStatement] - <{pstm-100061} Types: [java.lang.String]>
2018-01-30 15:41:30,261 DEBUG [java.sql.ResultSet] - <{rset-100062} ResultSet>
2018-01-30 15:41:30,261 DEBUG [java.sql.ResultSet] - <{rset-100062} Header: [menuname]>
2018-01-30 15:41:30,261 DEBUG [java.sql.ResultSet] - <{rset-100062} Result: [供热收费管理信息系统]>
2018-01-30 15:41:30,339 DEBUG [java.sql.Connection] - <{conn-100063} Connection>
2018-01-30 15:41:30,340 DEBUG [java.sql.Connection] - <{conn-100063} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 15:41:30,340 DEBUG [java.sql.PreparedStatement] - <{pstm-100064} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 15:41:30,340 DEBUG [java.sql.PreparedStatement] - <{pstm-100064} Parameters: [100043]>
2018-01-30 15:41:30,340 DEBUG [java.sql.PreparedStatement] - <{pstm-100064} Types: [java.lang.String]>
2018-01-30 15:41:30,342 DEBUG [java.sql.ResultSet] - <{rset-100065} ResultSet>
2018-01-30 15:41:30,343 DEBUG [java.sql.ResultSet] - <{rset-100065} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 15:41:30,343 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010305, 优惠设置, server_connectIcon, 010103, module/dic.ered?reqCode=discountInit, 1, false, false, server_connect.png]>
2018-01-30 15:41:30,343 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010304, 收费标准, server_connectIcon, 010103, module/std.ered?reqCode=standardInit, 1, false, false, server_connect.png]>
2018-01-30 15:41:30,343 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [010102, 权限管理, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 15:41:30,344 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010201, 组织机构管理, chart_organisationIcon, 010102, organization.ered?reqCode=departmentInit, 1, false, false, chart_organisation.png]>
2018-01-30 15:41:30,344 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010301, 字典维护, application_view_listIcon, 010103, resource.ered?reqCode=codeTableInit, 1, false, false, application_view_list.png]>
2018-01-30 15:41:30,344 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010403, Requst请求跟踪, server_connectIcon, 010104, eventTrack.ered?reqCode=init, 1, false, false, server_connect.png]>
2018-01-30 15:41:30,344 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010401, Session会话监控, user_commentIcon, 010104, sessionMonitor.ered?reqCode=init, 1, false, false, user_comment.png]>
2018-01-30 15:41:30,345 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010204, 角色管理与授权, award_star_silver_3Icon, 010102, role.ered?reqCode=roleInit, 1, false, false, award_star_silver_3.png]>
2018-01-30 15:41:30,345 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010303, 全局参数表维护, configIcon, 010103, param.ered?reqCode=init, 1, false, false, config.png]>
2018-01-30 15:41:30,346 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [010103, 基础数据维护, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 15:41:30,348 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [010104, 运行监控, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 15:41:30,348 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010202, 人员管理与授权, group_linkIcon, 010102, user.ered?reqCode=userInit, 1, false, false, group_link.png]>
2018-01-30 15:41:30,348 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010405, JDBC执行监控, database_refreshIcon, 010104, jdbcMonitor.ered?reqCode=jdbcInit, 1, false, false, database_refresh.png]>
2018-01-30 15:41:30,349 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010406, Service监控, pluginIcon, 010104, beanMonitor.ered?reqCode=init, 1, false, false, plugin.png]>
2018-01-30 15:41:30,349 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010205, 菜单资源管理, layout_contentIcon, 010102, resource.ered?reqCode=menuResourceInit, 1, false, false, layout_content.png]>
2018-01-30 15:41:30,349 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [0101, 系统管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 15:41:30,349 DEBUG [java.sql.Connection] - <{conn-100066} Connection>
2018-01-30 15:41:30,350 DEBUG [java.sql.Connection] - <{conn-100066} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 15:41:30,350 DEBUG [java.sql.PreparedStatement] - <{pstm-100067} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 15:41:30,350 DEBUG [java.sql.PreparedStatement] - <{pstm-100067} Parameters: [100043]>
2018-01-30 15:41:30,350 DEBUG [java.sql.PreparedStatement] - <{pstm-100067} Types: [java.lang.String]>
2018-01-30 15:41:30,352 DEBUG [java.sql.ResultSet] - <{rset-100068} ResultSet>
2018-01-30 15:41:30,352 DEBUG [java.sql.Connection] - <{conn-100069} Connection>
2018-01-30 15:41:30,353 DEBUG [java.sql.Connection] - <{conn-100069} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 15:41:30,353 DEBUG [java.sql.PreparedStatement] - <{pstm-100070} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 15:41:30,353 DEBUG [java.sql.PreparedStatement] - <{pstm-100070} Parameters: [01]>
2018-01-30 15:41:30,353 DEBUG [java.sql.PreparedStatement] - <{pstm-100070} Types: [java.lang.String]>
2018-01-30 15:41:30,354 DEBUG [java.sql.ResultSet] - <{rset-100071} ResultSet>
2018-01-30 15:41:30,355 DEBUG [java.sql.ResultSet] - <{rset-100071} Header: [menuname]>
2018-01-30 15:41:30,355 DEBUG [java.sql.ResultSet] - <{rset-100071} Result: [供热收费管理信息系统]>
2018-01-30 15:41:30,948 DEBUG [java.sql.Connection] - <{conn-100072} Connection>
2018-01-30 15:41:30,948 DEBUG [java.sql.Connection] - <{conn-100072} Preparing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-01-30 15:41:30,949 DEBUG [java.sql.PreparedStatement] - <{pstm-100073} Executing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-01-30 15:41:30,949 DEBUG [java.sql.PreparedStatement] - <{pstm-100073} Parameters: []>
2018-01-30 15:41:30,949 DEBUG [java.sql.PreparedStatement] - <{pstm-100073} Types: []>
2018-01-30 15:41:30,950 DEBUG [java.sql.ResultSet] - <{rset-100074} ResultSet>
2018-01-30 15:41:30,951 DEBUG [java.sql.ResultSet] - <{rset-100074} Header: [id, text, child_count]>
2018-01-30 15:41:30,951 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0101, 0101 经贸局家属楼 (3), 3]>
2018-01-30 15:41:30,951 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0102, 0102 法院家属楼 (2), 2]>
2018-01-30 15:41:30,951 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0103, 0103 长治县电视台 (1), 1]>
2018-01-30 15:41:30,951 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0104, 0104 广播北二巷（一至三排） (1), 1]>
2018-01-30 15:41:30,952 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0105, 0105 广播南二巷（公安家属西五排） (1), 1]>
2018-01-30 15:41:30,952 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0106, 0106 广播北四巷第一组（南6户） (1), 1]>
2018-01-30 15:41:30,952 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0107, 0107 广播北四巷第一组（北19户） (1), 1]>
2018-01-30 15:41:30,952 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0108, 0108 广播北四巷第二组（16户） (1), 1]>
2018-01-30 15:41:30,952 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0109, 0109 工业巷北一排-北八排 (1), 1]>
2018-01-30 15:41:30,953 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0110, 0110 法院家属院17户 (1), 1]>
2018-01-30 15:41:30,953 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0111, 0111 公安西家属区60户 (1), 1]>
2018-01-30 15:41:30,954 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0112, 0112 建筑工程公司 (2), 2]>
2018-01-30 15:41:30,954 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0113, 0113 工会家属楼 (1), 1]>
2018-01-30 15:41:30,954 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0114, 0114 工会二层独院5户 (1), 1]>
2018-01-30 15:41:30,954 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0115, 0115 政府平房南一排 (2), 2]>
2018-01-30 15:41:30,954 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0116, 0116 政府平房南二排6户 (1), 1]>
2018-01-30 15:41:30,954 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0117, 0117 政府平房南三排5户 (1), 1]>
2018-01-30 15:41:30,954 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0118, 0118 政府平房南四排4户 (1), 1]>
2018-01-30 15:41:30,954 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0119, 0119 政府平房南五排5户（北二排） (1), 1]>
2018-01-30 15:41:30,955 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0120, 0120 政府平房南六排5户（北一排） (1), 1]>
2018-01-30 15:41:30,955 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0121, 0121 政府平房后六户 (1), 1]>
2018-01-30 15:41:30,956 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0122, 0122 政府第三家属楼32户 (1), 1]>
2018-01-30 15:41:30,956 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0123, 0123 政府黄楼家属区 (1), 1]>
2018-01-30 15:41:30,956 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0124, 0124 五交化家属楼 (2), 2]>
2018-01-30 15:41:30,956 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0125, 0125 通达供销公司综合楼 (1), 1]>
2018-01-30 15:41:30,956 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0126, 0126 供销联社家属楼 (3), 3]>
2018-01-30 15:41:30,956 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0127, 0127 二轻局底商 (1), 1]>
2018-01-30 15:41:30,956 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [2001, 2001 南董村西南一巷 (1), 1]>
2018-01-30 15:41:30,957 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [2002, 2002 南董村正街路北 (1), 1]>
2018-01-30 15:41:30,957 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [2003, 2003 南董村正街路南 (1), 1]>
2018-01-30 15:41:30,957 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [2004, 2004 南董村西散户 (1), 1]>
2018-01-30 15:41:30,958 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [2005, 2005 伍龙小区 (3), 3]>
2018-01-30 15:41:31,168 DEBUG [java.sql.Connection] - <{conn-100075} Connection>
2018-01-30 15:41:31,169 DEBUG [java.sql.Connection] - <{conn-100075} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 15:41:31,169 DEBUG [java.sql.PreparedStatement] - <{pstm-100076} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 15:41:31,169 DEBUG [java.sql.PreparedStatement] - <{pstm-100076} Parameters: [100043]>
2018-01-30 15:41:31,169 DEBUG [java.sql.PreparedStatement] - <{pstm-100076} Types: [java.lang.String]>
2018-01-30 15:41:31,170 DEBUG [java.sql.ResultSet] - <{rset-100077} ResultSet>
2018-01-30 15:41:31,170 DEBUG [java.sql.ResultSet] - <{rset-100077} Header: [theme]>
2018-01-30 15:41:31,171 DEBUG [java.sql.ResultSet] - <{rset-100077} Result: [default]>
2018-01-30 15:41:33,083 DEBUG [java.sql.Connection] - <{conn-100078} Connection>
2018-01-30 15:41:33,084 DEBUG [java.sql.Connection] - <{conn-100078} Preparing Statement:    SELECT building_code as id, building_code||' '||building_name||' ('||house_count||')' as text,nvl(house_count,0) as child_Count   FROM fc_building a WHERE   a.community_code = '0101'  order by building_code  >
2018-01-30 15:41:33,085 DEBUG [java.sql.PreparedStatement] - <{pstm-100079} Executing Statement:    SELECT building_code as id, building_code||' '||building_name||' ('||house_count||')' as text,nvl(house_count,0) as child_Count   FROM fc_building a WHERE   a.community_code = '0101'  order by building_code  >
2018-01-30 15:41:33,085 DEBUG [java.sql.PreparedStatement] - <{pstm-100079} Parameters: []>
2018-01-30 15:41:33,085 DEBUG [java.sql.PreparedStatement] - <{pstm-100079} Types: []>
2018-01-30 15:41:33,086 DEBUG [java.sql.ResultSet] - <{rset-100080} ResultSet>
2018-01-30 15:41:33,087 DEBUG [java.sql.ResultSet] - <{rset-100080} Header: [id, text, child_count]>
2018-01-30 15:41:33,087 DEBUG [java.sql.ResultSet] - <{rset-100080} Result: [0101-001, 0101-001 家属楼 (21), 21]>
2018-01-30 15:41:33,087 DEBUG [java.sql.ResultSet] - <{rset-100080} Result: [0101-002, 0101-002 大北门 (1), 1]>
2018-01-30 15:41:33,087 DEBUG [java.sql.ResultSet] - <{rset-100080} Result: [0101-999, 0101-999 商业 (2), 2]>
2018-01-30 15:41:33,755 DEBUG [java.sql.Connection] - <{conn-100081} Connection>
2018-01-30 15:41:33,755 DEBUG [java.sql.Connection] - <{conn-100081} Preparing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0101-001'   order by a.house_code  >
2018-01-30 15:41:33,755 DEBUG [java.sql.PreparedStatement] - <{pstm-100082} Executing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0101-001'   order by a.house_code  >
2018-01-30 15:41:33,755 DEBUG [java.sql.PreparedStatement] - <{pstm-100082} Parameters: []>
2018-01-30 15:41:33,755 DEBUG [java.sql.PreparedStatement] - <{pstm-100082} Types: []>
2018-01-30 15:41:33,757 DEBUG [java.sql.ResultSet] - <{rset-100083} ResultSet>
2018-01-30 15:41:33,757 DEBUG [java.sql.ResultSet] - <{rset-100083} Header: [id, text, child_count]>
2018-01-30 15:41:33,757 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [0101-001-01-01-01, 01-01-01 李宝源, 0]>
2018-01-30 15:41:33,757 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [0101-001-01-01-02, 01-01-02 崔志兵, 0]>
2018-01-30 15:41:33,757 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [0101-001-01-02-01, 01-02-01 牛忠清, 0]>
2018-01-30 15:41:33,757 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [0101-001-01-02-02, 01-02-02 郝旭刚, 0]>
2018-01-30 15:41:33,757 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [0101-001-01-03-01, 01-03-01 王志兵, 0]>
2018-01-30 15:41:33,757 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [0101-001-01-03-02, 01-03-02 李旭红, 0]>
2018-01-30 15:41:33,758 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [0101-001-02-01-01, 02-01-01 曹贵胜, 0]>
2018-01-30 15:41:33,758 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [0101-001-02-01-02, 02-01-02 段发书, 0]>
2018-01-30 15:41:33,758 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [0101-001-02-02-01, 02-02-01 郝秀好, 0]>
2018-01-30 15:41:33,759 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [0101-001-02-02-02, 02-02-02 任元宝, 0]>
2018-01-30 15:41:33,759 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [0101-001-02-03-01, 02-03-01 张志刚, 0]>
2018-01-30 15:41:33,759 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [0101-001-02-03-02, 02-03-02 李国芳, 0]>
2018-01-30 15:41:33,759 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [0101-001-03-01-01, 03-01-01 秦凤祥, 0]>
2018-01-30 15:41:33,759 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [0101-001-03-01-02, 03-01-02 史春华, 0]>
2018-01-30 15:41:33,759 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [0101-001-03-02-01, 03-02-01 张志明, 0]>
2018-01-30 15:41:33,759 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [0101-001-03-02-02, 03-02-02 靳锁明, 0]>
2018-01-30 15:41:33,759 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [0101-001-03-03-01, 03-03-01 张志强, 0]>
2018-01-30 15:41:33,759 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [0101-001-03-03-02, 03-03-02 李  凡, 0]>
2018-01-30 15:41:33,760 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [0101-001-04-01-01, 04-01-01 牛泽玲, 0]>
2018-01-30 15:41:33,760 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [0101-001-04-01-02, 04-01-02 王泽宇, 0]>
2018-01-30 15:41:33,760 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [0101-001-04-02-01, 04-02-01 赵明泽, 0]>
2018-01-30 15:41:34,880 DEBUG [java.sql.Connection] - <{conn-100084} Connection>
2018-01-30 15:41:34,880 DEBUG [java.sql.Connection] - <{conn-100084} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 15:41:34,880 DEBUG [java.sql.PreparedStatement] - <{pstm-100085} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 15:41:34,880 DEBUG [java.sql.PreparedStatement] - <{pstm-100085} Parameters: [100043]>
2018-01-30 15:41:34,880 DEBUG [java.sql.PreparedStatement] - <{pstm-100085} Types: [java.lang.String]>
2018-01-30 15:41:34,881 DEBUG [java.sql.ResultSet] - <{rset-100086} ResultSet>
2018-01-30 15:41:34,882 DEBUG [java.sql.ResultSet] - <{rset-100086} Header: [theme]>
2018-01-30 15:41:34,882 DEBUG [java.sql.ResultSet] - <{rset-100086} Result: [default]>
2018-01-30 15:41:36,024 DEBUG [java.sql.Connection] - <{conn-100087} Connection>
2018-01-30 15:41:36,024 DEBUG [java.sql.Connection] - <{conn-100087} Preparing Statement:    SELECT stat_id value,stat_name text   FROM   fc_station  >
2018-01-30 15:41:36,024 DEBUG [java.sql.PreparedStatement] - <{pstm-100088} Executing Statement:    SELECT stat_id value,stat_name text   FROM   fc_station  >
2018-01-30 15:41:36,025 DEBUG [java.sql.PreparedStatement] - <{pstm-100088} Parameters: []>
2018-01-30 15:41:36,025 DEBUG [java.sql.PreparedStatement] - <{pstm-100088} Types: []>
2018-01-30 15:41:36,026 DEBUG [java.sql.ResultSet] - <{rset-100089} ResultSet>
2018-01-30 15:41:36,028 DEBUG [java.sql.Connection] - <{conn-100090} Connection>
2018-01-30 15:41:36,028 DEBUG [java.sql.Connection] - <{conn-100090} Preparing Statement:    SELECT userid value,username text   FROM eauser    >
2018-01-30 15:41:36,029 DEBUG [java.sql.PreparedStatement] - <{pstm-100091} Executing Statement:    SELECT userid value,username text   FROM eauser    >
2018-01-30 15:41:36,029 DEBUG [java.sql.PreparedStatement] - <{pstm-100091} Parameters: []>
2018-01-30 15:41:36,029 DEBUG [java.sql.PreparedStatement] - <{pstm-100091} Types: []>
2018-01-30 15:41:36,030 DEBUG [java.sql.ResultSet] - <{rset-100092} ResultSet>
2018-01-30 15:41:36,031 DEBUG [java.sql.ResultSet] - <{rset-100092} Header: [value, text]>
2018-01-30 15:41:36,031 DEBUG [java.sql.ResultSet] - <{rset-100092} Result: [100000, 超级用户]>
2018-01-30 15:41:36,031 DEBUG [java.sql.ResultSet] - <{rset-100092} Result: [100001, 开发人员]>
2018-01-30 15:41:36,031 DEBUG [java.sql.ResultSet] - <{rset-100092} Result: [100043, 管理员]>
2018-01-30 15:41:36,031 DEBUG [java.sql.ResultSet] - <{rset-100092} Result: [100044, aa]>
2018-01-30 15:41:36,031 DEBUG [java.sql.ResultSet] - <{rset-100092} Result: [100047, 农村信用社]>
2018-01-30 15:41:36,076 DEBUG [java.sql.Connection] - <{conn-100093} Connection>
2018-01-30 15:41:36,076 DEBUG [java.sql.Connection] - <{conn-100093} Preparing Statement:    SELECT STANDARD_ID value,STANDARD_NAME text   FROM SF_STANDARD    where item_code=? and standyear=(select current_year from sf_item where item_code=? )   order by STANDARD_ID  >
2018-01-30 15:41:36,076 DEBUG [java.sql.PreparedStatement] - <{pstm-100094} Executing Statement:    SELECT STANDARD_ID value,STANDARD_NAME text   FROM SF_STANDARD    where item_code=? and standyear=(select current_year from sf_item where item_code=? )   order by STANDARD_ID  >
2018-01-30 15:41:36,077 DEBUG [java.sql.PreparedStatement] - <{pstm-100094} Parameters: [A, A]>
2018-01-30 15:41:36,077 DEBUG [java.sql.PreparedStatement] - <{pstm-100094} Types: [java.lang.String, java.lang.String]>
2018-01-30 15:41:36,078 DEBUG [java.sql.ResultSet] - <{rset-100095} ResultSet>
2018-01-30 15:41:36,079 DEBUG [java.sql.ResultSet] - <{rset-100095} Header: [value, text]>
2018-01-30 15:41:36,079 DEBUG [java.sql.ResultSet] - <{rset-100095} Result: [A1, 居民]>
2018-01-30 15:41:36,079 DEBUG [java.sql.ResultSet] - <{rset-100095} Result: [A2, 公用]>
2018-01-30 15:41:36,079 DEBUG [java.sql.ResultSet] - <{rset-100095} Result: [A3, 非居民]>
2018-01-30 15:41:36,207 DEBUG [java.sql.Connection] - <{conn-100096} Connection>
2018-01-30 15:41:36,209 DEBUG [java.sql.Connection] - <{conn-100096} Preparing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-01-30 15:41:36,209 DEBUG [java.sql.PreparedStatement] - <{pstm-100097} Executing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-01-30 15:41:36,209 DEBUG [java.sql.PreparedStatement] - <{pstm-100097} Parameters: [0101-001-01-01-01, 0101-001-01-01-01, 0101-001-01-01-01, 0101-001-01-01-01, 0101-001-01-01-01, 0101-001-01-01-01]>
2018-01-30 15:41:36,209 DEBUG [java.sql.PreparedStatement] - <{pstm-100097} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-30 15:41:36,214 DEBUG [java.sql.ResultSet] - <{rset-100098} ResultSet>
2018-01-30 15:41:36,215 DEBUG [java.sql.ResultSet] - <{rset-100098} Header: [h_cell_code, h_floor, h_door_code, h_house_code, h_card_id, h_cluster_code, h_contact_man, h_house_manager_name, h_house_manager, h_owner_name, h_address, h_intoweb_date, h_telephone, h_stat_name, h_stat_id, h_enter_date, h_work_unit, h_apart_status, h_user_kind, h_heat_status, h_intoweb_area, h_mobilephone, h_area_count, h_intoweb_year, h_item_code, h_area_id, h_use_type, h_standard_id, h_standard_name, h_build_area, h_floor_height, h_super_area, h_charge_area, h_item_code1, h_area_id1, h_use_type1, h_standard_id1, h_standard_name1, h_build_area1, h_floor_height1, h_super_area1, h_charge_area1, h_item_code2, h_area_id2, h_use_type2, h_standard_id2, h_standard_name2, h_build_area2, h_floor_height2, h_super_area2, h_charge_area2, h_item_code3, h_area_id3, h_use_type3, h_standard_id3, h_standard_name3, h_build_area3, h_floor_height3, h_super_area3, h_charge_area3, h_item_code4, h_area_id4, h_use_type4, h_standard_id4, h_standard_name4, h_build_area4, h_floor_height4, h_super_area4, h_charge_area4, h_remark]>
2018-01-30 15:41:36,215 DEBUG [java.sql.ResultSet] - <{rset-100098} Result: [01, 01, 01, 0101-001-01-01-01, null, null, null, null, null, 李宝源, null, null, null, null, null, 2000-01-01, null, null, null, null, null, null, 1, null, A, 0, null, A1, 居民, null, null, null, 100.01, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-01-30 15:41:38,319 DEBUG [java.sql.Connection] - <{conn-100099} Connection>
2018-01-30 15:41:38,319 DEBUG [java.sql.Connection] - <{conn-100099} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 15:41:38,320 DEBUG [java.sql.PreparedStatement] - <{pstm-100100} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 15:41:38,320 DEBUG [java.sql.PreparedStatement] - <{pstm-100100} Parameters: [100043]>
2018-01-30 15:41:38,320 DEBUG [java.sql.PreparedStatement] - <{pstm-100100} Types: [java.lang.String]>
2018-01-30 15:41:38,321 DEBUG [java.sql.ResultSet] - <{rset-100101} ResultSet>
2018-01-30 15:41:38,321 DEBUG [java.sql.ResultSet] - <{rset-100101} Header: [theme]>
2018-01-30 15:41:38,321 DEBUG [java.sql.ResultSet] - <{rset-100101} Result: [default]>
2018-01-30 15:41:38,736 DEBUG [java.sql.Connection] - <{conn-100102} Connection>
2018-01-30 15:41:38,737 DEBUG [java.sql.Connection] - <{conn-100102} Preparing Statement:    SELECT userid value,username text   FROM eauser    >
2018-01-30 15:41:38,737 DEBUG [java.sql.PreparedStatement] - <{pstm-100103} Executing Statement:    SELECT userid value,username text   FROM eauser    >
2018-01-30 15:41:38,737 DEBUG [java.sql.PreparedStatement] - <{pstm-100103} Parameters: []>
2018-01-30 15:41:38,737 DEBUG [java.sql.PreparedStatement] - <{pstm-100103} Types: []>
2018-01-30 15:41:38,738 DEBUG [java.sql.ResultSet] - <{rset-100104} ResultSet>
2018-01-30 15:41:38,738 DEBUG [java.sql.ResultSet] - <{rset-100104} Header: [value, text]>
2018-01-30 15:41:38,739 DEBUG [java.sql.ResultSet] - <{rset-100104} Result: [100000, 超级用户]>
2018-01-30 15:41:38,739 DEBUG [java.sql.ResultSet] - <{rset-100104} Result: [100001, 开发人员]>
2018-01-30 15:41:38,739 DEBUG [java.sql.ResultSet] - <{rset-100104} Result: [100043, 管理员]>
2018-01-30 15:41:38,739 DEBUG [java.sql.ResultSet] - <{rset-100104} Result: [100044, aa]>
2018-01-30 15:41:38,740 DEBUG [java.sql.ResultSet] - <{rset-100104} Result: [100047, 农村信用社]>
2018-01-30 15:41:41,313 DEBUG [java.sql.Connection] - <{conn-100105} Connection>
2018-01-30 15:41:41,314 DEBUG [java.sql.Connection] - <{conn-100105} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 15:41:41,315 DEBUG [java.sql.PreparedStatement] - <{pstm-100106} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 15:41:41,315 DEBUG [java.sql.PreparedStatement] - <{pstm-100106} Parameters: []>
2018-01-30 15:41:41,315 DEBUG [java.sql.PreparedStatement] - <{pstm-100106} Types: []>
2018-01-30 15:41:41,317 DEBUG [java.sql.ResultSet] - <{rset-100107} ResultSet>
2018-01-30 15:41:41,318 DEBUG [java.sql.ResultSet] - <{rset-100107} Header: [rollback_operator_name, rollback_operate_date, operator_name, operate_date, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, real_account, real_charge, charge_type, pay_unit, pay_man, charge_price, charge_area, address, pay_mode, delzero, bill_man, bill_date, b_id, rollback_flag_ora, rollback_flag, rollback_reason, rollback_remark, operator, rollback_operator, rn]>
2018-01-30 15:41:41,318 DEBUG [java.sql.ResultSet] - <{rset-100107} Result: [null, null, 管理员, 2018-01-30 15:32:46, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000210, 0, null, null, null, 100043, null, 1]>
2018-01-30 15:41:41,318 DEBUG [java.sql.ResultSet] - <{rset-100107} Result: [管理员, 2018-01-30 15:29:02, 管理员, 2018-01-30 13:44:32, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000209, 1, 已冲账, 操作错误, null, 100043, 100043, 2]>
2018-01-30 15:41:41,319 DEBUG [java.sql.ResultSet] - <{rset-100107} Result: [管理员, 2018-01-30 11:41:46, 管理员, 2018-01-29 19:06:34, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000208, 1, 已冲账, 操作错误, null, 100043, 100043, 3]>
2018-01-30 15:41:41,320 DEBUG [java.sql.ResultSet] - <{rset-100107} Result: [管理员, 2018-01-29 19:06:05, 管理员, 2018-01-29 19:04:35, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000207, 1, 已冲账, 操作错误, null, 100043, 100043, 4]>
2018-01-30 15:41:41,321 DEBUG [java.sql.ResultSet] - <{rset-100107} Result: [管理员, 2018-01-29 18:01:04, 管理员, 2018-01-29 17:58:33, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000206, 1, 已冲账, 操作错误, null, 100043, 100043, 5]>
2018-01-30 15:41:41,321 DEBUG [java.sql.ResultSet] - <{rset-100107} Result: [管理员, 2018-01-29 17:52:20, 管理员, 2018-01-29 17:49:55, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000205, 1, 已冲账, 操作错误, null, 100043, 100043, 6]>
2018-01-30 15:41:41,322 DEBUG [java.sql.ResultSet] - <{rset-100107} Result: [管理员, 2018-01-29 17:49:13, 管理员, 2018-01-29 17:48:45, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000204, 1, 已冲账, 操作错误, null, 100043, 100043, 7]>
2018-01-30 15:41:41,322 DEBUG [java.sql.Connection] - <{conn-100108} Connection>
2018-01-30 15:41:41,323 DEBUG [java.sql.Connection] - <{conn-100108} Preparing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 15:41:41,323 DEBUG [java.sql.PreparedStatement] - <{pstm-100109} Executing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 15:41:41,323 DEBUG [java.sql.PreparedStatement] - <{pstm-100109} Parameters: []>
2018-01-30 15:41:41,323 DEBUG [java.sql.PreparedStatement] - <{pstm-100109} Types: []>
2018-01-30 15:41:41,324 DEBUG [java.sql.ResultSet] - <{rset-100110} ResultSet>
2018-01-30 15:41:41,325 DEBUG [java.sql.ResultSet] - <{rset-100110} Header: [count(*)]>
2018-01-30 15:41:41,325 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [7]>
2018-01-30 15:41:41,417 DEBUG [java.sql.Connection] - <{conn-100111} Connection>
2018-01-30 15:41:41,417 DEBUG [java.sql.Connection] - <{conn-100111} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 15:41:41,418 DEBUG [java.sql.PreparedStatement] - <{pstm-100112} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 15:41:41,419 DEBUG [java.sql.PreparedStatement] - <{pstm-100112} Parameters: []>
2018-01-30 15:41:41,419 DEBUG [java.sql.PreparedStatement] - <{pstm-100112} Types: []>
2018-01-30 15:41:41,420 DEBUG [java.sql.ResultSet] - <{rset-100113} ResultSet>
2018-01-30 15:41:41,421 DEBUG [java.sql.ResultSet] - <{rset-100113} Header: [house_count, total_account, real_account, now_cash]>
2018-01-30 15:41:41,421 DEBUG [java.sql.ResultSet] - <{rset-100113} Result: [共7, 19601.96, 19601.96, 14001.4]>
2018-01-30 15:42:54,976 DEBUG [java.sql.Connection] - <{conn-100114} Connection>
2018-01-30 15:42:54,976 DEBUG [java.sql.Connection] - <{conn-100114} Preparing Call: {call pkg_charge.rollback(?,?,?,?,?,?,?,?)}>
2018-01-30 15:42:54,991 DEBUG [java.sql.PreparedStatement] - <{pstm-100115} Executing Statement: {call pkg_charge.rollback(?,?,?,?,?,?,?,?)}>
2018-01-30 15:42:54,991 DEBUG [java.sql.PreparedStatement] - <{pstm-100115} Parameters: [100000000210, 1, 操作错误, , 100043, null]>
2018-01-30 15:42:54,992 DEBUG [java.sql.PreparedStatement] - <{pstm-100115} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, null]>
2018-01-30 15:42:55,192 DEBUG [java.sql.Connection] - <{conn-100116} Connection>
2018-01-30 15:42:55,192 DEBUG [java.sql.Connection] - <{conn-100116} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 15:42:55,193 DEBUG [java.sql.PreparedStatement] - <{pstm-100117} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 15:42:55,193 DEBUG [java.sql.PreparedStatement] - <{pstm-100117} Parameters: []>
2018-01-30 15:42:55,193 DEBUG [java.sql.PreparedStatement] - <{pstm-100117} Types: []>
2018-01-30 15:42:55,196 DEBUG [java.sql.ResultSet] - <{rset-100118} ResultSet>
2018-01-30 15:42:55,197 DEBUG [java.sql.ResultSet] - <{rset-100118} Header: [rollback_operator_name, rollback_operate_date, operator_name, operate_date, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, real_account, real_charge, charge_type, pay_unit, pay_man, charge_price, charge_area, address, pay_mode, delzero, bill_man, bill_date, b_id, rollback_flag_ora, rollback_flag, rollback_reason, rollback_remark, operator, rollback_operator, rn]>
2018-01-30 15:42:55,197 DEBUG [java.sql.ResultSet] - <{rset-100118} Result: [管理员, 2018-01-30 15:42:54, 管理员, 2018-01-30 15:32:46, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000210, 1, 已冲账, 操作错误, null, 100043, 100043, 1]>
2018-01-30 15:42:55,197 DEBUG [java.sql.ResultSet] - <{rset-100118} Result: [管理员, 2018-01-30 15:29:02, 管理员, 2018-01-30 13:44:32, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000209, 1, 已冲账, 操作错误, null, 100043, 100043, 2]>
2018-01-30 15:42:55,198 DEBUG [java.sql.ResultSet] - <{rset-100118} Result: [管理员, 2018-01-30 11:41:46, 管理员, 2018-01-29 19:06:34, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000208, 1, 已冲账, 操作错误, null, 100043, 100043, 3]>
2018-01-30 15:42:55,198 DEBUG [java.sql.ResultSet] - <{rset-100118} Result: [管理员, 2018-01-29 19:06:05, 管理员, 2018-01-29 19:04:35, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000207, 1, 已冲账, 操作错误, null, 100043, 100043, 4]>
2018-01-30 15:42:55,199 DEBUG [java.sql.ResultSet] - <{rset-100118} Result: [管理员, 2018-01-29 18:01:04, 管理员, 2018-01-29 17:58:33, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000206, 1, 已冲账, 操作错误, null, 100043, 100043, 5]>
2018-01-30 15:42:55,200 DEBUG [java.sql.ResultSet] - <{rset-100118} Result: [管理员, 2018-01-29 17:52:20, 管理员, 2018-01-29 17:49:55, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000205, 1, 已冲账, 操作错误, null, 100043, 100043, 6]>
2018-01-30 15:42:55,200 DEBUG [java.sql.ResultSet] - <{rset-100118} Result: [管理员, 2018-01-29 17:49:13, 管理员, 2018-01-29 17:48:45, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000204, 1, 已冲账, 操作错误, null, 100043, 100043, 7]>
2018-01-30 15:42:55,200 DEBUG [java.sql.Connection] - <{conn-100119} Connection>
2018-01-30 15:42:55,201 DEBUG [java.sql.Connection] - <{conn-100119} Preparing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 15:42:55,201 DEBUG [java.sql.PreparedStatement] - <{pstm-100120} Executing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 15:42:55,201 DEBUG [java.sql.PreparedStatement] - <{pstm-100120} Parameters: []>
2018-01-30 15:42:55,201 DEBUG [java.sql.PreparedStatement] - <{pstm-100120} Types: []>
2018-01-30 15:42:55,203 DEBUG [java.sql.ResultSet] - <{rset-100121} ResultSet>
2018-01-30 15:42:55,203 DEBUG [java.sql.ResultSet] - <{rset-100121} Header: [count(*)]>
2018-01-30 15:42:55,203 DEBUG [java.sql.ResultSet] - <{rset-100121} Result: [7]>
2018-01-30 15:42:55,337 DEBUG [java.sql.Connection] - <{conn-100122} Connection>
2018-01-30 15:42:55,338 DEBUG [java.sql.Connection] - <{conn-100122} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 15:42:55,338 DEBUG [java.sql.PreparedStatement] - <{pstm-100123} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 15:42:55,338 DEBUG [java.sql.PreparedStatement] - <{pstm-100123} Parameters: []>
2018-01-30 15:42:55,338 DEBUG [java.sql.PreparedStatement] - <{pstm-100123} Types: []>
2018-01-30 15:42:55,339 DEBUG [java.sql.ResultSet] - <{rset-100124} ResultSet>
2018-01-30 15:42:55,339 DEBUG [java.sql.ResultSet] - <{rset-100124} Header: [house_count, total_account, real_account, now_cash]>
2018-01-30 15:42:55,340 DEBUG [java.sql.ResultSet] - <{rset-100124} Result: [共7, 19601.96, 19601.96, 14001.4]>
2018-01-30 15:47:39,324 DEBUG [java.sql.Connection] - <{conn-100125} Connection>
2018-01-30 15:47:39,324 DEBUG [java.sql.Connection] - <{conn-100125} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 15:47:39,324 DEBUG [java.sql.PreparedStatement] - <{pstm-100126} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 15:47:39,324 DEBUG [java.sql.PreparedStatement] - <{pstm-100126} Parameters: [100043]>
2018-01-30 15:47:39,325 DEBUG [java.sql.PreparedStatement] - <{pstm-100126} Types: [java.lang.String]>
2018-01-30 15:47:39,325 DEBUG [java.sql.ResultSet] - <{rset-100127} ResultSet>
2018-01-30 15:47:39,326 DEBUG [java.sql.ResultSet] - <{rset-100127} Header: [theme]>
2018-01-30 15:47:39,326 DEBUG [java.sql.ResultSet] - <{rset-100127} Result: [default]>
2018-01-30 15:47:41,532 DEBUG [java.sql.Connection] - <{conn-100128} Connection>
2018-01-30 15:47:41,534 DEBUG [java.sql.Connection] - <{conn-100128} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 15:47:41,534 DEBUG [java.sql.PreparedStatement] - <{pstm-100129} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 15:47:41,534 DEBUG [java.sql.PreparedStatement] - <{pstm-100129} Parameters: [0101-001]>
2018-01-30 15:47:41,534 DEBUG [java.sql.PreparedStatement] - <{pstm-100129} Types: [java.lang.String]>
2018-01-30 15:47:41,536 DEBUG [java.sql.ResultSet] - <{rset-100130} ResultSet>
2018-01-30 15:47:41,537 DEBUG [java.sql.Connection] - <{conn-100131} Connection>
2018-01-30 15:47:41,537 DEBUG [java.sql.Connection] - <{conn-100131} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 15:47:41,537 DEBUG [java.sql.PreparedStatement] - <{pstm-100132} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 15:47:41,537 DEBUG [java.sql.PreparedStatement] - <{pstm-100132} Parameters: [0101-001]>
2018-01-30 15:47:41,537 DEBUG [java.sql.PreparedStatement] - <{pstm-100132} Types: [java.lang.String]>
2018-01-30 15:47:41,538 DEBUG [java.sql.ResultSet] - <{rset-100133} ResultSet>
2018-01-30 15:47:41,539 DEBUG [java.sql.ResultSet] - <{rset-100133} Header: [count(*)]>
2018-01-30 15:47:41,539 DEBUG [java.sql.ResultSet] - <{rset-100133} Result: [0]>
2018-01-30 15:47:41,601 DEBUG [java.sql.Connection] - <{conn-100134} Connection>
2018-01-30 15:47:41,601 DEBUG [java.sql.Connection] - <{conn-100134} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 15:47:41,601 DEBUG [java.sql.PreparedStatement] - <{pstm-100135} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 15:47:41,601 DEBUG [java.sql.PreparedStatement] - <{pstm-100135} Parameters: [0101-001]>
2018-01-30 15:47:41,601 DEBUG [java.sql.PreparedStatement] - <{pstm-100135} Types: [java.lang.String]>
2018-01-30 15:47:41,603 DEBUG [java.sql.ResultSet] - <{rset-100136} ResultSet>
2018-01-30 15:47:41,603 DEBUG [java.sql.ResultSet] - <{rset-100136} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-30 15:47:41,603 DEBUG [java.sql.ResultSet] - <{rset-100136} Result: [共0, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-01-30 15:47:41,647 DEBUG [java.sql.Connection] - <{conn-100137} Connection>
2018-01-30 15:47:41,647 DEBUG [java.sql.Connection] - <{conn-100137} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 15:47:41,647 DEBUG [java.sql.PreparedStatement] - <{pstm-100138} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 15:47:41,647 DEBUG [java.sql.PreparedStatement] - <{pstm-100138} Parameters: [0101-001]>
2018-01-30 15:47:41,647 DEBUG [java.sql.PreparedStatement] - <{pstm-100138} Types: [java.lang.String]>
2018-01-30 15:47:41,649 DEBUG [java.sql.ResultSet] - <{rset-100139} ResultSet>
2018-01-30 15:47:42,292 DEBUG [java.sql.Connection] - <{conn-100140} Connection>
2018-01-30 15:47:42,293 DEBUG [java.sql.Connection] - <{conn-100140} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 15:47:42,293 DEBUG [java.sql.PreparedStatement] - <{pstm-100141} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 15:47:42,294 DEBUG [java.sql.PreparedStatement] - <{pstm-100141} Parameters: [0101-001-01-01-01]>
2018-01-30 15:47:42,294 DEBUG [java.sql.PreparedStatement] - <{pstm-100141} Types: [java.lang.String]>
2018-01-30 15:47:42,295 DEBUG [java.sql.ResultSet] - <{rset-100142} ResultSet>
2018-01-30 15:47:42,296 DEBUG [java.sql.ResultSet] - <{rset-100142} Header: [username, item_name, charge_month, house_code, item_code, meter_id, not_money, not_money_latefee, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-30 15:47:42,296 DEBUG [java.sql.ResultSet] - <{rset-100142} Result: [null, 供热费, 2017, 0101-001-01-01-01, A, 0, 2800.28, 1.05, 01, 0101, 0101-001, 李宝源, 2800.28, 0, 0, 2800.28, 0, null, A1, 28, null, null, 100.01, 2017-11-15, 2017-03-31, 0, 2017-11-01, 2017-11-01, 1.05, null, 1.05, null, 0, 0, 0, 0, 0, 0, 0, 0, 15132, 1]>
2018-01-30 15:47:42,296 DEBUG [java.sql.Connection] - <{conn-100143} Connection>
2018-01-30 15:47:42,297 DEBUG [java.sql.Connection] - <{conn-100143} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 15:47:42,297 DEBUG [java.sql.PreparedStatement] - <{pstm-100144} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 15:47:42,297 DEBUG [java.sql.PreparedStatement] - <{pstm-100144} Parameters: [0101-001-01-01-01]>
2018-01-30 15:47:42,297 DEBUG [java.sql.PreparedStatement] - <{pstm-100144} Types: [java.lang.String]>
2018-01-30 15:47:42,298 DEBUG [java.sql.ResultSet] - <{rset-100145} ResultSet>
2018-01-30 15:47:42,298 DEBUG [java.sql.ResultSet] - <{rset-100145} Header: [count(*)]>
2018-01-30 15:47:42,298 DEBUG [java.sql.ResultSet] - <{rset-100145} Result: [1]>
2018-01-30 15:47:42,366 DEBUG [java.sql.Connection] - <{conn-100146} Connection>
2018-01-30 15:47:42,367 DEBUG [java.sql.Connection] - <{conn-100146} Preparing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-30 15:47:42,368 DEBUG [java.sql.PreparedStatement] - <{pstm-100147} Executing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-30 15:47:42,368 DEBUG [java.sql.PreparedStatement] - <{pstm-100147} Parameters: [100043, A]>
2018-01-30 15:47:42,368 DEBUG [java.sql.PreparedStatement] - <{pstm-100147} Types: [java.lang.String, java.lang.String]>
2018-01-30 15:47:42,369 DEBUG [java.sql.ResultSet] - <{rset-100148} ResultSet>
2018-01-30 15:47:42,370 DEBUG [java.sql.Connection] - <{conn-100149} Connection>
2018-01-30 15:47:42,371 DEBUG [java.sql.Connection] - <{conn-100149} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 15:47:42,371 DEBUG [java.sql.PreparedStatement] - <{pstm-100150} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 15:47:42,371 DEBUG [java.sql.PreparedStatement] - <{pstm-100150} Parameters: [0101-001-01-01-01]>
2018-01-30 15:47:42,372 DEBUG [java.sql.PreparedStatement] - <{pstm-100150} Types: [java.lang.String]>
2018-01-30 15:47:42,373 DEBUG [java.sql.ResultSet] - <{rset-100151} ResultSet>
2018-01-30 15:47:42,373 DEBUG [java.sql.ResultSet] - <{rset-100151} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-30 15:47:42,373 DEBUG [java.sql.ResultSet] - <{rset-100151} Result: [共1, 2800.28, 0, 0, 2800.28, 2800.28, 1.05, 0, null, null, 100.01, 1.05, null, 1.05, null]>
2018-01-30 15:47:42,437 DEBUG [java.sql.Connection] - <{conn-100152} Connection>
2018-01-30 15:47:42,437 DEBUG [java.sql.Connection] - <{conn-100152} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 15:47:42,437 DEBUG [java.sql.PreparedStatement] - <{pstm-100153} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 15:47:42,437 DEBUG [java.sql.PreparedStatement] - <{pstm-100153} Parameters: [0101-001-01-01-01]>
2018-01-30 15:47:42,437 DEBUG [java.sql.PreparedStatement] - <{pstm-100153} Types: [java.lang.String]>
2018-01-30 15:47:42,439 DEBUG [java.sql.ResultSet] - <{rset-100154} ResultSet>
2018-01-30 15:47:42,439 DEBUG [java.sql.ResultSet] - <{rset-100154} Header: [card_id, cluster_code, contact_man, house_manager, owner_name, address, telephone, stat_id, work_unit, apart_status, user_kind, heat_status]>
2018-01-30 15:47:42,439 DEBUG [java.sql.ResultSet] - <{rset-100154} Result: [null, null, null, null, 李宝源, null, null, null, null, null, null, null]>
2018-01-30 15:47:44,479 DEBUG [java.sql.Connection] - <{conn-100155} Connection>
2018-01-30 15:47:44,479 DEBUG [java.sql.Connection] - <{conn-100155} Preparing Statement:    SELECT       sequenceid as sequenceid, fieldname as fieldname, maxid as maxid, remark as remark,       pattern as pattern, idtype as idtype   FROM easequence WHERE fieldname = ?  >
2018-01-30 15:47:44,479 DEBUG [java.sql.PreparedStatement] - <{pstm-100156} Executing Statement:    SELECT       sequenceid as sequenceid, fieldname as fieldname, maxid as maxid, remark as remark,       pattern as pattern, idtype as idtype   FROM easequence WHERE fieldname = ?  >
2018-01-30 15:47:44,480 DEBUG [java.sql.PreparedStatement] - <{pstm-100156} Parameters: [B_ID]>
2018-01-30 15:47:44,480 DEBUG [java.sql.PreparedStatement] - <{pstm-100156} Types: [java.lang.String]>
2018-01-30 15:47:44,481 DEBUG [java.sql.ResultSet] - <{rset-100157} ResultSet>
2018-01-30 15:47:44,481 DEBUG [java.sql.ResultSet] - <{rset-100157} Header: [sequenceid, fieldname, maxid, remark, pattern, idtype]>
2018-01-30 15:47:44,481 DEBUG [java.sql.ResultSet] - <{rset-100157} Result: [1012, B_ID, 100000000210, 收费单编号, 00000000000, 1]>
2018-01-30 15:47:44,486 DEBUG [java.sql.Connection] - <{conn-100158} Connection>
2018-01-30 15:47:44,487 DEBUG [java.sql.Connection] - <{conn-100158} Preparing Statement:    SELECT       sequenceid as sequenceid, fieldname as fieldname, maxid as maxid, remark as remark,       pattern as pattern, idtype as idtype   FROM easequence WHERE fieldname = ?  >
2018-01-30 15:47:44,487 DEBUG [java.sql.PreparedStatement] - <{pstm-100159} Executing Statement:    SELECT       sequenceid as sequenceid, fieldname as fieldname, maxid as maxid, remark as remark,       pattern as pattern, idtype as idtype   FROM easequence WHERE fieldname = ?  >
2018-01-30 15:47:44,487 DEBUG [java.sql.PreparedStatement] - <{pstm-100159} Parameters: [I_ID]>
2018-01-30 15:47:44,487 DEBUG [java.sql.PreparedStatement] - <{pstm-100159} Types: [java.lang.String]>
2018-01-30 15:47:44,488 DEBUG [java.sql.ResultSet] - <{rset-100160} ResultSet>
2018-01-30 15:47:44,488 DEBUG [java.sql.ResultSet] - <{rset-100160} Header: [sequenceid, fieldname, maxid, remark, pattern, idtype]>
2018-01-30 15:47:44,488 DEBUG [java.sql.ResultSet] - <{rset-100160} Result: [1013, I_ID, 10000001, 入网编号, 00000000, 1]>
2018-01-30 15:47:44,489 DEBUG [java.sql.Connection] - <{conn-100161} Connection>
2018-01-30 15:47:44,489 DEBUG [java.sql.Connection] - <{conn-100161} Preparing Statement:    SELECT       sequenceid as sequenceid, fieldname as fieldname, maxid as maxid, remark as remark,       pattern as pattern, idtype as idtype   FROM easequence WHERE fieldname = ?  >
2018-01-30 15:47:44,489 DEBUG [java.sql.PreparedStatement] - <{pstm-100162} Executing Statement:    SELECT       sequenceid as sequenceid, fieldname as fieldname, maxid as maxid, remark as remark,       pattern as pattern, idtype as idtype   FROM easequence WHERE fieldname = ?  >
2018-01-30 15:47:44,489 DEBUG [java.sql.PreparedStatement] - <{pstm-100162} Parameters: [B_ID]>
2018-01-30 15:47:44,489 DEBUG [java.sql.PreparedStatement] - <{pstm-100162} Types: [java.lang.String]>
2018-01-30 15:47:44,491 DEBUG [java.sql.ResultSet] - <{rset-100163} ResultSet>
2018-01-30 15:47:44,491 DEBUG [java.sql.ResultSet] - <{rset-100163} Header: [sequenceid, fieldname, maxid, remark, pattern, idtype]>
2018-01-30 15:47:44,491 DEBUG [java.sql.ResultSet] - <{rset-100163} Result: [1012, B_ID, 100000000210, 收费单编号, 00000000000, 1]>
2018-01-30 15:47:44,508 DEBUG [java.sql.Connection] - <{conn-100164} Connection>
2018-01-30 15:47:44,508 DEBUG [java.sql.Connection] - <{conn-100164} Preparing Statement:          UPDATE easequence SET maxid = ? WHERE fieldname = ?  >
2018-01-30 15:47:44,509 DEBUG [java.sql.PreparedStatement] - <{pstm-100165} Executing Statement:          UPDATE easequence SET maxid = ? WHERE fieldname = ?  >
2018-01-30 15:47:44,509 DEBUG [java.sql.PreparedStatement] - <{pstm-100165} Parameters: [100000000211, B_ID]>
2018-01-30 15:47:44,509 DEBUG [java.sql.PreparedStatement] - <{pstm-100165} Types: [java.lang.String, java.lang.String]>
2018-01-30 15:50:23,579 DEBUG [java.sql.Connection] - <{conn-100166} Connection>
2018-01-30 15:50:23,581 DEBUG [java.sql.Connection] - <{conn-100166} Preparing Call: {call pkg_charge.Charge_A( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,  ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}>
2018-01-30 15:50:23,584 DEBUG [java.sql.PreparedStatement] - <{pstm-100167} Executing Statement: {call pkg_charge.Charge_A( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,  ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}>
2018-01-30 15:50:23,585 DEBUG [java.sql.PreparedStatement] - <{pstm-100167} Parameters: [100000000211, 15132, 0101-001-01-01-01, , , , , , 28, 100.01, 现金, , , 2800.28, 0, , , null, null, null, null, 2017-11-01, 1.05, 1.05, , , 100043, null]>
2018-01-30 15:50:23,585 DEBUG [java.sql.PreparedStatement] - <{pstm-100167} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, null, null, null, null, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, java.lang.String, null]>
2018-01-30 16:06:45,946 DEBUG [java.sql.Connection] - <{conn-100168} Connection>
2018-01-30 16:06:45,948 DEBUG [java.sql.Connection] - <{conn-100168} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 16:06:45,948 DEBUG [java.sql.PreparedStatement] - <{pstm-100169} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 16:06:45,948 DEBUG [java.sql.PreparedStatement] - <{pstm-100169} Parameters: []>
2018-01-30 16:06:45,948 DEBUG [java.sql.PreparedStatement] - <{pstm-100169} Types: []>
2018-01-30 16:06:45,951 DEBUG [java.sql.ResultSet] - <{rset-100170} ResultSet>
2018-01-30 16:06:45,951 DEBUG [java.sql.ResultSet] - <{rset-100170} Header: [rollback_operator_name, rollback_operate_date, operator_name, operate_date, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, real_account, real_charge, charge_type, pay_unit, pay_man, charge_price, charge_area, address, pay_mode, delzero, bill_man, bill_date, b_id, rollback_flag_ora, rollback_flag, rollback_reason, rollback_remark, operator, rollback_operator, rn]>
2018-01-30 16:06:45,951 DEBUG [java.sql.ResultSet] - <{rset-100170} Result: [null, null, 管理员, 2018-01-30 15:50:23, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000211, 0, null, null, null, 100043, null, 1]>
2018-01-30 16:06:45,952 DEBUG [java.sql.ResultSet] - <{rset-100170} Result: [管理员, 2018-01-30 15:42:54, 管理员, 2018-01-30 15:32:46, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000210, 1, 已冲账, 操作错误, null, 100043, 100043, 2]>
2018-01-30 16:06:45,952 DEBUG [java.sql.ResultSet] - <{rset-100170} Result: [管理员, 2018-01-30 15:29:02, 管理员, 2018-01-30 13:44:32, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000209, 1, 已冲账, 操作错误, null, 100043, 100043, 3]>
2018-01-30 16:06:45,953 DEBUG [java.sql.ResultSet] - <{rset-100170} Result: [管理员, 2018-01-30 11:41:46, 管理员, 2018-01-29 19:06:34, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000208, 1, 已冲账, 操作错误, null, 100043, 100043, 4]>
2018-01-30 16:06:45,953 DEBUG [java.sql.ResultSet] - <{rset-100170} Result: [管理员, 2018-01-29 19:06:05, 管理员, 2018-01-29 19:04:35, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000207, 1, 已冲账, 操作错误, null, 100043, 100043, 5]>
2018-01-30 16:06:45,954 DEBUG [java.sql.ResultSet] - <{rset-100170} Result: [管理员, 2018-01-29 18:01:04, 管理员, 2018-01-29 17:58:33, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000206, 1, 已冲账, 操作错误, null, 100043, 100043, 6]>
2018-01-30 16:06:45,954 DEBUG [java.sql.ResultSet] - <{rset-100170} Result: [管理员, 2018-01-29 17:52:20, 管理员, 2018-01-29 17:49:55, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000205, 1, 已冲账, 操作错误, null, 100043, 100043, 7]>
2018-01-30 16:06:45,954 DEBUG [java.sql.ResultSet] - <{rset-100170} Result: [管理员, 2018-01-29 17:49:13, 管理员, 2018-01-29 17:48:45, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000204, 1, 已冲账, 操作错误, null, 100043, 100043, 8]>
2018-01-30 16:06:45,955 DEBUG [java.sql.Connection] - <{conn-100171} Connection>
2018-01-30 16:06:45,955 DEBUG [java.sql.Connection] - <{conn-100171} Preparing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 16:06:45,955 DEBUG [java.sql.PreparedStatement] - <{pstm-100172} Executing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 16:06:45,955 DEBUG [java.sql.PreparedStatement] - <{pstm-100172} Parameters: []>
2018-01-30 16:06:45,955 DEBUG [java.sql.PreparedStatement] - <{pstm-100172} Types: []>
2018-01-30 16:06:45,956 DEBUG [java.sql.ResultSet] - <{rset-100173} ResultSet>
2018-01-30 16:06:45,957 DEBUG [java.sql.ResultSet] - <{rset-100173} Header: [count(*)]>
2018-01-30 16:06:45,957 DEBUG [java.sql.ResultSet] - <{rset-100173} Result: [8]>
2018-01-30 16:06:46,108 DEBUG [java.sql.Connection] - <{conn-100174} Connection>
2018-01-30 16:06:46,109 DEBUG [java.sql.Connection] - <{conn-100174} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 16:06:46,109 DEBUG [java.sql.PreparedStatement] - <{pstm-100175} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 16:06:46,109 DEBUG [java.sql.PreparedStatement] - <{pstm-100175} Parameters: []>
2018-01-30 16:06:46,109 DEBUG [java.sql.PreparedStatement] - <{pstm-100175} Types: []>
2018-01-30 16:06:46,110 DEBUG [java.sql.ResultSet] - <{rset-100176} ResultSet>
2018-01-30 16:06:46,111 DEBUG [java.sql.ResultSet] - <{rset-100176} Header: [house_count, total_account, real_account, now_cash]>
2018-01-30 16:06:46,111 DEBUG [java.sql.ResultSet] - <{rset-100176} Result: [共8, 22402.24, 22402.24, 16801.68]>
2018-01-30 16:06:51,243 DEBUG [java.sql.Connection] - <{conn-100177} Connection>
2018-01-30 16:06:51,244 DEBUG [java.sql.Connection] - <{conn-100177} Preparing Call: {call pkg_charge.rollback(?,?,?,?,?,?,?,?)}>
2018-01-30 16:06:51,244 DEBUG [java.sql.PreparedStatement] - <{pstm-100178} Executing Statement: {call pkg_charge.rollback(?,?,?,?,?,?,?,?)}>
2018-01-30 16:06:51,244 DEBUG [java.sql.PreparedStatement] - <{pstm-100178} Parameters: [100000000211, 1, 操作错误, , 100043, null]>
2018-01-30 16:06:51,244 DEBUG [java.sql.PreparedStatement] - <{pstm-100178} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, null]>
2018-01-30 16:06:51,409 DEBUG [java.sql.Connection] - <{conn-100179} Connection>
2018-01-30 16:06:51,410 DEBUG [java.sql.Connection] - <{conn-100179} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 16:06:51,410 DEBUG [java.sql.PreparedStatement] - <{pstm-100180} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 16:06:51,412 DEBUG [java.sql.PreparedStatement] - <{pstm-100180} Parameters: []>
2018-01-30 16:06:51,412 DEBUG [java.sql.PreparedStatement] - <{pstm-100180} Types: []>
2018-01-30 16:06:51,415 DEBUG [java.sql.ResultSet] - <{rset-100181} ResultSet>
2018-01-30 16:06:51,415 DEBUG [java.sql.ResultSet] - <{rset-100181} Header: [rollback_operator_name, rollback_operate_date, operator_name, operate_date, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, real_account, real_charge, charge_type, pay_unit, pay_man, charge_price, charge_area, address, pay_mode, delzero, bill_man, bill_date, b_id, rollback_flag_ora, rollback_flag, rollback_reason, rollback_remark, operator, rollback_operator, rn]>
2018-01-30 16:06:51,416 DEBUG [java.sql.ResultSet] - <{rset-100181} Result: [管理员, 2018-01-30 16:06:51, 管理员, 2018-01-30 15:50:23, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000211, 1, 已冲账, 操作错误, null, 100043, 100043, 1]>
2018-01-30 16:06:51,416 DEBUG [java.sql.ResultSet] - <{rset-100181} Result: [管理员, 2018-01-30 15:42:54, 管理员, 2018-01-30 15:32:46, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000210, 1, 已冲账, 操作错误, null, 100043, 100043, 2]>
2018-01-30 16:06:51,416 DEBUG [java.sql.ResultSet] - <{rset-100181} Result: [管理员, 2018-01-30 15:29:02, 管理员, 2018-01-30 13:44:32, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000209, 1, 已冲账, 操作错误, null, 100043, 100043, 3]>
2018-01-30 16:06:51,417 DEBUG [java.sql.ResultSet] - <{rset-100181} Result: [管理员, 2018-01-30 11:41:46, 管理员, 2018-01-29 19:06:34, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000208, 1, 已冲账, 操作错误, null, 100043, 100043, 4]>
2018-01-30 16:06:51,417 DEBUG [java.sql.ResultSet] - <{rset-100181} Result: [管理员, 2018-01-29 19:06:05, 管理员, 2018-01-29 19:04:35, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000207, 1, 已冲账, 操作错误, null, 100043, 100043, 5]>
2018-01-30 16:06:51,418 DEBUG [java.sql.ResultSet] - <{rset-100181} Result: [管理员, 2018-01-29 18:01:04, 管理员, 2018-01-29 17:58:33, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000206, 1, 已冲账, 操作错误, null, 100043, 100043, 6]>
2018-01-30 16:06:51,418 DEBUG [java.sql.ResultSet] - <{rset-100181} Result: [管理员, 2018-01-29 17:52:20, 管理员, 2018-01-29 17:49:55, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000205, 1, 已冲账, 操作错误, null, 100043, 100043, 7]>
2018-01-30 16:06:51,419 DEBUG [java.sql.ResultSet] - <{rset-100181} Result: [管理员, 2018-01-29 17:49:13, 管理员, 2018-01-29 17:48:45, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000204, 1, 已冲账, 操作错误, null, 100043, 100043, 8]>
2018-01-30 16:06:51,419 DEBUG [java.sql.Connection] - <{conn-100182} Connection>
2018-01-30 16:06:51,419 DEBUG [java.sql.Connection] - <{conn-100182} Preparing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 16:06:51,420 DEBUG [java.sql.PreparedStatement] - <{pstm-100183} Executing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 16:06:51,420 DEBUG [java.sql.PreparedStatement] - <{pstm-100183} Parameters: []>
2018-01-30 16:06:51,420 DEBUG [java.sql.PreparedStatement] - <{pstm-100183} Types: []>
2018-01-30 16:06:51,421 DEBUG [java.sql.ResultSet] - <{rset-100184} ResultSet>
2018-01-30 16:06:51,421 DEBUG [java.sql.ResultSet] - <{rset-100184} Header: [count(*)]>
2018-01-30 16:06:51,421 DEBUG [java.sql.ResultSet] - <{rset-100184} Result: [8]>
2018-01-30 16:06:51,569 DEBUG [java.sql.Connection] - <{conn-100185} Connection>
2018-01-30 16:06:51,570 DEBUG [java.sql.Connection] - <{conn-100185} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 16:06:51,570 DEBUG [java.sql.PreparedStatement] - <{pstm-100186} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 16:06:51,570 DEBUG [java.sql.PreparedStatement] - <{pstm-100186} Parameters: []>
2018-01-30 16:06:51,571 DEBUG [java.sql.PreparedStatement] - <{pstm-100186} Types: []>
2018-01-30 16:06:51,572 DEBUG [java.sql.ResultSet] - <{rset-100187} ResultSet>
2018-01-30 16:06:51,573 DEBUG [java.sql.ResultSet] - <{rset-100187} Header: [house_count, total_account, real_account, now_cash]>
2018-01-30 16:06:51,574 DEBUG [java.sql.ResultSet] - <{rset-100187} Result: [共8, 22402.24, 22402.24, 16801.68]>
2018-01-30 16:11:02,804 DEBUG [java.sql.Connection] - <{conn-100188} Connection>
2018-01-30 16:11:02,805 DEBUG [java.sql.Connection] - <{conn-100188} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 16:11:02,805 DEBUG [java.sql.PreparedStatement] - <{pstm-100189} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 16:11:02,805 DEBUG [java.sql.PreparedStatement] - <{pstm-100189} Parameters: []>
2018-01-30 16:11:02,805 DEBUG [java.sql.PreparedStatement] - <{pstm-100189} Types: []>
2018-01-30 16:11:02,809 DEBUG [java.sql.ResultSet] - <{rset-100190} ResultSet>
2018-01-30 16:11:02,809 DEBUG [java.sql.ResultSet] - <{rset-100190} Header: [rollback_operator_name, rollback_operate_date, operator_name, operate_date, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, real_account, real_charge, charge_type, pay_unit, pay_man, charge_price, charge_area, address, pay_mode, delzero, bill_man, bill_date, b_id, rollback_flag_ora, rollback_flag, rollback_reason, rollback_remark, operator, rollback_operator, rn]>
2018-01-30 16:11:02,810 DEBUG [java.sql.ResultSet] - <{rset-100190} Result: [管理员, 2018-01-30 16:06:51, 管理员, 2018-01-30 15:50:23, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000211, 1, 已冲账, 操作错误, null, 100043, 100043, 1]>
2018-01-30 16:11:02,810 DEBUG [java.sql.ResultSet] - <{rset-100190} Result: [管理员, 2018-01-30 15:42:54, 管理员, 2018-01-30 15:32:46, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000210, 1, 已冲账, 操作错误, null, 100043, 100043, 2]>
2018-01-30 16:11:02,811 DEBUG [java.sql.ResultSet] - <{rset-100190} Result: [管理员, 2018-01-30 15:29:02, 管理员, 2018-01-30 13:44:32, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000209, 1, 已冲账, 操作错误, null, 100043, 100043, 3]>
2018-01-30 16:11:02,811 DEBUG [java.sql.ResultSet] - <{rset-100190} Result: [管理员, 2018-01-30 11:41:46, 管理员, 2018-01-29 19:06:34, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000208, 1, 已冲账, 操作错误, null, 100043, 100043, 4]>
2018-01-30 16:11:02,811 DEBUG [java.sql.ResultSet] - <{rset-100190} Result: [管理员, 2018-01-29 19:06:05, 管理员, 2018-01-29 19:04:35, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000207, 1, 已冲账, 操作错误, null, 100043, 100043, 5]>
2018-01-30 16:11:02,812 DEBUG [java.sql.ResultSet] - <{rset-100190} Result: [管理员, 2018-01-29 18:01:04, 管理员, 2018-01-29 17:58:33, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000206, 1, 已冲账, 操作错误, null, 100043, 100043, 6]>
2018-01-30 16:11:02,813 DEBUG [java.sql.ResultSet] - <{rset-100190} Result: [管理员, 2018-01-29 17:52:20, 管理员, 2018-01-29 17:49:55, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000205, 1, 已冲账, 操作错误, null, 100043, 100043, 7]>
2018-01-30 16:11:02,813 DEBUG [java.sql.ResultSet] - <{rset-100190} Result: [管理员, 2018-01-29 17:49:13, 管理员, 2018-01-29 17:48:45, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000204, 1, 已冲账, 操作错误, null, 100043, 100043, 8]>
2018-01-30 16:11:02,813 DEBUG [java.sql.Connection] - <{conn-100191} Connection>
2018-01-30 16:11:02,814 DEBUG [java.sql.Connection] - <{conn-100191} Preparing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 16:11:02,816 DEBUG [java.sql.PreparedStatement] - <{pstm-100192} Executing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 16:11:02,816 DEBUG [java.sql.PreparedStatement] - <{pstm-100192} Parameters: []>
2018-01-30 16:11:02,816 DEBUG [java.sql.PreparedStatement] - <{pstm-100192} Types: []>
2018-01-30 16:11:02,818 DEBUG [java.sql.ResultSet] - <{rset-100193} ResultSet>
2018-01-30 16:11:02,818 DEBUG [java.sql.ResultSet] - <{rset-100193} Header: [count(*)]>
2018-01-30 16:11:02,818 DEBUG [java.sql.ResultSet] - <{rset-100193} Result: [8]>
2018-01-30 16:11:02,992 DEBUG [java.sql.Connection] - <{conn-100194} Connection>
2018-01-30 16:11:02,993 DEBUG [java.sql.Connection] - <{conn-100194} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 16:11:02,993 DEBUG [java.sql.PreparedStatement] - <{pstm-100195} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 16:11:02,993 DEBUG [java.sql.PreparedStatement] - <{pstm-100195} Parameters: []>
2018-01-30 16:11:02,993 DEBUG [java.sql.PreparedStatement] - <{pstm-100195} Types: []>
2018-01-30 16:11:02,995 DEBUG [java.sql.ResultSet] - <{rset-100196} ResultSet>
2018-01-30 16:11:02,995 DEBUG [java.sql.ResultSet] - <{rset-100196} Header: [house_count, total_account, real_account, now_cash]>
2018-01-30 16:11:02,995 DEBUG [java.sql.ResultSet] - <{rset-100196} Result: [共8, 22402.24, 22402.24, 16801.68]>
2018-01-30 16:41:25,509 DEBUG [java.sql.Connection] - <{conn-100197} Connection>
2018-01-30 16:41:25,510 DEBUG [java.sql.Connection] - <{conn-100197} Preparing Statement:    DELETE      FROM eahttpsession   WHERE                sessionid = ?                >
2018-01-30 16:41:25,510 DEBUG [java.sql.PreparedStatement] - <{pstm-100198} Executing Statement:    DELETE      FROM eahttpsession   WHERE                sessionid = ?                >
2018-01-30 16:41:25,511 DEBUG [java.sql.PreparedStatement] - <{pstm-100198} Parameters: [8wmzj1yb3r5w]>
2018-01-30 16:41:25,511 DEBUG [java.sql.PreparedStatement] - <{pstm-100198} Types: [java.lang.String]>
2018-01-30 16:44:21,349 DEBUG [java.sql.Connection] - <{conn-100199} Connection>
2018-01-30 16:44:21,350 DEBUG [java.sql.Connection] - <{conn-100199} Preparing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-01-30 16:44:21,350 DEBUG [java.sql.PreparedStatement] - <{pstm-100200} Executing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-01-30 16:44:21,350 DEBUG [java.sql.PreparedStatement] - <{pstm-100200} Parameters: [0, admin]>
2018-01-30 16:44:21,350 DEBUG [java.sql.PreparedStatement] - <{pstm-100200} Types: [java.lang.String, java.lang.String]>
2018-01-30 16:44:21,351 DEBUG [java.sql.ResultSet] - <{rset-100201} ResultSet>
2018-01-30 16:44:21,352 DEBUG [java.sql.ResultSet] - <{rset-100201} Header: [userid, username, account, password, sex, deptid, theme, customid, customname]>
2018-01-30 16:44:21,352 DEBUG [java.sql.ResultSet] - <{rset-100201} Result: [100043, 管理员, admin, RaFutWeh0ww=, 0, 001, default, 01, 供热]>
2018-01-30 16:44:21,352 DEBUG [java.sql.Connection] - <{conn-100202} Connection>
2018-01-30 16:44:21,353 DEBUG [java.sql.Connection] - <{conn-100202} Preparing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-01-30 16:44:21,353 DEBUG [java.sql.PreparedStatement] - <{pstm-100203} Executing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-01-30 16:44:21,353 DEBUG [java.sql.PreparedStatement] - <{pstm-100203} Parameters: [121w9z9x65u80]>
2018-01-30 16:44:21,353 DEBUG [java.sql.PreparedStatement] - <{pstm-100203} Types: [java.lang.String]>
2018-01-30 16:44:21,354 DEBUG [java.sql.ResultSet] - <{rset-100204} ResultSet>
2018-01-30 16:44:21,355 DEBUG [java.sql.Connection] - <{conn-100205} Connection>
2018-01-30 16:44:21,355 DEBUG [java.sql.Connection] - <{conn-100205} Preparing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-01-30 16:44:21,356 DEBUG [java.sql.PreparedStatement] - <{pstm-100206} Executing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-01-30 16:44:21,356 DEBUG [java.sql.PreparedStatement] - <{pstm-100206} Parameters: [121w9z9x65u80, 管理员, admin, 2018-01-30 16:44:21, 127.0.0.1, 100043, FIREFOX/57.]>
2018-01-30 16:44:21,356 DEBUG [java.sql.PreparedStatement] - <{pstm-100206} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-30 16:44:21,428 DEBUG [java.sql.Connection] - <{conn-100207} Connection>
2018-01-30 16:44:21,429 DEBUG [java.sql.Connection] - <{conn-100207} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 16:44:21,429 DEBUG [java.sql.PreparedStatement] - <{pstm-100208} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 16:44:21,429 DEBUG [java.sql.PreparedStatement] - <{pstm-100208} Parameters: [100043]>
2018-01-30 16:44:21,429 DEBUG [java.sql.PreparedStatement] - <{pstm-100208} Types: [java.lang.String]>
2018-01-30 16:44:21,431 DEBUG [java.sql.ResultSet] - <{rset-100209} ResultSet>
2018-01-30 16:44:21,431 DEBUG [java.sql.ResultSet] - <{rset-100209} Header: [theme]>
2018-01-30 16:44:21,431 DEBUG [java.sql.ResultSet] - <{rset-100209} Result: [default]>
2018-01-30 16:44:21,553 DEBUG [java.sql.Connection] - <{conn-100210} Connection>
2018-01-30 16:44:21,554 DEBUG [java.sql.Connection] - <{conn-100210} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 16:44:21,557 DEBUG [java.sql.PreparedStatement] - <{pstm-100211} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 16:44:21,557 DEBUG [java.sql.PreparedStatement] - <{pstm-100211} Parameters: [100043]>
2018-01-30 16:44:21,557 DEBUG [java.sql.PreparedStatement] - <{pstm-100211} Types: [java.lang.String]>
2018-01-30 16:44:21,559 DEBUG [java.sql.ResultSet] - <{rset-100212} ResultSet>
2018-01-30 16:44:21,560 DEBUG [java.sql.ResultSet] - <{rset-100212} Header: [menuid, menuname, iconcls]>
2018-01-30 16:44:21,560 DEBUG [java.sql.ResultSet] - <{rset-100212} Result: [0103, 基础信息, null]>
2018-01-30 16:44:21,560 DEBUG [java.sql.ResultSet] - <{rset-100212} Result: [0104, 收费管理, null]>
2018-01-30 16:44:21,560 DEBUG [java.sql.ResultSet] - <{rset-100212} Result: [0105, 统计分析, null]>
2018-01-30 16:44:21,560 DEBUG [java.sql.ResultSet] - <{rset-100212} Result: [0101, 系统管理, null]>
2018-01-30 16:44:21,560 DEBUG [java.sql.Connection] - <{conn-100213} Connection>
2018-01-30 16:44:21,561 DEBUG [java.sql.Connection] - <{conn-100213} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-01-30 16:44:21,561 DEBUG [java.sql.PreparedStatement] - <{pstm-100214} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-01-30 16:44:21,561 DEBUG [java.sql.PreparedStatement] - <{pstm-100214} Parameters: [100043]>
2018-01-30 16:44:21,561 DEBUG [java.sql.PreparedStatement] - <{pstm-100214} Types: [java.lang.String]>
2018-01-30 16:44:21,562 DEBUG [java.sql.ResultSet] - <{rset-100215} ResultSet>
2018-01-30 16:44:21,563 DEBUG [java.sql.Connection] - <{conn-100216} Connection>
2018-01-30 16:44:21,563 DEBUG [java.sql.Connection] - <{conn-100216} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 16:44:21,564 DEBUG [java.sql.PreparedStatement] - <{pstm-100217} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 16:44:21,564 DEBUG [java.sql.PreparedStatement] - <{pstm-100217} Parameters: [001]>
2018-01-30 16:44:21,564 DEBUG [java.sql.PreparedStatement] - <{pstm-100217} Types: [java.lang.String]>
2018-01-30 16:44:21,565 DEBUG [java.sql.ResultSet] - <{rset-100218} ResultSet>
2018-01-30 16:44:21,565 DEBUG [java.sql.ResultSet] - <{rset-100218} Header: [deptid, deptname]>
2018-01-30 16:44:21,565 DEBUG [java.sql.ResultSet] - <{rset-100218} Result: [001, XX供热公司]>
2018-01-30 16:44:21,565 DEBUG [java.sql.Connection] - <{conn-100219} Connection>
2018-01-30 16:44:21,566 DEBUG [java.sql.Connection] - <{conn-100219} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 16:44:21,566 DEBUG [java.sql.PreparedStatement] - <{pstm-100220} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 16:44:21,566 DEBUG [java.sql.PreparedStatement] - <{pstm-100220} Parameters: [001]>
2018-01-30 16:44:21,566 DEBUG [java.sql.PreparedStatement] - <{pstm-100220} Types: [java.lang.String]>
2018-01-30 16:44:21,567 DEBUG [java.sql.ResultSet] - <{rset-100221} ResultSet>
2018-01-30 16:44:21,567 DEBUG [java.sql.ResultSet] - <{rset-100221} Header: [deptid, deptname]>
2018-01-30 16:44:21,567 DEBUG [java.sql.ResultSet] - <{rset-100221} Result: [001, XX供热公司]>
2018-01-30 16:44:21,567 DEBUG [java.sql.Connection] - <{conn-100222} Connection>
2018-01-30 16:44:21,568 DEBUG [java.sql.Connection] - <{conn-100222} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 16:44:21,568 DEBUG [java.sql.PreparedStatement] - <{pstm-100223} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 16:44:21,568 DEBUG [java.sql.PreparedStatement] - <{pstm-100223} Parameters: [100043]>
2018-01-30 16:44:21,568 DEBUG [java.sql.PreparedStatement] - <{pstm-100223} Types: [java.lang.String]>
2018-01-30 16:44:21,569 DEBUG [java.sql.ResultSet] - <{rset-100224} ResultSet>
2018-01-30 16:44:21,570 DEBUG [java.sql.ResultSet] - <{rset-100224} Header: [theme]>
2018-01-30 16:44:21,570 DEBUG [java.sql.ResultSet] - <{rset-100224} Result: [default]>
2018-01-30 16:44:21,600 DEBUG [java.sql.Connection] - <{conn-100225} Connection>
2018-01-30 16:44:21,600 DEBUG [java.sql.Connection] - <{conn-100225} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 16:44:21,600 DEBUG [java.sql.PreparedStatement] - <{pstm-100226} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 16:44:21,600 DEBUG [java.sql.PreparedStatement] - <{pstm-100226} Parameters: [100043]>
2018-01-30 16:44:21,600 DEBUG [java.sql.PreparedStatement] - <{pstm-100226} Types: [java.lang.String]>
2018-01-30 16:44:21,602 DEBUG [java.sql.ResultSet] - <{rset-100227} ResultSet>
2018-01-30 16:44:21,602 DEBUG [java.sql.ResultSet] - <{rset-100227} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 16:44:21,603 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [01030404, 新建换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,603 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [01030403, 删除热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,603 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [01030406, 删除换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,603 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [010305, 入网管理, null, 0103, module/iw.ered?reqCode=intoWebInit, 0, false, false, tab_blank.png]>
2018-01-30 16:44:21,603 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [01030405, 修改换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,603 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [01030401, 新建热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,603 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [01030201, 选择导入文件, null, 010302, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,604 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [01030312, 删除面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,604 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [0103, 基础信息, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 16:44:21,606 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [01030311, 修改面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,606 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [01030301, 新建小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,606 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [01030310, 添加面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,606 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [010304, 热源站所管理, null, 0103, module/sr.ered?reqCode=sourceInit, 0, false, false, tab_blank.png]>
2018-01-30 16:44:21,606 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [01030313, 删除面积1, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,606 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [01030202, 导入模板下载, null, 010302, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,607 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [01030501, 新增入网, null, 010305, null, 1, false, true, tab_blank.png]>
2018-01-30 16:44:21,607 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [01030402, 修改热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,607 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [010303, 基础信息维护, null, 0103, module/fc.ered?reqCode=communityInit, 0, false, false, tab_blank.png]>
2018-01-30 16:44:21,607 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [01030502, 修改入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,608 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [01030302, 修改小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,608 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [010302, 基础数据导入, null, 0103, module/importHouse.ered?reqCode=importInit, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,608 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [01030303, 删除小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,608 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [01030503, 删除入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,608 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [01030304, 新建大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,608 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [01030305, 修改大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,608 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [01030306, 删除大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,608 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [01030307, 新建用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,608 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [01030308, 修改用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,609 DEBUG [java.sql.ResultSet] - <{rset-100227} Result: [01030309, 删除用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,609 DEBUG [java.sql.Connection] - <{conn-100228} Connection>
2018-01-30 16:44:21,609 DEBUG [java.sql.Connection] - <{conn-100228} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 16:44:21,609 DEBUG [java.sql.PreparedStatement] - <{pstm-100229} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 16:44:21,609 DEBUG [java.sql.PreparedStatement] - <{pstm-100229} Parameters: [100043]>
2018-01-30 16:44:21,609 DEBUG [java.sql.PreparedStatement] - <{pstm-100229} Types: [java.lang.String]>
2018-01-30 16:44:21,610 DEBUG [java.sql.ResultSet] - <{rset-100230} ResultSet>
2018-01-30 16:44:21,611 DEBUG [java.sql.Connection] - <{conn-100231} Connection>
2018-01-30 16:44:21,611 DEBUG [java.sql.Connection] - <{conn-100231} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 16:44:21,611 DEBUG [java.sql.PreparedStatement] - <{pstm-100232} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 16:44:21,611 DEBUG [java.sql.PreparedStatement] - <{pstm-100232} Parameters: [01]>
2018-01-30 16:44:21,611 DEBUG [java.sql.PreparedStatement] - <{pstm-100232} Types: [java.lang.String]>
2018-01-30 16:44:21,612 DEBUG [java.sql.ResultSet] - <{rset-100233} ResultSet>
2018-01-30 16:44:21,612 DEBUG [java.sql.ResultSet] - <{rset-100233} Header: [menuname]>
2018-01-30 16:44:21,612 DEBUG [java.sql.ResultSet] - <{rset-100233} Result: [供热收费管理信息系统]>
2018-01-30 16:44:21,684 DEBUG [java.sql.Connection] - <{conn-100234} Connection>
2018-01-30 16:44:21,684 DEBUG [java.sql.Connection] - <{conn-100234} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 16:44:21,684 DEBUG [java.sql.PreparedStatement] - <{pstm-100235} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 16:44:21,684 DEBUG [java.sql.PreparedStatement] - <{pstm-100235} Parameters: [100043]>
2018-01-30 16:44:21,684 DEBUG [java.sql.PreparedStatement] - <{pstm-100235} Types: [java.lang.String]>
2018-01-30 16:44:21,686 DEBUG [java.sql.ResultSet] - <{rset-100236} ResultSet>
2018-01-30 16:44:21,687 DEBUG [java.sql.ResultSet] - <{rset-100236} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 16:44:21,687 DEBUG [java.sql.ResultSet] - <{rset-100236} Result: [010402, 收费管理, null, 0104, module/chg.ered?reqCode=chargeInit, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,687 DEBUG [java.sql.ResultSet] - <{rset-100236} Result: [01040503, 作废票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,687 DEBUG [java.sql.ResultSet] - <{rset-100236} Result: [01040501, 票据入库, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,687 DEBUG [java.sql.ResultSet] - <{rset-100236} Result: [01040401, 冲账, null, 010404, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,687 DEBUG [java.sql.ResultSet] - <{rset-100236} Result: [01040101, 生成应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,687 DEBUG [java.sql.ResultSet] - <{rset-100236} Result: [01040505, 领用票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,687 DEBUG [java.sql.ResultSet] - <{rset-100236} Result: [01040302, 删除减免, null, 010403, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,688 DEBUG [java.sql.ResultSet] - <{rset-100236} Result: [01040301, 减免应收, null, 010403, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,688 DEBUG [java.sql.ResultSet] - <{rset-100236} Result: [01040502, 删除票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,688 DEBUG [java.sql.ResultSet] - <{rset-100236} Result: [01040201, 收费, null, 010402, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,688 DEBUG [java.sql.ResultSet] - <{rset-100236} Result: [01040102, 删除应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,689 DEBUG [java.sql.ResultSet] - <{rset-100236} Result: [01040504, 返还票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,689 DEBUG [java.sql.ResultSet] - <{rset-100236} Result: [010401, 生成应收, null, 0104, module/crp.ered?reqCode=creatPlanInit, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,689 DEBUG [java.sql.ResultSet] - <{rset-100236} Result: [0104, 收费管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 16:44:21,689 DEBUG [java.sql.ResultSet] - <{rset-100236} Result: [010403, 减免管理, null, 0104, module/mns.ered?reqCode=minusInit, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,689 DEBUG [java.sql.ResultSet] - <{rset-100236} Result: [010404, 冲账管理, null, 0104, module/rlb.ered?reqCode=rollbackInit, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,689 DEBUG [java.sql.ResultSet] - <{rset-100236} Result: [010405, 票据管理, null, 0104, module/inv.ered?reqCode=invoiceInit, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,689 DEBUG [java.sql.Connection] - <{conn-100237} Connection>
2018-01-30 16:44:21,690 DEBUG [java.sql.Connection] - <{conn-100237} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 16:44:21,690 DEBUG [java.sql.PreparedStatement] - <{pstm-100238} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 16:44:21,690 DEBUG [java.sql.PreparedStatement] - <{pstm-100238} Parameters: [100043]>
2018-01-30 16:44:21,690 DEBUG [java.sql.PreparedStatement] - <{pstm-100238} Types: [java.lang.String]>
2018-01-30 16:44:21,692 DEBUG [java.sql.ResultSet] - <{rset-100239} ResultSet>
2018-01-30 16:44:21,693 DEBUG [java.sql.Connection] - <{conn-100240} Connection>
2018-01-30 16:44:21,693 DEBUG [java.sql.Connection] - <{conn-100240} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 16:44:21,693 DEBUG [java.sql.PreparedStatement] - <{pstm-100241} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 16:44:21,693 DEBUG [java.sql.PreparedStatement] - <{pstm-100241} Parameters: [01]>
2018-01-30 16:44:21,693 DEBUG [java.sql.PreparedStatement] - <{pstm-100241} Types: [java.lang.String]>
2018-01-30 16:44:21,694 DEBUG [java.sql.ResultSet] - <{rset-100242} ResultSet>
2018-01-30 16:44:21,695 DEBUG [java.sql.ResultSet] - <{rset-100242} Header: [menuname]>
2018-01-30 16:44:21,695 DEBUG [java.sql.ResultSet] - <{rset-100242} Result: [供热收费管理信息系统]>
2018-01-30 16:44:21,868 DEBUG [java.sql.Connection] - <{conn-100243} Connection>
2018-01-30 16:44:21,868 DEBUG [java.sql.Connection] - <{conn-100243} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 16:44:21,869 DEBUG [java.sql.PreparedStatement] - <{pstm-100244} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 16:44:21,870 DEBUG [java.sql.PreparedStatement] - <{pstm-100244} Parameters: [100043]>
2018-01-30 16:44:21,870 DEBUG [java.sql.PreparedStatement] - <{pstm-100244} Types: [java.lang.String]>
2018-01-30 16:44:21,873 DEBUG [java.sql.ResultSet] - <{rset-100245} ResultSet>
2018-01-30 16:44:21,873 DEBUG [java.sql.ResultSet] - <{rset-100245} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 16:44:21,873 DEBUG [java.sql.ResultSet] - <{rset-100245} Result: [010502, 收费报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-01-30 16:44:21,873 DEBUG [java.sql.ResultSet] - <{rset-100245} Result: [010501, 基础报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-01-30 16:44:21,873 DEBUG [java.sql.ResultSet] - <{rset-100245} Result: [01050202, 欠费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050201, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,873 DEBUG [java.sql.ResultSet] - <{rset-100245} Result: [01050101, 用户情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=f01050101, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,873 DEBUG [java.sql.ResultSet] - <{rset-100245} Result: [01050102, 入网情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=w01050301, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,874 DEBUG [java.sql.ResultSet] - <{rset-100245} Result: [01050203, 收费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050202, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,874 DEBUG [java.sql.ResultSet] - <{rset-100245} Result: [01050201, 收费情况表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050401, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,874 DEBUG [java.sql.ResultSet] - <{rset-100245} Result: [0105, 统计分析, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 16:44:21,874 DEBUG [java.sql.ResultSet] - <{rset-100245} Result: [01050204, 减免明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050204, 1, false, false, tab_blank.png]>
2018-01-30 16:44:21,874 DEBUG [java.sql.Connection] - <{conn-100246} Connection>
2018-01-30 16:44:21,875 DEBUG [java.sql.Connection] - <{conn-100246} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 16:44:21,875 DEBUG [java.sql.PreparedStatement] - <{pstm-100247} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 16:44:21,875 DEBUG [java.sql.PreparedStatement] - <{pstm-100247} Parameters: [100043]>
2018-01-30 16:44:21,875 DEBUG [java.sql.PreparedStatement] - <{pstm-100247} Types: [java.lang.String]>
2018-01-30 16:44:21,877 DEBUG [java.sql.ResultSet] - <{rset-100248} ResultSet>
2018-01-30 16:44:21,878 DEBUG [java.sql.Connection] - <{conn-100249} Connection>
2018-01-30 16:44:21,878 DEBUG [java.sql.Connection] - <{conn-100249} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 16:44:21,878 DEBUG [java.sql.PreparedStatement] - <{pstm-100250} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 16:44:21,879 DEBUG [java.sql.PreparedStatement] - <{pstm-100250} Parameters: [01]>
2018-01-30 16:44:21,879 DEBUG [java.sql.PreparedStatement] - <{pstm-100250} Types: [java.lang.String]>
2018-01-30 16:44:21,880 DEBUG [java.sql.ResultSet] - <{rset-100251} ResultSet>
2018-01-30 16:44:21,880 DEBUG [java.sql.ResultSet] - <{rset-100251} Header: [menuname]>
2018-01-30 16:44:21,880 DEBUG [java.sql.ResultSet] - <{rset-100251} Result: [供热收费管理信息系统]>
2018-01-30 16:44:21,966 DEBUG [java.sql.Connection] - <{conn-100252} Connection>
2018-01-30 16:44:21,966 DEBUG [java.sql.Connection] - <{conn-100252} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 16:44:21,966 DEBUG [java.sql.PreparedStatement] - <{pstm-100253} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 16:44:21,966 DEBUG [java.sql.PreparedStatement] - <{pstm-100253} Parameters: [100043]>
2018-01-30 16:44:21,966 DEBUG [java.sql.PreparedStatement] - <{pstm-100253} Types: [java.lang.String]>
2018-01-30 16:44:21,968 DEBUG [java.sql.ResultSet] - <{rset-100254} ResultSet>
2018-01-30 16:44:21,969 DEBUG [java.sql.ResultSet] - <{rset-100254} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 16:44:21,969 DEBUG [java.sql.ResultSet] - <{rset-100254} Result: [01010305, 优惠设置, server_connectIcon, 010103, module/dic.ered?reqCode=discountInit, 1, false, false, server_connect.png]>
2018-01-30 16:44:21,969 DEBUG [java.sql.ResultSet] - <{rset-100254} Result: [01010304, 收费标准, server_connectIcon, 010103, module/std.ered?reqCode=standardInit, 1, false, false, server_connect.png]>
2018-01-30 16:44:21,969 DEBUG [java.sql.ResultSet] - <{rset-100254} Result: [010102, 权限管理, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 16:44:21,969 DEBUG [java.sql.ResultSet] - <{rset-100254} Result: [01010201, 组织机构管理, chart_organisationIcon, 010102, organization.ered?reqCode=departmentInit, 1, false, false, chart_organisation.png]>
2018-01-30 16:44:21,969 DEBUG [java.sql.ResultSet] - <{rset-100254} Result: [01010301, 字典维护, application_view_listIcon, 010103, resource.ered?reqCode=codeTableInit, 1, false, false, application_view_list.png]>
2018-01-30 16:44:21,969 DEBUG [java.sql.ResultSet] - <{rset-100254} Result: [01010403, Requst请求跟踪, server_connectIcon, 010104, eventTrack.ered?reqCode=init, 1, false, false, server_connect.png]>
2018-01-30 16:44:21,970 DEBUG [java.sql.ResultSet] - <{rset-100254} Result: [01010401, Session会话监控, user_commentIcon, 010104, sessionMonitor.ered?reqCode=init, 1, false, false, user_comment.png]>
2018-01-30 16:44:21,970 DEBUG [java.sql.ResultSet] - <{rset-100254} Result: [01010204, 角色管理与授权, award_star_silver_3Icon, 010102, role.ered?reqCode=roleInit, 1, false, false, award_star_silver_3.png]>
2018-01-30 16:44:21,970 DEBUG [java.sql.ResultSet] - <{rset-100254} Result: [01010303, 全局参数表维护, configIcon, 010103, param.ered?reqCode=init, 1, false, false, config.png]>
2018-01-30 16:44:21,971 DEBUG [java.sql.ResultSet] - <{rset-100254} Result: [010103, 基础数据维护, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 16:44:21,971 DEBUG [java.sql.ResultSet] - <{rset-100254} Result: [010104, 运行监控, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 16:44:21,971 DEBUG [java.sql.ResultSet] - <{rset-100254} Result: [01010202, 人员管理与授权, group_linkIcon, 010102, user.ered?reqCode=userInit, 1, false, false, group_link.png]>
2018-01-30 16:44:21,971 DEBUG [java.sql.ResultSet] - <{rset-100254} Result: [01010405, JDBC执行监控, database_refreshIcon, 010104, jdbcMonitor.ered?reqCode=jdbcInit, 1, false, false, database_refresh.png]>
2018-01-30 16:44:21,971 DEBUG [java.sql.ResultSet] - <{rset-100254} Result: [01010406, Service监控, pluginIcon, 010104, beanMonitor.ered?reqCode=init, 1, false, false, plugin.png]>
2018-01-30 16:44:21,971 DEBUG [java.sql.ResultSet] - <{rset-100254} Result: [01010205, 菜单资源管理, layout_contentIcon, 010102, resource.ered?reqCode=menuResourceInit, 1, false, false, layout_content.png]>
2018-01-30 16:44:21,971 DEBUG [java.sql.ResultSet] - <{rset-100254} Result: [0101, 系统管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 16:44:21,971 DEBUG [java.sql.Connection] - <{conn-100255} Connection>
2018-01-30 16:44:21,971 DEBUG [java.sql.Connection] - <{conn-100255} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 16:44:21,972 DEBUG [java.sql.PreparedStatement] - <{pstm-100256} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 16:44:21,972 DEBUG [java.sql.PreparedStatement] - <{pstm-100256} Parameters: [100043]>
2018-01-30 16:44:21,972 DEBUG [java.sql.PreparedStatement] - <{pstm-100256} Types: [java.lang.String]>
2018-01-30 16:44:21,973 DEBUG [java.sql.ResultSet] - <{rset-100257} ResultSet>
2018-01-30 16:44:21,973 DEBUG [java.sql.Connection] - <{conn-100258} Connection>
2018-01-30 16:44:21,973 DEBUG [java.sql.Connection] - <{conn-100258} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 16:44:21,974 DEBUG [java.sql.PreparedStatement] - <{pstm-100259} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 16:44:21,974 DEBUG [java.sql.PreparedStatement] - <{pstm-100259} Parameters: [01]>
2018-01-30 16:44:21,974 DEBUG [java.sql.PreparedStatement] - <{pstm-100259} Types: [java.lang.String]>
2018-01-30 16:44:21,974 DEBUG [java.sql.ResultSet] - <{rset-100260} ResultSet>
2018-01-30 16:44:21,975 DEBUG [java.sql.ResultSet] - <{rset-100260} Header: [menuname]>
2018-01-30 16:44:21,975 DEBUG [java.sql.ResultSet] - <{rset-100260} Result: [供热收费管理信息系统]>
2018-01-30 16:44:22,579 DEBUG [java.sql.Connection] - <{conn-100261} Connection>
2018-01-30 16:44:22,580 DEBUG [java.sql.Connection] - <{conn-100261} Preparing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-01-30 16:44:22,580 DEBUG [java.sql.PreparedStatement] - <{pstm-100262} Executing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-01-30 16:44:22,580 DEBUG [java.sql.PreparedStatement] - <{pstm-100262} Parameters: []>
2018-01-30 16:44:22,580 DEBUG [java.sql.PreparedStatement] - <{pstm-100262} Types: []>
2018-01-30 16:44:22,582 DEBUG [java.sql.ResultSet] - <{rset-100263} ResultSet>
2018-01-30 16:44:22,582 DEBUG [java.sql.ResultSet] - <{rset-100263} Header: [id, text, child_count]>
2018-01-30 16:44:22,583 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0101, 0101 经贸局家属楼 (3), 3]>
2018-01-30 16:44:22,583 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0102, 0102 法院家属楼 (2), 2]>
2018-01-30 16:44:22,583 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0103, 0103 长治县电视台 (1), 1]>
2018-01-30 16:44:22,583 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0104, 0104 广播北二巷（一至三排） (1), 1]>
2018-01-30 16:44:22,583 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0105, 0105 广播南二巷（公安家属西五排） (1), 1]>
2018-01-30 16:44:22,583 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0106, 0106 广播北四巷第一组（南6户） (1), 1]>
2018-01-30 16:44:22,583 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0107, 0107 广播北四巷第一组（北19户） (1), 1]>
2018-01-30 16:44:22,583 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0108, 0108 广播北四巷第二组（16户） (1), 1]>
2018-01-30 16:44:22,584 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0109, 0109 工业巷北一排-北八排 (1), 1]>
2018-01-30 16:44:22,584 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0110, 0110 法院家属院17户 (1), 1]>
2018-01-30 16:44:22,585 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0111, 0111 公安西家属区60户 (1), 1]>
2018-01-30 16:44:22,585 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0112, 0112 建筑工程公司 (2), 2]>
2018-01-30 16:44:22,585 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0113, 0113 工会家属楼 (1), 1]>
2018-01-30 16:44:22,585 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0114, 0114 工会二层独院5户 (1), 1]>
2018-01-30 16:44:22,585 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0115, 0115 政府平房南一排 (2), 2]>
2018-01-30 16:44:22,585 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0116, 0116 政府平房南二排6户 (1), 1]>
2018-01-30 16:44:22,585 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0117, 0117 政府平房南三排5户 (1), 1]>
2018-01-30 16:44:22,586 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0118, 0118 政府平房南四排4户 (1), 1]>
2018-01-30 16:44:22,586 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0119, 0119 政府平房南五排5户（北二排） (1), 1]>
2018-01-30 16:44:22,587 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0120, 0120 政府平房南六排5户（北一排） (1), 1]>
2018-01-30 16:44:22,588 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0121, 0121 政府平房后六户 (1), 1]>
2018-01-30 16:44:22,588 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0122, 0122 政府第三家属楼32户 (1), 1]>
2018-01-30 16:44:22,588 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0123, 0123 政府黄楼家属区 (1), 1]>
2018-01-30 16:44:22,588 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0124, 0124 五交化家属楼 (2), 2]>
2018-01-30 16:44:22,588 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0125, 0125 通达供销公司综合楼 (1), 1]>
2018-01-30 16:44:22,589 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0126, 0126 供销联社家属楼 (3), 3]>
2018-01-30 16:44:22,589 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [0127, 0127 二轻局底商 (1), 1]>
2018-01-30 16:44:22,589 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [2001, 2001 南董村西南一巷 (1), 1]>
2018-01-30 16:44:22,589 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [2002, 2002 南董村正街路北 (1), 1]>
2018-01-30 16:44:22,589 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [2003, 2003 南董村正街路南 (1), 1]>
2018-01-30 16:44:22,590 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [2004, 2004 南董村西散户 (1), 1]>
2018-01-30 16:44:22,590 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [2005, 2005 伍龙小区 (3), 3]>
2018-01-30 16:44:22,737 DEBUG [java.sql.Connection] - <{conn-100264} Connection>
2018-01-30 16:44:22,738 DEBUG [java.sql.Connection] - <{conn-100264} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 16:44:22,738 DEBUG [java.sql.PreparedStatement] - <{pstm-100265} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 16:44:22,738 DEBUG [java.sql.PreparedStatement] - <{pstm-100265} Parameters: [100043]>
2018-01-30 16:44:22,738 DEBUG [java.sql.PreparedStatement] - <{pstm-100265} Types: [java.lang.String]>
2018-01-30 16:44:22,740 DEBUG [java.sql.ResultSet] - <{rset-100266} ResultSet>
2018-01-30 16:44:22,740 DEBUG [java.sql.ResultSet] - <{rset-100266} Header: [theme]>
2018-01-30 16:44:22,740 DEBUG [java.sql.ResultSet] - <{rset-100266} Result: [default]>
2018-01-30 16:44:24,741 DEBUG [java.sql.Connection] - <{conn-100267} Connection>
2018-01-30 16:44:24,742 DEBUG [java.sql.Connection] - <{conn-100267} Preparing Statement:    SELECT building_code as id, building_code||' '||building_name||' ('||house_count||')' as text,nvl(house_count,0) as child_Count   FROM fc_building a WHERE   a.community_code = '0101'  order by building_code  >
2018-01-30 16:44:24,743 DEBUG [java.sql.PreparedStatement] - <{pstm-100268} Executing Statement:    SELECT building_code as id, building_code||' '||building_name||' ('||house_count||')' as text,nvl(house_count,0) as child_Count   FROM fc_building a WHERE   a.community_code = '0101'  order by building_code  >
2018-01-30 16:44:24,743 DEBUG [java.sql.PreparedStatement] - <{pstm-100268} Parameters: []>
2018-01-30 16:44:24,743 DEBUG [java.sql.PreparedStatement] - <{pstm-100268} Types: []>
2018-01-30 16:44:24,744 DEBUG [java.sql.ResultSet] - <{rset-100269} ResultSet>
2018-01-30 16:44:24,745 DEBUG [java.sql.ResultSet] - <{rset-100269} Header: [id, text, child_count]>
2018-01-30 16:44:24,745 DEBUG [java.sql.ResultSet] - <{rset-100269} Result: [0101-001, 0101-001 家属楼 (21), 21]>
2018-01-30 16:44:24,745 DEBUG [java.sql.ResultSet] - <{rset-100269} Result: [0101-002, 0101-002 大北门 (1), 1]>
2018-01-30 16:44:24,745 DEBUG [java.sql.ResultSet] - <{rset-100269} Result: [0101-999, 0101-999 商业 (2), 2]>
2018-01-30 16:44:25,913 DEBUG [java.sql.Connection] - <{conn-100270} Connection>
2018-01-30 16:44:25,913 DEBUG [java.sql.Connection] - <{conn-100270} Preparing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0101-001'   order by a.house_code  >
2018-01-30 16:44:25,914 DEBUG [java.sql.PreparedStatement] - <{pstm-100271} Executing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0101-001'   order by a.house_code  >
2018-01-30 16:44:25,914 DEBUG [java.sql.PreparedStatement] - <{pstm-100271} Parameters: []>
2018-01-30 16:44:25,914 DEBUG [java.sql.PreparedStatement] - <{pstm-100271} Types: []>
2018-01-30 16:44:25,915 DEBUG [java.sql.ResultSet] - <{rset-100272} ResultSet>
2018-01-30 16:44:25,915 DEBUG [java.sql.ResultSet] - <{rset-100272} Header: [id, text, child_count]>
2018-01-30 16:44:25,916 DEBUG [java.sql.ResultSet] - <{rset-100272} Result: [0101-001-01-01-01, 01-01-01 李宝源, 0]>
2018-01-30 16:44:25,916 DEBUG [java.sql.ResultSet] - <{rset-100272} Result: [0101-001-01-01-02, 01-01-02 崔志兵, 0]>
2018-01-30 16:44:25,916 DEBUG [java.sql.ResultSet] - <{rset-100272} Result: [0101-001-01-02-01, 01-02-01 牛忠清, 0]>
2018-01-30 16:44:25,916 DEBUG [java.sql.ResultSet] - <{rset-100272} Result: [0101-001-01-02-02, 01-02-02 郝旭刚, 0]>
2018-01-30 16:44:25,916 DEBUG [java.sql.ResultSet] - <{rset-100272} Result: [0101-001-01-03-01, 01-03-01 王志兵, 0]>
2018-01-30 16:44:25,916 DEBUG [java.sql.ResultSet] - <{rset-100272} Result: [0101-001-01-03-02, 01-03-02 李旭红, 0]>
2018-01-30 16:44:25,916 DEBUG [java.sql.ResultSet] - <{rset-100272} Result: [0101-001-02-01-01, 02-01-01 曹贵胜, 0]>
2018-01-30 16:44:25,916 DEBUG [java.sql.ResultSet] - <{rset-100272} Result: [0101-001-02-01-02, 02-01-02 段发书, 0]>
2018-01-30 16:44:25,916 DEBUG [java.sql.ResultSet] - <{rset-100272} Result: [0101-001-02-02-01, 02-02-01 郝秀好, 0]>
2018-01-30 16:44:25,917 DEBUG [java.sql.ResultSet] - <{rset-100272} Result: [0101-001-02-02-02, 02-02-02 任元宝, 0]>
2018-01-30 16:44:25,917 DEBUG [java.sql.ResultSet] - <{rset-100272} Result: [0101-001-02-03-01, 02-03-01 张志刚, 0]>
2018-01-30 16:44:25,917 DEBUG [java.sql.ResultSet] - <{rset-100272} Result: [0101-001-02-03-02, 02-03-02 李国芳, 0]>
2018-01-30 16:44:25,918 DEBUG [java.sql.ResultSet] - <{rset-100272} Result: [0101-001-03-01-01, 03-01-01 秦凤祥, 0]>
2018-01-30 16:44:25,918 DEBUG [java.sql.ResultSet] - <{rset-100272} Result: [0101-001-03-01-02, 03-01-02 史春华, 0]>
2018-01-30 16:44:25,918 DEBUG [java.sql.ResultSet] - <{rset-100272} Result: [0101-001-03-02-01, 03-02-01 张志明, 0]>
2018-01-30 16:44:25,918 DEBUG [java.sql.ResultSet] - <{rset-100272} Result: [0101-001-03-02-02, 03-02-02 靳锁明, 0]>
2018-01-30 16:44:25,918 DEBUG [java.sql.ResultSet] - <{rset-100272} Result: [0101-001-03-03-01, 03-03-01 张志强, 0]>
2018-01-30 16:44:25,918 DEBUG [java.sql.ResultSet] - <{rset-100272} Result: [0101-001-03-03-02, 03-03-02 李  凡, 0]>
2018-01-30 16:44:25,918 DEBUG [java.sql.ResultSet] - <{rset-100272} Result: [0101-001-04-01-01, 04-01-01 牛泽玲, 0]>
2018-01-30 16:44:25,919 DEBUG [java.sql.ResultSet] - <{rset-100272} Result: [0101-001-04-01-02, 04-01-02 王泽宇, 0]>
2018-01-30 16:44:25,920 DEBUG [java.sql.ResultSet] - <{rset-100272} Result: [0101-001-04-02-01, 04-02-01 赵明泽, 0]>
2018-01-30 16:44:26,761 DEBUG [java.sql.Connection] - <{conn-100273} Connection>
2018-01-30 16:44:26,761 DEBUG [java.sql.Connection] - <{conn-100273} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 16:44:26,762 DEBUG [java.sql.PreparedStatement] - <{pstm-100274} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 16:44:26,762 DEBUG [java.sql.PreparedStatement] - <{pstm-100274} Parameters: [100043]>
2018-01-30 16:44:26,763 DEBUG [java.sql.PreparedStatement] - <{pstm-100274} Types: [java.lang.String]>
2018-01-30 16:44:26,765 DEBUG [java.sql.ResultSet] - <{rset-100275} ResultSet>
2018-01-30 16:44:26,766 DEBUG [java.sql.ResultSet] - <{rset-100275} Header: [theme]>
2018-01-30 16:44:26,766 DEBUG [java.sql.ResultSet] - <{rset-100275} Result: [default]>
2018-01-30 16:44:27,706 DEBUG [java.sql.Connection] - <{conn-100276} Connection>
2018-01-30 16:44:27,706 DEBUG [java.sql.Connection] - <{conn-100276} Preparing Statement:    SELECT stat_id value,stat_name text   FROM   fc_station  >
2018-01-30 16:44:27,707 DEBUG [java.sql.PreparedStatement] - <{pstm-100277} Executing Statement:    SELECT stat_id value,stat_name text   FROM   fc_station  >
2018-01-30 16:44:27,709 DEBUG [java.sql.PreparedStatement] - <{pstm-100277} Parameters: []>
2018-01-30 16:44:27,709 DEBUG [java.sql.PreparedStatement] - <{pstm-100277} Types: []>
2018-01-30 16:44:27,710 DEBUG [java.sql.ResultSet] - <{rset-100278} ResultSet>
2018-01-30 16:44:27,715 DEBUG [java.sql.Connection] - <{conn-100279} Connection>
2018-01-30 16:44:27,724 DEBUG [java.sql.Connection] - <{conn-100279} Preparing Statement:    SELECT userid value,username text   FROM eauser    >
2018-01-30 16:44:27,724 DEBUG [java.sql.PreparedStatement] - <{pstm-100280} Executing Statement:    SELECT userid value,username text   FROM eauser    >
2018-01-30 16:44:27,724 DEBUG [java.sql.PreparedStatement] - <{pstm-100280} Parameters: []>
2018-01-30 16:44:27,724 DEBUG [java.sql.PreparedStatement] - <{pstm-100280} Types: []>
2018-01-30 16:44:27,726 DEBUG [java.sql.ResultSet] - <{rset-100281} ResultSet>
2018-01-30 16:44:27,726 DEBUG [java.sql.ResultSet] - <{rset-100281} Header: [value, text]>
2018-01-30 16:44:27,726 DEBUG [java.sql.ResultSet] - <{rset-100281} Result: [100000, 超级用户]>
2018-01-30 16:44:27,726 DEBUG [java.sql.ResultSet] - <{rset-100281} Result: [100001, 开发人员]>
2018-01-30 16:44:27,726 DEBUG [java.sql.ResultSet] - <{rset-100281} Result: [100043, 管理员]>
2018-01-30 16:44:27,726 DEBUG [java.sql.ResultSet] - <{rset-100281} Result: [100044, aa]>
2018-01-30 16:44:27,727 DEBUG [java.sql.ResultSet] - <{rset-100281} Result: [100047, 农村信用社]>
2018-01-30 16:44:27,732 DEBUG [java.sql.Connection] - <{conn-100282} Connection>
2018-01-30 16:44:27,733 DEBUG [java.sql.Connection] - <{conn-100282} Preparing Statement:    SELECT STANDARD_ID value,STANDARD_NAME text   FROM SF_STANDARD    where item_code=? and standyear=(select current_year from sf_item where item_code=? )   order by STANDARD_ID  >
2018-01-30 16:44:27,733 DEBUG [java.sql.PreparedStatement] - <{pstm-100283} Executing Statement:    SELECT STANDARD_ID value,STANDARD_NAME text   FROM SF_STANDARD    where item_code=? and standyear=(select current_year from sf_item where item_code=? )   order by STANDARD_ID  >
2018-01-30 16:44:27,733 DEBUG [java.sql.PreparedStatement] - <{pstm-100283} Parameters: [A, A]>
2018-01-30 16:44:27,733 DEBUG [java.sql.PreparedStatement] - <{pstm-100283} Types: [java.lang.String, java.lang.String]>
2018-01-30 16:44:27,735 DEBUG [java.sql.ResultSet] - <{rset-100284} ResultSet>
2018-01-30 16:44:27,735 DEBUG [java.sql.ResultSet] - <{rset-100284} Header: [value, text]>
2018-01-30 16:44:27,735 DEBUG [java.sql.ResultSet] - <{rset-100284} Result: [A1, 居民]>
2018-01-30 16:44:27,735 DEBUG [java.sql.ResultSet] - <{rset-100284} Result: [A2, 公用]>
2018-01-30 16:44:27,735 DEBUG [java.sql.ResultSet] - <{rset-100284} Result: [A3, 非居民]>
2018-01-30 16:44:27,807 DEBUG [java.sql.Connection] - <{conn-100285} Connection>
2018-01-30 16:44:27,808 DEBUG [java.sql.Connection] - <{conn-100285} Preparing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-01-30 16:44:27,809 DEBUG [java.sql.PreparedStatement] - <{pstm-100286} Executing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-01-30 16:44:27,809 DEBUG [java.sql.PreparedStatement] - <{pstm-100286} Parameters: [0101-001-01-01-01, 0101-001-01-01-01, 0101-001-01-01-01, 0101-001-01-01-01, 0101-001-01-01-01, 0101-001-01-01-01]>
2018-01-30 16:44:27,809 DEBUG [java.sql.PreparedStatement] - <{pstm-100286} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-30 16:44:27,815 DEBUG [java.sql.ResultSet] - <{rset-100287} ResultSet>
2018-01-30 16:44:27,815 DEBUG [java.sql.ResultSet] - <{rset-100287} Header: [h_cell_code, h_floor, h_door_code, h_house_code, h_card_id, h_cluster_code, h_contact_man, h_house_manager_name, h_house_manager, h_owner_name, h_address, h_intoweb_date, h_telephone, h_stat_name, h_stat_id, h_enter_date, h_work_unit, h_apart_status, h_user_kind, h_heat_status, h_intoweb_area, h_mobilephone, h_area_count, h_intoweb_year, h_item_code, h_area_id, h_use_type, h_standard_id, h_standard_name, h_build_area, h_floor_height, h_super_area, h_charge_area, h_item_code1, h_area_id1, h_use_type1, h_standard_id1, h_standard_name1, h_build_area1, h_floor_height1, h_super_area1, h_charge_area1, h_item_code2, h_area_id2, h_use_type2, h_standard_id2, h_standard_name2, h_build_area2, h_floor_height2, h_super_area2, h_charge_area2, h_item_code3, h_area_id3, h_use_type3, h_standard_id3, h_standard_name3, h_build_area3, h_floor_height3, h_super_area3, h_charge_area3, h_item_code4, h_area_id4, h_use_type4, h_standard_id4, h_standard_name4, h_build_area4, h_floor_height4, h_super_area4, h_charge_area4, h_remark]>
2018-01-30 16:44:27,815 DEBUG [java.sql.ResultSet] - <{rset-100287} Result: [01, 01, 01, 0101-001-01-01-01, null, null, null, null, null, 李宝源, null, null, null, null, null, 2000-01-01, null, null, null, null, null, null, 1, null, A, 0, null, A1, 居民, null, null, null, 100.01, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-01-30 16:44:30,827 DEBUG [java.sql.Connection] - <{conn-100288} Connection>
2018-01-30 16:44:30,828 DEBUG [java.sql.Connection] - <{conn-100288} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 16:44:30,828 DEBUG [java.sql.PreparedStatement] - <{pstm-100289} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 16:44:30,828 DEBUG [java.sql.PreparedStatement] - <{pstm-100289} Parameters: [100043]>
2018-01-30 16:44:30,828 DEBUG [java.sql.PreparedStatement] - <{pstm-100289} Types: [java.lang.String]>
2018-01-30 16:44:30,830 DEBUG [java.sql.ResultSet] - <{rset-100290} ResultSet>
2018-01-30 16:44:30,830 DEBUG [java.sql.ResultSet] - <{rset-100290} Header: [theme]>
2018-01-30 16:44:30,830 DEBUG [java.sql.ResultSet] - <{rset-100290} Result: [default]>
2018-01-30 16:44:33,670 DEBUG [java.sql.Connection] - <{conn-100291} Connection>
2018-01-30 16:44:33,671 DEBUG [java.sql.Connection] - <{conn-100291} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 16:44:33,672 DEBUG [java.sql.PreparedStatement] - <{pstm-100292} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 16:44:33,672 DEBUG [java.sql.PreparedStatement] - <{pstm-100292} Parameters: [0101-001-01-01-01]>
2018-01-30 16:44:33,672 DEBUG [java.sql.PreparedStatement] - <{pstm-100292} Types: [java.lang.String]>
2018-01-30 16:44:33,674 DEBUG [java.sql.ResultSet] - <{rset-100293} ResultSet>
2018-01-30 16:44:33,675 DEBUG [java.sql.ResultSet] - <{rset-100293} Header: [username, item_name, charge_month, house_code, item_code, meter_id, not_money, not_money_latefee, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-30 16:44:33,675 DEBUG [java.sql.ResultSet] - <{rset-100293} Result: [null, 供热费, 2017, 0101-001-01-01-01, A, 0, 2800.28, 1.05, 01, 0101, 0101-001, 李宝源, 2800.28, 0, 0, 2800.28, 0, null, A1, 28, null, null, 100.01, 2017-11-15, 2017-03-31, 0, 2017-11-01, 2017-11-01, 1.05, null, 1.05, null, 0, 0, 0, 0, 0, 0, 0, 0, 15132, 1]>
2018-01-30 16:44:33,675 DEBUG [java.sql.Connection] - <{conn-100294} Connection>
2018-01-30 16:44:33,676 DEBUG [java.sql.Connection] - <{conn-100294} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 16:44:33,676 DEBUG [java.sql.PreparedStatement] - <{pstm-100295} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 16:44:33,676 DEBUG [java.sql.PreparedStatement] - <{pstm-100295} Parameters: [0101-001-01-01-01]>
2018-01-30 16:44:33,676 DEBUG [java.sql.PreparedStatement] - <{pstm-100295} Types: [java.lang.String]>
2018-01-30 16:44:33,677 DEBUG [java.sql.ResultSet] - <{rset-100296} ResultSet>
2018-01-30 16:44:33,677 DEBUG [java.sql.ResultSet] - <{rset-100296} Header: [count(*)]>
2018-01-30 16:44:33,677 DEBUG [java.sql.ResultSet] - <{rset-100296} Result: [1]>
2018-01-30 16:44:33,749 DEBUG [java.sql.Connection] - <{conn-100297} Connection>
2018-01-30 16:44:33,750 DEBUG [java.sql.Connection] - <{conn-100297} Preparing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-30 16:44:33,750 DEBUG [java.sql.PreparedStatement] - <{pstm-100298} Executing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-30 16:44:33,750 DEBUG [java.sql.PreparedStatement] - <{pstm-100298} Parameters: [100043, A]>
2018-01-30 16:44:33,750 DEBUG [java.sql.PreparedStatement] - <{pstm-100298} Types: [java.lang.String, java.lang.String]>
2018-01-30 16:44:33,752 DEBUG [java.sql.ResultSet] - <{rset-100299} ResultSet>
2018-01-30 16:44:33,755 DEBUG [java.sql.Connection] - <{conn-100300} Connection>
2018-01-30 16:44:33,755 DEBUG [java.sql.Connection] - <{conn-100300} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 16:44:33,756 DEBUG [java.sql.PreparedStatement] - <{pstm-100301} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 16:44:33,756 DEBUG [java.sql.PreparedStatement] - <{pstm-100301} Parameters: [0101-001-01-01-01]>
2018-01-30 16:44:33,756 DEBUG [java.sql.PreparedStatement] - <{pstm-100301} Types: [java.lang.String]>
2018-01-30 16:44:33,758 DEBUG [java.sql.ResultSet] - <{rset-100302} ResultSet>
2018-01-30 16:44:33,758 DEBUG [java.sql.ResultSet] - <{rset-100302} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-30 16:44:33,758 DEBUG [java.sql.ResultSet] - <{rset-100302} Result: [共1, 2800.28, 0, 0, 2800.28, 2800.28, 1.05, 0, null, null, 100.01, 1.05, null, 1.05, null]>
2018-01-30 16:44:33,819 DEBUG [java.sql.Connection] - <{conn-100303} Connection>
2018-01-30 16:44:33,819 DEBUG [java.sql.Connection] - <{conn-100303} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 16:44:33,820 DEBUG [java.sql.PreparedStatement] - <{pstm-100304} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 16:44:33,821 DEBUG [java.sql.PreparedStatement] - <{pstm-100304} Parameters: [0101-001-01-01-01]>
2018-01-30 16:44:33,821 DEBUG [java.sql.PreparedStatement] - <{pstm-100304} Types: [java.lang.String]>
2018-01-30 16:44:33,823 DEBUG [java.sql.ResultSet] - <{rset-100305} ResultSet>
2018-01-30 16:44:33,823 DEBUG [java.sql.ResultSet] - <{rset-100305} Header: [card_id, cluster_code, contact_man, house_manager, owner_name, address, telephone, stat_id, work_unit, apart_status, user_kind, heat_status]>
2018-01-30 16:44:33,823 DEBUG [java.sql.ResultSet] - <{rset-100305} Result: [null, null, null, null, 李宝源, null, null, null, null, null, null, null]>
2018-01-30 16:44:36,031 DEBUG [java.sql.Connection] - <{conn-100306} Connection>
2018-01-30 16:44:36,032 DEBUG [java.sql.Connection] - <{conn-100306} Preparing Statement:          UPDATE easequence SET maxid = ? WHERE fieldname = ?  >
2018-01-30 16:44:36,032 DEBUG [java.sql.PreparedStatement] - <{pstm-100307} Executing Statement:          UPDATE easequence SET maxid = ? WHERE fieldname = ?  >
2018-01-30 16:44:36,032 DEBUG [java.sql.PreparedStatement] - <{pstm-100307} Parameters: [100000000212, B_ID]>
2018-01-30 16:44:36,032 DEBUG [java.sql.PreparedStatement] - <{pstm-100307} Types: [java.lang.String, java.lang.String]>
2018-01-30 16:44:51,810 DEBUG [java.sql.Connection] - <{conn-100308} Connection>
2018-01-30 16:44:51,811 DEBUG [java.sql.Connection] - <{conn-100308} Preparing Call: {call pkg_charge.Charge_A( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,  ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}>
2018-01-30 16:44:51,814 DEBUG [java.sql.PreparedStatement] - <{pstm-100309} Executing Statement: {call pkg_charge.Charge_A( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,  ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}>
2018-01-30 16:44:51,814 DEBUG [java.sql.PreparedStatement] - <{pstm-100309} Parameters: [100000000212, 15132, 0101-001-01-01-01, , , , , , 28, 100.01, 现金, , , 2800.28, 0, , , null, null, null, null, 2017-11-01, 1.05, 1.05, , , 100043, null]>
2018-01-30 16:44:51,815 DEBUG [java.sql.PreparedStatement] - <{pstm-100309} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, null, null, null, null, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, java.lang.String, null]>
2018-01-30 16:44:56,722 DEBUG [java.sql.Connection] - <{conn-100310} Connection>
2018-01-30 16:44:56,723 DEBUG [java.sql.Connection] - <{conn-100310} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 16:44:56,723 DEBUG [java.sql.PreparedStatement] - <{pstm-100311} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 16:44:56,723 DEBUG [java.sql.PreparedStatement] - <{pstm-100311} Parameters: [0101-001-01-01-01]>
2018-01-30 16:44:56,724 DEBUG [java.sql.PreparedStatement] - <{pstm-100311} Types: [java.lang.String]>
2018-01-30 16:44:56,726 DEBUG [java.sql.ResultSet] - <{rset-100312} ResultSet>
2018-01-30 16:44:56,727 DEBUG [java.sql.Connection] - <{conn-100313} Connection>
2018-01-30 16:44:56,727 DEBUG [java.sql.Connection] - <{conn-100313} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 16:44:56,727 DEBUG [java.sql.PreparedStatement] - <{pstm-100314} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 16:44:56,728 DEBUG [java.sql.PreparedStatement] - <{pstm-100314} Parameters: [0101-001-01-01-01]>
2018-01-30 16:44:56,728 DEBUG [java.sql.PreparedStatement] - <{pstm-100314} Types: [java.lang.String]>
2018-01-30 16:44:56,729 DEBUG [java.sql.ResultSet] - <{rset-100315} ResultSet>
2018-01-30 16:44:56,730 DEBUG [java.sql.ResultSet] - <{rset-100315} Header: [count(*)]>
2018-01-30 16:44:56,730 DEBUG [java.sql.ResultSet] - <{rset-100315} Result: [0]>
2018-01-30 16:44:57,247 DEBUG [java.sql.Connection] - <{conn-100316} Connection>
2018-01-30 16:44:57,248 DEBUG [java.sql.Connection] - <{conn-100316} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 16:44:57,249 DEBUG [java.sql.PreparedStatement] - <{pstm-100317} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 16:44:57,249 DEBUG [java.sql.PreparedStatement] - <{pstm-100317} Parameters: [0101-001-01-01-01]>
2018-01-30 16:44:57,249 DEBUG [java.sql.PreparedStatement] - <{pstm-100317} Types: [java.lang.String]>
2018-01-30 16:44:57,251 DEBUG [java.sql.ResultSet] - <{rset-100318} ResultSet>
2018-01-30 16:44:57,252 DEBUG [java.sql.ResultSet] - <{rset-100318} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-30 16:44:57,252 DEBUG [java.sql.ResultSet] - <{rset-100318} Result: [共0, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-01-30 17:03:23,614 DEBUG [java.sql.Connection] - <{conn-100319} Connection>
2018-01-30 17:03:23,615 DEBUG [java.sql.Connection] - <{conn-100319} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:03:23,616 DEBUG [java.sql.PreparedStatement] - <{pstm-100320} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:03:23,616 DEBUG [java.sql.PreparedStatement] - <{pstm-100320} Parameters: [0101-001-01-01-01]>
2018-01-30 17:03:23,616 DEBUG [java.sql.PreparedStatement] - <{pstm-100320} Types: [java.lang.String]>
2018-01-30 17:03:23,618 DEBUG [java.sql.ResultSet] - <{rset-100321} ResultSet>
2018-01-30 17:03:23,618 DEBUG [java.sql.Connection] - <{conn-100322} Connection>
2018-01-30 17:03:23,619 DEBUG [java.sql.Connection] - <{conn-100322} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 17:03:23,619 DEBUG [java.sql.PreparedStatement] - <{pstm-100323} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 17:03:23,619 DEBUG [java.sql.PreparedStatement] - <{pstm-100323} Parameters: [0101-001-01-01-01]>
2018-01-30 17:03:23,619 DEBUG [java.sql.PreparedStatement] - <{pstm-100323} Types: [java.lang.String]>
2018-01-30 17:03:23,621 DEBUG [java.sql.ResultSet] - <{rset-100324} ResultSet>
2018-01-30 17:03:23,621 DEBUG [java.sql.ResultSet] - <{rset-100324} Header: [count(*)]>
2018-01-30 17:03:23,621 DEBUG [java.sql.ResultSet] - <{rset-100324} Result: [0]>
2018-01-30 17:03:23,724 DEBUG [java.sql.Connection] - <{conn-100325} Connection>
2018-01-30 17:03:23,725 DEBUG [java.sql.Connection] - <{conn-100325} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 17:03:23,725 DEBUG [java.sql.PreparedStatement] - <{pstm-100326} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 17:03:23,726 DEBUG [java.sql.PreparedStatement] - <{pstm-100326} Parameters: [0101-001-01-01-01]>
2018-01-30 17:03:23,726 DEBUG [java.sql.PreparedStatement] - <{pstm-100326} Types: [java.lang.String]>
2018-01-30 17:03:23,728 DEBUG [java.sql.ResultSet] - <{rset-100327} ResultSet>
2018-01-30 17:03:23,728 DEBUG [java.sql.ResultSet] - <{rset-100327} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-30 17:03:23,729 DEBUG [java.sql.ResultSet] - <{rset-100327} Result: [共0, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-01-30 17:03:23,776 DEBUG [java.sql.Connection] - <{conn-100328} Connection>
2018-01-30 17:03:23,777 DEBUG [java.sql.Connection] - <{conn-100328} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 17:03:23,777 DEBUG [java.sql.PreparedStatement] - <{pstm-100329} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 17:03:23,777 DEBUG [java.sql.PreparedStatement] - <{pstm-100329} Parameters: [0101-001-01-01-01]>
2018-01-30 17:03:23,777 DEBUG [java.sql.PreparedStatement] - <{pstm-100329} Types: [java.lang.String]>
2018-01-30 17:03:23,778 DEBUG [java.sql.ResultSet] - <{rset-100330} ResultSet>
2018-01-30 17:03:23,779 DEBUG [java.sql.ResultSet] - <{rset-100330} Header: [card_id, cluster_code, contact_man, house_manager, owner_name, address, telephone, stat_id, work_unit, apart_status, user_kind, heat_status]>
2018-01-30 17:03:23,779 DEBUG [java.sql.ResultSet] - <{rset-100330} Result: [null, null, null, null, 李宝源, null, null, null, null, null, null, null]>
2018-01-30 17:03:25,368 DEBUG [java.sql.Connection] - <{conn-100331} Connection>
2018-01-30 17:03:25,369 DEBUG [java.sql.Connection] - <{conn-100331} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 17:03:25,369 DEBUG [java.sql.PreparedStatement] - <{pstm-100332} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 17:03:25,370 DEBUG [java.sql.PreparedStatement] - <{pstm-100332} Parameters: [100043]>
2018-01-30 17:03:25,370 DEBUG [java.sql.PreparedStatement] - <{pstm-100332} Types: [java.lang.String]>
2018-01-30 17:03:25,371 DEBUG [java.sql.ResultSet] - <{rset-100333} ResultSet>
2018-01-30 17:03:25,372 DEBUG [java.sql.ResultSet] - <{rset-100333} Header: [theme]>
2018-01-30 17:03:25,372 DEBUG [java.sql.ResultSet] - <{rset-100333} Result: [default]>
2018-01-30 17:03:26,016 DEBUG [java.sql.Connection] - <{conn-100334} Connection>
2018-01-30 17:03:26,016 DEBUG [java.sql.Connection] - <{conn-100334} Preparing Statement:    SELECT userid value,username text   FROM eauser    >
2018-01-30 17:03:26,016 DEBUG [java.sql.PreparedStatement] - <{pstm-100335} Executing Statement:    SELECT userid value,username text   FROM eauser    >
2018-01-30 17:03:26,016 DEBUG [java.sql.PreparedStatement] - <{pstm-100335} Parameters: []>
2018-01-30 17:03:26,016 DEBUG [java.sql.PreparedStatement] - <{pstm-100335} Types: []>
2018-01-30 17:03:26,018 DEBUG [java.sql.ResultSet] - <{rset-100336} ResultSet>
2018-01-30 17:03:26,018 DEBUG [java.sql.ResultSet] - <{rset-100336} Header: [value, text]>
2018-01-30 17:03:26,018 DEBUG [java.sql.ResultSet] - <{rset-100336} Result: [100000, 超级用户]>
2018-01-30 17:03:26,018 DEBUG [java.sql.ResultSet] - <{rset-100336} Result: [100001, 开发人员]>
2018-01-30 17:03:26,018 DEBUG [java.sql.ResultSet] - <{rset-100336} Result: [100043, 管理员]>
2018-01-30 17:03:26,019 DEBUG [java.sql.ResultSet] - <{rset-100336} Result: [100044, aa]>
2018-01-30 17:03:26,019 DEBUG [java.sql.ResultSet] - <{rset-100336} Result: [100047, 农村信用社]>
2018-01-30 17:03:28,246 DEBUG [java.sql.Connection] - <{conn-100337} Connection>
2018-01-30 17:03:28,248 DEBUG [java.sql.Connection] - <{conn-100337} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:03:28,249 DEBUG [java.sql.PreparedStatement] - <{pstm-100338} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:03:28,249 DEBUG [java.sql.PreparedStatement] - <{pstm-100338} Parameters: []>
2018-01-30 17:03:28,249 DEBUG [java.sql.PreparedStatement] - <{pstm-100338} Types: []>
2018-01-30 17:03:28,253 DEBUG [java.sql.ResultSet] - <{rset-100339} ResultSet>
2018-01-30 17:03:28,253 DEBUG [java.sql.ResultSet] - <{rset-100339} Header: [rollback_operator_name, rollback_operate_date, operator_name, operate_date, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, real_account, real_charge, charge_type, pay_unit, pay_man, charge_price, charge_area, address, pay_mode, delzero, bill_man, bill_date, b_id, rollback_flag_ora, rollback_flag, rollback_reason, rollback_remark, operator, rollback_operator, rn]>
2018-01-30 17:03:28,253 DEBUG [java.sql.ResultSet] - <{rset-100339} Result: [null, null, 管理员, 2018-01-30 16:44:51, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000212, 0, null, null, null, 100043, null, 1]>
2018-01-30 17:03:28,254 DEBUG [java.sql.ResultSet] - <{rset-100339} Result: [管理员, 2018-01-30 16:06:51, 管理员, 2018-01-30 15:50:23, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000211, 1, 已冲账, 操作错误, null, 100043, 100043, 2]>
2018-01-30 17:03:28,254 DEBUG [java.sql.ResultSet] - <{rset-100339} Result: [管理员, 2018-01-30 15:42:54, 管理员, 2018-01-30 15:32:46, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000210, 1, 已冲账, 操作错误, null, 100043, 100043, 3]>
2018-01-30 17:03:28,254 DEBUG [java.sql.ResultSet] - <{rset-100339} Result: [管理员, 2018-01-30 15:29:02, 管理员, 2018-01-30 13:44:32, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000209, 1, 已冲账, 操作错误, null, 100043, 100043, 4]>
2018-01-30 17:03:28,255 DEBUG [java.sql.ResultSet] - <{rset-100339} Result: [管理员, 2018-01-30 11:41:46, 管理员, 2018-01-29 19:06:34, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000208, 1, 已冲账, 操作错误, null, 100043, 100043, 5]>
2018-01-30 17:03:28,255 DEBUG [java.sql.ResultSet] - <{rset-100339} Result: [管理员, 2018-01-29 19:06:05, 管理员, 2018-01-29 19:04:35, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000207, 1, 已冲账, 操作错误, null, 100043, 100043, 6]>
2018-01-30 17:03:28,255 DEBUG [java.sql.ResultSet] - <{rset-100339} Result: [管理员, 2018-01-29 18:01:04, 管理员, 2018-01-29 17:58:33, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000206, 1, 已冲账, 操作错误, null, 100043, 100043, 7]>
2018-01-30 17:03:28,256 DEBUG [java.sql.ResultSet] - <{rset-100339} Result: [管理员, 2018-01-29 17:52:20, 管理员, 2018-01-29 17:49:55, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000205, 1, 已冲账, 操作错误, null, 100043, 100043, 8]>
2018-01-30 17:03:28,256 DEBUG [java.sql.ResultSet] - <{rset-100339} Result: [管理员, 2018-01-29 17:49:13, 管理员, 2018-01-29 17:48:45, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000204, 1, 已冲账, 操作错误, null, 100043, 100043, 9]>
2018-01-30 17:03:28,256 DEBUG [java.sql.Connection] - <{conn-100340} Connection>
2018-01-30 17:03:28,257 DEBUG [java.sql.Connection] - <{conn-100340} Preparing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 17:03:28,257 DEBUG [java.sql.PreparedStatement] - <{pstm-100341} Executing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 17:03:28,257 DEBUG [java.sql.PreparedStatement] - <{pstm-100341} Parameters: []>
2018-01-30 17:03:28,257 DEBUG [java.sql.PreparedStatement] - <{pstm-100341} Types: []>
2018-01-30 17:03:28,259 DEBUG [java.sql.ResultSet] - <{rset-100342} ResultSet>
2018-01-30 17:03:28,260 DEBUG [java.sql.ResultSet] - <{rset-100342} Header: [count(*)]>
2018-01-30 17:03:28,260 DEBUG [java.sql.ResultSet] - <{rset-100342} Result: [9]>
2018-01-30 17:03:28,418 DEBUG [java.sql.Connection] - <{conn-100343} Connection>
2018-01-30 17:03:28,418 DEBUG [java.sql.Connection] - <{conn-100343} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 17:03:28,419 DEBUG [java.sql.PreparedStatement] - <{pstm-100344} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 17:03:28,419 DEBUG [java.sql.PreparedStatement] - <{pstm-100344} Parameters: []>
2018-01-30 17:03:28,419 DEBUG [java.sql.PreparedStatement] - <{pstm-100344} Types: []>
2018-01-30 17:03:28,420 DEBUG [java.sql.ResultSet] - <{rset-100345} ResultSet>
2018-01-30 17:03:28,420 DEBUG [java.sql.ResultSet] - <{rset-100345} Header: [house_count, total_account, real_account, now_cash]>
2018-01-30 17:03:28,420 DEBUG [java.sql.ResultSet] - <{rset-100345} Result: [共9, 25202.52, 25202.52, 19601.96]>
2018-01-30 17:03:33,780 DEBUG [java.sql.Connection] - <{conn-100346} Connection>
2018-01-30 17:03:33,781 DEBUG [java.sql.Connection] - <{conn-100346} Preparing Call: {call pkg_charge.rollback(?,?,?,?,?,?,?,?)}>
2018-01-30 17:03:33,781 DEBUG [java.sql.PreparedStatement] - <{pstm-100347} Executing Statement: {call pkg_charge.rollback(?,?,?,?,?,?,?,?)}>
2018-01-30 17:03:33,781 DEBUG [java.sql.PreparedStatement] - <{pstm-100347} Parameters: [100000000212, 1, 操作错误, , 100043, null]>
2018-01-30 17:03:33,781 DEBUG [java.sql.PreparedStatement] - <{pstm-100347} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, null]>
2018-01-30 17:03:33,940 DEBUG [java.sql.Connection] - <{conn-100348} Connection>
2018-01-30 17:03:33,942 DEBUG [java.sql.Connection] - <{conn-100348} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:03:33,942 DEBUG [java.sql.PreparedStatement] - <{pstm-100349} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:03:33,942 DEBUG [java.sql.PreparedStatement] - <{pstm-100349} Parameters: []>
2018-01-30 17:03:33,943 DEBUG [java.sql.PreparedStatement] - <{pstm-100349} Types: []>
2018-01-30 17:03:33,946 DEBUG [java.sql.ResultSet] - <{rset-100350} ResultSet>
2018-01-30 17:03:33,946 DEBUG [java.sql.ResultSet] - <{rset-100350} Header: [rollback_operator_name, rollback_operate_date, operator_name, operate_date, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, real_account, real_charge, charge_type, pay_unit, pay_man, charge_price, charge_area, address, pay_mode, delzero, bill_man, bill_date, b_id, rollback_flag_ora, rollback_flag, rollback_reason, rollback_remark, operator, rollback_operator, rn]>
2018-01-30 17:03:33,946 DEBUG [java.sql.ResultSet] - <{rset-100350} Result: [管理员, 2018-01-30 17:03:33, 管理员, 2018-01-30 16:44:51, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000212, 1, 已冲账, 操作错误, null, 100043, 100043, 1]>
2018-01-30 17:03:33,947 DEBUG [java.sql.ResultSet] - <{rset-100350} Result: [管理员, 2018-01-30 16:06:51, 管理员, 2018-01-30 15:50:23, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000211, 1, 已冲账, 操作错误, null, 100043, 100043, 2]>
2018-01-30 17:03:33,947 DEBUG [java.sql.ResultSet] - <{rset-100350} Result: [管理员, 2018-01-30 15:42:54, 管理员, 2018-01-30 15:32:46, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000210, 1, 已冲账, 操作错误, null, 100043, 100043, 3]>
2018-01-30 17:03:33,947 DEBUG [java.sql.ResultSet] - <{rset-100350} Result: [管理员, 2018-01-30 15:29:02, 管理员, 2018-01-30 13:44:32, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000209, 1, 已冲账, 操作错误, null, 100043, 100043, 4]>
2018-01-30 17:03:33,948 DEBUG [java.sql.ResultSet] - <{rset-100350} Result: [管理员, 2018-01-30 11:41:46, 管理员, 2018-01-29 19:06:34, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000208, 1, 已冲账, 操作错误, null, 100043, 100043, 5]>
2018-01-30 17:03:33,948 DEBUG [java.sql.ResultSet] - <{rset-100350} Result: [管理员, 2018-01-29 19:06:05, 管理员, 2018-01-29 19:04:35, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000207, 1, 已冲账, 操作错误, null, 100043, 100043, 6]>
2018-01-30 17:03:33,948 DEBUG [java.sql.ResultSet] - <{rset-100350} Result: [管理员, 2018-01-29 18:01:04, 管理员, 2018-01-29 17:58:33, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000206, 1, 已冲账, 操作错误, null, 100043, 100043, 7]>
2018-01-30 17:03:33,949 DEBUG [java.sql.ResultSet] - <{rset-100350} Result: [管理员, 2018-01-29 17:52:20, 管理员, 2018-01-29 17:49:55, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000205, 1, 已冲账, 操作错误, null, 100043, 100043, 8]>
2018-01-30 17:03:33,949 DEBUG [java.sql.ResultSet] - <{rset-100350} Result: [管理员, 2018-01-29 17:49:13, 管理员, 2018-01-29 17:48:45, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000204, 1, 已冲账, 操作错误, null, 100043, 100043, 9]>
2018-01-30 17:03:33,949 DEBUG [java.sql.Connection] - <{conn-100351} Connection>
2018-01-30 17:03:33,950 DEBUG [java.sql.Connection] - <{conn-100351} Preparing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 17:03:33,950 DEBUG [java.sql.PreparedStatement] - <{pstm-100352} Executing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 17:03:33,950 DEBUG [java.sql.PreparedStatement] - <{pstm-100352} Parameters: []>
2018-01-30 17:03:33,950 DEBUG [java.sql.PreparedStatement] - <{pstm-100352} Types: []>
2018-01-30 17:03:33,952 DEBUG [java.sql.ResultSet] - <{rset-100353} ResultSet>
2018-01-30 17:03:33,952 DEBUG [java.sql.ResultSet] - <{rset-100353} Header: [count(*)]>
2018-01-30 17:03:33,952 DEBUG [java.sql.ResultSet] - <{rset-100353} Result: [9]>
2018-01-30 17:03:34,200 DEBUG [java.sql.Connection] - <{conn-100354} Connection>
2018-01-30 17:03:34,201 DEBUG [java.sql.Connection] - <{conn-100354} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 17:03:34,201 DEBUG [java.sql.PreparedStatement] - <{pstm-100355} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 17:03:34,201 DEBUG [java.sql.PreparedStatement] - <{pstm-100355} Parameters: []>
2018-01-30 17:03:34,201 DEBUG [java.sql.PreparedStatement] - <{pstm-100355} Types: []>
2018-01-30 17:03:34,202 DEBUG [java.sql.ResultSet] - <{rset-100356} ResultSet>
2018-01-30 17:03:34,202 DEBUG [java.sql.ResultSet] - <{rset-100356} Header: [house_count, total_account, real_account, now_cash]>
2018-01-30 17:03:34,203 DEBUG [java.sql.ResultSet] - <{rset-100356} Result: [共9, 25202.52, 25202.52, 19601.96]>
2018-01-30 17:03:37,460 DEBUG [java.sql.Connection] - <{conn-100357} Connection>
2018-01-30 17:03:37,462 DEBUG [java.sql.Connection] - <{conn-100357} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:03:37,462 DEBUG [java.sql.PreparedStatement] - <{pstm-100358} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:03:37,462 DEBUG [java.sql.PreparedStatement] - <{pstm-100358} Parameters: [0101-001-01-01-01]>
2018-01-30 17:03:37,462 DEBUG [java.sql.PreparedStatement] - <{pstm-100358} Types: [java.lang.String]>
2018-01-30 17:03:37,464 DEBUG [java.sql.ResultSet] - <{rset-100359} ResultSet>
2018-01-30 17:03:37,465 DEBUG [java.sql.ResultSet] - <{rset-100359} Header: [username, item_name, charge_month, house_code, item_code, meter_id, not_money, not_money_latefee, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-30 17:03:37,465 DEBUG [java.sql.ResultSet] - <{rset-100359} Result: [null, 供热费, 2017, 0101-001-01-01-01, A, 0, 2800.28, 1.05, 01, 0101, 0101-001, 李宝源, 2800.28, 0, 0, 2800.28, 0, null, A1, 28, null, null, 100.01, 2017-11-15, 2017-03-31, 0, 2017-11-01, 2017-11-01, 1.05, null, 1.05, null, 0, 0, 0, 0, 0, 0, 0, 0, 15132, 1]>
2018-01-30 17:03:37,465 DEBUG [java.sql.Connection] - <{conn-100360} Connection>
2018-01-30 17:03:37,466 DEBUG [java.sql.Connection] - <{conn-100360} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 17:03:37,466 DEBUG [java.sql.PreparedStatement] - <{pstm-100361} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 17:03:37,466 DEBUG [java.sql.PreparedStatement] - <{pstm-100361} Parameters: [0101-001-01-01-01]>
2018-01-30 17:03:37,466 DEBUG [java.sql.PreparedStatement] - <{pstm-100361} Types: [java.lang.String]>
2018-01-30 17:03:37,468 DEBUG [java.sql.ResultSet] - <{rset-100362} ResultSet>
2018-01-30 17:03:37,468 DEBUG [java.sql.ResultSet] - <{rset-100362} Header: [count(*)]>
2018-01-30 17:03:37,468 DEBUG [java.sql.ResultSet] - <{rset-100362} Result: [1]>
2018-01-30 17:03:37,547 DEBUG [java.sql.Connection] - <{conn-100363} Connection>
2018-01-30 17:03:37,548 DEBUG [java.sql.Connection] - <{conn-100363} Preparing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-30 17:03:37,548 DEBUG [java.sql.PreparedStatement] - <{pstm-100364} Executing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-30 17:03:37,549 DEBUG [java.sql.PreparedStatement] - <{pstm-100364} Parameters: [100043, A]>
2018-01-30 17:03:37,549 DEBUG [java.sql.PreparedStatement] - <{pstm-100364} Types: [java.lang.String, java.lang.String]>
2018-01-30 17:03:37,550 DEBUG [java.sql.ResultSet] - <{rset-100365} ResultSet>
2018-01-30 17:03:37,557 DEBUG [java.sql.Connection] - <{conn-100366} Connection>
2018-01-30 17:03:37,557 DEBUG [java.sql.Connection] - <{conn-100366} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 17:03:37,558 DEBUG [java.sql.PreparedStatement] - <{pstm-100367} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 17:03:37,558 DEBUG [java.sql.PreparedStatement] - <{pstm-100367} Parameters: [0101-001-01-01-01]>
2018-01-30 17:03:37,558 DEBUG [java.sql.PreparedStatement] - <{pstm-100367} Types: [java.lang.String]>
2018-01-30 17:03:37,559 DEBUG [java.sql.ResultSet] - <{rset-100368} ResultSet>
2018-01-30 17:03:37,560 DEBUG [java.sql.ResultSet] - <{rset-100368} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-30 17:03:37,560 DEBUG [java.sql.ResultSet] - <{rset-100368} Result: [共1, 2800.28, 0, 0, 2800.28, 2800.28, 1.05, 0, null, null, 100.01, 1.05, null, 1.05, null]>
2018-01-30 17:03:37,605 DEBUG [java.sql.Connection] - <{conn-100369} Connection>
2018-01-30 17:03:37,606 DEBUG [java.sql.Connection] - <{conn-100369} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 17:03:37,606 DEBUG [java.sql.PreparedStatement] - <{pstm-100370} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 17:03:37,606 DEBUG [java.sql.PreparedStatement] - <{pstm-100370} Parameters: [0101-001-01-01-01]>
2018-01-30 17:03:37,606 DEBUG [java.sql.PreparedStatement] - <{pstm-100370} Types: [java.lang.String]>
2018-01-30 17:03:37,607 DEBUG [java.sql.ResultSet] - <{rset-100371} ResultSet>
2018-01-30 17:03:37,608 DEBUG [java.sql.ResultSet] - <{rset-100371} Header: [card_id, cluster_code, contact_man, house_manager, owner_name, address, telephone, stat_id, work_unit, apart_status, user_kind, heat_status]>
2018-01-30 17:03:37,608 DEBUG [java.sql.ResultSet] - <{rset-100371} Result: [null, null, null, null, 李宝源, null, null, null, null, null, null, null]>
2018-01-30 17:03:40,313 DEBUG [java.sql.Connection] - <{conn-100372} Connection>
2018-01-30 17:03:40,313 DEBUG [java.sql.Connection] - <{conn-100372} Preparing Statement:          UPDATE easequence SET maxid = ? WHERE fieldname = ?  >
2018-01-30 17:03:40,314 DEBUG [java.sql.PreparedStatement] - <{pstm-100373} Executing Statement:          UPDATE easequence SET maxid = ? WHERE fieldname = ?  >
2018-01-30 17:03:40,314 DEBUG [java.sql.PreparedStatement] - <{pstm-100373} Parameters: [100000000213, B_ID]>
2018-01-30 17:03:40,314 DEBUG [java.sql.PreparedStatement] - <{pstm-100373} Types: [java.lang.String, java.lang.String]>
2018-01-30 17:03:44,989 DEBUG [java.sql.Connection] - <{conn-100374} Connection>
2018-01-30 17:03:44,989 DEBUG [java.sql.Connection] - <{conn-100374} Preparing Call: {call pkg_charge.Charge_A( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,  ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}>
2018-01-30 17:03:44,991 DEBUG [java.sql.PreparedStatement] - <{pstm-100375} Executing Statement: {call pkg_charge.Charge_A( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,  ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}>
2018-01-30 17:03:44,991 DEBUG [java.sql.PreparedStatement] - <{pstm-100375} Parameters: [100000000213, 15132, 0101-001-01-01-01, , , , , , 28, 100.01, 现金, , , 2800.28, 0, , , null, null, null, null, 2017-11-01, 1.05, 1.05, , , 100043, null]>
2018-01-30 17:03:44,992 DEBUG [java.sql.PreparedStatement] - <{pstm-100375} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, null, null, null, null, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, java.lang.String, null]>
2018-01-30 17:06:32,814 DEBUG [java.sql.Connection] - <{conn-100376} Connection>
2018-01-30 17:06:32,815 DEBUG [java.sql.Connection] - <{conn-100376} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:06:32,815 DEBUG [java.sql.PreparedStatement] - <{pstm-100377} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:06:32,815 DEBUG [java.sql.PreparedStatement] - <{pstm-100377} Parameters: []>
2018-01-30 17:06:32,815 DEBUG [java.sql.PreparedStatement] - <{pstm-100377} Types: []>
2018-01-30 17:06:32,818 DEBUG [java.sql.ResultSet] - <{rset-100378} ResultSet>
2018-01-30 17:06:32,819 DEBUG [java.sql.ResultSet] - <{rset-100378} Header: [rollback_operator_name, rollback_operate_date, operator_name, operate_date, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, real_account, real_charge, charge_type, pay_unit, pay_man, charge_price, charge_area, address, pay_mode, delzero, bill_man, bill_date, b_id, rollback_flag_ora, rollback_flag, rollback_reason, rollback_remark, operator, rollback_operator, rn]>
2018-01-30 17:06:32,819 DEBUG [java.sql.ResultSet] - <{rset-100378} Result: [管理员, 2018-01-30 17:03:33, 管理员, 2018-01-30 16:44:51, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000212, 1, 已冲账, 操作错误, null, 100043, 100043, 1]>
2018-01-30 17:06:32,819 DEBUG [java.sql.ResultSet] - <{rset-100378} Result: [管理员, 2018-01-30 16:06:51, 管理员, 2018-01-30 15:50:23, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000211, 1, 已冲账, 操作错误, null, 100043, 100043, 2]>
2018-01-30 17:06:32,819 DEBUG [java.sql.ResultSet] - <{rset-100378} Result: [管理员, 2018-01-30 15:42:54, 管理员, 2018-01-30 15:32:46, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000210, 1, 已冲账, 操作错误, null, 100043, 100043, 3]>
2018-01-30 17:06:32,820 DEBUG [java.sql.ResultSet] - <{rset-100378} Result: [管理员, 2018-01-30 15:29:02, 管理员, 2018-01-30 13:44:32, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000209, 1, 已冲账, 操作错误, null, 100043, 100043, 4]>
2018-01-30 17:06:32,820 DEBUG [java.sql.ResultSet] - <{rset-100378} Result: [管理员, 2018-01-30 11:41:46, 管理员, 2018-01-29 19:06:34, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000208, 1, 已冲账, 操作错误, null, 100043, 100043, 5]>
2018-01-30 17:06:32,820 DEBUG [java.sql.ResultSet] - <{rset-100378} Result: [管理员, 2018-01-29 19:06:05, 管理员, 2018-01-29 19:04:35, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000207, 1, 已冲账, 操作错误, null, 100043, 100043, 6]>
2018-01-30 17:06:32,821 DEBUG [java.sql.ResultSet] - <{rset-100378} Result: [管理员, 2018-01-29 18:01:04, 管理员, 2018-01-29 17:58:33, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000206, 1, 已冲账, 操作错误, null, 100043, 100043, 7]>
2018-01-30 17:06:32,821 DEBUG [java.sql.ResultSet] - <{rset-100378} Result: [管理员, 2018-01-29 17:52:20, 管理员, 2018-01-29 17:49:55, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000205, 1, 已冲账, 操作错误, null, 100043, 100043, 8]>
2018-01-30 17:06:32,821 DEBUG [java.sql.ResultSet] - <{rset-100378} Result: [管理员, 2018-01-29 17:49:13, 管理员, 2018-01-29 17:48:45, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000204, 1, 已冲账, 操作错误, null, 100043, 100043, 9]>
2018-01-30 17:06:32,821 DEBUG [java.sql.Connection] - <{conn-100379} Connection>
2018-01-30 17:06:32,822 DEBUG [java.sql.Connection] - <{conn-100379} Preparing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 17:06:32,824 DEBUG [java.sql.PreparedStatement] - <{pstm-100380} Executing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 17:06:32,824 DEBUG [java.sql.PreparedStatement] - <{pstm-100380} Parameters: []>
2018-01-30 17:06:32,824 DEBUG [java.sql.PreparedStatement] - <{pstm-100380} Types: []>
2018-01-30 17:06:32,825 DEBUG [java.sql.ResultSet] - <{rset-100381} ResultSet>
2018-01-30 17:06:32,826 DEBUG [java.sql.ResultSet] - <{rset-100381} Header: [count(*)]>
2018-01-30 17:06:32,826 DEBUG [java.sql.ResultSet] - <{rset-100381} Result: [9]>
2018-01-30 17:06:33,020 DEBUG [java.sql.Connection] - <{conn-100382} Connection>
2018-01-30 17:06:33,023 DEBUG [java.sql.Connection] - <{conn-100382} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 17:06:33,023 DEBUG [java.sql.PreparedStatement] - <{pstm-100383} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 17:06:33,023 DEBUG [java.sql.PreparedStatement] - <{pstm-100383} Parameters: []>
2018-01-30 17:06:33,023 DEBUG [java.sql.PreparedStatement] - <{pstm-100383} Types: []>
2018-01-30 17:06:33,025 DEBUG [java.sql.ResultSet] - <{rset-100384} ResultSet>
2018-01-30 17:06:33,025 DEBUG [java.sql.ResultSet] - <{rset-100384} Header: [house_count, total_account, real_account, now_cash]>
2018-01-30 17:06:33,025 DEBUG [java.sql.ResultSet] - <{rset-100384} Result: [共9, 25202.52, 25202.52, 19601.96]>
2018-01-30 17:06:36,981 DEBUG [java.sql.Connection] - <{conn-100385} Connection>
2018-01-30 17:06:36,982 DEBUG [java.sql.Connection] - <{conn-100385} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:06:36,982 DEBUG [java.sql.PreparedStatement] - <{pstm-100386} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:06:36,982 DEBUG [java.sql.PreparedStatement] - <{pstm-100386} Parameters: [0101-001-01-01-01]>
2018-01-30 17:06:36,982 DEBUG [java.sql.PreparedStatement] - <{pstm-100386} Types: [java.lang.String]>
2018-01-30 17:06:36,985 DEBUG [java.sql.ResultSet] - <{rset-100387} ResultSet>
2018-01-30 17:06:36,985 DEBUG [java.sql.ResultSet] - <{rset-100387} Header: [username, item_name, charge_month, house_code, item_code, meter_id, not_money, not_money_latefee, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-30 17:06:36,985 DEBUG [java.sql.ResultSet] - <{rset-100387} Result: [null, 供热费, 2017, 0101-001-01-01-01, A, 0, 2800.28, 1.05, 01, 0101, 0101-001, 李宝源, 2800.28, 0, 0, 2800.28, 0, null, A1, 28, null, null, 100.01, 2017-11-15, 2017-03-31, 0, 2017-11-01, 2017-11-01, 1.05, null, 1.05, null, 0, 0, 0, 0, 0, 0, 0, 0, 15132, 1]>
2018-01-30 17:06:36,986 DEBUG [java.sql.Connection] - <{conn-100388} Connection>
2018-01-30 17:06:36,986 DEBUG [java.sql.Connection] - <{conn-100388} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 17:06:36,986 DEBUG [java.sql.PreparedStatement] - <{pstm-100389} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 17:06:36,986 DEBUG [java.sql.PreparedStatement] - <{pstm-100389} Parameters: [0101-001-01-01-01]>
2018-01-30 17:06:36,986 DEBUG [java.sql.PreparedStatement] - <{pstm-100389} Types: [java.lang.String]>
2018-01-30 17:06:36,987 DEBUG [java.sql.ResultSet] - <{rset-100390} ResultSet>
2018-01-30 17:06:36,987 DEBUG [java.sql.ResultSet] - <{rset-100390} Header: [count(*)]>
2018-01-30 17:06:36,988 DEBUG [java.sql.ResultSet] - <{rset-100390} Result: [1]>
2018-01-30 17:06:37,076 DEBUG [java.sql.Connection] - <{conn-100391} Connection>
2018-01-30 17:06:37,076 DEBUG [java.sql.Connection] - <{conn-100391} Preparing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-30 17:06:37,077 DEBUG [java.sql.PreparedStatement] - <{pstm-100392} Executing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-30 17:06:37,077 DEBUG [java.sql.PreparedStatement] - <{pstm-100392} Parameters: [100043, A]>
2018-01-30 17:06:37,077 DEBUG [java.sql.PreparedStatement] - <{pstm-100392} Types: [java.lang.String, java.lang.String]>
2018-01-30 17:06:37,078 DEBUG [java.sql.ResultSet] - <{rset-100393} ResultSet>
2018-01-30 17:06:37,082 DEBUG [java.sql.Connection] - <{conn-100394} Connection>
2018-01-30 17:06:37,083 DEBUG [java.sql.Connection] - <{conn-100394} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 17:06:37,083 DEBUG [java.sql.PreparedStatement] - <{pstm-100395} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 17:06:37,093 DEBUG [java.sql.PreparedStatement] - <{pstm-100395} Parameters: [0101-001-01-01-01]>
2018-01-30 17:06:37,093 DEBUG [java.sql.PreparedStatement] - <{pstm-100395} Types: [java.lang.String]>
2018-01-30 17:06:37,095 DEBUG [java.sql.ResultSet] - <{rset-100396} ResultSet>
2018-01-30 17:06:37,095 DEBUG [java.sql.ResultSet] - <{rset-100396} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-30 17:06:37,095 DEBUG [java.sql.ResultSet] - <{rset-100396} Result: [共1, 2800.28, 0, 0, 2800.28, 2800.28, 1.05, 0, null, null, 100.01, 1.05, null, 1.05, null]>
2018-01-30 17:06:37,183 DEBUG [java.sql.Connection] - <{conn-100397} Connection>
2018-01-30 17:06:37,183 DEBUG [java.sql.Connection] - <{conn-100397} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 17:06:37,184 DEBUG [java.sql.PreparedStatement] - <{pstm-100398} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 17:06:37,184 DEBUG [java.sql.PreparedStatement] - <{pstm-100398} Parameters: [0101-001-01-01-01]>
2018-01-30 17:06:37,184 DEBUG [java.sql.PreparedStatement] - <{pstm-100398} Types: [java.lang.String]>
2018-01-30 17:06:37,186 DEBUG [java.sql.ResultSet] - <{rset-100399} ResultSet>
2018-01-30 17:06:37,186 DEBUG [java.sql.ResultSet] - <{rset-100399} Header: [card_id, cluster_code, contact_man, house_manager, owner_name, address, telephone, stat_id, work_unit, apart_status, user_kind, heat_status]>
2018-01-30 17:06:37,186 DEBUG [java.sql.ResultSet] - <{rset-100399} Result: [null, null, null, null, 李宝源, null, null, null, null, null, null, null]>
2018-01-30 17:06:38,088 DEBUG [java.sql.Connection] - <{conn-100400} Connection>
2018-01-30 17:06:38,089 DEBUG [java.sql.Connection] - <{conn-100400} Preparing Statement:          UPDATE easequence SET maxid = ? WHERE fieldname = ?  >
2018-01-30 17:06:38,089 DEBUG [java.sql.PreparedStatement] - <{pstm-100401} Executing Statement:          UPDATE easequence SET maxid = ? WHERE fieldname = ?  >
2018-01-30 17:06:38,089 DEBUG [java.sql.PreparedStatement] - <{pstm-100401} Parameters: [100000000214, B_ID]>
2018-01-30 17:06:38,089 DEBUG [java.sql.PreparedStatement] - <{pstm-100401} Types: [java.lang.String, java.lang.String]>
2018-01-30 17:06:45,273 DEBUG [java.sql.Connection] - <{conn-100402} Connection>
2018-01-30 17:06:45,274 DEBUG [java.sql.Connection] - <{conn-100402} Preparing Call: {call pkg_charge.Charge_A( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,  ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}>
2018-01-30 17:06:45,274 DEBUG [java.sql.PreparedStatement] - <{pstm-100403} Executing Statement: {call pkg_charge.Charge_A( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,  ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}>
2018-01-30 17:06:45,275 DEBUG [java.sql.PreparedStatement] - <{pstm-100403} Parameters: [100000000214, 15132, 0101-001-01-01-01, , , , , , 28, 100.01, 现金, , , 2800.28, 0, , , null, null, null, null, 2017-11-01, 1.05, 1.05, , , 100043, null]>
2018-01-30 17:06:45,275 DEBUG [java.sql.PreparedStatement] - <{pstm-100403} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, null, null, null, null, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, java.lang.String, null]>
2018-01-30 17:30:20,343 DEBUG [java.sql.Connection] - <{conn-100404} Connection>
2018-01-30 17:30:20,345 DEBUG [java.sql.Connection] - <{conn-100404} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:30:20,345 DEBUG [java.sql.PreparedStatement] - <{pstm-100405} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:30:20,345 DEBUG [java.sql.PreparedStatement] - <{pstm-100405} Parameters: []>
2018-01-30 17:30:20,345 DEBUG [java.sql.PreparedStatement] - <{pstm-100405} Types: []>
2018-01-30 17:30:20,348 DEBUG [java.sql.ResultSet] - <{rset-100406} ResultSet>
2018-01-30 17:30:20,348 DEBUG [java.sql.ResultSet] - <{rset-100406} Header: [rollback_operator_name, rollback_operate_date, operator_name, operate_date, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, real_account, real_charge, charge_type, pay_unit, pay_man, charge_price, charge_area, address, pay_mode, delzero, bill_man, bill_date, b_id, rollback_flag_ora, rollback_flag, rollback_reason, rollback_remark, operator, rollback_operator, rn]>
2018-01-30 17:30:20,348 DEBUG [java.sql.ResultSet] - <{rset-100406} Result: [null, null, 管理员, 2018-01-30 17:27:42, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000214, 0, null, null, null, 100043, null, 1]>
2018-01-30 17:30:20,349 DEBUG [java.sql.ResultSet] - <{rset-100406} Result: [管理员, 2018-01-30 17:03:33, 管理员, 2018-01-30 16:44:51, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000212, 1, 已冲账, 操作错误, null, 100043, 100043, 2]>
2018-01-30 17:30:20,349 DEBUG [java.sql.ResultSet] - <{rset-100406} Result: [管理员, 2018-01-30 16:06:51, 管理员, 2018-01-30 15:50:23, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000211, 1, 已冲账, 操作错误, null, 100043, 100043, 3]>
2018-01-30 17:30:20,349 DEBUG [java.sql.ResultSet] - <{rset-100406} Result: [管理员, 2018-01-30 15:42:54, 管理员, 2018-01-30 15:32:46, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000210, 1, 已冲账, 操作错误, null, 100043, 100043, 4]>
2018-01-30 17:30:20,349 DEBUG [java.sql.ResultSet] - <{rset-100406} Result: [管理员, 2018-01-30 15:29:02, 管理员, 2018-01-30 13:44:32, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000209, 1, 已冲账, 操作错误, null, 100043, 100043, 5]>
2018-01-30 17:30:20,349 DEBUG [java.sql.ResultSet] - <{rset-100406} Result: [管理员, 2018-01-30 11:41:46, 管理员, 2018-01-29 19:06:34, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000208, 1, 已冲账, 操作错误, null, 100043, 100043, 6]>
2018-01-30 17:30:20,349 DEBUG [java.sql.ResultSet] - <{rset-100406} Result: [管理员, 2018-01-29 19:06:05, 管理员, 2018-01-29 19:04:35, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000207, 1, 已冲账, 操作错误, null, 100043, 100043, 7]>
2018-01-30 17:30:20,350 DEBUG [java.sql.ResultSet] - <{rset-100406} Result: [管理员, 2018-01-29 18:01:04, 管理员, 2018-01-29 17:58:33, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000206, 1, 已冲账, 操作错误, null, 100043, 100043, 8]>
2018-01-30 17:30:20,350 DEBUG [java.sql.ResultSet] - <{rset-100406} Result: [管理员, 2018-01-29 17:52:20, 管理员, 2018-01-29 17:49:55, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000205, 1, 已冲账, 操作错误, null, 100043, 100043, 9]>
2018-01-30 17:30:20,350 DEBUG [java.sql.ResultSet] - <{rset-100406} Result: [管理员, 2018-01-29 17:49:13, 管理员, 2018-01-29 17:48:45, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000204, 1, 已冲账, 操作错误, null, 100043, 100043, 10]>
2018-01-30 17:30:20,351 DEBUG [java.sql.Connection] - <{conn-100407} Connection>
2018-01-30 17:30:20,351 DEBUG [java.sql.Connection] - <{conn-100407} Preparing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 17:30:20,351 DEBUG [java.sql.PreparedStatement] - <{pstm-100408} Executing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 17:30:20,352 DEBUG [java.sql.PreparedStatement] - <{pstm-100408} Parameters: []>
2018-01-30 17:30:20,352 DEBUG [java.sql.PreparedStatement] - <{pstm-100408} Types: []>
2018-01-30 17:30:20,354 DEBUG [java.sql.ResultSet] - <{rset-100409} ResultSet>
2018-01-30 17:30:20,354 DEBUG [java.sql.ResultSet] - <{rset-100409} Header: [count(*)]>
2018-01-30 17:30:20,355 DEBUG [java.sql.ResultSet] - <{rset-100409} Result: [10]>
2018-01-30 17:30:20,527 DEBUG [java.sql.Connection] - <{conn-100410} Connection>
2018-01-30 17:30:20,528 DEBUG [java.sql.Connection] - <{conn-100410} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 17:30:20,528 DEBUG [java.sql.PreparedStatement] - <{pstm-100411} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 17:30:20,528 DEBUG [java.sql.PreparedStatement] - <{pstm-100411} Parameters: []>
2018-01-30 17:30:20,528 DEBUG [java.sql.PreparedStatement] - <{pstm-100411} Types: []>
2018-01-30 17:30:20,529 DEBUG [java.sql.ResultSet] - <{rset-100412} ResultSet>
2018-01-30 17:30:20,530 DEBUG [java.sql.ResultSet] - <{rset-100412} Header: [house_count, total_account, real_account, now_cash]>
2018-01-30 17:30:20,530 DEBUG [java.sql.ResultSet] - <{rset-100412} Result: [共10, 28002.8, 28002.8, 22402.24]>
2018-01-30 17:30:26,600 DEBUG [java.sql.Connection] - <{conn-100413} Connection>
2018-01-30 17:30:26,601 DEBUG [java.sql.Connection] - <{conn-100413} Preparing Call: {call pkg_charge.rollback(?,?,?,?,?,?,?,?)}>
2018-01-30 17:30:26,601 DEBUG [java.sql.PreparedStatement] - <{pstm-100414} Executing Statement: {call pkg_charge.rollback(?,?,?,?,?,?,?,?)}>
2018-01-30 17:30:26,601 DEBUG [java.sql.PreparedStatement] - <{pstm-100414} Parameters: [100000000214, 1, 操作错误, , 100043, null]>
2018-01-30 17:30:26,601 DEBUG [java.sql.PreparedStatement] - <{pstm-100414} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, null]>
2018-01-30 17:30:26,721 DEBUG [java.sql.Connection] - <{conn-100415} Connection>
2018-01-30 17:30:26,722 DEBUG [java.sql.Connection] - <{conn-100415} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:30:26,722 DEBUG [java.sql.PreparedStatement] - <{pstm-100416} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                   order by operate_date desc ,house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:30:26,722 DEBUG [java.sql.PreparedStatement] - <{pstm-100416} Parameters: []>
2018-01-30 17:30:26,722 DEBUG [java.sql.PreparedStatement] - <{pstm-100416} Types: []>
2018-01-30 17:30:26,724 DEBUG [java.sql.ResultSet] - <{rset-100417} ResultSet>
2018-01-30 17:30:26,725 DEBUG [java.sql.ResultSet] - <{rset-100417} Header: [rollback_operator_name, rollback_operate_date, operator_name, operate_date, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, real_account, real_charge, charge_type, pay_unit, pay_man, charge_price, charge_area, address, pay_mode, delzero, bill_man, bill_date, b_id, rollback_flag_ora, rollback_flag, rollback_reason, rollback_remark, operator, rollback_operator, rn]>
2018-01-30 17:30:26,725 DEBUG [java.sql.ResultSet] - <{rset-100417} Result: [管理员, 2018-01-30 17:30:26, 管理员, 2018-01-30 17:27:42, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000214, 1, 已冲账, 操作错误, null, 100043, 100043, 1]>
2018-01-30 17:30:26,725 DEBUG [java.sql.ResultSet] - <{rset-100417} Result: [管理员, 2018-01-30 17:03:33, 管理员, 2018-01-30 16:44:51, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000212, 1, 已冲账, 操作错误, null, 100043, 100043, 2]>
2018-01-30 17:30:26,726 DEBUG [java.sql.ResultSet] - <{rset-100417} Result: [管理员, 2018-01-30 16:06:51, 管理员, 2018-01-30 15:50:23, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000211, 1, 已冲账, 操作错误, null, 100043, 100043, 3]>
2018-01-30 17:30:26,726 DEBUG [java.sql.ResultSet] - <{rset-100417} Result: [管理员, 2018-01-30 15:42:54, 管理员, 2018-01-30 15:32:46, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000210, 1, 已冲账, 操作错误, null, 100043, 100043, 4]>
2018-01-30 17:30:26,726 DEBUG [java.sql.ResultSet] - <{rset-100417} Result: [管理员, 2018-01-30 15:29:02, 管理员, 2018-01-30 13:44:32, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-30, 100000000209, 1, 已冲账, 操作错误, null, 100043, 100043, 5]>
2018-01-30 17:30:26,727 DEBUG [java.sql.ResultSet] - <{rset-100417} Result: [管理员, 2018-01-30 11:41:46, 管理员, 2018-01-29 19:06:34, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000208, 1, 已冲账, 操作错误, null, 100043, 100043, 6]>
2018-01-30 17:30:26,727 DEBUG [java.sql.ResultSet] - <{rset-100417} Result: [管理员, 2018-01-29 19:06:05, 管理员, 2018-01-29 19:04:35, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000207, 1, 已冲账, 操作错误, null, 100043, 100043, 7]>
2018-01-30 17:30:26,727 DEBUG [java.sql.ResultSet] - <{rset-100417} Result: [管理员, 2018-01-29 18:01:04, 管理员, 2018-01-29 17:58:33, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 0, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000206, 1, 已冲账, 操作错误, null, 100043, 100043, 8]>
2018-01-30 17:30:26,728 DEBUG [java.sql.ResultSet] - <{rset-100417} Result: [管理员, 2018-01-29 17:52:20, 管理员, 2018-01-29 17:49:55, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, -0.28, null, 2018-01-29, 100000000205, 1, 已冲账, 操作错误, null, 100043, 100043, 9]>
2018-01-30 17:30:26,728 DEBUG [java.sql.ResultSet] - <{rset-100417} Result: [管理员, 2018-01-29 17:49:13, 管理员, 2018-01-29 17:48:45, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 2800.28, 2800.28, 收费, null, null, 28, 100.01, null, 现金, 0, null, 2018-01-29, 100000000204, 1, 已冲账, 操作错误, null, 100043, 100043, 10]>
2018-01-30 17:30:26,729 DEBUG [java.sql.Connection] - <{conn-100418} Connection>
2018-01-30 17:30:26,729 DEBUG [java.sql.Connection] - <{conn-100418} Preparing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 17:30:26,730 DEBUG [java.sql.PreparedStatement] - <{pstm-100419} Executing Statement:    select count(*) from    (select      b.userName rollback_operator_name,     a.rollback_operate_date,     d.userName operator_name,     a.operate_date,     c.item_name,CHARGE_MONTH ,     a.HOUSE_CODE               ,     a.ITEM_CODE              ,     a.METER_ID                 ,     a.CID                    ,     a.COMMUNITY_CODE           ,     a.BUILDING_CODE            ,     a.OWNER_NAME               ,     a.TOTAL_ACCOUNT            ,     a.REAL_ACCOUNT             ,     a.REAL_CHARGE              ,     a.CHARGE_TYPE              ,     a.PAY_UNIT,     a.PAY_MAN,     a.CHARGE_PRICE,     a.CHARGE_AREA,     a.ADDRESS,     a.PAY_MODE,     a.DELZERO,     e.userName BILL_MAN,     a.BILL_DATE,     a.b_id,     a.rollback_flag rollback_flag_ora,     case when a.rollback_flag='1' then '已冲账' else '' end rollback_flag,     a.rollback_reason,a.rollback_remark,     a.operator,a.rollback_operator   from SF_DETAIL a,EAUSER b,sf_item c,EAUSER d,EAUSER e where    a.rollback_operator=b.USERID(+)   and a.item_code=c.item_code(+)   and a.operator=d.USERID(+)   and a.bill_man=e.USERID(+)   ) a                                                 >
2018-01-30 17:30:26,730 DEBUG [java.sql.PreparedStatement] - <{pstm-100419} Parameters: []>
2018-01-30 17:30:26,730 DEBUG [java.sql.PreparedStatement] - <{pstm-100419} Types: []>
2018-01-30 17:30:26,732 DEBUG [java.sql.ResultSet] - <{rset-100420} ResultSet>
2018-01-30 17:30:26,732 DEBUG [java.sql.ResultSet] - <{rset-100420} Header: [count(*)]>
2018-01-30 17:30:26,732 DEBUG [java.sql.ResultSet] - <{rset-100420} Result: [10]>
2018-01-30 17:30:26,914 DEBUG [java.sql.Connection] - <{conn-100421} Connection>
2018-01-30 17:30:26,914 DEBUG [java.sql.Connection] - <{conn-100421} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 17:30:26,915 DEBUG [java.sql.PreparedStatement] - <{pstm-100422} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,          sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(REAL_CHARGE)  NOW_CASH                 from SF_DETAIL                                                 >
2018-01-30 17:30:26,915 DEBUG [java.sql.PreparedStatement] - <{pstm-100422} Parameters: []>
2018-01-30 17:30:26,915 DEBUG [java.sql.PreparedStatement] - <{pstm-100422} Types: []>
2018-01-30 17:30:26,916 DEBUG [java.sql.ResultSet] - <{rset-100423} ResultSet>
2018-01-30 17:30:26,916 DEBUG [java.sql.ResultSet] - <{rset-100423} Header: [house_count, total_account, real_account, now_cash]>
2018-01-30 17:30:26,916 DEBUG [java.sql.ResultSet] - <{rset-100423} Result: [共10, 28002.8, 28002.8, 22402.24]>
2018-01-30 17:30:34,180 DEBUG [java.sql.Connection] - <{conn-100424} Connection>
2018-01-30 17:30:34,180 DEBUG [java.sql.Connection] - <{conn-100424} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 17:30:34,181 DEBUG [java.sql.PreparedStatement] - <{pstm-100425} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 17:30:34,181 DEBUG [java.sql.PreparedStatement] - <{pstm-100425} Parameters: [100043]>
2018-01-30 17:30:34,181 DEBUG [java.sql.PreparedStatement] - <{pstm-100425} Types: [java.lang.String]>
2018-01-30 17:30:34,182 DEBUG [java.sql.ResultSet] - <{rset-100426} ResultSet>
2018-01-30 17:30:34,182 DEBUG [java.sql.ResultSet] - <{rset-100426} Header: [theme]>
2018-01-30 17:30:34,182 DEBUG [java.sql.ResultSet] - <{rset-100426} Result: [default]>
2018-01-30 17:30:36,143 DEBUG [java.sql.Connection] - <{conn-100427} Connection>
2018-01-30 17:30:36,144 DEBUG [java.sql.Connection] - <{conn-100427} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:30:36,144 DEBUG [java.sql.PreparedStatement] - <{pstm-100428} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:30:36,144 DEBUG [java.sql.PreparedStatement] - <{pstm-100428} Parameters: [0101-001-01-01-01]>
2018-01-30 17:30:36,144 DEBUG [java.sql.PreparedStatement] - <{pstm-100428} Types: [java.lang.String]>
2018-01-30 17:30:36,147 DEBUG [java.sql.ResultSet] - <{rset-100429} ResultSet>
2018-01-30 17:30:36,148 DEBUG [java.sql.Connection] - <{conn-100430} Connection>
2018-01-30 17:30:36,148 DEBUG [java.sql.Connection] - <{conn-100430} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 17:30:36,148 DEBUG [java.sql.PreparedStatement] - <{pstm-100431} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 17:30:36,148 DEBUG [java.sql.PreparedStatement] - <{pstm-100431} Parameters: [0101-001-01-01-01]>
2018-01-30 17:30:36,148 DEBUG [java.sql.PreparedStatement] - <{pstm-100431} Types: [java.lang.String]>
2018-01-30 17:30:36,149 DEBUG [java.sql.ResultSet] - <{rset-100432} ResultSet>
2018-01-30 17:30:36,150 DEBUG [java.sql.ResultSet] - <{rset-100432} Header: [count(*)]>
2018-01-30 17:30:36,150 DEBUG [java.sql.ResultSet] - <{rset-100432} Result: [0]>
2018-01-30 17:30:36,222 DEBUG [java.sql.Connection] - <{conn-100433} Connection>
2018-01-30 17:30:36,222 DEBUG [java.sql.Connection] - <{conn-100433} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 17:30:36,223 DEBUG [java.sql.PreparedStatement] - <{pstm-100434} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 17:30:36,223 DEBUG [java.sql.PreparedStatement] - <{pstm-100434} Parameters: [0101-001-01-01-01]>
2018-01-30 17:30:36,223 DEBUG [java.sql.PreparedStatement] - <{pstm-100434} Types: [java.lang.String]>
2018-01-30 17:30:36,224 DEBUG [java.sql.ResultSet] - <{rset-100435} ResultSet>
2018-01-30 17:30:36,224 DEBUG [java.sql.ResultSet] - <{rset-100435} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-30 17:30:36,225 DEBUG [java.sql.ResultSet] - <{rset-100435} Result: [共0, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-01-30 17:30:36,264 DEBUG [java.sql.Connection] - <{conn-100436} Connection>
2018-01-30 17:30:36,264 DEBUG [java.sql.Connection] - <{conn-100436} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 17:30:36,264 DEBUG [java.sql.PreparedStatement] - <{pstm-100437} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 17:30:36,264 DEBUG [java.sql.PreparedStatement] - <{pstm-100437} Parameters: [0101-001-01-01-01]>
2018-01-30 17:30:36,264 DEBUG [java.sql.PreparedStatement] - <{pstm-100437} Types: [java.lang.String]>
2018-01-30 17:30:36,266 DEBUG [java.sql.ResultSet] - <{rset-100438} ResultSet>
2018-01-30 17:30:36,266 DEBUG [java.sql.ResultSet] - <{rset-100438} Header: [card_id, cluster_code, contact_man, house_manager, owner_name, address, telephone, stat_id, work_unit, apart_status, user_kind, heat_status]>
2018-01-30 17:30:36,266 DEBUG [java.sql.ResultSet] - <{rset-100438} Result: [null, null, null, null, 李宝源, null, null, null, null, null, null, null]>
2018-01-30 17:30:43,949 DEBUG [java.sql.Connection] - <{conn-100439} Connection>
2018-01-30 17:30:43,950 DEBUG [java.sql.Connection] - <{conn-100439} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 17:30:43,950 DEBUG [java.sql.PreparedStatement] - <{pstm-100440} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 17:30:43,950 DEBUG [java.sql.PreparedStatement] - <{pstm-100440} Parameters: [100043]>
2018-01-30 17:30:43,950 DEBUG [java.sql.PreparedStatement] - <{pstm-100440} Types: [java.lang.String]>
2018-01-30 17:30:43,951 DEBUG [java.sql.ResultSet] - <{rset-100441} ResultSet>
2018-01-30 17:30:43,951 DEBUG [java.sql.ResultSet] - <{rset-100441} Header: [theme]>
2018-01-30 17:30:43,951 DEBUG [java.sql.ResultSet] - <{rset-100441} Result: [default]>
2018-01-30 17:30:44,339 DEBUG [java.sql.Connection] - <{conn-100442} Connection>
2018-01-30 17:30:44,339 DEBUG [java.sql.Connection] - <{conn-100442} Preparing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-30 17:30:44,339 DEBUG [java.sql.PreparedStatement] - <{pstm-100443} Executing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-30 17:30:44,339 DEBUG [java.sql.PreparedStatement] - <{pstm-100443} Parameters: []>
2018-01-30 17:30:44,339 DEBUG [java.sql.PreparedStatement] - <{pstm-100443} Types: []>
2018-01-30 17:30:44,341 DEBUG [java.sql.ResultSet] - <{rset-100444} ResultSet>
2018-01-30 17:30:44,341 DEBUG [java.sql.ResultSet] - <{rset-100444} Header: [value, text]>
2018-01-30 17:30:44,341 DEBUG [java.sql.ResultSet] - <{rset-100444} Result: [A, 供热费]>
2018-01-30 17:30:44,341 DEBUG [java.sql.ResultSet] - <{rset-100444} Result: [B, 入网费]>
2018-01-30 17:30:56,178 DEBUG [java.sql.Connection] - <{conn-100445} Connection>
2018-01-30 17:30:56,178 DEBUG [java.sql.Connection] - <{conn-100445} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-01-30 17:30:56,179 DEBUG [java.sql.PreparedStatement] - <{pstm-100446} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-01-30 17:30:56,179 DEBUG [java.sql.PreparedStatement] - <{pstm-100446} Parameters: [A, 2017, '0101-001-01-01-01', 1, 100043]>
2018-01-30 17:30:56,179 DEBUG [java.sql.PreparedStatement] - <{pstm-100446} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-30 17:30:56,284 DEBUG [java.sql.Connection] - <{conn-100447} Connection>
2018-01-30 17:30:56,285 DEBUG [java.sql.Connection] - <{conn-100447} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:30:56,288 DEBUG [java.sql.PreparedStatement] - <{pstm-100448} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:30:56,288 DEBUG [java.sql.PreparedStatement] - <{pstm-100448} Parameters: [2017, A]>
2018-01-30 17:30:56,289 DEBUG [java.sql.PreparedStatement] - <{pstm-100448} Types: [java.lang.String, java.lang.String]>
2018-01-30 17:30:56,291 DEBUG [java.sql.ResultSet] - <{rset-100449} ResultSet>
2018-01-30 17:30:56,292 DEBUG [java.sql.ResultSet] - <{rset-100449} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-30 17:30:56,292 DEBUG [java.sql.ResultSet] - <{rset-100449} Result: [null, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 0, 0, 2800.28, 2800.28, null, A1, 28, null, null, 100.01, 2017-11-15, 2017-03-31, 0, 2017-11-01, 2017-11-01, 1.05, null, 1.05, 1.05, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15132, 1]>
2018-01-30 17:30:56,292 DEBUG [java.sql.Connection] - <{conn-100450} Connection>
2018-01-30 17:30:56,293 DEBUG [java.sql.Connection] - <{conn-100450} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))            AND      item_code =?              >
2018-01-30 17:30:56,293 DEBUG [java.sql.PreparedStatement] - <{pstm-100451} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))            AND      item_code =?              >
2018-01-30 17:30:56,293 DEBUG [java.sql.PreparedStatement] - <{pstm-100451} Parameters: [2017, A]>
2018-01-30 17:30:56,293 DEBUG [java.sql.PreparedStatement] - <{pstm-100451} Types: [java.lang.String, java.lang.String]>
2018-01-30 17:30:56,295 DEBUG [java.sql.ResultSet] - <{rset-100452} ResultSet>
2018-01-30 17:30:56,297 DEBUG [java.sql.ResultSet] - <{rset-100452} Header: [count(*)]>
2018-01-30 17:30:56,297 DEBUG [java.sql.ResultSet] - <{rset-100452} Result: [1]>
2018-01-30 17:30:56,362 DEBUG [java.sql.Connection] - <{conn-100453} Connection>
2018-01-30 17:30:56,362 DEBUG [java.sql.Connection] - <{conn-100453} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))            AND      item_code =?          >
2018-01-30 17:30:56,362 DEBUG [java.sql.PreparedStatement] - <{pstm-100454} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))            AND      item_code =?          >
2018-01-30 17:30:56,363 DEBUG [java.sql.PreparedStatement] - <{pstm-100454} Parameters: [2017, A]>
2018-01-30 17:30:56,363 DEBUG [java.sql.PreparedStatement] - <{pstm-100454} Types: [java.lang.String, java.lang.String]>
2018-01-30 17:30:56,364 DEBUG [java.sql.ResultSet] - <{rset-100455} ResultSet>
2018-01-30 17:30:56,365 DEBUG [java.sql.ResultSet] - <{rset-100455} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-01-30 17:30:56,365 DEBUG [java.sql.ResultSet] - <{rset-100455} Result: [共1, 2800.28, 0, 0, 2800.28, 2800.28, null, null, 100.01, 1.05, null, 1.05, 1.05, 0]>
2018-01-30 17:31:00,541 DEBUG [java.sql.Connection] - <{conn-100456} Connection>
2018-01-30 17:31:00,543 DEBUG [java.sql.Connection] - <{conn-100456} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:31:00,543 DEBUG [java.sql.PreparedStatement] - <{pstm-100457} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:31:00,543 DEBUG [java.sql.PreparedStatement] - <{pstm-100457} Parameters: [0101-001-01-01-01]>
2018-01-30 17:31:00,543 DEBUG [java.sql.PreparedStatement] - <{pstm-100457} Types: [java.lang.String]>
2018-01-30 17:31:00,546 DEBUG [java.sql.ResultSet] - <{rset-100458} ResultSet>
2018-01-30 17:31:00,546 DEBUG [java.sql.Connection] - <{conn-100459} Connection>
2018-01-30 17:31:00,546 DEBUG [java.sql.Connection] - <{conn-100459} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 17:31:00,547 DEBUG [java.sql.PreparedStatement] - <{pstm-100460} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 17:31:00,547 DEBUG [java.sql.PreparedStatement] - <{pstm-100460} Parameters: [0101-001-01-01-01]>
2018-01-30 17:31:00,547 DEBUG [java.sql.PreparedStatement] - <{pstm-100460} Types: [java.lang.String]>
2018-01-30 17:31:00,549 DEBUG [java.sql.ResultSet] - <{rset-100461} ResultSet>
2018-01-30 17:31:00,549 DEBUG [java.sql.ResultSet] - <{rset-100461} Header: [count(*)]>
2018-01-30 17:31:00,549 DEBUG [java.sql.ResultSet] - <{rset-100461} Result: [0]>
2018-01-30 17:31:00,622 DEBUG [java.sql.Connection] - <{conn-100462} Connection>
2018-01-30 17:31:00,623 DEBUG [java.sql.Connection] - <{conn-100462} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 17:31:00,623 DEBUG [java.sql.PreparedStatement] - <{pstm-100463} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 17:31:00,623 DEBUG [java.sql.PreparedStatement] - <{pstm-100463} Parameters: [0101-001-01-01-01]>
2018-01-30 17:31:00,623 DEBUG [java.sql.PreparedStatement] - <{pstm-100463} Types: [java.lang.String]>
2018-01-30 17:31:00,625 DEBUG [java.sql.ResultSet] - <{rset-100464} ResultSet>
2018-01-30 17:31:00,625 DEBUG [java.sql.ResultSet] - <{rset-100464} Header: [card_id, cluster_code, contact_man, house_manager, owner_name, address, telephone, stat_id, work_unit, apart_status, user_kind, heat_status]>
2018-01-30 17:31:00,625 DEBUG [java.sql.ResultSet] - <{rset-100464} Result: [null, null, null, null, 李宝源, null, null, null, null, null, null, null]>
2018-01-30 17:31:00,667 DEBUG [java.sql.Connection] - <{conn-100465} Connection>
2018-01-30 17:31:00,668 DEBUG [java.sql.Connection] - <{conn-100465} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 17:31:00,668 DEBUG [java.sql.PreparedStatement] - <{pstm-100466} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 17:31:00,668 DEBUG [java.sql.PreparedStatement] - <{pstm-100466} Parameters: [0101-001-01-01-01]>
2018-01-30 17:31:00,668 DEBUG [java.sql.PreparedStatement] - <{pstm-100466} Types: [java.lang.String]>
2018-01-30 17:31:00,670 DEBUG [java.sql.ResultSet] - <{rset-100467} ResultSet>
2018-01-30 17:31:00,670 DEBUG [java.sql.ResultSet] - <{rset-100467} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-30 17:31:00,670 DEBUG [java.sql.ResultSet] - <{rset-100467} Result: [共0, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-01-30 17:31:22,863 DEBUG [java.sql.Connection] - <{conn-100468} Connection>
2018-01-30 17:31:22,863 DEBUG [java.sql.Connection] - <{conn-100468} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-01-30 17:31:22,864 DEBUG [java.sql.PreparedStatement] - <{pstm-100469} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-01-30 17:31:22,864 DEBUG [java.sql.PreparedStatement] - <{pstm-100469} Parameters: [A, 2017, '0101-001-01-01-01', 1, 100043]>
2018-01-30 17:31:22,864 DEBUG [java.sql.PreparedStatement] - <{pstm-100469} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-30 17:31:22,978 DEBUG [java.sql.Connection] - <{conn-100470} Connection>
2018-01-30 17:31:22,980 DEBUG [java.sql.Connection] - <{conn-100470} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:31:22,980 DEBUG [java.sql.PreparedStatement] - <{pstm-100471} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:31:22,980 DEBUG [java.sql.PreparedStatement] - <{pstm-100471} Parameters: [2017, A]>
2018-01-30 17:31:22,981 DEBUG [java.sql.PreparedStatement] - <{pstm-100471} Types: [java.lang.String, java.lang.String]>
2018-01-30 17:31:22,983 DEBUG [java.sql.ResultSet] - <{rset-100472} ResultSet>
2018-01-30 17:31:22,983 DEBUG [java.sql.ResultSet] - <{rset-100472} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-30 17:31:22,983 DEBUG [java.sql.ResultSet] - <{rset-100472} Result: [null, 供热费, 2017, 0101-001-01-01-01, A, 0, 01, 0101, 0101-001, 李宝源, 2800.28, 0, 0, 2800.28, 0, null, A1, 28, null, null, 100.01, 2017-11-15, 2017-03-31, 0, null, null, null, null, null, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 15135, 1]>
2018-01-30 17:31:22,984 DEBUG [java.sql.Connection] - <{conn-100473} Connection>
2018-01-30 17:31:22,984 DEBUG [java.sql.Connection] - <{conn-100473} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))            AND      item_code =?              >
2018-01-30 17:31:22,984 DEBUG [java.sql.PreparedStatement] - <{pstm-100474} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))            AND      item_code =?              >
2018-01-30 17:31:22,984 DEBUG [java.sql.PreparedStatement] - <{pstm-100474} Parameters: [2017, A]>
2018-01-30 17:31:22,984 DEBUG [java.sql.PreparedStatement] - <{pstm-100474} Types: [java.lang.String, java.lang.String]>
2018-01-30 17:31:22,986 DEBUG [java.sql.ResultSet] - <{rset-100475} ResultSet>
2018-01-30 17:31:22,986 DEBUG [java.sql.ResultSet] - <{rset-100475} Header: [count(*)]>
2018-01-30 17:31:22,986 DEBUG [java.sql.ResultSet] - <{rset-100475} Result: [1]>
2018-01-30 17:31:23,120 DEBUG [java.sql.Connection] - <{conn-100476} Connection>
2018-01-30 17:31:23,121 DEBUG [java.sql.Connection] - <{conn-100476} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))            AND      item_code =?          >
2018-01-30 17:31:23,121 DEBUG [java.sql.PreparedStatement] - <{pstm-100477} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0101-001-01-01-01') or     building_code in ('0101-001-01-01-01') or     house_code in ('0101-001-01-01-01'))            AND      item_code =?          >
2018-01-30 17:31:23,121 DEBUG [java.sql.PreparedStatement] - <{pstm-100477} Parameters: [2017, A]>
2018-01-30 17:31:23,122 DEBUG [java.sql.PreparedStatement] - <{pstm-100477} Types: [java.lang.String, java.lang.String]>
2018-01-30 17:31:23,123 DEBUG [java.sql.ResultSet] - <{rset-100478} ResultSet>
2018-01-30 17:31:23,123 DEBUG [java.sql.ResultSet] - <{rset-100478} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-01-30 17:31:23,123 DEBUG [java.sql.ResultSet] - <{rset-100478} Result: [共1, 2800.28, 0, 0, 2800.28, 0, null, null, 100.01, null, null, null, null, null]>
2018-01-30 17:32:10,399 DEBUG [java.sql.Connection] - <{conn-100479} Connection>
2018-01-30 17:32:10,400 DEBUG [java.sql.Connection] - <{conn-100479} Preparing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-01-30 17:32:10,405 DEBUG [java.sql.PreparedStatement] - <{pstm-100480} Executing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-01-30 17:32:10,405 DEBUG [java.sql.PreparedStatement] - <{pstm-100480} Parameters: [0101-001-01-01-01, 0101-001-01-01-01, 0101-001-01-01-01, 0101-001-01-01-01, 0101-001-01-01-01, 0101-001-01-01-01]>
2018-01-30 17:32:10,405 DEBUG [java.sql.PreparedStatement] - <{pstm-100480} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-30 17:32:10,413 DEBUG [java.sql.ResultSet] - <{rset-100481} ResultSet>
2018-01-30 17:32:10,413 DEBUG [java.sql.ResultSet] - <{rset-100481} Header: [h_cell_code, h_floor, h_door_code, h_house_code, h_card_id, h_cluster_code, h_contact_man, h_house_manager_name, h_house_manager, h_owner_name, h_address, h_intoweb_date, h_telephone, h_stat_name, h_stat_id, h_enter_date, h_work_unit, h_apart_status, h_user_kind, h_heat_status, h_intoweb_area, h_mobilephone, h_area_count, h_intoweb_year, h_item_code, h_area_id, h_use_type, h_standard_id, h_standard_name, h_build_area, h_floor_height, h_super_area, h_charge_area, h_item_code1, h_area_id1, h_use_type1, h_standard_id1, h_standard_name1, h_build_area1, h_floor_height1, h_super_area1, h_charge_area1, h_item_code2, h_area_id2, h_use_type2, h_standard_id2, h_standard_name2, h_build_area2, h_floor_height2, h_super_area2, h_charge_area2, h_item_code3, h_area_id3, h_use_type3, h_standard_id3, h_standard_name3, h_build_area3, h_floor_height3, h_super_area3, h_charge_area3, h_item_code4, h_area_id4, h_use_type4, h_standard_id4, h_standard_name4, h_build_area4, h_floor_height4, h_super_area4, h_charge_area4, h_remark]>
2018-01-30 17:32:10,413 DEBUG [java.sql.ResultSet] - <{rset-100481} Result: [01, 01, 01, 0101-001-01-01-01, null, null, null, null, null, 李宝源, null, null, null, null, null, 2000-01-01, null, null, null, null, null, null, 1, null, A, 0, null, A1, 居民, null, null, null, 100.01, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-01-30 17:32:12,705 DEBUG [java.sql.Connection] - <{conn-100482} Connection>
2018-01-30 17:32:12,707 DEBUG [java.sql.Connection] - <{conn-100482} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:32:12,707 DEBUG [java.sql.PreparedStatement] - <{pstm-100483} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:32:12,707 DEBUG [java.sql.PreparedStatement] - <{pstm-100483} Parameters: [0101-001-01-01-01]>
2018-01-30 17:32:12,707 DEBUG [java.sql.PreparedStatement] - <{pstm-100483} Types: [java.lang.String]>
2018-01-30 17:32:12,710 DEBUG [java.sql.ResultSet] - <{rset-100484} ResultSet>
2018-01-30 17:32:12,710 DEBUG [java.sql.ResultSet] - <{rset-100484} Header: [username, item_name, charge_month, house_code, item_code, meter_id, not_money, not_money_latefee, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-30 17:32:12,710 DEBUG [java.sql.ResultSet] - <{rset-100484} Result: [null, 供热费, 2017, 0101-001-01-01-01, A, 0, 2800.28, 1.05, 01, 0101, 0101-001, 李宝源, 2800.28, 0, 0, 2800.28, 0, null, A1, 28, null, null, 100.01, 2017-11-15, 2017-03-31, 0, 2018-01-30, 2018-01-30, 1.05, null, 1.05, null, 0, 0, 0, 0, 0, 0, 0, 0, 15135, 1]>
2018-01-30 17:32:12,711 DEBUG [java.sql.Connection] - <{conn-100485} Connection>
2018-01-30 17:32:12,711 DEBUG [java.sql.Connection] - <{conn-100485} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 17:32:12,711 DEBUG [java.sql.PreparedStatement] - <{pstm-100486} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 17:32:12,711 DEBUG [java.sql.PreparedStatement] - <{pstm-100486} Parameters: [0101-001-01-01-01]>
2018-01-30 17:32:12,711 DEBUG [java.sql.PreparedStatement] - <{pstm-100486} Types: [java.lang.String]>
2018-01-30 17:32:12,713 DEBUG [java.sql.ResultSet] - <{rset-100487} ResultSet>
2018-01-30 17:32:12,713 DEBUG [java.sql.ResultSet] - <{rset-100487} Header: [count(*)]>
2018-01-30 17:32:12,713 DEBUG [java.sql.ResultSet] - <{rset-100487} Result: [1]>
2018-01-30 17:32:12,781 DEBUG [java.sql.Connection] - <{conn-100488} Connection>
2018-01-30 17:32:12,781 DEBUG [java.sql.Connection] - <{conn-100488} Preparing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-30 17:32:12,782 DEBUG [java.sql.PreparedStatement] - <{pstm-100489} Executing Statement:   select invoice_code,invoice_number from (   select case         when length(to_number(INVOICE_CODE)+1)=1 then '0000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=2 then '000000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=3 then '00000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=4 then '0000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=5 then '000'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=6 then '00'||(to_number(INVOICE_CODE)+1)         when length(to_number(INVOICE_CODE)+1)=7 then '0'||(to_number(INVOICE_CODE)+1) else to_char(to_number(INVOICE_CODE)+1) end         invoice_code,         invoice_number from EAUSER where     userid=? ) u   where exists(   select invoice_code from SF_INVOICE   where ITEM_CODE=?   and invoice_code = u.invoice_code   and INVOICE_NUMBER=u.INVOICE_NUMBER   and STATUS='0' )   >
2018-01-30 17:32:12,782 DEBUG [java.sql.PreparedStatement] - <{pstm-100489} Parameters: [100043, A]>
2018-01-30 17:32:12,782 DEBUG [java.sql.PreparedStatement] - <{pstm-100489} Types: [java.lang.String, java.lang.String]>
2018-01-30 17:32:12,783 DEBUG [java.sql.ResultSet] - <{rset-100490} ResultSet>
2018-01-30 17:32:12,786 DEBUG [java.sql.Connection] - <{conn-100491} Connection>
2018-01-30 17:32:12,787 DEBUG [java.sql.Connection] - <{conn-100491} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 17:32:12,787 DEBUG [java.sql.PreparedStatement] - <{pstm-100492} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 17:32:12,787 DEBUG [java.sql.PreparedStatement] - <{pstm-100492} Parameters: [0101-001-01-01-01]>
2018-01-30 17:32:12,787 DEBUG [java.sql.PreparedStatement] - <{pstm-100492} Types: [java.lang.String]>
2018-01-30 17:32:12,789 DEBUG [java.sql.ResultSet] - <{rset-100493} ResultSet>
2018-01-30 17:32:12,789 DEBUG [java.sql.ResultSet] - <{rset-100493} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-30 17:32:12,789 DEBUG [java.sql.ResultSet] - <{rset-100493} Result: [共1, 2800.28, 0, 0, 2800.28, 2800.28, 1.05, 0, null, null, 100.01, 1.05, null, 1.05, null]>
2018-01-30 17:32:12,843 DEBUG [java.sql.Connection] - <{conn-100494} Connection>
2018-01-30 17:32:12,843 DEBUG [java.sql.Connection] - <{conn-100494} Preparing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 17:32:12,843 DEBUG [java.sql.PreparedStatement] - <{pstm-100495} Executing Statement:      SELECT card_id ,cluster_code,contact_man,   house_manager ,owner_name,   address,telephone,   stat_id ,work_unit,apart_status,   user_kind,heat_status    FROM   v_house where house_code=?   >
2018-01-30 17:32:12,843 DEBUG [java.sql.PreparedStatement] - <{pstm-100495} Parameters: [0101-001-01-01-01]>
2018-01-30 17:32:12,843 DEBUG [java.sql.PreparedStatement] - <{pstm-100495} Types: [java.lang.String]>
2018-01-30 17:32:12,844 DEBUG [java.sql.ResultSet] - <{rset-100496} ResultSet>
2018-01-30 17:32:12,845 DEBUG [java.sql.ResultSet] - <{rset-100496} Header: [card_id, cluster_code, contact_man, house_manager, owner_name, address, telephone, stat_id, work_unit, apart_status, user_kind, heat_status]>
2018-01-30 17:32:12,845 DEBUG [java.sql.ResultSet] - <{rset-100496} Result: [null, null, null, null, 李宝源, null, null, null, null, null, null, null]>
2018-01-30 17:32:15,640 DEBUG [java.sql.Connection] - <{conn-100497} Connection>
2018-01-30 17:32:15,641 DEBUG [java.sql.Connection] - <{conn-100497} Preparing Statement:          UPDATE easequence SET maxid = ? WHERE fieldname = ?  >
2018-01-30 17:32:15,641 DEBUG [java.sql.PreparedStatement] - <{pstm-100498} Executing Statement:          UPDATE easequence SET maxid = ? WHERE fieldname = ?  >
2018-01-30 17:32:15,641 DEBUG [java.sql.PreparedStatement] - <{pstm-100498} Parameters: [100000000215, B_ID]>
2018-01-30 17:32:15,641 DEBUG [java.sql.PreparedStatement] - <{pstm-100498} Types: [java.lang.String, java.lang.String]>
2018-01-30 17:32:15,646 DEBUG [java.sql.Connection] - <{conn-100499} Connection>
2018-01-30 17:32:15,646 DEBUG [java.sql.Connection] - <{conn-100499} Preparing Call: {call pkg_charge.Charge_A( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,  ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}>
2018-01-30 17:32:15,647 DEBUG [java.sql.PreparedStatement] - <{pstm-100500} Executing Statement: {call pkg_charge.Charge_A( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,  ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}>
2018-01-30 17:32:15,647 DEBUG [java.sql.PreparedStatement] - <{pstm-100500} Parameters: [100000000215, 15135, 0101-001-01-01-01, , , , , , 28, 100.01, 现金, , , 2800.28, 0, , , null, null, null, null, 2018-01-30, 1.05, 1.05, , , 100043, null]>
2018-01-30 17:32:15,647 DEBUG [java.sql.PreparedStatement] - <{pstm-100500} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, null, null, null, null, java.lang.String, java.math.BigDecimal, java.math.BigDecimal, java.lang.String, java.lang.String, java.lang.String, null]>
2018-01-30 17:32:15,769 DEBUG [java.sql.Connection] - <{conn-100501} Connection>
2018-01-30 17:32:15,770 DEBUG [java.sql.Connection] - <{conn-100501} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:32:15,770 DEBUG [java.sql.PreparedStatement] - <{pstm-100502} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     NVL(a.REAL_ACCOUNT,0)-NVL(a.NOW_CASH,0)-NVL(a.delzero,0) not_money,     NVL(a.LATEFEE_REALACCOUNT,0)-NVL(a.LATEFEE_NOWCASH,0) not_money_latefee,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id        from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE              house_code=?        AND      (not_money>0 or not_money_latefee>0)           order by charge_month asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-30 17:32:15,770 DEBUG [java.sql.PreparedStatement] - <{pstm-100502} Parameters: [0101-001-01-01-01]>
2018-01-30 17:32:15,770 DEBUG [java.sql.PreparedStatement] - <{pstm-100502} Types: [java.lang.String]>
2018-01-30 17:32:15,772 DEBUG [java.sql.ResultSet] - <{rset-100503} ResultSet>
2018-01-30 17:32:15,772 DEBUG [java.sql.Connection] - <{conn-100504} Connection>
2018-01-30 17:32:15,773 DEBUG [java.sql.Connection] - <{conn-100504} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 17:32:15,773 DEBUG [java.sql.PreparedStatement] - <{pstm-100505} Executing Statement:    select count(*)    from SF_CHARGE    WHERE              house_code=?        AND      real_account > now_cash         >
2018-01-30 17:32:15,773 DEBUG [java.sql.PreparedStatement] - <{pstm-100505} Parameters: [0101-001-01-01-01]>
2018-01-30 17:32:15,773 DEBUG [java.sql.PreparedStatement] - <{pstm-100505} Types: [java.lang.String]>
2018-01-30 17:32:15,774 DEBUG [java.sql.ResultSet] - <{rset-100506} ResultSet>
2018-01-30 17:32:15,774 DEBUG [java.sql.ResultSet] - <{rset-100506} Header: [count(*)]>
2018-01-30 17:32:15,775 DEBUG [java.sql.ResultSet] - <{rset-100506} Result: [0]>
2018-01-30 17:32:16,017 DEBUG [java.sql.Connection] - <{conn-100507} Connection>
2018-01-30 17:32:16,018 DEBUG [java.sql.Connection] - <{conn-100507} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 17:32:16,018 DEBUG [java.sql.PreparedStatement] - <{pstm-100508} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NVL(REAL_ACCOUNT,0)-NVL(NOW_CASH,0)-NVL(delzero,0))  not_money          ,     sum(NVL(LATEFEE_REALACCOUNT,0)-NVL(LATEFEE_NOWCASH,0))  not_money_latefee          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA  ,     sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT    ,     sum(LATEFEE_MINUS) LATEFEE_MINUS           ,     sum(LATEFEE_REALACCOUNT) LATEFEE_REALACCOUNT     ,     sum(LATEFEE_NOWCASH )   LATEFEE_NOWCASH                       from SF_CHARGE    WHERE              house_code=?        AND      (real_account > now_cash or nvl(LATEFEE_REALACCOUNT,0)>nvl(LATEFEE_NOWCASH,0))         >
2018-01-30 17:32:16,018 DEBUG [java.sql.PreparedStatement] - <{pstm-100508} Parameters: [0101-001-01-01-01]>
2018-01-30 17:32:16,018 DEBUG [java.sql.PreparedStatement] - <{pstm-100508} Types: [java.lang.String]>
2018-01-30 17:32:16,020 DEBUG [java.sql.ResultSet] - <{rset-100509} ResultSet>
2018-01-30 17:32:16,020 DEBUG [java.sql.ResultSet] - <{rset-100509} Header: [house_count, total_account, minus_money, subtract_money, real_account, not_money, not_money_latefee, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash]>
2018-01-30 17:32:16,020 DEBUG [java.sql.ResultSet] - <{rset-100509} Result: [共0, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-01-30 18:02:55,693 DEBUG [java.sql.Connection] - <{conn-100510} Connection>
2018-01-30 18:02:55,693 DEBUG [java.sql.Connection] - <{conn-100510} Preparing Statement:    DELETE      FROM eahttpsession   WHERE                sessionid = ?                >
2018-01-30 18:02:55,694 DEBUG [java.sql.PreparedStatement] - <{pstm-100511} Executing Statement:    DELETE      FROM eahttpsession   WHERE                sessionid = ?                >
2018-01-30 18:02:55,694 DEBUG [java.sql.PreparedStatement] - <{pstm-100511} Parameters: [121w9z9x65u80]>
2018-01-30 18:02:55,694 DEBUG [java.sql.PreparedStatement] - <{pstm-100511} Types: [java.lang.String]>
2018-01-30 18:09:30,265 DEBUG [java.sql.Connection] - <{conn-100512} Connection>
2018-01-30 18:09:30,265 DEBUG [java.sql.Connection] - <{conn-100512} Preparing Statement:    DELETE      FROM eahttpsession   WHERE                sessionid = ?                >
2018-01-30 18:09:30,265 DEBUG [java.sql.PreparedStatement] - <{pstm-100513} Executing Statement:    DELETE      FROM eahttpsession   WHERE                sessionid = ?                >
2018-01-30 18:09:30,265 DEBUG [java.sql.PreparedStatement] - <{pstm-100513} Parameters: [z42oxvmhw3ol]>
2018-01-30 18:09:30,266 DEBUG [java.sql.PreparedStatement] - <{pstm-100513} Types: [java.lang.String]>
2018-01-30 18:09:32,668 DEBUG [java.sql.Connection] - <{conn-100514} Connection>
2018-01-30 18:09:32,670 DEBUG [java.sql.Connection] - <{conn-100514} Preparing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-01-30 18:09:32,670 DEBUG [java.sql.PreparedStatement] - <{pstm-100515} Executing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-01-30 18:09:32,670 DEBUG [java.sql.PreparedStatement] - <{pstm-100515} Parameters: [0, admin]>
2018-01-30 18:09:32,670 DEBUG [java.sql.PreparedStatement] - <{pstm-100515} Types: [java.lang.String, java.lang.String]>
2018-01-30 18:09:32,672 DEBUG [java.sql.ResultSet] - <{rset-100516} ResultSet>
2018-01-30 18:09:32,672 DEBUG [java.sql.ResultSet] - <{rset-100516} Header: [userid, username, account, password, sex, deptid, theme, customid, customname]>
2018-01-30 18:09:32,672 DEBUG [java.sql.ResultSet] - <{rset-100516} Result: [100043, 管理员, admin, RaFutWeh0ww=, 0, 001, default, 01, 供热]>
2018-01-30 18:09:32,673 DEBUG [java.sql.Connection] - <{conn-100517} Connection>
2018-01-30 18:09:32,673 DEBUG [java.sql.Connection] - <{conn-100517} Preparing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-01-30 18:09:32,673 DEBUG [java.sql.PreparedStatement] - <{pstm-100518} Executing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-01-30 18:09:32,673 DEBUG [java.sql.PreparedStatement] - <{pstm-100518} Parameters: [1aejyinyxllax]>
2018-01-30 18:09:32,673 DEBUG [java.sql.PreparedStatement] - <{pstm-100518} Types: [java.lang.String]>
2018-01-30 18:09:32,674 DEBUG [java.sql.ResultSet] - <{rset-100519} ResultSet>
2018-01-30 18:09:32,675 DEBUG [java.sql.Connection] - <{conn-100520} Connection>
2018-01-30 18:09:32,675 DEBUG [java.sql.Connection] - <{conn-100520} Preparing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-01-30 18:09:32,676 DEBUG [java.sql.PreparedStatement] - <{pstm-100521} Executing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-01-30 18:09:32,676 DEBUG [java.sql.PreparedStatement] - <{pstm-100521} Parameters: [1aejyinyxllax, 管理员, admin, 2018-01-30 18:09:32, 127.0.0.1, 100043, FIREFOX/57.]>
2018-01-30 18:09:32,676 DEBUG [java.sql.PreparedStatement] - <{pstm-100521} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-30 18:09:32,753 DEBUG [java.sql.Connection] - <{conn-100522} Connection>
2018-01-30 18:09:32,755 DEBUG [java.sql.Connection] - <{conn-100522} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:09:32,755 DEBUG [java.sql.PreparedStatement] - <{pstm-100523} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:09:32,755 DEBUG [java.sql.PreparedStatement] - <{pstm-100523} Parameters: [100043]>
2018-01-30 18:09:32,756 DEBUG [java.sql.PreparedStatement] - <{pstm-100523} Types: [java.lang.String]>
2018-01-30 18:09:32,757 DEBUG [java.sql.ResultSet] - <{rset-100524} ResultSet>
2018-01-30 18:09:32,758 DEBUG [java.sql.ResultSet] - <{rset-100524} Header: [theme]>
2018-01-30 18:09:32,758 DEBUG [java.sql.ResultSet] - <{rset-100524} Result: [default]>
2018-01-30 18:09:32,884 DEBUG [java.sql.Connection] - <{conn-100525} Connection>
2018-01-30 18:09:32,884 DEBUG [java.sql.Connection] - <{conn-100525} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:09:32,884 DEBUG [java.sql.PreparedStatement] - <{pstm-100526} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:09:32,884 DEBUG [java.sql.PreparedStatement] - <{pstm-100526} Parameters: [100043]>
2018-01-30 18:09:32,884 DEBUG [java.sql.PreparedStatement] - <{pstm-100526} Types: [java.lang.String]>
2018-01-30 18:09:32,886 DEBUG [java.sql.ResultSet] - <{rset-100527} ResultSet>
2018-01-30 18:09:32,887 DEBUG [java.sql.ResultSet] - <{rset-100527} Header: [menuid, menuname, iconcls]>
2018-01-30 18:09:32,887 DEBUG [java.sql.ResultSet] - <{rset-100527} Result: [0103, 基础信息, null]>
2018-01-30 18:09:32,887 DEBUG [java.sql.ResultSet] - <{rset-100527} Result: [0104, 收费管理, null]>
2018-01-30 18:09:32,887 DEBUG [java.sql.ResultSet] - <{rset-100527} Result: [0105, 统计分析, null]>
2018-01-30 18:09:32,887 DEBUG [java.sql.ResultSet] - <{rset-100527} Result: [0101, 系统管理, null]>
2018-01-30 18:09:32,887 DEBUG [java.sql.Connection] - <{conn-100528} Connection>
2018-01-30 18:09:32,888 DEBUG [java.sql.Connection] - <{conn-100528} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-01-30 18:09:32,888 DEBUG [java.sql.PreparedStatement] - <{pstm-100529} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-01-30 18:09:32,888 DEBUG [java.sql.PreparedStatement] - <{pstm-100529} Parameters: [100043]>
2018-01-30 18:09:32,888 DEBUG [java.sql.PreparedStatement] - <{pstm-100529} Types: [java.lang.String]>
2018-01-30 18:09:32,889 DEBUG [java.sql.ResultSet] - <{rset-100530} ResultSet>
2018-01-30 18:09:32,890 DEBUG [java.sql.Connection] - <{conn-100531} Connection>
2018-01-30 18:09:32,890 DEBUG [java.sql.Connection] - <{conn-100531} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 18:09:32,890 DEBUG [java.sql.PreparedStatement] - <{pstm-100532} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 18:09:32,890 DEBUG [java.sql.PreparedStatement] - <{pstm-100532} Parameters: [001]>
2018-01-30 18:09:32,890 DEBUG [java.sql.PreparedStatement] - <{pstm-100532} Types: [java.lang.String]>
2018-01-30 18:09:32,891 DEBUG [java.sql.ResultSet] - <{rset-100533} ResultSet>
2018-01-30 18:09:32,891 DEBUG [java.sql.ResultSet] - <{rset-100533} Header: [deptid, deptname]>
2018-01-30 18:09:32,891 DEBUG [java.sql.ResultSet] - <{rset-100533} Result: [001, XX供热公司]>
2018-01-30 18:09:32,892 DEBUG [java.sql.Connection] - <{conn-100534} Connection>
2018-01-30 18:09:32,892 DEBUG [java.sql.Connection] - <{conn-100534} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 18:09:32,892 DEBUG [java.sql.PreparedStatement] - <{pstm-100535} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 18:09:32,892 DEBUG [java.sql.PreparedStatement] - <{pstm-100535} Parameters: [001]>
2018-01-30 18:09:32,892 DEBUG [java.sql.PreparedStatement] - <{pstm-100535} Types: [java.lang.String]>
2018-01-30 18:09:32,893 DEBUG [java.sql.ResultSet] - <{rset-100536} ResultSet>
2018-01-30 18:09:32,893 DEBUG [java.sql.ResultSet] - <{rset-100536} Header: [deptid, deptname]>
2018-01-30 18:09:32,893 DEBUG [java.sql.ResultSet] - <{rset-100536} Result: [001, XX供热公司]>
2018-01-30 18:09:32,894 DEBUG [java.sql.Connection] - <{conn-100537} Connection>
2018-01-30 18:09:32,894 DEBUG [java.sql.Connection] - <{conn-100537} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:09:32,894 DEBUG [java.sql.PreparedStatement] - <{pstm-100538} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:09:32,894 DEBUG [java.sql.PreparedStatement] - <{pstm-100538} Parameters: [100043]>
2018-01-30 18:09:32,894 DEBUG [java.sql.PreparedStatement] - <{pstm-100538} Types: [java.lang.String]>
2018-01-30 18:09:32,895 DEBUG [java.sql.ResultSet] - <{rset-100539} ResultSet>
2018-01-30 18:09:32,896 DEBUG [java.sql.ResultSet] - <{rset-100539} Header: [theme]>
2018-01-30 18:09:32,896 DEBUG [java.sql.ResultSet] - <{rset-100539} Result: [default]>
2018-01-30 18:09:32,922 DEBUG [java.sql.Connection] - <{conn-100540} Connection>
2018-01-30 18:09:32,922 DEBUG [java.sql.Connection] - <{conn-100540} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:09:32,922 DEBUG [java.sql.PreparedStatement] - <{pstm-100541} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:09:32,922 DEBUG [java.sql.PreparedStatement] - <{pstm-100541} Parameters: [100043]>
2018-01-30 18:09:32,922 DEBUG [java.sql.PreparedStatement] - <{pstm-100541} Types: [java.lang.String]>
2018-01-30 18:09:32,925 DEBUG [java.sql.ResultSet] - <{rset-100542} ResultSet>
2018-01-30 18:09:32,925 DEBUG [java.sql.ResultSet] - <{rset-100542} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 18:09:32,925 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [01030404, 新建换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:32,925 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [01030403, 删除热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:32,925 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [01030406, 删除换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:32,926 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [010305, 入网管理, null, 0103, module/iw.ered?reqCode=intoWebInit, 0, false, false, tab_blank.png]>
2018-01-30 18:09:32,926 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [01030405, 修改换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:32,926 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [01030401, 新建热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:32,926 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [01030201, 选择导入文件, null, 010302, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:32,926 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [01030312, 删除面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:32,926 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [0103, 基础信息, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 18:09:32,927 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [01030311, 修改面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:32,927 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [01030301, 新建小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:32,927 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [01030310, 添加面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:32,927 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [010304, 热源站所管理, null, 0103, module/sr.ered?reqCode=sourceInit, 0, false, false, tab_blank.png]>
2018-01-30 18:09:32,927 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [01030313, 删除面积1, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:32,927 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [01030202, 导入模板下载, null, 010302, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:32,928 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [01030501, 新增入网, null, 010305, null, 1, false, true, tab_blank.png]>
2018-01-30 18:09:32,928 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [01030402, 修改热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:32,928 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [010303, 基础信息维护, null, 0103, module/fc.ered?reqCode=communityInit, 0, false, false, tab_blank.png]>
2018-01-30 18:09:32,928 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [01030502, 修改入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:32,930 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [01030302, 修改小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:32,930 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [010302, 基础数据导入, null, 0103, module/importHouse.ered?reqCode=importInit, 1, false, false, tab_blank.png]>
2018-01-30 18:09:32,930 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [01030303, 删除小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:32,930 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [01030503, 删除入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:32,930 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [01030304, 新建大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:32,930 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [01030305, 修改大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:32,931 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [01030306, 删除大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:32,931 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [01030307, 新建用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:32,931 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [01030308, 修改用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:32,931 DEBUG [java.sql.ResultSet] - <{rset-100542} Result: [01030309, 删除用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:32,931 DEBUG [java.sql.Connection] - <{conn-100543} Connection>
2018-01-30 18:09:32,931 DEBUG [java.sql.Connection] - <{conn-100543} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 18:09:32,932 DEBUG [java.sql.PreparedStatement] - <{pstm-100544} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 18:09:32,932 DEBUG [java.sql.PreparedStatement] - <{pstm-100544} Parameters: [100043]>
2018-01-30 18:09:32,932 DEBUG [java.sql.PreparedStatement] - <{pstm-100544} Types: [java.lang.String]>
2018-01-30 18:09:32,933 DEBUG [java.sql.ResultSet] - <{rset-100545} ResultSet>
2018-01-30 18:09:32,934 DEBUG [java.sql.Connection] - <{conn-100546} Connection>
2018-01-30 18:09:32,934 DEBUG [java.sql.Connection] - <{conn-100546} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 18:09:32,934 DEBUG [java.sql.PreparedStatement] - <{pstm-100547} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 18:09:32,935 DEBUG [java.sql.PreparedStatement] - <{pstm-100547} Parameters: [01]>
2018-01-30 18:09:32,935 DEBUG [java.sql.PreparedStatement] - <{pstm-100547} Types: [java.lang.String]>
2018-01-30 18:09:32,936 DEBUG [java.sql.ResultSet] - <{rset-100548} ResultSet>
2018-01-30 18:09:32,936 DEBUG [java.sql.ResultSet] - <{rset-100548} Header: [menuname]>
2018-01-30 18:09:32,936 DEBUG [java.sql.ResultSet] - <{rset-100548} Result: [供热收费管理信息系统]>
2018-01-30 18:09:33,001 DEBUG [java.sql.Connection] - <{conn-100549} Connection>
2018-01-30 18:09:33,001 DEBUG [java.sql.Connection] - <{conn-100549} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:09:33,002 DEBUG [java.sql.PreparedStatement] - <{pstm-100550} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:09:33,002 DEBUG [java.sql.PreparedStatement] - <{pstm-100550} Parameters: [100043]>
2018-01-30 18:09:33,002 DEBUG [java.sql.PreparedStatement] - <{pstm-100550} Types: [java.lang.String]>
2018-01-30 18:09:33,004 DEBUG [java.sql.ResultSet] - <{rset-100551} ResultSet>
2018-01-30 18:09:33,005 DEBUG [java.sql.ResultSet] - <{rset-100551} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 18:09:33,005 DEBUG [java.sql.ResultSet] - <{rset-100551} Result: [010402, 收费管理, null, 0104, module/chg.ered?reqCode=chargeInit, 1, false, false, tab_blank.png]>
2018-01-30 18:09:33,005 DEBUG [java.sql.ResultSet] - <{rset-100551} Result: [01040503, 作废票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:33,005 DEBUG [java.sql.ResultSet] - <{rset-100551} Result: [01040501, 票据入库, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:33,005 DEBUG [java.sql.ResultSet] - <{rset-100551} Result: [01040401, 冲账, null, 010404, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:33,006 DEBUG [java.sql.ResultSet] - <{rset-100551} Result: [01040101, 生成应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:33,006 DEBUG [java.sql.ResultSet] - <{rset-100551} Result: [01040505, 领用票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:33,006 DEBUG [java.sql.ResultSet] - <{rset-100551} Result: [01040302, 删除减免, null, 010403, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:33,006 DEBUG [java.sql.ResultSet] - <{rset-100551} Result: [01040301, 减免应收, null, 010403, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:33,006 DEBUG [java.sql.ResultSet] - <{rset-100551} Result: [01040502, 删除票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:33,007 DEBUG [java.sql.ResultSet] - <{rset-100551} Result: [01040201, 收费, null, 010402, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:33,007 DEBUG [java.sql.ResultSet] - <{rset-100551} Result: [01040102, 删除应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:33,007 DEBUG [java.sql.ResultSet] - <{rset-100551} Result: [01040504, 返还票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 18:09:33,007 DEBUG [java.sql.ResultSet] - <{rset-100551} Result: [010401, 生成应收, null, 0104, module/crp.ered?reqCode=creatPlanInit, 1, false, false, tab_blank.png]>
2018-01-30 18:09:33,007 DEBUG [java.sql.ResultSet] - <{rset-100551} Result: [0104, 收费管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 18:09:33,007 DEBUG [java.sql.ResultSet] - <{rset-100551} Result: [010403, 减免管理, null, 0104, module/mns.ered?reqCode=minusInit, 1, false, false, tab_blank.png]>
2018-01-30 18:09:33,007 DEBUG [java.sql.ResultSet] - <{rset-100551} Result: [010404, 冲账管理, null, 0104, module/rlb.ered?reqCode=rollbackInit, 1, false, false, tab_blank.png]>
2018-01-30 18:09:33,008 DEBUG [java.sql.ResultSet] - <{rset-100551} Result: [010405, 票据管理, null, 0104, module/inv.ered?reqCode=invoiceInit, 1, false, false, tab_blank.png]>
2018-01-30 18:09:33,008 DEBUG [java.sql.Connection] - <{conn-100552} Connection>
2018-01-30 18:09:33,008 DEBUG [java.sql.Connection] - <{conn-100552} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 18:09:33,008 DEBUG [java.sql.PreparedStatement] - <{pstm-100553} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 18:09:33,008 DEBUG [java.sql.PreparedStatement] - <{pstm-100553} Parameters: [100043]>
2018-01-30 18:09:33,008 DEBUG [java.sql.PreparedStatement] - <{pstm-100553} Types: [java.lang.String]>
2018-01-30 18:09:33,010 DEBUG [java.sql.ResultSet] - <{rset-100554} ResultSet>
2018-01-30 18:09:33,010 DEBUG [java.sql.Connection] - <{conn-100555} Connection>
2018-01-30 18:09:33,010 DEBUG [java.sql.Connection] - <{conn-100555} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 18:09:33,011 DEBUG [java.sql.PreparedStatement] - <{pstm-100556} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 18:09:33,011 DEBUG [java.sql.PreparedStatement] - <{pstm-100556} Parameters: [01]>
2018-01-30 18:09:33,011 DEBUG [java.sql.PreparedStatement] - <{pstm-100556} Types: [java.lang.String]>
2018-01-30 18:09:33,012 DEBUG [java.sql.ResultSet] - <{rset-100557} ResultSet>
2018-01-30 18:09:33,012 DEBUG [java.sql.ResultSet] - <{rset-100557} Header: [menuname]>
2018-01-30 18:09:33,012 DEBUG [java.sql.ResultSet] - <{rset-100557} Result: [供热收费管理信息系统]>
2018-01-30 18:09:33,228 DEBUG [java.sql.Connection] - <{conn-100558} Connection>
2018-01-30 18:09:33,229 DEBUG [java.sql.Connection] - <{conn-100558} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:09:33,229 DEBUG [java.sql.PreparedStatement] - <{pstm-100559} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:09:33,229 DEBUG [java.sql.PreparedStatement] - <{pstm-100559} Parameters: [100043]>
2018-01-30 18:09:33,229 DEBUG [java.sql.PreparedStatement] - <{pstm-100559} Types: [java.lang.String]>
2018-01-30 18:09:33,231 DEBUG [java.sql.ResultSet] - <{rset-100560} ResultSet>
2018-01-30 18:09:33,231 DEBUG [java.sql.ResultSet] - <{rset-100560} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 18:09:33,232 DEBUG [java.sql.ResultSet] - <{rset-100560} Result: [010502, 收费报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-01-30 18:09:33,232 DEBUG [java.sql.ResultSet] - <{rset-100560} Result: [010501, 基础报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-01-30 18:09:33,232 DEBUG [java.sql.ResultSet] - <{rset-100560} Result: [01050202, 欠费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050201, 1, false, false, tab_blank.png]>
2018-01-30 18:09:33,232 DEBUG [java.sql.ResultSet] - <{rset-100560} Result: [01050101, 用户情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=f01050101, 1, false, false, tab_blank.png]>
2018-01-30 18:09:33,232 DEBUG [java.sql.ResultSet] - <{rset-100560} Result: [01050102, 入网情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=w01050301, 1, false, false, tab_blank.png]>
2018-01-30 18:09:33,232 DEBUG [java.sql.ResultSet] - <{rset-100560} Result: [01050203, 收费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050202, 1, false, false, tab_blank.png]>
2018-01-30 18:09:33,232 DEBUG [java.sql.ResultSet] - <{rset-100560} Result: [01050201, 收费情况表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050401, 1, false, false, tab_blank.png]>
2018-01-30 18:09:33,232 DEBUG [java.sql.ResultSet] - <{rset-100560} Result: [0105, 统计分析, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 18:09:33,232 DEBUG [java.sql.ResultSet] - <{rset-100560} Result: [01050204, 减免明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050204, 1, false, false, tab_blank.png]>
2018-01-30 18:09:33,233 DEBUG [java.sql.Connection] - <{conn-100561} Connection>
2018-01-30 18:09:33,233 DEBUG [java.sql.Connection] - <{conn-100561} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 18:09:33,233 DEBUG [java.sql.PreparedStatement] - <{pstm-100562} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 18:09:33,233 DEBUG [java.sql.PreparedStatement] - <{pstm-100562} Parameters: [100043]>
2018-01-30 18:09:33,233 DEBUG [java.sql.PreparedStatement] - <{pstm-100562} Types: [java.lang.String]>
2018-01-30 18:09:33,235 DEBUG [java.sql.ResultSet] - <{rset-100563} ResultSet>
2018-01-30 18:09:33,235 DEBUG [java.sql.Connection] - <{conn-100564} Connection>
2018-01-30 18:09:33,235 DEBUG [java.sql.Connection] - <{conn-100564} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 18:09:33,236 DEBUG [java.sql.PreparedStatement] - <{pstm-100565} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 18:09:33,236 DEBUG [java.sql.PreparedStatement] - <{pstm-100565} Parameters: [01]>
2018-01-30 18:09:33,236 DEBUG [java.sql.PreparedStatement] - <{pstm-100565} Types: [java.lang.String]>
2018-01-30 18:09:33,237 DEBUG [java.sql.ResultSet] - <{rset-100566} ResultSet>
2018-01-30 18:09:33,237 DEBUG [java.sql.ResultSet] - <{rset-100566} Header: [menuname]>
2018-01-30 18:09:33,237 DEBUG [java.sql.ResultSet] - <{rset-100566} Result: [供热收费管理信息系统]>
2018-01-30 18:09:33,528 DEBUG [java.sql.Connection] - <{conn-100567} Connection>
2018-01-30 18:09:33,528 DEBUG [java.sql.Connection] - <{conn-100567} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:09:33,529 DEBUG [java.sql.PreparedStatement] - <{pstm-100568} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:09:33,529 DEBUG [java.sql.PreparedStatement] - <{pstm-100568} Parameters: [100043]>
2018-01-30 18:09:33,529 DEBUG [java.sql.PreparedStatement] - <{pstm-100568} Types: [java.lang.String]>
2018-01-30 18:09:33,531 DEBUG [java.sql.ResultSet] - <{rset-100569} ResultSet>
2018-01-30 18:09:33,531 DEBUG [java.sql.ResultSet] - <{rset-100569} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 18:09:33,531 DEBUG [java.sql.ResultSet] - <{rset-100569} Result: [01010305, 优惠设置, server_connectIcon, 010103, module/dic.ered?reqCode=discountInit, 1, false, false, server_connect.png]>
2018-01-30 18:09:33,531 DEBUG [java.sql.ResultSet] - <{rset-100569} Result: [01010304, 收费标准, server_connectIcon, 010103, module/std.ered?reqCode=standardInit, 1, false, false, server_connect.png]>
2018-01-30 18:09:33,531 DEBUG [java.sql.ResultSet] - <{rset-100569} Result: [010102, 权限管理, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 18:09:33,531 DEBUG [java.sql.ResultSet] - <{rset-100569} Result: [01010201, 组织机构管理, chart_organisationIcon, 010102, organization.ered?reqCode=departmentInit, 1, false, false, chart_organisation.png]>
2018-01-30 18:09:33,531 DEBUG [java.sql.ResultSet] - <{rset-100569} Result: [01010301, 字典维护, application_view_listIcon, 010103, resource.ered?reqCode=codeTableInit, 1, false, false, application_view_list.png]>
2018-01-30 18:09:33,532 DEBUG [java.sql.ResultSet] - <{rset-100569} Result: [01010403, Requst请求跟踪, server_connectIcon, 010104, eventTrack.ered?reqCode=init, 1, false, false, server_connect.png]>
2018-01-30 18:09:33,532 DEBUG [java.sql.ResultSet] - <{rset-100569} Result: [01010401, Session会话监控, user_commentIcon, 010104, sessionMonitor.ered?reqCode=init, 1, false, false, user_comment.png]>
2018-01-30 18:09:33,532 DEBUG [java.sql.ResultSet] - <{rset-100569} Result: [01010204, 角色管理与授权, award_star_silver_3Icon, 010102, role.ered?reqCode=roleInit, 1, false, false, award_star_silver_3.png]>
2018-01-30 18:09:33,532 DEBUG [java.sql.ResultSet] - <{rset-100569} Result: [01010303, 全局参数表维护, configIcon, 010103, param.ered?reqCode=init, 1, false, false, config.png]>
2018-01-30 18:09:33,533 DEBUG [java.sql.ResultSet] - <{rset-100569} Result: [010103, 基础数据维护, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 18:09:33,533 DEBUG [java.sql.ResultSet] - <{rset-100569} Result: [010104, 运行监控, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 18:09:33,533 DEBUG [java.sql.ResultSet] - <{rset-100569} Result: [01010202, 人员管理与授权, group_linkIcon, 010102, user.ered?reqCode=userInit, 1, false, false, group_link.png]>
2018-01-30 18:09:33,533 DEBUG [java.sql.ResultSet] - <{rset-100569} Result: [01010405, JDBC执行监控, database_refreshIcon, 010104, jdbcMonitor.ered?reqCode=jdbcInit, 1, false, false, database_refresh.png]>
2018-01-30 18:09:33,533 DEBUG [java.sql.ResultSet] - <{rset-100569} Result: [01010406, Service监控, pluginIcon, 010104, beanMonitor.ered?reqCode=init, 1, false, false, plugin.png]>
2018-01-30 18:09:33,533 DEBUG [java.sql.ResultSet] - <{rset-100569} Result: [01010205, 菜单资源管理, layout_contentIcon, 010102, resource.ered?reqCode=menuResourceInit, 1, false, false, layout_content.png]>
2018-01-30 18:09:33,533 DEBUG [java.sql.ResultSet] - <{rset-100569} Result: [0101, 系统管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 18:09:33,534 DEBUG [java.sql.Connection] - <{conn-100570} Connection>
2018-01-30 18:09:33,534 DEBUG [java.sql.Connection] - <{conn-100570} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 18:09:33,534 DEBUG [java.sql.PreparedStatement] - <{pstm-100571} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 18:09:33,534 DEBUG [java.sql.PreparedStatement] - <{pstm-100571} Parameters: [100043]>
2018-01-30 18:09:33,534 DEBUG [java.sql.PreparedStatement] - <{pstm-100571} Types: [java.lang.String]>
2018-01-30 18:09:33,535 DEBUG [java.sql.ResultSet] - <{rset-100572} ResultSet>
2018-01-30 18:09:33,536 DEBUG [java.sql.Connection] - <{conn-100573} Connection>
2018-01-30 18:09:33,536 DEBUG [java.sql.Connection] - <{conn-100573} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 18:09:33,536 DEBUG [java.sql.PreparedStatement] - <{pstm-100574} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 18:09:33,537 DEBUG [java.sql.PreparedStatement] - <{pstm-100574} Parameters: [01]>
2018-01-30 18:09:33,537 DEBUG [java.sql.PreparedStatement] - <{pstm-100574} Types: [java.lang.String]>
2018-01-30 18:09:33,538 DEBUG [java.sql.ResultSet] - <{rset-100575} ResultSet>
2018-01-30 18:09:33,538 DEBUG [java.sql.ResultSet] - <{rset-100575} Header: [menuname]>
2018-01-30 18:09:33,538 DEBUG [java.sql.ResultSet] - <{rset-100575} Result: [供热收费管理信息系统]>
2018-01-30 18:09:34,095 DEBUG [java.sql.Connection] - <{conn-100576} Connection>
2018-01-30 18:09:34,095 DEBUG [java.sql.Connection] - <{conn-100576} Preparing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-01-30 18:09:34,096 DEBUG [java.sql.PreparedStatement] - <{pstm-100577} Executing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-01-30 18:09:34,096 DEBUG [java.sql.PreparedStatement] - <{pstm-100577} Parameters: []>
2018-01-30 18:09:34,096 DEBUG [java.sql.PreparedStatement] - <{pstm-100577} Types: []>
2018-01-30 18:09:34,097 DEBUG [java.sql.ResultSet] - <{rset-100578} ResultSet>
2018-01-30 18:09:34,097 DEBUG [java.sql.ResultSet] - <{rset-100578} Header: [id, text, child_count]>
2018-01-30 18:09:34,097 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0101, 0101 经贸局家属楼 (3), 3]>
2018-01-30 18:09:34,097 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0102, 0102 法院家属楼 (2), 2]>
2018-01-30 18:09:34,097 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0103, 0103 长治县电视台 (1), 1]>
2018-01-30 18:09:34,097 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0104, 0104 广播北二巷（一至三排） (1), 1]>
2018-01-30 18:09:34,098 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0105, 0105 广播南二巷（公安家属西五排） (1), 1]>
2018-01-30 18:09:34,098 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0106, 0106 广播北四巷第一组（南6户） (1), 1]>
2018-01-30 18:09:34,098 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0107, 0107 广播北四巷第一组（北19户） (1), 1]>
2018-01-30 18:09:34,098 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0108, 0108 广播北四巷第二组（16户） (1), 1]>
2018-01-30 18:09:34,098 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0109, 0109 工业巷北一排-北八排 (1), 1]>
2018-01-30 18:09:34,099 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0110, 0110 法院家属院17户 (1), 1]>
2018-01-30 18:09:34,099 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0111, 0111 公安西家属区60户 (1), 1]>
2018-01-30 18:09:34,099 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0112, 0112 建筑工程公司 (2), 2]>
2018-01-30 18:09:34,099 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0113, 0113 工会家属楼 (1), 1]>
2018-01-30 18:09:34,099 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0114, 0114 工会二层独院5户 (1), 1]>
2018-01-30 18:09:34,099 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0115, 0115 政府平房南一排 (2), 2]>
2018-01-30 18:09:34,099 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0116, 0116 政府平房南二排6户 (1), 1]>
2018-01-30 18:09:34,099 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0117, 0117 政府平房南三排5户 (1), 1]>
2018-01-30 18:09:34,099 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0118, 0118 政府平房南四排4户 (1), 1]>
2018-01-30 18:09:34,099 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0119, 0119 政府平房南五排5户（北二排） (1), 1]>
2018-01-30 18:09:34,100 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0120, 0120 政府平房南六排5户（北一排） (1), 1]>
2018-01-30 18:09:34,100 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0121, 0121 政府平房后六户 (1), 1]>
2018-01-30 18:09:34,101 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0122, 0122 政府第三家属楼32户 (1), 1]>
2018-01-30 18:09:34,101 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0123, 0123 政府黄楼家属区 (1), 1]>
2018-01-30 18:09:34,101 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0124, 0124 五交化家属楼 (2), 2]>
2018-01-30 18:09:34,101 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0125, 0125 通达供销公司综合楼 (1), 1]>
2018-01-30 18:09:34,101 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0126, 0126 供销联社家属楼 (3), 3]>
2018-01-30 18:09:34,104 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [0127, 0127 二轻局底商 (1), 1]>
2018-01-30 18:09:34,104 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [2001, 2001 南董村西南一巷 (1), 1]>
2018-01-30 18:09:34,104 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [2002, 2002 南董村正街路北 (1), 1]>
2018-01-30 18:09:34,104 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [2003, 2003 南董村正街路南 (1), 1]>
2018-01-30 18:09:34,104 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [2004, 2004 南董村西散户 (1), 1]>
2018-01-30 18:09:34,105 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [2005, 2005 伍龙小区 (3), 3]>
2018-01-30 18:09:34,337 DEBUG [java.sql.Connection] - <{conn-100579} Connection>
2018-01-30 18:09:34,338 DEBUG [java.sql.Connection] - <{conn-100579} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:09:34,338 DEBUG [java.sql.PreparedStatement] - <{pstm-100580} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:09:34,338 DEBUG [java.sql.PreparedStatement] - <{pstm-100580} Parameters: [100043]>
2018-01-30 18:09:34,338 DEBUG [java.sql.PreparedStatement] - <{pstm-100580} Types: [java.lang.String]>
2018-01-30 18:09:34,339 DEBUG [java.sql.ResultSet] - <{rset-100581} ResultSet>
2018-01-30 18:09:34,340 DEBUG [java.sql.ResultSet] - <{rset-100581} Header: [theme]>
2018-01-30 18:09:34,340 DEBUG [java.sql.ResultSet] - <{rset-100581} Result: [default]>
2018-01-30 18:09:37,788 DEBUG [java.sql.Connection] - <{conn-100582} Connection>
2018-01-30 18:09:37,788 DEBUG [java.sql.Connection] - <{conn-100582} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:09:37,788 DEBUG [java.sql.PreparedStatement] - <{pstm-100583} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:09:37,788 DEBUG [java.sql.PreparedStatement] - <{pstm-100583} Parameters: [100043]>
2018-01-30 18:09:37,789 DEBUG [java.sql.PreparedStatement] - <{pstm-100583} Types: [java.lang.String]>
2018-01-30 18:09:37,789 DEBUG [java.sql.ResultSet] - <{rset-100584} ResultSet>
2018-01-30 18:09:37,790 DEBUG [java.sql.ResultSet] - <{rset-100584} Header: [theme]>
2018-01-30 18:09:37,790 DEBUG [java.sql.ResultSet] - <{rset-100584} Result: [default]>
2018-01-30 18:09:38,286 DEBUG [java.sql.Connection] - <{conn-100585} Connection>
2018-01-30 18:09:38,287 DEBUG [java.sql.Connection] - <{conn-100585} Preparing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-30 18:09:38,287 DEBUG [java.sql.PreparedStatement] - <{pstm-100586} Executing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-30 18:09:38,287 DEBUG [java.sql.PreparedStatement] - <{pstm-100586} Parameters: []>
2018-01-30 18:09:38,287 DEBUG [java.sql.PreparedStatement] - <{pstm-100586} Types: []>
2018-01-30 18:09:38,288 DEBUG [java.sql.ResultSet] - <{rset-100587} ResultSet>
2018-01-30 18:09:38,288 DEBUG [java.sql.ResultSet] - <{rset-100587} Header: [value, text]>
2018-01-30 18:09:38,289 DEBUG [java.sql.ResultSet] - <{rset-100587} Result: [A, 供热费]>
2018-01-30 18:09:38,289 DEBUG [java.sql.ResultSet] - <{rset-100587} Result: [B, 入网费]>
2018-01-30 18:09:38,333 DEBUG [java.sql.Connection] - <{conn-100588} Connection>
2018-01-30 18:09:38,333 DEBUG [java.sql.Connection] - <{conn-100588} Preparing Statement:   SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD') currentDate FROM DUAL  >
2018-01-30 18:09:38,334 DEBUG [java.sql.PreparedStatement] - <{pstm-100589} Executing Statement:   SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD') currentDate FROM DUAL  >
2018-01-30 18:09:38,334 DEBUG [java.sql.PreparedStatement] - <{pstm-100589} Parameters: []>
2018-01-30 18:09:38,334 DEBUG [java.sql.PreparedStatement] - <{pstm-100589} Types: []>
2018-01-30 18:09:38,335 DEBUG [java.sql.ResultSet] - <{rset-100590} ResultSet>
2018-01-30 18:09:38,335 DEBUG [java.sql.ResultSet] - <{rset-100590} Header: [currentdate]>
2018-01-30 18:09:38,335 DEBUG [java.sql.ResultSet] - <{rset-100590} Result: [2018-01-30]>
2018-01-30 18:09:40,035 DEBUG [java.sql.Connection] - <{conn-100591} Connection>
2018-01-30 18:09:40,036 DEBUG [java.sql.Connection] - <{conn-100591} Preparing Statement:    select pay_mode,count(house_code) house_count,   sum(real_charge) real_charge    from (   select     b.bill_date ,        e.community_name,     b.community_code,     b.building_code,     b.house_code,        b.owner_name,        b.charge_price,      b.charge_area,      b.USE_PREPAY,       b.PAY_MODE,       f.invoice_code,       f.invoice_number,     c.userName operatorName,     b.operator,       b.operate_date,      b.item_code,      b.charge_type,      case when b.charge_month='0' then '' else b.charge_month end as charge_month,       b.real_charge ,     case when g.status='2' then 1 else 0 end cancelCount   from      SF_DETAIL b,EAUSER c,SF_ITEM d,FC_COMMUNITY e,SF_INVOICEUSE f,sf_invoice g   where      b.community_code=e.community_code     and b.operator=c.userid     and b.item_code=d.item_code     and b.b_id=f.b_id(+)     and b.rollback_flag='0'     and f.invoice_code=g.invoice_code(+)     and f.invoice_number=g.invoice_number(+)     and f.item_code=g.item_code(+)     and f.invoice_type=g.invoice_type(+)    ) a  where 1=1      AND          operate_date>='2018-01-30 00:00:00'      AND          operate_date<='2018-01-30 23:59:59'               group by pay_mode  >
2018-01-30 18:09:40,036 DEBUG [java.sql.PreparedStatement] - <{pstm-100592} Executing Statement:    select pay_mode,count(house_code) house_count,   sum(real_charge) real_charge    from (   select     b.bill_date ,        e.community_name,     b.community_code,     b.building_code,     b.house_code,        b.owner_name,        b.charge_price,      b.charge_area,      b.USE_PREPAY,       b.PAY_MODE,       f.invoice_code,       f.invoice_number,     c.userName operatorName,     b.operator,       b.operate_date,      b.item_code,      b.charge_type,      case when b.charge_month='0' then '' else b.charge_month end as charge_month,       b.real_charge ,     case when g.status='2' then 1 else 0 end cancelCount   from      SF_DETAIL b,EAUSER c,SF_ITEM d,FC_COMMUNITY e,SF_INVOICEUSE f,sf_invoice g   where      b.community_code=e.community_code     and b.operator=c.userid     and b.item_code=d.item_code     and b.b_id=f.b_id(+)     and b.rollback_flag='0'     and f.invoice_code=g.invoice_code(+)     and f.invoice_number=g.invoice_number(+)     and f.item_code=g.item_code(+)     and f.invoice_type=g.invoice_type(+)    ) a  where 1=1      AND          operate_date>='2018-01-30 00:00:00'      AND          operate_date<='2018-01-30 23:59:59'               group by pay_mode  >
2018-01-30 18:09:40,036 DEBUG [java.sql.PreparedStatement] - <{pstm-100592} Parameters: []>
2018-01-30 18:09:40,036 DEBUG [java.sql.PreparedStatement] - <{pstm-100592} Types: []>
2018-01-30 18:09:40,038 DEBUG [java.sql.ResultSet] - <{rset-100593} ResultSet>
2018-01-30 18:09:40,038 DEBUG [java.sql.ResultSet] - <{rset-100593} Header: [pay_mode, house_count, real_charge]>
2018-01-30 18:09:40,038 DEBUG [java.sql.ResultSet] - <{rset-100593} Result: [现金, 1, 2800.28]>
2018-01-30 18:13:55,906 DEBUG [java.sql.Connection] - <{conn-100594} Connection>
2018-01-30 18:13:55,907 DEBUG [java.sql.Connection] - <{conn-100594} Preparing Statement:    select pay_mode,count(house_code) house_count,   sum(real_charge) real_charge    from (   select     b.bill_date ,        e.community_name,     b.community_code,     b.building_code,     b.house_code,        b.owner_name,        b.charge_price,      b.charge_area,      b.USE_PREPAY,       b.PAY_MODE,       f.invoice_code,       f.invoice_number,     c.userName operatorName,     b.operator,       b.operate_date,      b.item_code,      b.charge_type,      case when b.charge_month='0' then '' else b.charge_month end as charge_month,       b.real_charge ,     case when g.status='2' then 1 else 0 end cancelCount   from      SF_DETAIL b,EAUSER c,SF_ITEM d,FC_COMMUNITY e,SF_INVOICEUSE f,sf_invoice g   where      b.community_code=e.community_code     and b.operator=c.userid     and b.item_code=d.item_code     and b.b_id=f.b_id(+)     and b.rollback_flag='0'     and f.invoice_code=g.invoice_code(+)     and f.invoice_number=g.invoice_number(+)     and f.item_code=g.item_code(+)     and f.invoice_type=g.invoice_type(+)    ) a  where 1=1      AND          operate_date>='2018-01-30 00:00:00'      AND          operate_date<='2018-01-30 23:59:59'               group by pay_mode  >
2018-01-30 18:13:55,907 DEBUG [java.sql.PreparedStatement] - <{pstm-100595} Executing Statement:    select pay_mode,count(house_code) house_count,   sum(real_charge) real_charge    from (   select     b.bill_date ,        e.community_name,     b.community_code,     b.building_code,     b.house_code,        b.owner_name,        b.charge_price,      b.charge_area,      b.USE_PREPAY,       b.PAY_MODE,       f.invoice_code,       f.invoice_number,     c.userName operatorName,     b.operator,       b.operate_date,      b.item_code,      b.charge_type,      case when b.charge_month='0' then '' else b.charge_month end as charge_month,       b.real_charge ,     case when g.status='2' then 1 else 0 end cancelCount   from      SF_DETAIL b,EAUSER c,SF_ITEM d,FC_COMMUNITY e,SF_INVOICEUSE f,sf_invoice g   where      b.community_code=e.community_code     and b.operator=c.userid     and b.item_code=d.item_code     and b.b_id=f.b_id(+)     and b.rollback_flag='0'     and f.invoice_code=g.invoice_code(+)     and f.invoice_number=g.invoice_number(+)     and f.item_code=g.item_code(+)     and f.invoice_type=g.invoice_type(+)    ) a  where 1=1      AND          operate_date>='2018-01-30 00:00:00'      AND          operate_date<='2018-01-30 23:59:59'               group by pay_mode  >
2018-01-30 18:13:55,907 DEBUG [java.sql.PreparedStatement] - <{pstm-100595} Parameters: []>
2018-01-30 18:13:55,907 DEBUG [java.sql.PreparedStatement] - <{pstm-100595} Types: []>
2018-01-30 18:13:55,909 DEBUG [java.sql.ResultSet] - <{rset-100596} ResultSet>
2018-01-30 18:13:55,909 DEBUG [java.sql.ResultSet] - <{rset-100596} Header: [pay_mode, house_count, real_charge]>
2018-01-30 18:13:55,909 DEBUG [java.sql.ResultSet] - <{rset-100596} Result: [现金, 1, 2800.28]>
2018-01-30 18:21:45,156 DEBUG [java.sql.Connection] - <{conn-100008} Connection>
2018-01-30 18:21:45,157 DEBUG [java.sql.Connection] - <{conn-100008} Preparing Statement:    DELETE      FROM eahttpsession   WHERE                sessionid = ?                >
2018-01-30 18:21:45,158 DEBUG [java.sql.PreparedStatement] - <{pstm-100009} Executing Statement:    DELETE      FROM eahttpsession   WHERE                sessionid = ?                >
2018-01-30 18:21:45,158 DEBUG [java.sql.PreparedStatement] - <{pstm-100009} Parameters: [140u0f67f87gn]>
2018-01-30 18:21:45,166 DEBUG [java.sql.PreparedStatement] - <{pstm-100009} Types: [java.lang.String]>
2018-01-30 18:21:54,357 DEBUG [java.sql.Connection] - <{conn-100010} Connection>
2018-01-30 18:21:54,359 DEBUG [java.sql.Connection] - <{conn-100010} Preparing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-01-30 18:21:54,359 DEBUG [java.sql.PreparedStatement] - <{pstm-100011} Executing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-01-30 18:21:54,359 DEBUG [java.sql.PreparedStatement] - <{pstm-100011} Parameters: [0, admin]>
2018-01-30 18:21:54,359 DEBUG [java.sql.PreparedStatement] - <{pstm-100011} Types: [java.lang.String, java.lang.String]>
2018-01-30 18:21:54,361 DEBUG [java.sql.ResultSet] - <{rset-100012} ResultSet>
2018-01-30 18:21:54,361 DEBUG [java.sql.ResultSet] - <{rset-100012} Header: [userid, username, account, password, sex, deptid, theme, customid, customname]>
2018-01-30 18:21:54,361 DEBUG [java.sql.ResultSet] - <{rset-100012} Result: [100043, 管理员, admin, RaFutWeh0ww=, 0, 001, default, 01, 供热]>
2018-01-30 18:21:54,362 DEBUG [java.sql.Connection] - <{conn-100013} Connection>
2018-01-30 18:21:54,363 DEBUG [java.sql.Connection] - <{conn-100013} Preparing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-01-30 18:21:54,363 DEBUG [java.sql.PreparedStatement] - <{pstm-100014} Executing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-01-30 18:21:54,363 DEBUG [java.sql.PreparedStatement] - <{pstm-100014} Parameters: [1nyz6mi5biwn6]>
2018-01-30 18:21:54,363 DEBUG [java.sql.PreparedStatement] - <{pstm-100014} Types: [java.lang.String]>
2018-01-30 18:21:54,364 DEBUG [java.sql.ResultSet] - <{rset-100015} ResultSet>
2018-01-30 18:21:54,366 DEBUG [java.sql.Connection] - <{conn-100016} Connection>
2018-01-30 18:21:54,367 DEBUG [java.sql.Connection] - <{conn-100016} Preparing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-01-30 18:21:54,367 DEBUG [java.sql.PreparedStatement] - <{pstm-100017} Executing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-01-30 18:21:54,367 DEBUG [java.sql.PreparedStatement] - <{pstm-100017} Parameters: [1nyz6mi5biwn6, 管理员, admin, 2018-01-30 18:21:54, 127.0.0.1, 100043, FIREFOX/57.]>
2018-01-30 18:21:54,368 DEBUG [java.sql.PreparedStatement] - <{pstm-100017} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-30 18:21:54,687 DEBUG [java.sql.Connection] - <{conn-100018} Connection>
2018-01-30 18:21:54,688 DEBUG [java.sql.Connection] - <{conn-100018} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:21:54,688 DEBUG [java.sql.PreparedStatement] - <{pstm-100019} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:21:54,688 DEBUG [java.sql.PreparedStatement] - <{pstm-100019} Parameters: [100043]>
2018-01-30 18:21:54,688 DEBUG [java.sql.PreparedStatement] - <{pstm-100019} Types: [java.lang.String]>
2018-01-30 18:21:54,689 DEBUG [java.sql.ResultSet] - <{rset-100020} ResultSet>
2018-01-30 18:21:54,689 DEBUG [java.sql.ResultSet] - <{rset-100020} Header: [theme]>
2018-01-30 18:21:54,689 DEBUG [java.sql.ResultSet] - <{rset-100020} Result: [default]>
2018-01-30 18:21:54,828 DEBUG [java.sql.Connection] - <{conn-100021} Connection>
2018-01-30 18:21:54,828 DEBUG [java.sql.Connection] - <{conn-100021} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:21:54,828 DEBUG [java.sql.PreparedStatement] - <{pstm-100022} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:21:54,829 DEBUG [java.sql.PreparedStatement] - <{pstm-100022} Parameters: [100043]>
2018-01-30 18:21:54,829 DEBUG [java.sql.PreparedStatement] - <{pstm-100022} Types: [java.lang.String]>
2018-01-30 18:21:54,831 DEBUG [java.sql.ResultSet] - <{rset-100023} ResultSet>
2018-01-30 18:21:54,832 DEBUG [java.sql.ResultSet] - <{rset-100023} Header: [menuid, menuname, iconcls]>
2018-01-30 18:21:54,833 DEBUG [java.sql.ResultSet] - <{rset-100023} Result: [0103, 基础信息, null]>
2018-01-30 18:21:54,833 DEBUG [java.sql.ResultSet] - <{rset-100023} Result: [0104, 收费管理, null]>
2018-01-30 18:21:54,833 DEBUG [java.sql.ResultSet] - <{rset-100023} Result: [0105, 统计分析, null]>
2018-01-30 18:21:54,833 DEBUG [java.sql.ResultSet] - <{rset-100023} Result: [0101, 系统管理, null]>
2018-01-30 18:21:54,833 DEBUG [java.sql.Connection] - <{conn-100024} Connection>
2018-01-30 18:21:54,833 DEBUG [java.sql.Connection] - <{conn-100024} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-01-30 18:21:54,834 DEBUG [java.sql.PreparedStatement] - <{pstm-100025} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-01-30 18:21:54,834 DEBUG [java.sql.PreparedStatement] - <{pstm-100025} Parameters: [100043]>
2018-01-30 18:21:54,834 DEBUG [java.sql.PreparedStatement] - <{pstm-100025} Types: [java.lang.String]>
2018-01-30 18:21:54,836 DEBUG [java.sql.ResultSet] - <{rset-100026} ResultSet>
2018-01-30 18:21:54,840 DEBUG [java.sql.Connection] - <{conn-100027} Connection>
2018-01-30 18:21:54,840 DEBUG [java.sql.Connection] - <{conn-100027} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 18:21:54,840 DEBUG [java.sql.PreparedStatement] - <{pstm-100028} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 18:21:54,841 DEBUG [java.sql.PreparedStatement] - <{pstm-100028} Parameters: [001]>
2018-01-30 18:21:54,841 DEBUG [java.sql.PreparedStatement] - <{pstm-100028} Types: [java.lang.String]>
2018-01-30 18:21:54,842 DEBUG [java.sql.ResultSet] - <{rset-100029} ResultSet>
2018-01-30 18:21:54,842 DEBUG [java.sql.ResultSet] - <{rset-100029} Header: [deptid, deptname]>
2018-01-30 18:21:54,842 DEBUG [java.sql.ResultSet] - <{rset-100029} Result: [001, XX供热公司]>
2018-01-30 18:21:54,842 DEBUG [java.sql.Connection] - <{conn-100030} Connection>
2018-01-30 18:21:54,842 DEBUG [java.sql.Connection] - <{conn-100030} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 18:21:54,843 DEBUG [java.sql.PreparedStatement] - <{pstm-100031} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 18:21:54,843 DEBUG [java.sql.PreparedStatement] - <{pstm-100031} Parameters: [001]>
2018-01-30 18:21:54,843 DEBUG [java.sql.PreparedStatement] - <{pstm-100031} Types: [java.lang.String]>
2018-01-30 18:21:54,846 DEBUG [java.sql.ResultSet] - <{rset-100032} ResultSet>
2018-01-30 18:21:54,846 DEBUG [java.sql.ResultSet] - <{rset-100032} Header: [deptid, deptname]>
2018-01-30 18:21:54,846 DEBUG [java.sql.ResultSet] - <{rset-100032} Result: [001, XX供热公司]>
2018-01-30 18:21:54,847 DEBUG [java.sql.Connection] - <{conn-100033} Connection>
2018-01-30 18:21:54,847 DEBUG [java.sql.Connection] - <{conn-100033} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:21:54,847 DEBUG [java.sql.PreparedStatement] - <{pstm-100034} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:21:54,848 DEBUG [java.sql.PreparedStatement] - <{pstm-100034} Parameters: [100043]>
2018-01-30 18:21:54,848 DEBUG [java.sql.PreparedStatement] - <{pstm-100034} Types: [java.lang.String]>
2018-01-30 18:21:54,849 DEBUG [java.sql.ResultSet] - <{rset-100035} ResultSet>
2018-01-30 18:21:54,849 DEBUG [java.sql.ResultSet] - <{rset-100035} Header: [theme]>
2018-01-30 18:21:54,849 DEBUG [java.sql.ResultSet] - <{rset-100035} Result: [default]>
2018-01-30 18:21:54,860 DEBUG [java.sql.Connection] - <{conn-100036} Connection>
2018-01-30 18:21:54,860 DEBUG [java.sql.Connection] - <{conn-100036} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:21:54,860 DEBUG [java.sql.PreparedStatement] - <{pstm-100037} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:21:54,860 DEBUG [java.sql.PreparedStatement] - <{pstm-100037} Parameters: [100043]>
2018-01-30 18:21:54,860 DEBUG [java.sql.PreparedStatement] - <{pstm-100037} Types: [java.lang.String]>
2018-01-30 18:21:54,862 DEBUG [java.sql.ResultSet] - <{rset-100038} ResultSet>
2018-01-30 18:21:54,863 DEBUG [java.sql.ResultSet] - <{rset-100038} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 18:21:54,863 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030404, 新建换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,863 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030403, 删除热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,863 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030406, 删除换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,864 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [010305, 入网管理, null, 0103, module/iw.ered?reqCode=intoWebInit, 0, false, false, tab_blank.png]>
2018-01-30 18:21:54,864 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030405, 修改换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,864 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030401, 新建热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,864 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030201, 选择导入文件, null, 010302, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,864 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030312, 删除面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,865 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [0103, 基础信息, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 18:21:54,866 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030311, 修改面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,867 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030301, 新建小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,868 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030310, 添加面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,868 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [010304, 热源站所管理, null, 0103, module/sr.ered?reqCode=sourceInit, 0, false, false, tab_blank.png]>
2018-01-30 18:21:54,868 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030313, 删除面积1, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,869 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030202, 导入模板下载, null, 010302, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,870 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030501, 新增入网, null, 010305, null, 1, false, true, tab_blank.png]>
2018-01-30 18:21:54,870 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030402, 修改热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,870 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [010303, 基础信息维护, null, 0103, module/fc.ered?reqCode=communityInit, 0, false, false, tab_blank.png]>
2018-01-30 18:21:54,870 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030502, 修改入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,871 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030302, 修改小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,871 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [010302, 基础数据导入, null, 0103, module/importHouse.ered?reqCode=importInit, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,871 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030303, 删除小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,872 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030503, 删除入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,872 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030304, 新建大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,872 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030305, 修改大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,872 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030306, 删除大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,872 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030307, 新建用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,872 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030308, 修改用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,872 DEBUG [java.sql.ResultSet] - <{rset-100038} Result: [01030309, 删除用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,873 DEBUG [java.sql.Connection] - <{conn-100039} Connection>
2018-01-30 18:21:54,873 DEBUG [java.sql.Connection] - <{conn-100039} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 18:21:54,873 DEBUG [java.sql.PreparedStatement] - <{pstm-100040} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 18:21:54,874 DEBUG [java.sql.PreparedStatement] - <{pstm-100040} Parameters: [100043]>
2018-01-30 18:21:54,874 DEBUG [java.sql.PreparedStatement] - <{pstm-100040} Types: [java.lang.String]>
2018-01-30 18:21:54,876 DEBUG [java.sql.ResultSet] - <{rset-100041} ResultSet>
2018-01-30 18:21:54,876 DEBUG [java.sql.Connection] - <{conn-100042} Connection>
2018-01-30 18:21:54,877 DEBUG [java.sql.Connection] - <{conn-100042} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 18:21:54,877 DEBUG [java.sql.PreparedStatement] - <{pstm-100043} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 18:21:54,878 DEBUG [java.sql.PreparedStatement] - <{pstm-100043} Parameters: [01]>
2018-01-30 18:21:54,878 DEBUG [java.sql.PreparedStatement] - <{pstm-100043} Types: [java.lang.String]>
2018-01-30 18:21:54,879 DEBUG [java.sql.ResultSet] - <{rset-100044} ResultSet>
2018-01-30 18:21:54,879 DEBUG [java.sql.ResultSet] - <{rset-100044} Header: [menuname]>
2018-01-30 18:21:54,880 DEBUG [java.sql.ResultSet] - <{rset-100044} Result: [供热收费管理信息系统]>
2018-01-30 18:21:54,900 DEBUG [java.sql.Connection] - <{conn-100045} Connection>
2018-01-30 18:21:54,900 DEBUG [java.sql.Connection] - <{conn-100045} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:21:54,901 DEBUG [java.sql.PreparedStatement] - <{pstm-100046} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:21:54,901 DEBUG [java.sql.PreparedStatement] - <{pstm-100046} Parameters: [100043]>
2018-01-30 18:21:54,901 DEBUG [java.sql.PreparedStatement] - <{pstm-100046} Types: [java.lang.String]>
2018-01-30 18:21:54,903 DEBUG [java.sql.ResultSet] - <{rset-100047} ResultSet>
2018-01-30 18:21:54,903 DEBUG [java.sql.ResultSet] - <{rset-100047} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 18:21:54,904 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [010402, 收费管理, null, 0104, module/chg.ered?reqCode=chargeInit, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,904 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040503, 作废票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,904 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040501, 票据入库, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,904 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040401, 冲账, null, 010404, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,904 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040101, 生成应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,904 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040505, 领用票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,905 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040302, 删除减免, null, 010403, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,905 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040301, 减免应收, null, 010403, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,905 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040502, 删除票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,906 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040201, 收费, null, 010402, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,907 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040102, 删除应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,907 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [01040504, 返还票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,907 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [010401, 生成应收, null, 0104, module/crp.ered?reqCode=creatPlanInit, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,907 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [0104, 收费管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 18:21:54,907 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [010403, 减免管理, null, 0104, module/mns.ered?reqCode=minusInit, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,907 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [010404, 冲账管理, null, 0104, module/rlb.ered?reqCode=rollbackInit, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,907 DEBUG [java.sql.ResultSet] - <{rset-100047} Result: [010405, 票据管理, null, 0104, module/inv.ered?reqCode=invoiceInit, 1, false, false, tab_blank.png]>
2018-01-30 18:21:54,908 DEBUG [java.sql.Connection] - <{conn-100048} Connection>
2018-01-30 18:21:54,908 DEBUG [java.sql.Connection] - <{conn-100048} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 18:21:54,911 DEBUG [java.sql.PreparedStatement] - <{pstm-100049} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 18:21:54,911 DEBUG [java.sql.PreparedStatement] - <{pstm-100049} Parameters: [100043]>
2018-01-30 18:21:54,912 DEBUG [java.sql.PreparedStatement] - <{pstm-100049} Types: [java.lang.String]>
2018-01-30 18:21:54,914 DEBUG [java.sql.ResultSet] - <{rset-100050} ResultSet>
2018-01-30 18:21:54,915 DEBUG [java.sql.Connection] - <{conn-100051} Connection>
2018-01-30 18:21:54,915 DEBUG [java.sql.Connection] - <{conn-100051} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 18:21:54,915 DEBUG [java.sql.PreparedStatement] - <{pstm-100052} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 18:21:54,915 DEBUG [java.sql.PreparedStatement] - <{pstm-100052} Parameters: [01]>
2018-01-30 18:21:54,916 DEBUG [java.sql.PreparedStatement] - <{pstm-100052} Types: [java.lang.String]>
2018-01-30 18:21:54,917 DEBUG [java.sql.ResultSet] - <{rset-100053} ResultSet>
2018-01-30 18:21:54,917 DEBUG [java.sql.ResultSet] - <{rset-100053} Header: [menuname]>
2018-01-30 18:21:54,918 DEBUG [java.sql.ResultSet] - <{rset-100053} Result: [供热收费管理信息系统]>
2018-01-30 18:21:55,034 DEBUG [java.sql.Connection] - <{conn-100054} Connection>
2018-01-30 18:21:55,035 DEBUG [java.sql.Connection] - <{conn-100054} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:21:55,035 DEBUG [java.sql.PreparedStatement] - <{pstm-100055} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:21:55,035 DEBUG [java.sql.PreparedStatement] - <{pstm-100055} Parameters: [100043]>
2018-01-30 18:21:55,035 DEBUG [java.sql.PreparedStatement] - <{pstm-100055} Types: [java.lang.String]>
2018-01-30 18:21:55,038 DEBUG [java.sql.ResultSet] - <{rset-100056} ResultSet>
2018-01-30 18:21:55,039 DEBUG [java.sql.ResultSet] - <{rset-100056} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 18:21:55,039 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [010502, 收费报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-01-30 18:21:55,039 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [010501, 基础报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-01-30 18:21:55,039 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [01050202, 欠费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050201, 1, false, false, tab_blank.png]>
2018-01-30 18:21:55,039 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [01050101, 用户情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=f01050101, 1, false, false, tab_blank.png]>
2018-01-30 18:21:55,039 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [01050102, 入网情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=w01050301, 1, false, false, tab_blank.png]>
2018-01-30 18:21:55,039 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [01050203, 收费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050202, 1, false, false, tab_blank.png]>
2018-01-30 18:21:55,040 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [01050201, 收费情况表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050401, 1, false, false, tab_blank.png]>
2018-01-30 18:21:55,040 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [0105, 统计分析, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 18:21:55,040 DEBUG [java.sql.ResultSet] - <{rset-100056} Result: [01050204, 减免明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050204, 1, false, false, tab_blank.png]>
2018-01-30 18:21:55,040 DEBUG [java.sql.Connection] - <{conn-100057} Connection>
2018-01-30 18:21:55,041 DEBUG [java.sql.Connection] - <{conn-100057} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 18:21:55,049 DEBUG [java.sql.PreparedStatement] - <{pstm-100058} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 18:21:55,049 DEBUG [java.sql.PreparedStatement] - <{pstm-100058} Parameters: [100043]>
2018-01-30 18:21:55,049 DEBUG [java.sql.PreparedStatement] - <{pstm-100058} Types: [java.lang.String]>
2018-01-30 18:21:55,051 DEBUG [java.sql.ResultSet] - <{rset-100059} ResultSet>
2018-01-30 18:21:55,052 DEBUG [java.sql.Connection] - <{conn-100060} Connection>
2018-01-30 18:21:55,052 DEBUG [java.sql.Connection] - <{conn-100060} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 18:21:55,052 DEBUG [java.sql.PreparedStatement] - <{pstm-100061} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 18:21:55,052 DEBUG [java.sql.PreparedStatement] - <{pstm-100061} Parameters: [01]>
2018-01-30 18:21:55,052 DEBUG [java.sql.PreparedStatement] - <{pstm-100061} Types: [java.lang.String]>
2018-01-30 18:21:55,054 DEBUG [java.sql.ResultSet] - <{rset-100062} ResultSet>
2018-01-30 18:21:55,054 DEBUG [java.sql.ResultSet] - <{rset-100062} Header: [menuname]>
2018-01-30 18:21:55,054 DEBUG [java.sql.ResultSet] - <{rset-100062} Result: [供热收费管理信息系统]>
2018-01-30 18:21:55,071 DEBUG [java.sql.Connection] - <{conn-100063} Connection>
2018-01-30 18:21:55,072 DEBUG [java.sql.Connection] - <{conn-100063} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:21:55,072 DEBUG [java.sql.PreparedStatement] - <{pstm-100064} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:21:55,072 DEBUG [java.sql.PreparedStatement] - <{pstm-100064} Parameters: [100043]>
2018-01-30 18:21:55,072 DEBUG [java.sql.PreparedStatement] - <{pstm-100064} Types: [java.lang.String]>
2018-01-30 18:21:55,075 DEBUG [java.sql.ResultSet] - <{rset-100065} ResultSet>
2018-01-30 18:21:55,075 DEBUG [java.sql.ResultSet] - <{rset-100065} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 18:21:55,075 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010305, 优惠设置, server_connectIcon, 010103, module/dic.ered?reqCode=discountInit, 1, false, false, server_connect.png]>
2018-01-30 18:21:55,076 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010304, 收费标准, server_connectIcon, 010103, module/std.ered?reqCode=standardInit, 1, false, false, server_connect.png]>
2018-01-30 18:21:55,076 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [010102, 权限管理, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 18:21:55,076 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010201, 组织机构管理, chart_organisationIcon, 010102, organization.ered?reqCode=departmentInit, 1, false, false, chart_organisation.png]>
2018-01-30 18:21:55,076 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010301, 字典维护, application_view_listIcon, 010103, resource.ered?reqCode=codeTableInit, 1, false, false, application_view_list.png]>
2018-01-30 18:21:55,076 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010403, Requst请求跟踪, server_connectIcon, 010104, eventTrack.ered?reqCode=init, 1, false, false, server_connect.png]>
2018-01-30 18:21:55,076 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010401, Session会话监控, user_commentIcon, 010104, sessionMonitor.ered?reqCode=init, 1, false, false, user_comment.png]>
2018-01-30 18:21:55,077 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010204, 角色管理与授权, award_star_silver_3Icon, 010102, role.ered?reqCode=roleInit, 1, false, false, award_star_silver_3.png]>
2018-01-30 18:21:55,077 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010303, 全局参数表维护, configIcon, 010103, param.ered?reqCode=init, 1, false, false, config.png]>
2018-01-30 18:21:55,078 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [010103, 基础数据维护, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 18:21:55,078 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [010104, 运行监控, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 18:21:55,078 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010202, 人员管理与授权, group_linkIcon, 010102, user.ered?reqCode=userInit, 1, false, false, group_link.png]>
2018-01-30 18:21:55,079 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010405, JDBC执行监控, database_refreshIcon, 010104, jdbcMonitor.ered?reqCode=jdbcInit, 1, false, false, database_refresh.png]>
2018-01-30 18:21:55,079 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010406, Service监控, pluginIcon, 010104, beanMonitor.ered?reqCode=init, 1, false, false, plugin.png]>
2018-01-30 18:21:55,079 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [01010205, 菜单资源管理, layout_contentIcon, 010102, resource.ered?reqCode=menuResourceInit, 1, false, false, layout_content.png]>
2018-01-30 18:21:55,079 DEBUG [java.sql.ResultSet] - <{rset-100065} Result: [0101, 系统管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 18:21:55,079 DEBUG [java.sql.Connection] - <{conn-100066} Connection>
2018-01-30 18:21:55,079 DEBUG [java.sql.Connection] - <{conn-100066} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 18:21:55,080 DEBUG [java.sql.PreparedStatement] - <{pstm-100067} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 18:21:55,080 DEBUG [java.sql.PreparedStatement] - <{pstm-100067} Parameters: [100043]>
2018-01-30 18:21:55,080 DEBUG [java.sql.PreparedStatement] - <{pstm-100067} Types: [java.lang.String]>
2018-01-30 18:21:55,082 DEBUG [java.sql.ResultSet] - <{rset-100068} ResultSet>
2018-01-30 18:21:55,082 DEBUG [java.sql.Connection] - <{conn-100069} Connection>
2018-01-30 18:21:55,083 DEBUG [java.sql.Connection] - <{conn-100069} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 18:21:55,083 DEBUG [java.sql.PreparedStatement] - <{pstm-100070} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 18:21:55,083 DEBUG [java.sql.PreparedStatement] - <{pstm-100070} Parameters: [01]>
2018-01-30 18:21:55,083 DEBUG [java.sql.PreparedStatement] - <{pstm-100070} Types: [java.lang.String]>
2018-01-30 18:21:55,084 DEBUG [java.sql.ResultSet] - <{rset-100071} ResultSet>
2018-01-30 18:21:55,085 DEBUG [java.sql.ResultSet] - <{rset-100071} Header: [menuname]>
2018-01-30 18:21:55,085 DEBUG [java.sql.ResultSet] - <{rset-100071} Result: [供热收费管理信息系统]>
2018-01-30 18:21:55,688 DEBUG [java.sql.Connection] - <{conn-100072} Connection>
2018-01-30 18:21:55,688 DEBUG [java.sql.Connection] - <{conn-100072} Preparing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-01-30 18:21:55,689 DEBUG [java.sql.PreparedStatement] - <{pstm-100073} Executing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-01-30 18:21:55,689 DEBUG [java.sql.PreparedStatement] - <{pstm-100073} Parameters: []>
2018-01-30 18:21:55,689 DEBUG [java.sql.PreparedStatement] - <{pstm-100073} Types: []>
2018-01-30 18:21:55,690 DEBUG [java.sql.ResultSet] - <{rset-100074} ResultSet>
2018-01-30 18:21:55,691 DEBUG [java.sql.ResultSet] - <{rset-100074} Header: [id, text, child_count]>
2018-01-30 18:21:55,691 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0101, 0101 经贸局家属楼 (3), 3]>
2018-01-30 18:21:55,691 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0102, 0102 法院家属楼 (2), 2]>
2018-01-30 18:21:55,691 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0103, 0103 长治县电视台 (1), 1]>
2018-01-30 18:21:55,691 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0104, 0104 广播北二巷（一至三排） (1), 1]>
2018-01-30 18:21:55,691 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0105, 0105 广播南二巷（公安家属西五排） (1), 1]>
2018-01-30 18:21:55,691 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0106, 0106 广播北四巷第一组（南6户） (1), 1]>
2018-01-30 18:21:55,692 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0107, 0107 广播北四巷第一组（北19户） (1), 1]>
2018-01-30 18:21:55,692 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0108, 0108 广播北四巷第二组（16户） (1), 1]>
2018-01-30 18:21:55,692 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0109, 0109 工业巷北一排-北八排 (1), 1]>
2018-01-30 18:21:55,693 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0110, 0110 法院家属院17户 (1), 1]>
2018-01-30 18:21:55,693 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0111, 0111 公安西家属区60户 (1), 1]>
2018-01-30 18:21:55,693 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0112, 0112 建筑工程公司 (2), 2]>
2018-01-30 18:21:55,693 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0113, 0113 工会家属楼 (1), 1]>
2018-01-30 18:21:55,693 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0114, 0114 工会二层独院5户 (1), 1]>
2018-01-30 18:21:55,693 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0115, 0115 政府平房南一排 (2), 2]>
2018-01-30 18:21:55,694 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0116, 0116 政府平房南二排6户 (1), 1]>
2018-01-30 18:21:55,694 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0117, 0117 政府平房南三排5户 (1), 1]>
2018-01-30 18:21:55,694 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0118, 0118 政府平房南四排4户 (1), 1]>
2018-01-30 18:21:55,694 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0119, 0119 政府平房南五排5户（北二排） (1), 1]>
2018-01-30 18:21:55,695 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0120, 0120 政府平房南六排5户（北一排） (1), 1]>
2018-01-30 18:21:55,695 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0121, 0121 政府平房后六户 (1), 1]>
2018-01-30 18:21:55,695 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0122, 0122 政府第三家属楼32户 (1), 1]>
2018-01-30 18:21:55,695 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0123, 0123 政府黄楼家属区 (1), 1]>
2018-01-30 18:21:55,695 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0124, 0124 五交化家属楼 (2), 2]>
2018-01-30 18:21:55,696 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0125, 0125 通达供销公司综合楼 (1), 1]>
2018-01-30 18:21:55,696 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0126, 0126 供销联社家属楼 (3), 3]>
2018-01-30 18:21:55,696 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [0127, 0127 二轻局底商 (1), 1]>
2018-01-30 18:21:55,696 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [2001, 2001 南董村西南一巷 (1), 1]>
2018-01-30 18:21:55,696 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [2002, 2002 南董村正街路北 (1), 1]>
2018-01-30 18:21:55,697 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [2003, 2003 南董村正街路南 (1), 1]>
2018-01-30 18:21:55,697 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [2004, 2004 南董村西散户 (1), 1]>
2018-01-30 18:21:55,698 DEBUG [java.sql.ResultSet] - <{rset-100074} Result: [2005, 2005 伍龙小区 (3), 3]>
2018-01-30 18:21:55,899 DEBUG [java.sql.Connection] - <{conn-100075} Connection>
2018-01-30 18:21:55,900 DEBUG [java.sql.Connection] - <{conn-100075} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:21:55,900 DEBUG [java.sql.PreparedStatement] - <{pstm-100076} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:21:55,901 DEBUG [java.sql.PreparedStatement] - <{pstm-100076} Parameters: [100043]>
2018-01-30 18:21:55,901 DEBUG [java.sql.PreparedStatement] - <{pstm-100076} Types: [java.lang.String]>
2018-01-30 18:21:55,902 DEBUG [java.sql.ResultSet] - <{rset-100077} ResultSet>
2018-01-30 18:21:55,902 DEBUG [java.sql.ResultSet] - <{rset-100077} Header: [theme]>
2018-01-30 18:21:55,902 DEBUG [java.sql.ResultSet] - <{rset-100077} Result: [default]>
2018-01-30 18:22:31,814 DEBUG [java.sql.Connection] - <{conn-100078} Connection>
2018-01-30 18:22:31,814 DEBUG [java.sql.Connection] - <{conn-100078} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:22:31,814 DEBUG [java.sql.PreparedStatement] - <{pstm-100079} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:22:31,814 DEBUG [java.sql.PreparedStatement] - <{pstm-100079} Parameters: [100043]>
2018-01-30 18:22:31,815 DEBUG [java.sql.PreparedStatement] - <{pstm-100079} Types: [java.lang.String]>
2018-01-30 18:22:31,816 DEBUG [java.sql.ResultSet] - <{rset-100080} ResultSet>
2018-01-30 18:22:31,816 DEBUG [java.sql.ResultSet] - <{rset-100080} Header: [theme]>
2018-01-30 18:22:31,816 DEBUG [java.sql.ResultSet] - <{rset-100080} Result: [default]>
2018-01-30 18:22:32,309 DEBUG [java.sql.Connection] - <{conn-100081} Connection>
2018-01-30 18:22:32,310 DEBUG [java.sql.Connection] - <{conn-100081} Preparing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-30 18:22:32,310 DEBUG [java.sql.PreparedStatement] - <{pstm-100082} Executing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-30 18:22:32,310 DEBUG [java.sql.PreparedStatement] - <{pstm-100082} Parameters: []>
2018-01-30 18:22:32,310 DEBUG [java.sql.PreparedStatement] - <{pstm-100082} Types: []>
2018-01-30 18:22:32,311 DEBUG [java.sql.ResultSet] - <{rset-100083} ResultSet>
2018-01-30 18:22:32,312 DEBUG [java.sql.ResultSet] - <{rset-100083} Header: [value, text]>
2018-01-30 18:22:32,312 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [A, 供热费]>
2018-01-30 18:22:32,312 DEBUG [java.sql.ResultSet] - <{rset-100083} Result: [B, 入网费]>
2018-01-30 18:22:32,315 DEBUG [java.sql.Connection] - <{conn-100084} Connection>
2018-01-30 18:22:32,316 DEBUG [java.sql.Connection] - <{conn-100084} Preparing Statement:   SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD') currentDate FROM DUAL  >
2018-01-30 18:22:32,316 DEBUG [java.sql.PreparedStatement] - <{pstm-100085} Executing Statement:   SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD') currentDate FROM DUAL  >
2018-01-30 18:22:32,316 DEBUG [java.sql.PreparedStatement] - <{pstm-100085} Parameters: []>
2018-01-30 18:22:32,316 DEBUG [java.sql.PreparedStatement] - <{pstm-100085} Types: []>
2018-01-30 18:22:32,317 DEBUG [java.sql.ResultSet] - <{rset-100086} ResultSet>
2018-01-30 18:22:32,317 DEBUG [java.sql.ResultSet] - <{rset-100086} Header: [currentdate]>
2018-01-30 18:22:32,317 DEBUG [java.sql.ResultSet] - <{rset-100086} Result: [2018-01-30]>
2018-01-30 18:22:34,124 DEBUG [java.sql.Connection] - <{conn-100087} Connection>
2018-01-30 18:22:34,125 DEBUG [java.sql.Connection] - <{conn-100087} Preparing Statement:    select pay_mode,count(house_code) house_count,   sum(real_charge) real_charge,sum(nvl(LATEFEE_REALCHARGE,0)) latefee_realcharge    from (   select     b.bill_date ,        e.community_name,     b.community_code,     b.building_code,     b.house_code,        b.owner_name,        b.charge_price,      b.charge_area,      b.USE_PREPAY,       b.PAY_MODE,       f.invoice_code,       f.invoice_number,     c.userName operatorName,     b.operator,       b.operate_date,      b.item_code,      b.charge_type,      case when b.charge_month='0' then '' else b.charge_month end as charge_month,       b.real_charge ,     case when g.status='2' then 1 else 0 end cancelCount,b.LATEFEE_REALCHARGE   from      SF_DETAIL b,EAUSER c,SF_ITEM d,FC_COMMUNITY e,SF_INVOICEUSE f,sf_invoice g   where      b.community_code=e.community_code     and b.operator=c.userid     and b.item_code=d.item_code     and b.b_id=f.b_id(+)     and b.rollback_flag='0'     and f.invoice_code=g.invoice_code(+)     and f.invoice_number=g.invoice_number(+)     and f.item_code=g.item_code(+)     and f.invoice_type=g.invoice_type(+)    ) a  where 1=1      AND          operate_date>='2018-01-30 00:00:00'      AND          operate_date<='2018-01-30 23:59:59'               group by pay_mode  >
2018-01-30 18:22:34,125 DEBUG [java.sql.PreparedStatement] - <{pstm-100088} Executing Statement:    select pay_mode,count(house_code) house_count,   sum(real_charge) real_charge,sum(nvl(LATEFEE_REALCHARGE,0)) latefee_realcharge    from (   select     b.bill_date ,        e.community_name,     b.community_code,     b.building_code,     b.house_code,        b.owner_name,        b.charge_price,      b.charge_area,      b.USE_PREPAY,       b.PAY_MODE,       f.invoice_code,       f.invoice_number,     c.userName operatorName,     b.operator,       b.operate_date,      b.item_code,      b.charge_type,      case when b.charge_month='0' then '' else b.charge_month end as charge_month,       b.real_charge ,     case when g.status='2' then 1 else 0 end cancelCount,b.LATEFEE_REALCHARGE   from      SF_DETAIL b,EAUSER c,SF_ITEM d,FC_COMMUNITY e,SF_INVOICEUSE f,sf_invoice g   where      b.community_code=e.community_code     and b.operator=c.userid     and b.item_code=d.item_code     and b.b_id=f.b_id(+)     and b.rollback_flag='0'     and f.invoice_code=g.invoice_code(+)     and f.invoice_number=g.invoice_number(+)     and f.item_code=g.item_code(+)     and f.invoice_type=g.invoice_type(+)    ) a  where 1=1      AND          operate_date>='2018-01-30 00:00:00'      AND          operate_date<='2018-01-30 23:59:59'               group by pay_mode  >
2018-01-30 18:22:34,125 DEBUG [java.sql.PreparedStatement] - <{pstm-100088} Parameters: []>
2018-01-30 18:22:34,125 DEBUG [java.sql.PreparedStatement] - <{pstm-100088} Types: []>
2018-01-30 18:22:34,170 DEBUG [java.sql.ResultSet] - <{rset-100089} ResultSet>
2018-01-30 18:22:34,170 DEBUG [java.sql.ResultSet] - <{rset-100089} Header: [pay_mode, house_count, real_charge, latefee_realcharge]>
2018-01-30 18:22:34,170 DEBUG [java.sql.ResultSet] - <{rset-100089} Result: [现金, 1, 2800.28, 1.05]>
2018-01-30 18:22:53,096 DEBUG [java.sql.Connection] - <{conn-100090} Connection>
2018-01-30 18:22:53,096 DEBUG [java.sql.Connection] - <{conn-100090} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:22:53,096 DEBUG [java.sql.PreparedStatement] - <{pstm-100091} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:22:53,096 DEBUG [java.sql.PreparedStatement] - <{pstm-100091} Parameters: [100043]>
2018-01-30 18:22:53,097 DEBUG [java.sql.PreparedStatement] - <{pstm-100091} Types: [java.lang.String]>
2018-01-30 18:22:53,098 DEBUG [java.sql.ResultSet] - <{rset-100092} ResultSet>
2018-01-30 18:22:53,098 DEBUG [java.sql.ResultSet] - <{rset-100092} Header: [theme]>
2018-01-30 18:22:53,098 DEBUG [java.sql.ResultSet] - <{rset-100092} Result: [default]>
2018-01-30 18:22:53,262 DEBUG [java.sql.Connection] - <{conn-100093} Connection>
2018-01-30 18:22:53,262 DEBUG [java.sql.Connection] - <{conn-100093} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:22:53,263 DEBUG [java.sql.PreparedStatement] - <{pstm-100094} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:22:53,263 DEBUG [java.sql.PreparedStatement] - <{pstm-100094} Parameters: [100043]>
2018-01-30 18:22:53,263 DEBUG [java.sql.PreparedStatement] - <{pstm-100094} Types: [java.lang.String]>
2018-01-30 18:22:53,266 DEBUG [java.sql.ResultSet] - <{rset-100095} ResultSet>
2018-01-30 18:22:53,266 DEBUG [java.sql.ResultSet] - <{rset-100095} Header: [menuid, menuname, iconcls]>
2018-01-30 18:22:53,266 DEBUG [java.sql.ResultSet] - <{rset-100095} Result: [0103, 基础信息, null]>
2018-01-30 18:22:53,267 DEBUG [java.sql.ResultSet] - <{rset-100095} Result: [0104, 收费管理, null]>
2018-01-30 18:22:53,267 DEBUG [java.sql.ResultSet] - <{rset-100095} Result: [0105, 统计分析, null]>
2018-01-30 18:22:53,267 DEBUG [java.sql.ResultSet] - <{rset-100095} Result: [0101, 系统管理, null]>
2018-01-30 18:22:53,267 DEBUG [java.sql.Connection] - <{conn-100096} Connection>
2018-01-30 18:22:53,267 DEBUG [java.sql.Connection] - <{conn-100096} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-01-30 18:22:53,268 DEBUG [java.sql.PreparedStatement] - <{pstm-100097} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-01-30 18:22:53,268 DEBUG [java.sql.PreparedStatement] - <{pstm-100097} Parameters: [100043]>
2018-01-30 18:22:53,268 DEBUG [java.sql.PreparedStatement] - <{pstm-100097} Types: [java.lang.String]>
2018-01-30 18:22:53,269 DEBUG [java.sql.ResultSet] - <{rset-100098} ResultSet>
2018-01-30 18:22:53,271 DEBUG [java.sql.Connection] - <{conn-100099} Connection>
2018-01-30 18:22:53,272 DEBUG [java.sql.Connection] - <{conn-100099} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 18:22:53,272 DEBUG [java.sql.PreparedStatement] - <{pstm-100100} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 18:22:53,272 DEBUG [java.sql.PreparedStatement] - <{pstm-100100} Parameters: [001]>
2018-01-30 18:22:53,272 DEBUG [java.sql.PreparedStatement] - <{pstm-100100} Types: [java.lang.String]>
2018-01-30 18:22:53,273 DEBUG [java.sql.ResultSet] - <{rset-100101} ResultSet>
2018-01-30 18:22:53,273 DEBUG [java.sql.ResultSet] - <{rset-100101} Header: [deptid, deptname]>
2018-01-30 18:22:53,274 DEBUG [java.sql.ResultSet] - <{rset-100101} Result: [001, XX供热公司]>
2018-01-30 18:22:53,274 DEBUG [java.sql.Connection] - <{conn-100102} Connection>
2018-01-30 18:22:53,274 DEBUG [java.sql.Connection] - <{conn-100102} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 18:22:53,274 DEBUG [java.sql.PreparedStatement] - <{pstm-100103} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-30 18:22:53,274 DEBUG [java.sql.PreparedStatement] - <{pstm-100103} Parameters: [001]>
2018-01-30 18:22:53,274 DEBUG [java.sql.PreparedStatement] - <{pstm-100103} Types: [java.lang.String]>
2018-01-30 18:22:53,275 DEBUG [java.sql.ResultSet] - <{rset-100104} ResultSet>
2018-01-30 18:22:53,275 DEBUG [java.sql.ResultSet] - <{rset-100104} Header: [deptid, deptname]>
2018-01-30 18:22:53,275 DEBUG [java.sql.ResultSet] - <{rset-100104} Result: [001, XX供热公司]>
2018-01-30 18:22:53,276 DEBUG [java.sql.Connection] - <{conn-100105} Connection>
2018-01-30 18:22:53,276 DEBUG [java.sql.Connection] - <{conn-100105} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:22:53,277 DEBUG [java.sql.PreparedStatement] - <{pstm-100106} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:22:53,277 DEBUG [java.sql.PreparedStatement] - <{pstm-100106} Parameters: [100043]>
2018-01-30 18:22:53,277 DEBUG [java.sql.PreparedStatement] - <{pstm-100106} Types: [java.lang.String]>
2018-01-30 18:22:53,278 DEBUG [java.sql.ResultSet] - <{rset-100107} ResultSet>
2018-01-30 18:22:53,278 DEBUG [java.sql.ResultSet] - <{rset-100107} Header: [theme]>
2018-01-30 18:22:53,278 DEBUG [java.sql.ResultSet] - <{rset-100107} Result: [default]>
2018-01-30 18:22:53,286 DEBUG [java.sql.Connection] - <{conn-100108} Connection>
2018-01-30 18:22:53,286 DEBUG [java.sql.Connection] - <{conn-100108} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:22:53,286 DEBUG [java.sql.PreparedStatement] - <{pstm-100109} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:22:53,286 DEBUG [java.sql.PreparedStatement] - <{pstm-100109} Parameters: [100043]>
2018-01-30 18:22:53,286 DEBUG [java.sql.PreparedStatement] - <{pstm-100109} Types: [java.lang.String]>
2018-01-30 18:22:53,288 DEBUG [java.sql.ResultSet] - <{rset-100110} ResultSet>
2018-01-30 18:22:53,288 DEBUG [java.sql.ResultSet] - <{rset-100110} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 18:22:53,288 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [01030404, 新建换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,289 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [01030403, 删除热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,289 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [01030406, 删除换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,289 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [010305, 入网管理, null, 0103, module/iw.ered?reqCode=intoWebInit, 0, false, false, tab_blank.png]>
2018-01-30 18:22:53,289 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [01030405, 修改换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,289 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [01030401, 新建热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,289 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [01030201, 选择导入文件, null, 010302, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,289 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [01030312, 删除面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,289 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [0103, 基础信息, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 18:22:53,290 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [01030311, 修改面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,290 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [01030301, 新建小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,290 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [01030310, 添加面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,290 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [010304, 热源站所管理, null, 0103, module/sr.ered?reqCode=sourceInit, 0, false, false, tab_blank.png]>
2018-01-30 18:22:53,290 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [01030313, 删除面积1, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,290 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [01030202, 导入模板下载, null, 010302, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,290 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [01030501, 新增入网, null, 010305, null, 1, false, true, tab_blank.png]>
2018-01-30 18:22:53,291 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [01030402, 修改热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,291 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [010303, 基础信息维护, null, 0103, module/fc.ered?reqCode=communityInit, 0, false, false, tab_blank.png]>
2018-01-30 18:22:53,291 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [01030502, 修改入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,292 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [01030302, 修改小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,292 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [010302, 基础数据导入, null, 0103, module/importHouse.ered?reqCode=importInit, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,292 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [01030303, 删除小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,293 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [01030503, 删除入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,293 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [01030304, 新建大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,293 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [01030305, 修改大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,293 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [01030306, 删除大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,293 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [01030307, 新建用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,293 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [01030308, 修改用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,294 DEBUG [java.sql.ResultSet] - <{rset-100110} Result: [01030309, 删除用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,294 DEBUG [java.sql.Connection] - <{conn-100111} Connection>
2018-01-30 18:22:53,294 DEBUG [java.sql.Connection] - <{conn-100111} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 18:22:53,294 DEBUG [java.sql.PreparedStatement] - <{pstm-100112} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 18:22:53,295 DEBUG [java.sql.PreparedStatement] - <{pstm-100112} Parameters: [100043]>
2018-01-30 18:22:53,295 DEBUG [java.sql.PreparedStatement] - <{pstm-100112} Types: [java.lang.String]>
2018-01-30 18:22:53,296 DEBUG [java.sql.ResultSet] - <{rset-100113} ResultSet>
2018-01-30 18:22:53,299 DEBUG [java.sql.Connection] - <{conn-100114} Connection>
2018-01-30 18:22:53,300 DEBUG [java.sql.Connection] - <{conn-100114} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 18:22:53,300 DEBUG [java.sql.PreparedStatement] - <{pstm-100115} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 18:22:53,300 DEBUG [java.sql.PreparedStatement] - <{pstm-100115} Parameters: [01]>
2018-01-30 18:22:53,300 DEBUG [java.sql.PreparedStatement] - <{pstm-100115} Types: [java.lang.String]>
2018-01-30 18:22:53,301 DEBUG [java.sql.ResultSet] - <{rset-100116} ResultSet>
2018-01-30 18:22:53,301 DEBUG [java.sql.ResultSet] - <{rset-100116} Header: [menuname]>
2018-01-30 18:22:53,301 DEBUG [java.sql.ResultSet] - <{rset-100116} Result: [供热收费管理信息系统]>
2018-01-30 18:22:53,313 DEBUG [java.sql.Connection] - <{conn-100117} Connection>
2018-01-30 18:22:53,313 DEBUG [java.sql.Connection] - <{conn-100117} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:22:53,313 DEBUG [java.sql.PreparedStatement] - <{pstm-100118} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:22:53,313 DEBUG [java.sql.PreparedStatement] - <{pstm-100118} Parameters: [100043]>
2018-01-30 18:22:53,313 DEBUG [java.sql.PreparedStatement] - <{pstm-100118} Types: [java.lang.String]>
2018-01-30 18:22:53,316 DEBUG [java.sql.ResultSet] - <{rset-100119} ResultSet>
2018-01-30 18:22:53,316 DEBUG [java.sql.ResultSet] - <{rset-100119} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 18:22:53,317 DEBUG [java.sql.ResultSet] - <{rset-100119} Result: [010402, 收费管理, null, 0104, module/chg.ered?reqCode=chargeInit, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,317 DEBUG [java.sql.ResultSet] - <{rset-100119} Result: [01040503, 作废票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,317 DEBUG [java.sql.ResultSet] - <{rset-100119} Result: [01040501, 票据入库, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,317 DEBUG [java.sql.ResultSet] - <{rset-100119} Result: [01040401, 冲账, null, 010404, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,317 DEBUG [java.sql.ResultSet] - <{rset-100119} Result: [01040101, 生成应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,318 DEBUG [java.sql.ResultSet] - <{rset-100119} Result: [01040505, 领用票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,318 DEBUG [java.sql.ResultSet] - <{rset-100119} Result: [01040302, 删除减免, null, 010403, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,319 DEBUG [java.sql.ResultSet] - <{rset-100119} Result: [01040301, 减免应收, null, 010403, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,319 DEBUG [java.sql.ResultSet] - <{rset-100119} Result: [01040502, 删除票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,320 DEBUG [java.sql.ResultSet] - <{rset-100119} Result: [01040201, 收费, null, 010402, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,320 DEBUG [java.sql.ResultSet] - <{rset-100119} Result: [01040102, 删除应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,320 DEBUG [java.sql.ResultSet] - <{rset-100119} Result: [01040504, 返还票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,320 DEBUG [java.sql.ResultSet] - <{rset-100119} Result: [010401, 生成应收, null, 0104, module/crp.ered?reqCode=creatPlanInit, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,321 DEBUG [java.sql.ResultSet] - <{rset-100119} Result: [0104, 收费管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 18:22:53,321 DEBUG [java.sql.ResultSet] - <{rset-100119} Result: [010403, 减免管理, null, 0104, module/mns.ered?reqCode=minusInit, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,321 DEBUG [java.sql.ResultSet] - <{rset-100119} Result: [010404, 冲账管理, null, 0104, module/rlb.ered?reqCode=rollbackInit, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,321 DEBUG [java.sql.ResultSet] - <{rset-100119} Result: [010405, 票据管理, null, 0104, module/inv.ered?reqCode=invoiceInit, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,321 DEBUG [java.sql.Connection] - <{conn-100120} Connection>
2018-01-30 18:22:53,322 DEBUG [java.sql.Connection] - <{conn-100120} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 18:22:53,322 DEBUG [java.sql.PreparedStatement] - <{pstm-100121} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 18:22:53,322 DEBUG [java.sql.PreparedStatement] - <{pstm-100121} Parameters: [100043]>
2018-01-30 18:22:53,322 DEBUG [java.sql.PreparedStatement] - <{pstm-100121} Types: [java.lang.String]>
2018-01-30 18:22:53,324 DEBUG [java.sql.ResultSet] - <{rset-100122} ResultSet>
2018-01-30 18:22:53,324 DEBUG [java.sql.Connection] - <{conn-100123} Connection>
2018-01-30 18:22:53,327 DEBUG [java.sql.Connection] - <{conn-100123} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 18:22:53,327 DEBUG [java.sql.PreparedStatement] - <{pstm-100124} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 18:22:53,328 DEBUG [java.sql.PreparedStatement] - <{pstm-100124} Parameters: [01]>
2018-01-30 18:22:53,328 DEBUG [java.sql.PreparedStatement] - <{pstm-100124} Types: [java.lang.String]>
2018-01-30 18:22:53,329 DEBUG [java.sql.ResultSet] - <{rset-100125} ResultSet>
2018-01-30 18:22:53,329 DEBUG [java.sql.ResultSet] - <{rset-100125} Header: [menuname]>
2018-01-30 18:22:53,329 DEBUG [java.sql.ResultSet] - <{rset-100125} Result: [供热收费管理信息系统]>
2018-01-30 18:22:53,339 DEBUG [java.sql.Connection] - <{conn-100126} Connection>
2018-01-30 18:22:53,340 DEBUG [java.sql.Connection] - <{conn-100126} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:22:53,340 DEBUG [java.sql.PreparedStatement] - <{pstm-100127} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:22:53,340 DEBUG [java.sql.PreparedStatement] - <{pstm-100127} Parameters: [100043]>
2018-01-30 18:22:53,340 DEBUG [java.sql.PreparedStatement] - <{pstm-100127} Types: [java.lang.String]>
2018-01-30 18:22:53,342 DEBUG [java.sql.ResultSet] - <{rset-100128} ResultSet>
2018-01-30 18:22:53,342 DEBUG [java.sql.ResultSet] - <{rset-100128} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 18:22:53,342 DEBUG [java.sql.ResultSet] - <{rset-100128} Result: [010502, 收费报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-01-30 18:22:53,342 DEBUG [java.sql.ResultSet] - <{rset-100128} Result: [010501, 基础报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-01-30 18:22:53,343 DEBUG [java.sql.ResultSet] - <{rset-100128} Result: [01050202, 欠费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050201, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,343 DEBUG [java.sql.ResultSet] - <{rset-100128} Result: [01050101, 用户情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=f01050101, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,343 DEBUG [java.sql.ResultSet] - <{rset-100128} Result: [01050102, 入网情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=w01050301, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,343 DEBUG [java.sql.ResultSet] - <{rset-100128} Result: [01050203, 收费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050202, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,343 DEBUG [java.sql.ResultSet] - <{rset-100128} Result: [01050201, 收费情况表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050401, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,343 DEBUG [java.sql.ResultSet] - <{rset-100128} Result: [0105, 统计分析, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 18:22:53,343 DEBUG [java.sql.ResultSet] - <{rset-100128} Result: [01050204, 减免明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050204, 1, false, false, tab_blank.png]>
2018-01-30 18:22:53,344 DEBUG [java.sql.Connection] - <{conn-100129} Connection>
2018-01-30 18:22:53,344 DEBUG [java.sql.Connection] - <{conn-100129} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 18:22:53,344 DEBUG [java.sql.PreparedStatement] - <{pstm-100130} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 18:22:53,344 DEBUG [java.sql.PreparedStatement] - <{pstm-100130} Parameters: [100043]>
2018-01-30 18:22:53,344 DEBUG [java.sql.PreparedStatement] - <{pstm-100130} Types: [java.lang.String]>
2018-01-30 18:22:53,346 DEBUG [java.sql.ResultSet] - <{rset-100131} ResultSet>
2018-01-30 18:22:53,346 DEBUG [java.sql.Connection] - <{conn-100132} Connection>
2018-01-30 18:22:53,347 DEBUG [java.sql.Connection] - <{conn-100132} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 18:22:53,347 DEBUG [java.sql.PreparedStatement] - <{pstm-100133} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 18:22:53,347 DEBUG [java.sql.PreparedStatement] - <{pstm-100133} Parameters: [01]>
2018-01-30 18:22:53,347 DEBUG [java.sql.PreparedStatement] - <{pstm-100133} Types: [java.lang.String]>
2018-01-30 18:22:53,348 DEBUG [java.sql.ResultSet] - <{rset-100134} ResultSet>
2018-01-30 18:22:53,348 DEBUG [java.sql.ResultSet] - <{rset-100134} Header: [menuname]>
2018-01-30 18:22:53,348 DEBUG [java.sql.ResultSet] - <{rset-100134} Result: [供热收费管理信息系统]>
2018-01-30 18:22:53,358 DEBUG [java.sql.Connection] - <{conn-100135} Connection>
2018-01-30 18:22:53,359 DEBUG [java.sql.Connection] - <{conn-100135} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:22:53,359 DEBUG [java.sql.PreparedStatement] - <{pstm-100136} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-30 18:22:53,359 DEBUG [java.sql.PreparedStatement] - <{pstm-100136} Parameters: [100043]>
2018-01-30 18:22:53,359 DEBUG [java.sql.PreparedStatement] - <{pstm-100136} Types: [java.lang.String]>
2018-01-30 18:22:53,361 DEBUG [java.sql.ResultSet] - <{rset-100137} ResultSet>
2018-01-30 18:22:53,361 DEBUG [java.sql.ResultSet] - <{rset-100137} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-30 18:22:53,361 DEBUG [java.sql.ResultSet] - <{rset-100137} Result: [01010305, 优惠设置, server_connectIcon, 010103, module/dic.ered?reqCode=discountInit, 1, false, false, server_connect.png]>
2018-01-30 18:22:53,361 DEBUG [java.sql.ResultSet] - <{rset-100137} Result: [01010304, 收费标准, server_connectIcon, 010103, module/std.ered?reqCode=standardInit, 1, false, false, server_connect.png]>
2018-01-30 18:22:53,361 DEBUG [java.sql.ResultSet] - <{rset-100137} Result: [010102, 权限管理, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 18:22:53,362 DEBUG [java.sql.ResultSet] - <{rset-100137} Result: [01010201, 组织机构管理, chart_organisationIcon, 010102, organization.ered?reqCode=departmentInit, 1, false, false, chart_organisation.png]>
2018-01-30 18:22:53,362 DEBUG [java.sql.ResultSet] - <{rset-100137} Result: [01010301, 字典维护, application_view_listIcon, 010103, resource.ered?reqCode=codeTableInit, 1, false, false, application_view_list.png]>
2018-01-30 18:22:53,362 DEBUG [java.sql.ResultSet] - <{rset-100137} Result: [01010403, Requst请求跟踪, server_connectIcon, 010104, eventTrack.ered?reqCode=init, 1, false, false, server_connect.png]>
2018-01-30 18:22:53,362 DEBUG [java.sql.ResultSet] - <{rset-100137} Result: [01010401, Session会话监控, user_commentIcon, 010104, sessionMonitor.ered?reqCode=init, 1, false, false, user_comment.png]>
2018-01-30 18:22:53,362 DEBUG [java.sql.ResultSet] - <{rset-100137} Result: [01010204, 角色管理与授权, award_star_silver_3Icon, 010102, role.ered?reqCode=roleInit, 1, false, false, award_star_silver_3.png]>
2018-01-30 18:22:53,362 DEBUG [java.sql.ResultSet] - <{rset-100137} Result: [01010303, 全局参数表维护, configIcon, 010103, param.ered?reqCode=init, 1, false, false, config.png]>
2018-01-30 18:22:53,363 DEBUG [java.sql.ResultSet] - <{rset-100137} Result: [010103, 基础数据维护, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 18:22:53,363 DEBUG [java.sql.ResultSet] - <{rset-100137} Result: [010104, 运行监控, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-30 18:22:53,364 DEBUG [java.sql.ResultSet] - <{rset-100137} Result: [01010202, 人员管理与授权, group_linkIcon, 010102, user.ered?reqCode=userInit, 1, false, false, group_link.png]>
2018-01-30 18:22:53,364 DEBUG [java.sql.ResultSet] - <{rset-100137} Result: [01010405, JDBC执行监控, database_refreshIcon, 010104, jdbcMonitor.ered?reqCode=jdbcInit, 1, false, false, database_refresh.png]>
2018-01-30 18:22:53,364 DEBUG [java.sql.ResultSet] - <{rset-100137} Result: [01010406, Service监控, pluginIcon, 010104, beanMonitor.ered?reqCode=init, 1, false, false, plugin.png]>
2018-01-30 18:22:53,364 DEBUG [java.sql.ResultSet] - <{rset-100137} Result: [01010205, 菜单资源管理, layout_contentIcon, 010102, resource.ered?reqCode=menuResourceInit, 1, false, false, layout_content.png]>
2018-01-30 18:22:53,364 DEBUG [java.sql.ResultSet] - <{rset-100137} Result: [0101, 系统管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-30 18:22:53,365 DEBUG [java.sql.Connection] - <{conn-100138} Connection>
2018-01-30 18:22:53,366 DEBUG [java.sql.Connection] - <{conn-100138} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 18:22:53,366 DEBUG [java.sql.PreparedStatement] - <{pstm-100139} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-30 18:22:53,366 DEBUG [java.sql.PreparedStatement] - <{pstm-100139} Parameters: [100043]>
2018-01-30 18:22:53,366 DEBUG [java.sql.PreparedStatement] - <{pstm-100139} Types: [java.lang.String]>
2018-01-30 18:22:53,368 DEBUG [java.sql.ResultSet] - <{rset-100140} ResultSet>
2018-01-30 18:22:53,369 DEBUG [java.sql.Connection] - <{conn-100141} Connection>
2018-01-30 18:22:53,369 DEBUG [java.sql.Connection] - <{conn-100141} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 18:22:53,370 DEBUG [java.sql.PreparedStatement] - <{pstm-100142} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-30 18:22:53,370 DEBUG [java.sql.PreparedStatement] - <{pstm-100142} Parameters: [01]>
2018-01-30 18:22:53,370 DEBUG [java.sql.PreparedStatement] - <{pstm-100142} Types: [java.lang.String]>
2018-01-30 18:22:53,371 DEBUG [java.sql.ResultSet] - <{rset-100143} ResultSet>
2018-01-30 18:22:53,371 DEBUG [java.sql.ResultSet] - <{rset-100143} Header: [menuname]>
2018-01-30 18:22:53,372 DEBUG [java.sql.ResultSet] - <{rset-100143} Result: [供热收费管理信息系统]>
2018-01-30 18:22:54,361 DEBUG [java.sql.Connection] - <{conn-100144} Connection>
2018-01-30 18:22:54,362 DEBUG [java.sql.Connection] - <{conn-100144} Preparing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-01-30 18:22:54,362 DEBUG [java.sql.PreparedStatement] - <{pstm-100145} Executing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-01-30 18:22:54,363 DEBUG [java.sql.PreparedStatement] - <{pstm-100145} Parameters: []>
2018-01-30 18:22:54,363 DEBUG [java.sql.PreparedStatement] - <{pstm-100145} Types: []>
2018-01-30 18:22:54,365 DEBUG [java.sql.ResultSet] - <{rset-100146} ResultSet>
2018-01-30 18:22:54,365 DEBUG [java.sql.ResultSet] - <{rset-100146} Header: [id, text, child_count]>
2018-01-30 18:22:54,365 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0101, 0101 经贸局家属楼 (3), 3]>
2018-01-30 18:22:54,365 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0102, 0102 法院家属楼 (2), 2]>
2018-01-30 18:22:54,365 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0103, 0103 长治县电视台 (1), 1]>
2018-01-30 18:22:54,366 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0104, 0104 广播北二巷（一至三排） (1), 1]>
2018-01-30 18:22:54,366 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0105, 0105 广播南二巷（公安家属西五排） (1), 1]>
2018-01-30 18:22:54,366 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0106, 0106 广播北四巷第一组（南6户） (1), 1]>
2018-01-30 18:22:54,366 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0107, 0107 广播北四巷第一组（北19户） (1), 1]>
2018-01-30 18:22:54,366 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0108, 0108 广播北四巷第二组（16户） (1), 1]>
2018-01-30 18:22:54,366 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0109, 0109 工业巷北一排-北八排 (1), 1]>
2018-01-30 18:22:54,367 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0110, 0110 法院家属院17户 (1), 1]>
2018-01-30 18:22:54,368 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0111, 0111 公安西家属区60户 (1), 1]>
2018-01-30 18:22:54,368 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0112, 0112 建筑工程公司 (2), 2]>
2018-01-30 18:22:54,368 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0113, 0113 工会家属楼 (1), 1]>
2018-01-30 18:22:54,368 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0114, 0114 工会二层独院5户 (1), 1]>
2018-01-30 18:22:54,368 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0115, 0115 政府平房南一排 (2), 2]>
2018-01-30 18:22:54,368 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0116, 0116 政府平房南二排6户 (1), 1]>
2018-01-30 18:22:54,368 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0117, 0117 政府平房南三排5户 (1), 1]>
2018-01-30 18:22:54,368 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0118, 0118 政府平房南四排4户 (1), 1]>
2018-01-30 18:22:54,369 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0119, 0119 政府平房南五排5户（北二排） (1), 1]>
2018-01-30 18:22:54,369 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0120, 0120 政府平房南六排5户（北一排） (1), 1]>
2018-01-30 18:22:54,370 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0121, 0121 政府平房后六户 (1), 1]>
2018-01-30 18:22:54,370 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0122, 0122 政府第三家属楼32户 (1), 1]>
2018-01-30 18:22:54,370 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0123, 0123 政府黄楼家属区 (1), 1]>
2018-01-30 18:22:54,370 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0124, 0124 五交化家属楼 (2), 2]>
2018-01-30 18:22:54,370 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0125, 0125 通达供销公司综合楼 (1), 1]>
2018-01-30 18:22:54,370 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0126, 0126 供销联社家属楼 (3), 3]>
2018-01-30 18:22:54,370 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [0127, 0127 二轻局底商 (1), 1]>
2018-01-30 18:22:54,370 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [2001, 2001 南董村西南一巷 (1), 1]>
2018-01-30 18:22:54,371 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [2002, 2002 南董村正街路北 (1), 1]>
2018-01-30 18:22:54,371 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [2003, 2003 南董村正街路南 (1), 1]>
2018-01-30 18:22:54,371 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [2004, 2004 南董村西散户 (1), 1]>
2018-01-30 18:22:54,372 DEBUG [java.sql.ResultSet] - <{rset-100146} Result: [2005, 2005 伍龙小区 (3), 3]>
2018-01-30 18:22:54,562 DEBUG [java.sql.Connection] - <{conn-100147} Connection>
2018-01-30 18:22:54,563 DEBUG [java.sql.Connection] - <{conn-100147} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:22:54,563 DEBUG [java.sql.PreparedStatement] - <{pstm-100148} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:22:54,563 DEBUG [java.sql.PreparedStatement] - <{pstm-100148} Parameters: [100043]>
2018-01-30 18:22:54,563 DEBUG [java.sql.PreparedStatement] - <{pstm-100148} Types: [java.lang.String]>
2018-01-30 18:22:54,564 DEBUG [java.sql.ResultSet] - <{rset-100149} ResultSet>
2018-01-30 18:22:54,565 DEBUG [java.sql.ResultSet] - <{rset-100149} Header: [theme]>
2018-01-30 18:22:54,565 DEBUG [java.sql.ResultSet] - <{rset-100149} Result: [default]>
2018-01-30 18:22:58,855 DEBUG [java.sql.Connection] - <{conn-100150} Connection>
2018-01-30 18:22:58,856 DEBUG [java.sql.Connection] - <{conn-100150} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:22:58,856 DEBUG [java.sql.PreparedStatement] - <{pstm-100151} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:22:58,856 DEBUG [java.sql.PreparedStatement] - <{pstm-100151} Parameters: [100043]>
2018-01-30 18:22:58,856 DEBUG [java.sql.PreparedStatement] - <{pstm-100151} Types: [java.lang.String]>
2018-01-30 18:22:58,857 DEBUG [java.sql.ResultSet] - <{rset-100152} ResultSet>
2018-01-30 18:22:58,858 DEBUG [java.sql.ResultSet] - <{rset-100152} Header: [theme]>
2018-01-30 18:22:58,858 DEBUG [java.sql.ResultSet] - <{rset-100152} Result: [default]>
2018-01-30 18:22:59,264 DEBUG [java.sql.Connection] - <{conn-100153} Connection>
2018-01-30 18:22:59,265 DEBUG [java.sql.Connection] - <{conn-100153} Preparing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-30 18:22:59,265 DEBUG [java.sql.PreparedStatement] - <{pstm-100154} Executing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-30 18:22:59,265 DEBUG [java.sql.PreparedStatement] - <{pstm-100154} Parameters: []>
2018-01-30 18:22:59,265 DEBUG [java.sql.PreparedStatement] - <{pstm-100154} Types: []>
2018-01-30 18:22:59,266 DEBUG [java.sql.ResultSet] - <{rset-100155} ResultSet>
2018-01-30 18:22:59,266 DEBUG [java.sql.ResultSet] - <{rset-100155} Header: [value, text]>
2018-01-30 18:22:59,266 DEBUG [java.sql.ResultSet] - <{rset-100155} Result: [A, 供热费]>
2018-01-30 18:22:59,267 DEBUG [java.sql.ResultSet] - <{rset-100155} Result: [B, 入网费]>
2018-01-30 18:22:59,304 DEBUG [java.sql.Connection] - <{conn-100156} Connection>
2018-01-30 18:22:59,304 DEBUG [java.sql.Connection] - <{conn-100156} Preparing Statement:   SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD') currentDate FROM DUAL  >
2018-01-30 18:22:59,304 DEBUG [java.sql.PreparedStatement] - <{pstm-100157} Executing Statement:   SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD') currentDate FROM DUAL  >
2018-01-30 18:22:59,305 DEBUG [java.sql.PreparedStatement] - <{pstm-100157} Parameters: []>
2018-01-30 18:22:59,305 DEBUG [java.sql.PreparedStatement] - <{pstm-100157} Types: []>
2018-01-30 18:22:59,306 DEBUG [java.sql.ResultSet] - <{rset-100158} ResultSet>
2018-01-30 18:22:59,306 DEBUG [java.sql.ResultSet] - <{rset-100158} Header: [currentdate]>
2018-01-30 18:22:59,306 DEBUG [java.sql.ResultSet] - <{rset-100158} Result: [2018-01-30]>
2018-01-30 18:23:01,233 DEBUG [java.sql.Connection] - <{conn-100159} Connection>
2018-01-30 18:23:01,234 DEBUG [java.sql.Connection] - <{conn-100159} Preparing Statement:    select pay_mode,count(house_code) house_count,   sum(real_charge) real_charge,sum(nvl(LATEFEE_REALCHARGE,0)) latefee_realcharge    from (   select     b.bill_date ,        e.community_name,     b.community_code,     b.building_code,     b.house_code,        b.owner_name,        b.charge_price,      b.charge_area,      b.USE_PREPAY,       b.PAY_MODE,       f.invoice_code,       f.invoice_number,     c.userName operatorName,     b.operator,       b.operate_date,      b.item_code,      b.charge_type,      case when b.charge_month='0' then '' else b.charge_month end as charge_month,       b.real_charge ,     case when g.status='2' then 1 else 0 end cancelCount,b.LATEFEE_REALCHARGE   from      SF_DETAIL b,EAUSER c,SF_ITEM d,FC_COMMUNITY e,SF_INVOICEUSE f,sf_invoice g   where      b.community_code=e.community_code     and b.operator=c.userid     and b.item_code=d.item_code     and b.b_id=f.b_id(+)     and b.rollback_flag='0'     and f.invoice_code=g.invoice_code(+)     and f.invoice_number=g.invoice_number(+)     and f.item_code=g.item_code(+)     and f.invoice_type=g.invoice_type(+)    ) a  where 1=1      AND          operate_date>='2018-01-30 00:00:00'      AND          operate_date<='2018-01-30 23:59:59'               group by pay_mode  >
2018-01-30 18:23:01,234 DEBUG [java.sql.PreparedStatement] - <{pstm-100160} Executing Statement:    select pay_mode,count(house_code) house_count,   sum(real_charge) real_charge,sum(nvl(LATEFEE_REALCHARGE,0)) latefee_realcharge    from (   select     b.bill_date ,        e.community_name,     b.community_code,     b.building_code,     b.house_code,        b.owner_name,        b.charge_price,      b.charge_area,      b.USE_PREPAY,       b.PAY_MODE,       f.invoice_code,       f.invoice_number,     c.userName operatorName,     b.operator,       b.operate_date,      b.item_code,      b.charge_type,      case when b.charge_month='0' then '' else b.charge_month end as charge_month,       b.real_charge ,     case when g.status='2' then 1 else 0 end cancelCount,b.LATEFEE_REALCHARGE   from      SF_DETAIL b,EAUSER c,SF_ITEM d,FC_COMMUNITY e,SF_INVOICEUSE f,sf_invoice g   where      b.community_code=e.community_code     and b.operator=c.userid     and b.item_code=d.item_code     and b.b_id=f.b_id(+)     and b.rollback_flag='0'     and f.invoice_code=g.invoice_code(+)     and f.invoice_number=g.invoice_number(+)     and f.item_code=g.item_code(+)     and f.invoice_type=g.invoice_type(+)    ) a  where 1=1      AND          operate_date>='2018-01-30 00:00:00'      AND          operate_date<='2018-01-30 23:59:59'               group by pay_mode  >
2018-01-30 18:23:01,234 DEBUG [java.sql.PreparedStatement] - <{pstm-100160} Parameters: []>
2018-01-30 18:23:01,234 DEBUG [java.sql.PreparedStatement] - <{pstm-100160} Types: []>
2018-01-30 18:23:01,236 DEBUG [java.sql.ResultSet] - <{rset-100161} ResultSet>
2018-01-30 18:23:01,236 DEBUG [java.sql.ResultSet] - <{rset-100161} Header: [pay_mode, house_count, real_charge, latefee_realcharge]>
2018-01-30 18:23:01,236 DEBUG [java.sql.ResultSet] - <{rset-100161} Result: [现金, 1, 2800.28, 1.05]>
2018-01-30 18:23:29,482 DEBUG [java.sql.Connection] - <{conn-100162} Connection>
2018-01-30 18:23:29,483 DEBUG [java.sql.Connection] - <{conn-100162} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:23:29,483 DEBUG [java.sql.PreparedStatement] - <{pstm-100163} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-30 18:23:29,483 DEBUG [java.sql.PreparedStatement] - <{pstm-100163} Parameters: [100043]>
2018-01-30 18:23:29,483 DEBUG [java.sql.PreparedStatement] - <{pstm-100163} Types: [java.lang.String]>
2018-01-30 18:23:29,484 DEBUG [java.sql.ResultSet] - <{rset-100164} ResultSet>
2018-01-30 18:23:29,485 DEBUG [java.sql.ResultSet] - <{rset-100164} Header: [theme]>
2018-01-30 18:23:29,485 DEBUG [java.sql.ResultSet] - <{rset-100164} Result: [default]>
2018-01-30 18:23:29,805 DEBUG [java.sql.Connection] - <{conn-100165} Connection>
2018-01-30 18:23:29,805 DEBUG [java.sql.Connection] - <{conn-100165} Preparing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-30 18:23:29,805 DEBUG [java.sql.PreparedStatement] - <{pstm-100166} Executing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-30 18:23:29,805 DEBUG [java.sql.PreparedStatement] - <{pstm-100166} Parameters: []>
2018-01-30 18:23:29,805 DEBUG [java.sql.PreparedStatement] - <{pstm-100166} Types: []>
2018-01-30 18:23:29,807 DEBUG [java.sql.ResultSet] - <{rset-100167} ResultSet>
2018-01-30 18:23:29,807 DEBUG [java.sql.ResultSet] - <{rset-100167} Header: [value, text]>
2018-01-30 18:23:29,807 DEBUG [java.sql.ResultSet] - <{rset-100167} Result: [A, 供热费]>
2018-01-30 18:23:29,808 DEBUG [java.sql.ResultSet] - <{rset-100167} Result: [B, 入网费]>
2018-01-30 18:23:29,846 DEBUG [java.sql.Connection] - <{conn-100168} Connection>
2018-01-30 18:23:29,847 DEBUG [java.sql.Connection] - <{conn-100168} Preparing Statement:   SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD') currentDate FROM DUAL  >
2018-01-30 18:23:29,847 DEBUG [java.sql.PreparedStatement] - <{pstm-100169} Executing Statement:   SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD') currentDate FROM DUAL  >
2018-01-30 18:23:29,847 DEBUG [java.sql.PreparedStatement] - <{pstm-100169} Parameters: []>
2018-01-30 18:23:29,847 DEBUG [java.sql.PreparedStatement] - <{pstm-100169} Types: []>
2018-01-30 18:23:29,848 DEBUG [java.sql.ResultSet] - <{rset-100170} ResultSet>
2018-01-30 18:23:29,848 DEBUG [java.sql.ResultSet] - <{rset-100170} Header: [currentdate]>
2018-01-30 18:23:29,848 DEBUG [java.sql.ResultSet] - <{rset-100170} Result: [2018-01-30]>
2018-01-30 18:23:31,621 DEBUG [java.sql.Connection] - <{conn-100171} Connection>
2018-01-30 18:23:31,624 DEBUG [java.sql.Connection] - <{conn-100171} Preparing Statement:    select pay_mode,count(house_code) house_count,   sum(real_charge) real_charge,sum(nvl(LATEFEE_REALCHARGE,0)) latefee_realcharge    from (   select     b.bill_date ,        e.community_name,     b.community_code,     b.building_code,     b.house_code,        b.owner_name,        b.charge_price,      b.charge_area,      b.USE_PREPAY,       b.PAY_MODE,       f.invoice_code,       f.invoice_number,     c.userName operatorName,     b.operator,       b.operate_date,      b.item_code,      b.charge_type,      case when b.charge_month='0' then '' else b.charge_month end as charge_month,       b.real_charge ,     case when g.status='2' then 1 else 0 end cancelCount,b.LATEFEE_REALCHARGE   from      SF_DETAIL b,EAUSER c,SF_ITEM d,FC_COMMUNITY e,SF_INVOICEUSE f,sf_invoice g   where      b.community_code=e.community_code     and b.operator=c.userid     and b.item_code=d.item_code     and b.b_id=f.b_id(+)     and b.rollback_flag='0'     and f.invoice_code=g.invoice_code(+)     and f.invoice_number=g.invoice_number(+)     and f.item_code=g.item_code(+)     and f.invoice_type=g.invoice_type(+)    ) a  where 1=1      AND          operate_date>='2018-01-30 00:00:00'      AND          operate_date<='2018-01-30 23:59:59'               group by pay_mode  >
2018-01-30 18:23:31,624 DEBUG [java.sql.PreparedStatement] - <{pstm-100172} Executing Statement:    select pay_mode,count(house_code) house_count,   sum(real_charge) real_charge,sum(nvl(LATEFEE_REALCHARGE,0)) latefee_realcharge    from (   select     b.bill_date ,        e.community_name,     b.community_code,     b.building_code,     b.house_code,        b.owner_name,        b.charge_price,      b.charge_area,      b.USE_PREPAY,       b.PAY_MODE,       f.invoice_code,       f.invoice_number,     c.userName operatorName,     b.operator,       b.operate_date,      b.item_code,      b.charge_type,      case when b.charge_month='0' then '' else b.charge_month end as charge_month,       b.real_charge ,     case when g.status='2' then 1 else 0 end cancelCount,b.LATEFEE_REALCHARGE   from      SF_DETAIL b,EAUSER c,SF_ITEM d,FC_COMMUNITY e,SF_INVOICEUSE f,sf_invoice g   where      b.community_code=e.community_code     and b.operator=c.userid     and b.item_code=d.item_code     and b.b_id=f.b_id(+)     and b.rollback_flag='0'     and f.invoice_code=g.invoice_code(+)     and f.invoice_number=g.invoice_number(+)     and f.item_code=g.item_code(+)     and f.invoice_type=g.invoice_type(+)    ) a  where 1=1      AND          operate_date>='2018-01-30 00:00:00'      AND          operate_date<='2018-01-30 23:59:59'               group by pay_mode  >
2018-01-30 18:23:31,624 DEBUG [java.sql.PreparedStatement] - <{pstm-100172} Parameters: []>
2018-01-30 18:23:31,624 DEBUG [java.sql.PreparedStatement] - <{pstm-100172} Types: []>
2018-01-30 18:23:31,626 DEBUG [java.sql.ResultSet] - <{rset-100173} ResultSet>
2018-01-30 18:23:31,626 DEBUG [java.sql.ResultSet] - <{rset-100173} Header: [pay_mode, house_count, real_charge, latefee_realcharge]>
2018-01-30 18:23:31,626 DEBUG [java.sql.ResultSet] - <{rset-100173} Result: [现金, 1, 2800.28, 1.05]>
2018-01-31 16:51:15,457 DEBUG [java.sql.Connection] - <{conn-100008} Connection>
2018-01-31 16:51:15,518 DEBUG [java.sql.Connection] - <{conn-100008} Preparing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-01-31 16:51:15,518 DEBUG [java.sql.PreparedStatement] - <{pstm-100009} Executing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-01-31 16:51:15,518 DEBUG [java.sql.PreparedStatement] - <{pstm-100009} Parameters: [0, admin]>
2018-01-31 16:51:15,518 DEBUG [java.sql.PreparedStatement] - <{pstm-100009} Types: [java.lang.String, java.lang.String]>
2018-01-31 16:51:15,525 DEBUG [java.sql.ResultSet] - <{rset-100010} ResultSet>
2018-01-31 16:51:15,525 DEBUG [java.sql.ResultSet] - <{rset-100010} Header: [userid, username, account, password, sex, deptid, theme, customid, customname]>
2018-01-31 16:51:15,526 DEBUG [java.sql.ResultSet] - <{rset-100010} Result: [100043, 管理员, admin, kLxefEnNKtb/5nUG9lJcVA==, 0, 001, default, 01, 康馨供热]>
2018-01-31 16:51:15,526 DEBUG [java.sql.Connection] - <{conn-100011} Connection>
2018-01-31 16:51:15,527 DEBUG [java.sql.Connection] - <{conn-100011} Preparing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-01-31 16:51:15,527 DEBUG [java.sql.PreparedStatement] - <{pstm-100012} Executing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-01-31 16:51:15,527 DEBUG [java.sql.PreparedStatement] - <{pstm-100012} Parameters: [2yajvsrrmv9z]>
2018-01-31 16:51:15,527 DEBUG [java.sql.PreparedStatement] - <{pstm-100012} Types: [java.lang.String]>
2018-01-31 16:51:15,529 DEBUG [java.sql.ResultSet] - <{rset-100013} ResultSet>
2018-01-31 16:51:15,531 DEBUG [java.sql.Connection] - <{conn-100014} Connection>
2018-01-31 16:51:15,531 DEBUG [java.sql.Connection] - <{conn-100014} Preparing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-01-31 16:51:15,531 DEBUG [java.sql.PreparedStatement] - <{pstm-100015} Executing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-01-31 16:51:15,531 DEBUG [java.sql.PreparedStatement] - <{pstm-100015} Parameters: [2yajvsrrmv9z, 管理员, admin, 2018-01-31 16:51:15, 127.0.0.1, 100043, FIREFOX/58.]>
2018-01-31 16:51:15,532 DEBUG [java.sql.PreparedStatement] - <{pstm-100015} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-31 16:51:16,486 DEBUG [java.sql.Connection] - <{conn-100016} Connection>
2018-01-31 16:51:16,487 DEBUG [java.sql.Connection] - <{conn-100016} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-31 16:51:16,487 DEBUG [java.sql.PreparedStatement] - <{pstm-100017} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-31 16:51:16,487 DEBUG [java.sql.PreparedStatement] - <{pstm-100017} Parameters: [100043]>
2018-01-31 16:51:16,487 DEBUG [java.sql.PreparedStatement] - <{pstm-100017} Types: [java.lang.String]>
2018-01-31 16:51:16,573 DEBUG [java.sql.ResultSet] - <{rset-100018} ResultSet>
2018-01-31 16:51:16,573 DEBUG [java.sql.ResultSet] - <{rset-100018} Header: [theme]>
2018-01-31 16:51:16,573 DEBUG [java.sql.ResultSet] - <{rset-100018} Result: [default]>
2018-01-31 16:51:16,833 DEBUG [java.sql.Connection] - <{conn-100019} Connection>
2018-01-31 16:51:16,834 DEBUG [java.sql.Connection] - <{conn-100019} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-31 16:51:16,834 DEBUG [java.sql.PreparedStatement] - <{pstm-100020} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-31 16:51:16,834 DEBUG [java.sql.PreparedStatement] - <{pstm-100020} Parameters: [100043]>
2018-01-31 16:51:16,835 DEBUG [java.sql.PreparedStatement] - <{pstm-100020} Types: [java.lang.String]>
2018-01-31 16:51:16,977 DEBUG [java.sql.ResultSet] - <{rset-100021} ResultSet>
2018-01-31 16:51:16,978 DEBUG [java.sql.ResultSet] - <{rset-100021} Header: [menuid, menuname, iconcls]>
2018-01-31 16:51:16,978 DEBUG [java.sql.ResultSet] - <{rset-100021} Result: [0103, 基础信息, null]>
2018-01-31 16:51:16,978 DEBUG [java.sql.ResultSet] - <{rset-100021} Result: [0104, 收费管理, null]>
2018-01-31 16:51:16,978 DEBUG [java.sql.ResultSet] - <{rset-100021} Result: [0105, 统计分析, null]>
2018-01-31 16:51:16,979 DEBUG [java.sql.ResultSet] - <{rset-100021} Result: [0101, 系统管理, null]>
2018-01-31 16:51:16,979 DEBUG [java.sql.Connection] - <{conn-100022} Connection>
2018-01-31 16:51:16,979 DEBUG [java.sql.Connection] - <{conn-100022} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-01-31 16:51:16,979 DEBUG [java.sql.PreparedStatement] - <{pstm-100023} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-01-31 16:51:16,979 DEBUG [java.sql.PreparedStatement] - <{pstm-100023} Parameters: [100043]>
2018-01-31 16:51:16,979 DEBUG [java.sql.PreparedStatement] - <{pstm-100023} Types: [java.lang.String]>
2018-01-31 16:51:16,987 DEBUG [java.sql.ResultSet] - <{rset-100024} ResultSet>
2018-01-31 16:51:16,991 DEBUG [java.sql.Connection] - <{conn-100025} Connection>
2018-01-31 16:51:16,992 DEBUG [java.sql.Connection] - <{conn-100025} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-31 16:51:16,992 DEBUG [java.sql.PreparedStatement] - <{pstm-100026} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-31 16:51:16,992 DEBUG [java.sql.PreparedStatement] - <{pstm-100026} Parameters: [001]>
2018-01-31 16:51:16,992 DEBUG [java.sql.PreparedStatement] - <{pstm-100026} Types: [java.lang.String]>
2018-01-31 16:51:16,995 DEBUG [java.sql.ResultSet] - <{rset-100027} ResultSet>
2018-01-31 16:51:16,995 DEBUG [java.sql.ResultSet] - <{rset-100027} Header: [deptid, deptname]>
2018-01-31 16:51:16,995 DEBUG [java.sql.ResultSet] - <{rset-100027} Result: [001, 康馨热力]>
2018-01-31 16:51:16,995 DEBUG [java.sql.Connection] - <{conn-100028} Connection>
2018-01-31 16:51:16,995 DEBUG [java.sql.Connection] - <{conn-100028} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-31 16:51:16,995 DEBUG [java.sql.PreparedStatement] - <{pstm-100029} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-31 16:51:16,996 DEBUG [java.sql.PreparedStatement] - <{pstm-100029} Parameters: [001]>
2018-01-31 16:51:16,996 DEBUG [java.sql.PreparedStatement] - <{pstm-100029} Types: [java.lang.String]>
2018-01-31 16:51:16,997 DEBUG [java.sql.ResultSet] - <{rset-100030} ResultSet>
2018-01-31 16:51:16,997 DEBUG [java.sql.ResultSet] - <{rset-100030} Header: [deptid, deptname]>
2018-01-31 16:51:16,997 DEBUG [java.sql.ResultSet] - <{rset-100030} Result: [001, 康馨热力]>
2018-01-31 16:51:16,998 DEBUG [java.sql.Connection] - <{conn-100031} Connection>
2018-01-31 16:51:16,998 DEBUG [java.sql.Connection] - <{conn-100031} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-31 16:51:16,998 DEBUG [java.sql.PreparedStatement] - <{pstm-100032} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-31 16:51:16,999 DEBUG [java.sql.PreparedStatement] - <{pstm-100032} Parameters: [100043]>
2018-01-31 16:51:16,999 DEBUG [java.sql.PreparedStatement] - <{pstm-100032} Types: [java.lang.String]>
2018-01-31 16:51:17,000 DEBUG [java.sql.ResultSet] - <{rset-100033} ResultSet>
2018-01-31 16:51:17,000 DEBUG [java.sql.ResultSet] - <{rset-100033} Header: [theme]>
2018-01-31 16:51:17,000 DEBUG [java.sql.ResultSet] - <{rset-100033} Result: [default]>
2018-01-31 16:51:17,255 DEBUG [java.sql.Connection] - <{conn-100034} Connection>
2018-01-31 16:51:17,256 DEBUG [java.sql.Connection] - <{conn-100034} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-31 16:51:17,256 DEBUG [java.sql.PreparedStatement] - <{pstm-100035} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-31 16:51:17,256 DEBUG [java.sql.PreparedStatement] - <{pstm-100035} Parameters: [100043]>
2018-01-31 16:51:17,256 DEBUG [java.sql.PreparedStatement] - <{pstm-100035} Types: [java.lang.String]>
2018-01-31 16:51:17,264 DEBUG [java.sql.ResultSet] - <{rset-100036} ResultSet>
2018-01-31 16:51:17,265 DEBUG [java.sql.ResultSet] - <{rset-100036} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-31 16:51:17,265 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [010305, 入网管理, null, 0103, module/iw.ered?reqCode=intoWebInit, 0, false, false, tab_blank.png]>
2018-01-31 16:51:17,265 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030404, 新建换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,265 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030405, 修改换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,265 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [010301, 热源管理, null, 0103, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,265 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030401, 新建热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,266 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030406, 删除换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,266 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030403, 删除热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,266 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030311, 修改面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,266 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030313, 删除面积1, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,267 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030501, 新增入网, null, 010305, null, 1, false, true, tab_blank.png]>
2018-01-31 16:51:17,267 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030202, 导入模板下载, null, 010302, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,268 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030201, 选择导入文件, null, 010302, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,269 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [010304, 热源站所管理, null, 0103, module/sr.ered?reqCode=sourceInit, 0, false, false, tab_blank.png]>
2018-01-31 16:51:17,269 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [0103, 基础信息, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-31 16:51:17,269 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030312, 删除面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,271 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030301, 新建小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,271 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030310, 添加面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,271 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030502, 修改入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,271 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030402, 修改热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,272 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [010303, 基础信息维护, null, 0103, module/fc.ered?reqCode=communityInit, 0, false, false, tab_blank.png]>
2018-01-31 16:51:17,272 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030302, 修改小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,272 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030503, 删除入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,272 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030303, 删除小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,273 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [010302, 基础数据导入, null, 0103, module/importHouse.ered?reqCode=importInit, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,273 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030304, 新建大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,273 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030305, 修改大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,273 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030306, 删除大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,273 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030307, 新建用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,273 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030308, 修改用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,274 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030309, 删除用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,274 DEBUG [java.sql.Connection] - <{conn-100037} Connection>
2018-01-31 16:51:17,274 DEBUG [java.sql.Connection] - <{conn-100037} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-31 16:51:17,274 DEBUG [java.sql.PreparedStatement] - <{pstm-100038} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-31 16:51:17,275 DEBUG [java.sql.PreparedStatement] - <{pstm-100038} Parameters: [100043]>
2018-01-31 16:51:17,275 DEBUG [java.sql.PreparedStatement] - <{pstm-100038} Types: [java.lang.String]>
2018-01-31 16:51:17,279 DEBUG [java.sql.ResultSet] - <{rset-100039} ResultSet>
2018-01-31 16:51:17,279 DEBUG [java.sql.Connection] - <{conn-100040} Connection>
2018-01-31 16:51:17,280 DEBUG [java.sql.Connection] - <{conn-100040} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-31 16:51:17,280 DEBUG [java.sql.PreparedStatement] - <{pstm-100041} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-31 16:51:17,280 DEBUG [java.sql.PreparedStatement] - <{pstm-100041} Parameters: [01]>
2018-01-31 16:51:17,280 DEBUG [java.sql.PreparedStatement] - <{pstm-100041} Types: [java.lang.String]>
2018-01-31 16:51:17,431 DEBUG [java.sql.ResultSet] - <{rset-100042} ResultSet>
2018-01-31 16:51:17,432 DEBUG [java.sql.ResultSet] - <{rset-100042} Header: [menuname]>
2018-01-31 16:51:17,432 DEBUG [java.sql.ResultSet] - <{rset-100042} Result: [供热收费管理信息系统]>
2018-01-31 16:51:17,548 DEBUG [java.sql.Connection] - <{conn-100043} Connection>
2018-01-31 16:51:17,550 DEBUG [java.sql.Connection] - <{conn-100043} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-31 16:51:17,550 DEBUG [java.sql.PreparedStatement] - <{pstm-100044} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-31 16:51:17,550 DEBUG [java.sql.PreparedStatement] - <{pstm-100044} Parameters: [100043]>
2018-01-31 16:51:17,550 DEBUG [java.sql.PreparedStatement] - <{pstm-100044} Types: [java.lang.String]>
2018-01-31 16:51:17,560 DEBUG [java.sql.ResultSet] - <{rset-100045} ResultSet>
2018-01-31 16:51:17,560 DEBUG [java.sql.ResultSet] - <{rset-100045} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-31 16:51:17,560 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [010402, 收费管理, null, 0104, module/chg.ered?reqCode=chargeInit, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,560 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040503, 作废票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,560 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040501, 票据入库, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,560 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040401, 冲账, null, 010404, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,561 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040101, 生成应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,561 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [010401, 生成应收, null, 0104, module/crp.ered?reqCode=creatPlanInit, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,561 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040505, 领用票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,561 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040302, 删除减免, null, 010403, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,561 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040301, 减免应收, null, 010403, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,562 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040502, 删除票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,562 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040201, 收费, null, 010402, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,562 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040102, 删除应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,563 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040504, 返还票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,563 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [010403, 减免管理, null, 0104, module/mns.ered?reqCode=minusInit, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,563 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [0104, 收费管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-31 16:51:17,563 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [010404, 冲账管理, null, 0104, module/rlb.ered?reqCode=rollbackInit, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,563 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [010405, 票据管理, null, 0104, module/inv.ered?reqCode=invoiceInit, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,563 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [010406, 银行对账, null, 0104, module/bnk.ered?reqCode=bankInit, 0, false, false, tab_blank.png]>
2018-01-31 16:51:17,564 DEBUG [java.sql.Connection] - <{conn-100046} Connection>
2018-01-31 16:51:17,564 DEBUG [java.sql.Connection] - <{conn-100046} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-31 16:51:17,565 DEBUG [java.sql.PreparedStatement] - <{pstm-100047} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-31 16:51:17,565 DEBUG [java.sql.PreparedStatement] - <{pstm-100047} Parameters: [100043]>
2018-01-31 16:51:17,565 DEBUG [java.sql.PreparedStatement] - <{pstm-100047} Types: [java.lang.String]>
2018-01-31 16:51:17,568 DEBUG [java.sql.ResultSet] - <{rset-100048} ResultSet>
2018-01-31 16:51:17,568 DEBUG [java.sql.Connection] - <{conn-100049} Connection>
2018-01-31 16:51:17,569 DEBUG [java.sql.Connection] - <{conn-100049} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-31 16:51:17,569 DEBUG [java.sql.PreparedStatement] - <{pstm-100050} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-31 16:51:17,569 DEBUG [java.sql.PreparedStatement] - <{pstm-100050} Parameters: [01]>
2018-01-31 16:51:17,569 DEBUG [java.sql.PreparedStatement] - <{pstm-100050} Types: [java.lang.String]>
2018-01-31 16:51:17,571 DEBUG [java.sql.ResultSet] - <{rset-100051} ResultSet>
2018-01-31 16:51:17,571 DEBUG [java.sql.ResultSet] - <{rset-100051} Header: [menuname]>
2018-01-31 16:51:17,571 DEBUG [java.sql.ResultSet] - <{rset-100051} Result: [供热收费管理信息系统]>
2018-01-31 16:51:17,693 DEBUG [java.sql.Connection] - <{conn-100052} Connection>
2018-01-31 16:51:17,695 DEBUG [java.sql.Connection] - <{conn-100052} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-31 16:51:17,695 DEBUG [java.sql.PreparedStatement] - <{pstm-100053} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-31 16:51:17,695 DEBUG [java.sql.PreparedStatement] - <{pstm-100053} Parameters: [100043]>
2018-01-31 16:51:17,695 DEBUG [java.sql.PreparedStatement] - <{pstm-100053} Types: [java.lang.String]>
2018-01-31 16:51:17,705 DEBUG [java.sql.ResultSet] - <{rset-100054} ResultSet>
2018-01-31 16:51:17,705 DEBUG [java.sql.ResultSet] - <{rset-100054} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-31 16:51:17,705 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [010501, 基础报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-01-31 16:51:17,705 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [010502, 收费报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-01-31 16:51:17,705 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [01050202, 欠费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050201, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,706 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [01050101, 用户情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=f01050101, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,706 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [01050102, 入网情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=w01050301, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,706 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [01050203, 收费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050202, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,706 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [01050201, 收费情况表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050401, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,707 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [0105, 统计分析, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-31 16:51:17,707 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [01050204, 减免明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050204, 1, false, false, tab_blank.png]>
2018-01-31 16:51:17,707 DEBUG [java.sql.Connection] - <{conn-100055} Connection>
2018-01-31 16:51:17,707 DEBUG [java.sql.Connection] - <{conn-100055} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-31 16:51:17,708 DEBUG [java.sql.PreparedStatement] - <{pstm-100056} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-31 16:51:17,708 DEBUG [java.sql.PreparedStatement] - <{pstm-100056} Parameters: [100043]>
2018-01-31 16:51:17,708 DEBUG [java.sql.PreparedStatement] - <{pstm-100056} Types: [java.lang.String]>
2018-01-31 16:51:17,709 DEBUG [java.sql.ResultSet] - <{rset-100057} ResultSet>
2018-01-31 16:51:17,710 DEBUG [java.sql.Connection] - <{conn-100058} Connection>
2018-01-31 16:51:17,710 DEBUG [java.sql.Connection] - <{conn-100058} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-31 16:51:17,711 DEBUG [java.sql.PreparedStatement] - <{pstm-100059} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-31 16:51:17,711 DEBUG [java.sql.PreparedStatement] - <{pstm-100059} Parameters: [01]>
2018-01-31 16:51:17,711 DEBUG [java.sql.PreparedStatement] - <{pstm-100059} Types: [java.lang.String]>
2018-01-31 16:51:17,712 DEBUG [java.sql.ResultSet] - <{rset-100060} ResultSet>
2018-01-31 16:51:17,712 DEBUG [java.sql.ResultSet] - <{rset-100060} Header: [menuname]>
2018-01-31 16:51:17,712 DEBUG [java.sql.ResultSet] - <{rset-100060} Result: [供热收费管理信息系统]>
2018-01-31 16:51:17,726 DEBUG [java.sql.Connection] - <{conn-100061} Connection>
2018-01-31 16:51:17,726 DEBUG [java.sql.Connection] - <{conn-100061} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-31 16:51:17,727 DEBUG [java.sql.PreparedStatement] - <{pstm-100062} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-31 16:51:17,727 DEBUG [java.sql.PreparedStatement] - <{pstm-100062} Parameters: [100043]>
2018-01-31 16:51:17,727 DEBUG [java.sql.PreparedStatement] - <{pstm-100062} Types: [java.lang.String]>
2018-01-31 16:51:17,737 DEBUG [java.sql.ResultSet] - <{rset-100063} ResultSet>
2018-01-31 16:51:17,737 DEBUG [java.sql.ResultSet] - <{rset-100063} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-31 16:51:17,737 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010304, 收费标准, server_connectIcon, 010103, module/std.ered?reqCode=standardInit, 1, false, false, server_connect.png]>
2018-01-31 16:51:17,737 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [010102, 权限管理, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-31 16:51:17,738 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010403, Requst请求跟踪, server_connectIcon, 010104, eventTrack.ered?reqCode=init, 1, false, false, server_connect.png]>
2018-01-31 16:51:17,738 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010201, 组织机构管理, chart_organisationIcon, 010102, organization.ered?reqCode=departmentInit, 1, false, false, chart_organisation.png]>
2018-01-31 16:51:17,738 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010301, 字典维护, application_view_listIcon, 010103, resource.ered?reqCode=codeTableInit, 1, false, false, application_view_list.png]>
2018-01-31 16:51:17,738 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010401, Session会话监控, user_commentIcon, 010104, sessionMonitor.ered?reqCode=init, 1, false, false, user_comment.png]>
2018-01-31 16:51:17,738 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010204, 角色管理与授权, award_star_silver_3Icon, 010102, role.ered?reqCode=roleInit, 1, false, false, award_star_silver_3.png]>
2018-01-31 16:51:17,738 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010303, 全局参数表维护, configIcon, 010103, param.ered?reqCode=init, 1, false, false, config.png]>
2018-01-31 16:51:17,739 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [010103, 基础数据维护, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-31 16:51:17,740 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [010104, 运行监控, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-31 16:51:17,740 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010202, 人员管理与授权, group_linkIcon, 010102, user.ered?reqCode=userInit, 1, false, false, group_link.png]>
2018-01-31 16:51:17,740 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010405, JDBC执行监控, database_refreshIcon, 010104, jdbcMonitor.ered?reqCode=jdbcInit, 1, false, false, database_refresh.png]>
2018-01-31 16:51:17,740 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010406, Service监控, pluginIcon, 010104, beanMonitor.ered?reqCode=init, 1, false, false, plugin.png]>
2018-01-31 16:51:17,740 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010205, 菜单资源管理, layout_contentIcon, 010102, resource.ered?reqCode=menuResourceInit, 1, false, false, layout_content.png]>
2018-01-31 16:51:17,740 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [0101, 系统管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-31 16:51:17,741 DEBUG [java.sql.Connection] - <{conn-100064} Connection>
2018-01-31 16:51:17,741 DEBUG [java.sql.Connection] - <{conn-100064} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-31 16:51:17,741 DEBUG [java.sql.PreparedStatement] - <{pstm-100065} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-31 16:51:17,741 DEBUG [java.sql.PreparedStatement] - <{pstm-100065} Parameters: [100043]>
2018-01-31 16:51:17,741 DEBUG [java.sql.PreparedStatement] - <{pstm-100065} Types: [java.lang.String]>
2018-01-31 16:51:17,743 DEBUG [java.sql.ResultSet] - <{rset-100066} ResultSet>
2018-01-31 16:51:17,743 DEBUG [java.sql.Connection] - <{conn-100067} Connection>
2018-01-31 16:51:17,744 DEBUG [java.sql.Connection] - <{conn-100067} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-31 16:51:17,744 DEBUG [java.sql.PreparedStatement] - <{pstm-100068} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-31 16:51:17,744 DEBUG [java.sql.PreparedStatement] - <{pstm-100068} Parameters: [01]>
2018-01-31 16:51:17,744 DEBUG [java.sql.PreparedStatement] - <{pstm-100068} Types: [java.lang.String]>
2018-01-31 16:51:17,746 DEBUG [java.sql.ResultSet] - <{rset-100069} ResultSet>
2018-01-31 16:51:17,747 DEBUG [java.sql.ResultSet] - <{rset-100069} Header: [menuname]>
2018-01-31 16:51:17,747 DEBUG [java.sql.ResultSet] - <{rset-100069} Result: [供热收费管理信息系统]>
2018-01-31 16:51:18,341 DEBUG [java.sql.Connection] - <{conn-100070} Connection>
2018-01-31 16:51:18,342 DEBUG [java.sql.Connection] - <{conn-100070} Preparing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-01-31 16:51:18,342 DEBUG [java.sql.PreparedStatement] - <{pstm-100071} Executing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-01-31 16:51:18,342 DEBUG [java.sql.PreparedStatement] - <{pstm-100071} Parameters: []>
2018-01-31 16:51:18,342 DEBUG [java.sql.PreparedStatement] - <{pstm-100071} Types: []>
2018-01-31 16:51:18,346 DEBUG [java.sql.ResultSet] - <{rset-100072} ResultSet>
2018-01-31 16:51:18,346 DEBUG [java.sql.ResultSet] - <{rset-100072} Header: [id, text, child_count]>
2018-01-31 16:51:18,346 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0001, 0001 冶矿中心 (1), 1]>
2018-01-31 16:51:18,347 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0002, 0002 劳动局家属楼 (1), 1]>
2018-01-31 16:51:18,347 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0003, 0003 食品公司 (1), 1]>
2018-01-31 16:51:18,347 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0004, 0004 人社局11号楼 (2), 2]>
2018-01-31 16:51:18,347 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0005, 0005 卫生局家属楼 (1), 1]>
2018-01-31 16:51:18,347 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0006, 0006 水电公司 (2), 2]>
2018-01-31 16:51:18,347 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0007, 0007 水利局陈卿小区 (1), 1]>
2018-01-31 16:51:18,348 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0008, 0008 发改局家属楼 (1), 1]>
2018-01-31 16:51:18,348 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0009, 0009 公路段家属楼 (1), 1]>
2018-01-31 16:51:18,348 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0010, 0010 公路段平房 (1), 1]>
2018-01-31 16:51:18,349 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0011, 0011 公安局家属楼 (1), 1]>
2018-01-31 16:51:18,350 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0012, 0012 人民银行 (2), 2]>
2018-01-31 16:51:18,350 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0013, 0013 文卫路陈卿小区 (1), 1]>
2018-01-31 16:51:18,350 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0014, 0014 中医院家属楼 (1), 1]>
2018-01-31 16:51:18,350 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0015, 0015 腾达鞋业 (3), 3]>
2018-01-31 16:51:18,350 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0016, 0016 城关供销社 (2), 2]>
2018-01-31 16:51:18,351 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0017, 0017 城南便民超市 (1), 1]>
2018-01-31 16:51:18,351 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0018, 0018 祥源便民超市 (1), 1]>
2018-01-31 16:51:18,351 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0019, 0019 老北京饭店 (1), 1]>
2018-01-31 16:51:18,352 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0020, 0020 开门红打印店 (1), 1]>
2018-01-31 16:51:18,352 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0021, 0021 一中状元路拐角楼 (1), 1]>
2018-01-31 16:51:18,352 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0022, 0022 常委家属楼 (1), 1]>
2018-01-31 16:51:18,353 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0023, 0023 府前街002号院 (1), 1]>
2018-01-31 16:51:18,353 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0024, 0024 府前街（新华书店对面） (1), 1]>
2018-01-31 16:51:18,353 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0025, 0025 东厢小区 (2), 2]>
2018-01-31 16:51:18,353 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0026, 0026 凤凰名居旁 (1), 1]>
2018-01-31 16:51:18,353 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0027, 0027 电影公司家属楼 (1), 1]>
2018-01-31 16:51:18,353 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0028, 0028 凤凰名居 (2), 2]>
2018-01-31 16:51:18,354 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0029, 0029 府东006#家属楼 (2), 2]>
2018-01-31 16:51:18,354 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0030, 0030 药材公司窑 (1), 1]>
2018-01-31 16:51:18,355 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0031, 0031 府西小区 (3), 3]>
2018-01-31 16:51:18,355 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0032, 0032 工商局家属楼 (3), 3]>
2018-01-31 16:51:18,355 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0033, 0033 供销合作联合社 (2), 2]>
2018-01-31 16:51:18,355 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0034, 0034 果品公司家属楼 (1), 1]>
2018-01-31 16:51:18,355 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0035, 0035 宏运饮食服务公司 (4), 4]>
2018-01-31 16:51:18,355 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0036, 0036 旧工行家属院 (5), 5]>
2018-01-31 16:51:18,355 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0037, 0037 落子剧团家属楼 (3), 3]>
2018-01-31 16:51:18,356 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0038, 0038 粮食局家属楼 (5), 5]>
2018-01-31 16:51:18,356 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0039, 0039 茂源糖酒公司家属楼 (1), 1]>
2018-01-31 16:51:18,356 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0040, 0040 旅游局旁门市住户 (1), 1]>
2018-01-31 16:51:18,357 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0041, 0041 农行机关家属楼 (1), 1]>
2018-01-31 16:51:18,357 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0042, 0042 青羊社区院内 (1), 1]>
2018-01-31 16:51:18,357 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0043, 0043 人大家属楼   (1), 1]>
2018-01-31 16:51:18,357 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0044, 0044 人民医院家属楼 (9), 9]>
2018-01-31 16:51:18,357 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0045, 0045 水利局家属楼    (1), 1]>
2018-01-31 16:51:18,357 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0046, 0046 水利局附近居民 (1), 1]>
2018-01-31 16:51:18,357 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0047, 0047 水利局新楼 (2), 2]>
2018-01-31 16:51:18,358 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0048, 0048 王庄分社   (2), 2]>
2018-01-31 16:51:18,358 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0049, 0049 卫生监督所家属楼 (1), 1]>
2018-01-31 16:51:18,358 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0050, 0050 武装部家属楼   (1), 1]>
2018-01-31 16:51:18,358 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0051, 0051 新宇百货家属楼 (1), 1]>
2018-01-31 16:51:18,359 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0052, 0052 阳光佳苑（原药材公司院） (1), 1]>
2018-01-31 16:51:18,359 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0053, 0053 药材公司家属楼 (1), 1]>
2018-01-31 16:51:18,359 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0054, 0054 元发兴小院 (1), 1]>
2018-01-31 16:51:18,359 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0055, 0055 周转房家属楼   (1), 1]>
2018-01-31 16:51:18,359 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0056, 0056 自来水家属楼 (4), 4]>
2018-01-31 16:51:18,359 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0057, 0057 自来水公司家属楼（城建局上面） (1), 1]>
2018-01-31 16:51:18,359 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0058, 0058 组织部家属楼  (1), 1]>
2018-01-31 16:51:18,360 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0059, 0059 政府商铺 (36), 36]>
2018-01-31 16:51:18,360 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0060, 0060 和园小区 (1), 1]>
2018-01-31 16:51:18,361 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1001, 1001 滨河湾家属楼 (47), 47]>
2018-01-31 16:51:18,361 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1002, 1002 地矿局家属楼 (1), 1]>
2018-01-31 16:51:18,361 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1003, 1003 平顺县彩凤祥玉小区 (1), 1]>
2018-01-31 16:51:18,361 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1004, 1004 平顺县交通执法局家属院 (1), 1]>
2018-01-31 16:51:18,361 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1005, 1005 信用联社家属院 (1), 1]>
2018-01-31 16:51:18,361 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1006, 1006 民政局家属院 (1), 1]>
2018-01-31 16:51:18,361 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1007, 1007 青羊山腾飞小区马建楼 (1), 1]>
2018-01-31 16:51:18,362 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1008, 1008 电影院家属楼 (2), 2]>
2018-01-31 16:51:18,362 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1009, 1009 顺安小区 (1), 1]>
2018-01-31 16:51:18,363 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1010, 1010 商务中心 (2), 2]>
2018-01-31 16:51:18,363 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1011, 1011 彩风花苑 (1), 1]>
2018-01-31 16:51:18,363 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1012, 1012 彩凤道城关村 (1), 1]>
2018-01-31 16:51:18,363 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1013, 1013 康乐食品公司 (3), 3]>
2018-01-31 16:51:18,363 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1014, 1014 宏达五交化新楼 (3), 3]>
2018-01-31 16:51:18,364 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1015, 1015 五交化公司南楼 (3), 3]>
2018-01-31 16:51:18,364 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1016, 1016 宏昌汽修铁冶社新楼南楼 (4), 4]>
2018-01-31 16:51:18,364 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1017, 1017 运输公司南楼 (4), 4]>
2018-01-31 16:51:18,364 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1018, 1018 针织厂北楼东小楼 (2), 2]>
2018-01-31 16:51:18,364 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1019, 1019 彩凤花苑 (1), 1]>
2018-01-31 16:51:18,365 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1020, 1020 顺安小区 (1), 1]>
2018-01-31 16:51:18,365 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1021, 1021 运输公司北楼一楼 (1), 1]>
2018-01-31 16:51:18,365 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1022, 1022 五交化公司大门顶楼下鞋店 (1), 1]>
2018-01-31 16:51:18,366 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1023, 1023 针织厂北楼楼下聚美日化 (1), 1]>
2018-01-31 16:51:18,366 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1024, 1024 商务中心楼下卖摩托车 (1), 1]>
2018-01-31 16:51:18,366 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1025, 1025 宏达五交化温馨家园 (1), 1]>
2018-01-31 16:51:18,367 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1026, 1026 康乐食品楼下 (1), 1]>
2018-01-31 16:51:18,367 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1027, 1027 青羊祥玉小区张华显楼 (1), 1]>
2018-01-31 16:51:18,367 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1028, 1028 五交化公司一楼韵达快递 (1), 1]>
2018-01-31 16:51:18,367 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1029, 1029 针织厂三单元302户 (1), 1]>
2018-01-31 16:51:18,369 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1030, 1030 康乐食品北四层楼一单元402户 (1), 1]>
2018-01-31 16:51:18,369 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1031, 1031 彩凤小区贸易货栈二单元302户 (1), 1]>
2018-01-31 16:51:18,369 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1032, 1032 宏达五交化三楼305 (1), 1]>
2018-01-31 16:51:18,369 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1033, 1033 运输公司北楼二楼203户 (1), 1]>
2018-01-31 16:51:18,370 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1034, 1034 国家电网旁春娥批零部 (1), 1]>
2018-01-31 16:51:18,370 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1035, 1035 电影院周小红 (1), 1]>
2018-01-31 16:51:18,370 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1036, 1036 青羊山腾飞小区马建楼 (1), 1]>
2018-01-31 16:51:18,370 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1037, 1037 自来水家属楼 (1), 1]>
2018-01-31 16:51:18,370 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1038, 1038 彩凤小区30号贸易货栈 (1), 1]>
2018-01-31 16:51:18,370 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1039, 1039 交警队家属楼 (1), 1]>
2018-01-31 16:51:18,371 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [2001, 2001 阳光花苑 (34), 34]>
2018-01-31 16:51:18,371 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [3001, 3001 滨河花园 (4), 4]>
2018-01-31 16:51:18,371 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [3002, 3002 电力小区 (3), 3]>
2018-01-31 16:51:18,372 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [3003, 3003 交通局家属楼 (2), 2]>
2018-01-31 16:51:18,372 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [3004, 3004 进修校家属区 (4), 4]>
2018-01-31 16:51:18,372 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [3005, 3005 水泵厂 (2), 2]>
2018-01-31 16:51:18,372 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [3006, 3006 小东峪新楼 (1), 1]>
2018-01-31 16:51:18,372 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [3007, 3007 一中 (4), 4]>
2018-01-31 16:51:18,372 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [4001, 4001 地税局 (5), 5]>
2018-01-31 16:51:18,372 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [4002, 4002 林业局家属院 (1), 1]>
2018-01-31 16:51:18,373 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [4003, 4003 妇幼保健院 (2), 2]>
2018-01-31 16:51:18,373 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [4004, 4004 物资局 (6), 6]>
2018-01-31 16:51:18,373 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [4005, 4005 计生服务站家属院 (1), 1]>
2018-01-31 16:51:18,373 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [4006, 4006 党校家属院 (1), 1]>
2018-01-31 16:51:18,374 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [4007, 4007 党校小院 (1), 1]>
2018-01-31 16:51:18,374 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [4008, 4008 饲料公司家属院 (1), 1]>
2018-01-31 16:51:18,374 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [4009, 4009 住建局家属院 (1), 1]>
2018-01-31 16:51:18,374 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [4010, 4010 中小企业局家属院 (1), 1]>
2018-01-31 16:51:18,374 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [4011, 4011 康乐小区 (2), 2]>
2018-01-31 16:51:18,374 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5001, 5001 财政局家属楼 (2), 2]>
2018-01-31 16:51:18,375 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5002, 5002 城关镇卫生所   (1), 1]>
2018-01-31 16:51:18,375 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5003, 5003 城镇工业联合社 (1), 1]>
2018-01-31 16:51:18,376 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5004, 5004 国税局家属楼 (1), 1]>
2018-01-31 16:51:18,376 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5005, 5005 联通公司家属楼 (1), 1]>
2018-01-31 16:51:18,376 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5006, 5006 贸易中心五交化 (2), 2]>
2018-01-31 16:51:18,376 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5007, 5007 农机公司家属楼 (3), 3]>
2018-01-31 16:51:18,376 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5008, 5008 农机站商铺 (1), 1]>
2018-01-31 16:51:18,376 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5009, 5009 青羊镇家属楼及平房 (2), 2]>
2018-01-31 16:51:18,376 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5010, 5010 人保财险家属楼 (2), 2]>
2018-01-31 16:51:18,376 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5011, 5011 木建厂彩凤小区 (4), 4]>
2018-01-31 16:51:18,377 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5012, 5012 实验小学 (2), 2]>
2018-01-31 16:51:18,377 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5013, 5013 农机站土产日杂门市 (1), 1]>
2018-01-31 16:51:18,378 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5014, 5014 土地局家属楼 (1), 1]>
2018-01-31 16:51:18,378 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5015, 5015 外贸公司 (7), 7]>
2018-01-31 16:51:18,378 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5016, 5016 新华书店 (1), 1]>
2018-01-31 16:51:18,378 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5017, 5017 盐业公司家属楼 (1), 1]>
2018-01-31 16:51:18,378 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5018, 5018 移动公司宿舍 (1), 1]>
2018-01-31 16:51:18,378 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5019, 5019 邮政局家属楼 (1), 1]>
2018-01-31 16:51:18,378 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6001, 6001 监察局家属院 (1), 1]>
2018-01-31 16:51:18,378 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6002, 6002 环保局家属院 (1), 1]>
2018-01-31 16:51:18,379 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6003, 6003 生产生活服务中心 (1), 1]>
2018-01-31 16:51:18,379 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6004, 6004 平顺县朝阳小区 (1), 1]>
2018-01-31 16:51:18,379 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6005, 6005 城西工行家属院 (1), 1]>
2018-01-31 16:51:18,379 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6006, 6006 国税局王庄家属院 (1), 1]>
2018-01-31 16:51:18,380 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6007, 6007 石油公司家属院 (2), 2]>
2018-01-31 16:51:18,380 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6008, 6008 司法局家属院 (1), 1]>
2018-01-31 16:51:18,380 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6009, 6009 农委 (2), 2]>
2018-01-31 16:51:18,380 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6010, 6010 康乐苑小区 (3), 3]>
2018-01-31 16:51:18,380 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6011, 6011 民政局西家属院 (1), 1]>
2018-01-31 16:51:18,380 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6012, 6012 农场家属院 (1), 1]>
2018-01-31 16:51:18,380 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6013, 6013 龙山小区 (5), 5]>
2018-01-31 16:51:18,381 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6014, 6014 王庄国税局隔壁 (2), 2]>
2018-01-31 16:51:18,381 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6015, 6015 城关村（春蕾幼儿园片） (1), 1]>
2018-01-31 16:51:18,381 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6016, 6016 加州假日小镇 (6), 6]>
2018-01-31 16:51:18,381 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6017, 6017 平顺县人民剧团家属院 (1), 1]>
2018-01-31 16:51:18,381 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6018, 6018 怡路快捷酒店 (1), 1]>
2018-01-31 16:51:18,381 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6019, 6019 平顺县物资局 (1), 1]>
2018-01-31 16:51:18,381 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7001, 7001 万通苑 (5), 5]>
2018-01-31 16:51:18,381 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7002, 7002 城关新村 (1), 1]>
2018-01-31 16:51:18,382 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7003, 7003 广播电视台旧家属楼 (1), 1]>
2018-01-31 16:51:18,382 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7004, 7004 气象局民用 (1), 1]>
2018-01-31 16:51:18,383 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7005, 7005 紫东家园经济适用房 (16), 16]>
2018-01-31 16:51:18,383 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7006, 7006 小东峪路保障房商铺 (1), 1]>
2018-01-31 16:51:18,383 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7010, 7010 粮贸中心 (5), 5]>
2018-01-31 16:51:18,383 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7011, 7011 安居工程 (1), 1]>
2018-01-31 16:51:18,383 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7012, 7012 种子公司家属楼 (1), 1]>
2018-01-31 16:51:18,384 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7013, 7013 青羊小区 (1), 1]>
2018-01-31 16:51:18,384 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7014, 7014 青羊小区家属院 (1), 1]>
2018-01-31 16:51:18,384 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7015, 7015 粮食局车队 (1), 1]>
2018-01-31 16:51:18,384 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7016, 7016 金港100 (3), 3]>
2018-01-31 16:51:18,385 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7017, 7017 老干居家属楼 (1), 1]>
2018-01-31 16:51:18,385 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [8001, 8001 大修厂 (1), 1]>
2018-01-31 16:51:18,385 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [8002, 8002 冶金公司 (3), 3]>
2018-01-31 16:51:18,385 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [8003, 8003 德盛苑 (9), 9]>
2018-01-31 16:51:18,386 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [8004, 8004 陈卿小区54号 (1), 1]>
2018-01-31 16:51:18,386 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [8005, 8005 青羊家园 (1), 1]>
2018-01-31 16:51:18,386 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [8006, 8006 荣兴加油站 (1), 1]>
2018-01-31 16:51:18,386 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [9999, 9999 银行测试数据 (1), 1]>
2018-01-31 16:51:18,595 DEBUG [java.sql.Connection] - <{conn-100073} Connection>
2018-01-31 16:51:18,595 DEBUG [java.sql.Connection] - <{conn-100073} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-31 16:51:18,595 DEBUG [java.sql.PreparedStatement] - <{pstm-100074} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-31 16:51:18,595 DEBUG [java.sql.PreparedStatement] - <{pstm-100074} Parameters: [100043]>
2018-01-31 16:51:18,595 DEBUG [java.sql.PreparedStatement] - <{pstm-100074} Types: [java.lang.String]>
2018-01-31 16:51:18,597 DEBUG [java.sql.ResultSet] - <{rset-100075} ResultSet>
2018-01-31 16:51:18,597 DEBUG [java.sql.ResultSet] - <{rset-100075} Header: [theme]>
2018-01-31 16:51:18,597 DEBUG [java.sql.ResultSet] - <{rset-100075} Result: [default]>
2018-01-31 16:51:22,769 DEBUG [java.sql.Connection] - <{conn-100076} Connection>
2018-01-31 16:51:22,769 DEBUG [java.sql.Connection] - <{conn-100076} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-31 16:51:22,769 DEBUG [java.sql.PreparedStatement] - <{pstm-100077} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-31 16:51:22,769 DEBUG [java.sql.PreparedStatement] - <{pstm-100077} Parameters: [100043]>
2018-01-31 16:51:22,769 DEBUG [java.sql.PreparedStatement] - <{pstm-100077} Types: [java.lang.String]>
2018-01-31 16:51:22,770 DEBUG [java.sql.ResultSet] - <{rset-100078} ResultSet>
2018-01-31 16:51:22,771 DEBUG [java.sql.ResultSet] - <{rset-100078} Header: [theme]>
2018-01-31 16:51:22,771 DEBUG [java.sql.ResultSet] - <{rset-100078} Result: [default]>
2018-01-31 16:51:23,201 DEBUG [java.sql.Connection] - <{conn-100079} Connection>
2018-01-31 16:51:23,202 DEBUG [java.sql.Connection] - <{conn-100079} Preparing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-31 16:51:23,202 DEBUG [java.sql.PreparedStatement] - <{pstm-100080} Executing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-31 16:51:23,202 DEBUG [java.sql.PreparedStatement] - <{pstm-100080} Parameters: []>
2018-01-31 16:51:23,202 DEBUG [java.sql.PreparedStatement] - <{pstm-100080} Types: []>
2018-01-31 16:51:23,204 DEBUG [java.sql.ResultSet] - <{rset-100081} ResultSet>
2018-01-31 16:51:23,205 DEBUG [java.sql.ResultSet] - <{rset-100081} Header: [value, text]>
2018-01-31 16:51:23,205 DEBUG [java.sql.ResultSet] - <{rset-100081} Result: [A, 供热费]>
2018-01-31 16:51:23,205 DEBUG [java.sql.ResultSet] - <{rset-100081} Result: [B, 入网费]>
2018-01-31 16:51:25,025 DEBUG [java.sql.Connection] - <{conn-100082} Connection>
2018-01-31 16:51:25,028 DEBUG [java.sql.Connection] - <{conn-100082} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE                  (community_code in ('0001') or     building_code in ('0001') or     house_code in ('0001'))                       order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-31 16:51:25,028 DEBUG [java.sql.PreparedStatement] - <{pstm-100083} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE                  (community_code in ('0001') or     building_code in ('0001') or     house_code in ('0001'))                       order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-31 16:51:25,028 DEBUG [java.sql.PreparedStatement] - <{pstm-100083} Parameters: []>
2018-01-31 16:51:25,028 DEBUG [java.sql.PreparedStatement] - <{pstm-100083} Types: []>
2018-01-31 16:51:25,042 DEBUG [java.sql.ResultSet] - <{rset-100084} ResultSet>
2018-01-31 16:51:25,043 DEBUG [java.sql.ResultSet] - <{rset-100084} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-31 16:51:25,043 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [null, 供热费, 2017, 0001-008-01-01-01, A, 0, 01, 0001, 0001-008, 王建方, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, null, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76468, 1]>
2018-01-31 16:51:25,043 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [null, 供热费, 2015, 0001-008-01-01-02, A, 0, 01, 0001, 0001-008, 宋忠义, 1754, 0, 0, 1754, 0, 居民, A1, 16, 109.62, null, 109.62, 2015-11-01, 2016-03-31, 0, 2015-11-01, 2018-01-22, 1753.92, null, 1753.92, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 94086, 2]>
2018-01-31 16:51:25,044 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [null, 供热费, 2016, 0001-008-01-01-02, A, 0, 01, 0001, 0001-008, 宋忠义, 1754, 0, 0, 1754, 0, 居民, A1, 16, 109.62, null, 109.62, 2016-11-01, 2017-03-31, 0, 2016-11-01, 2018-01-22, 1571.51, null, 1571.51, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 94083, 3]>
2018-01-31 16:51:25,044 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [null, 供热费, 2017, 0001-008-01-01-02, A, 0, 01, 0001, 0001-008, 宋忠义, 1754, 0, 0, 1754, 0, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-01-22, 291.15, null, 291.15, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 90654, 4]>
2018-01-31 16:51:25,045 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [null, 供热费, 2017, 0001-008-01-02-01, A, 0, 01, 0001, 0001-008, 李爱书, 1753.92, 0, 0, 1753.92, 1753.92, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 84679, 5]>
2018-01-31 16:51:25,046 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [null, 供热费, 2017, 0001-008-01-02-02, A, 0, 01, 0001, 0001-008, 申刚义, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76449, 6]>
2018-01-31 16:51:25,046 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [null, 供热费, 2017, 0001-008-01-03-01, A, 0, 01, 0001, 0001-008, 李琳, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 84678, 7]>
2018-01-31 16:51:25,046 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [null, 供热费, 2017, 0001-008-01-03-02, A, 0, 01, 0001, 0001-008, 李根才, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 84677, 8]>
2018-01-31 16:51:25,047 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [null, 供热费, 2017, 0001-008-01-04-01, A, 0, 01, 0001, 0001-008, 李保青, 1753.92, 0, 0, 1753.92, 1753.92, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-01-22, 291, 291.15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 90653, 9]>
2018-01-31 16:51:25,048 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [null, 供热费, 2017, 0001-008-01-04-02, A, 0, 01, 0001, 0001-008, 王慧玲, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76453, 10]>
2018-01-31 16:51:25,048 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [null, 供热费, 2017, 0001-008-02-01-01, A, 0, 01, 0001, 0001-008, 马爱英, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 84675, 11]>
2018-01-31 16:51:25,049 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [null, 供热费, 2017, 0001-008-02-01-02, A, 0, 01, 0001, 0001-008, 王丽娟, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76455, 12]>
2018-01-31 16:51:25,049 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [null, 供热费, 2017, 0001-008-02-02-01, A, 0, 01, 0001, 0001-008, 刘红亮, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76456, 13]>
2018-01-31 16:51:25,050 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [null, 供热费, 2017, 0001-008-02-02-02, A, 0, 01, 0001, 0001-008, 孔文建, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76457, 14]>
2018-01-31 16:51:25,051 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [null, 供热费, 2017, 0001-008-02-03-01, A, 0, 01, 0001, 0001-008, 张小红, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76458, 15]>
2018-01-31 16:51:25,051 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [null, 供热费, 2017, 0001-008-02-03-02, A, 0, 01, 0001, 0001-008, 曹恒文, 1753.92, 0, 0, 1753.92, 1753.92, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 84674, 16]>
2018-01-31 16:51:25,052 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [null, 供热费, 2017, 0001-008-02-04-01, A, 0, 01, 0001, 0001-008, 郭建中, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76460, 17]>
2018-01-31 16:51:25,052 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [null, 供热费, 2017, 0001-008-02-04-02, A, 0, 01, 0001, 0001-008, 杨书贤, 1753.92, 0, 0, 1753.92, 1753.92, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 84673, 18]>
2018-01-31 16:51:25,053 DEBUG [java.sql.Connection] - <{conn-100085} Connection>
2018-01-31 16:51:25,054 DEBUG [java.sql.Connection] - <{conn-100085} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE                  (community_code in ('0001') or     building_code in ('0001') or     house_code in ('0001'))                     >
2018-01-31 16:51:25,054 DEBUG [java.sql.PreparedStatement] - <{pstm-100086} Executing Statement:    select count(*)    from SF_CHARGE    WHERE                  (community_code in ('0001') or     building_code in ('0001') or     house_code in ('0001'))                     >
2018-01-31 16:51:25,054 DEBUG [java.sql.PreparedStatement] - <{pstm-100086} Parameters: []>
2018-01-31 16:51:25,055 DEBUG [java.sql.PreparedStatement] - <{pstm-100086} Types: []>
2018-01-31 16:51:25,060 DEBUG [java.sql.ResultSet] - <{rset-100087} ResultSet>
2018-01-31 16:51:25,060 DEBUG [java.sql.ResultSet] - <{rset-100087} Header: [count(*)]>
2018-01-31 16:51:25,060 DEBUG [java.sql.ResultSet] - <{rset-100087} Result: [18]>
2018-01-31 16:51:25,185 DEBUG [java.sql.Connection] - <{conn-100088} Connection>
2018-01-31 16:51:25,186 DEBUG [java.sql.Connection] - <{conn-100088} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE                  (community_code in ('0001') or     building_code in ('0001') or     house_code in ('0001'))                 >
2018-01-31 16:51:25,188 DEBUG [java.sql.PreparedStatement] - <{pstm-100089} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE                  (community_code in ('0001') or     building_code in ('0001') or     house_code in ('0001'))                 >
2018-01-31 16:51:25,188 DEBUG [java.sql.PreparedStatement] - <{pstm-100089} Parameters: []>
2018-01-31 16:51:25,188 DEBUG [java.sql.PreparedStatement] - <{pstm-100089} Types: []>
2018-01-31 16:51:25,195 DEBUG [java.sql.ResultSet] - <{rset-100090} ResultSet>
2018-01-31 16:51:25,195 DEBUG [java.sql.ResultSet] - <{rset-100090} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-01-31 16:51:25,195 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [共18, 31570.8, 0, 0, 31570.8, 26309.68, 1863.54, null, 1973.16, 3907.58, 291.15, 3616.58, 0, 0]>
2018-01-31 16:51:54,506 DEBUG [java.sql.Connection] - <{conn-100091} Connection>
2018-01-31 16:51:54,506 DEBUG [java.sql.Connection] - <{conn-100091} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-31 16:51:54,506 DEBUG [java.sql.PreparedStatement] - <{pstm-100092} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-31 16:51:54,507 DEBUG [java.sql.PreparedStatement] - <{pstm-100092} Parameters: [100043]>
2018-01-31 16:51:54,507 DEBUG [java.sql.PreparedStatement] - <{pstm-100092} Types: [java.lang.String]>
2018-01-31 16:51:54,507 DEBUG [java.sql.ResultSet] - <{rset-100093} ResultSet>
2018-01-31 16:51:54,508 DEBUG [java.sql.ResultSet] - <{rset-100093} Header: [theme]>
2018-01-31 16:51:54,508 DEBUG [java.sql.ResultSet] - <{rset-100093} Result: [default]>
2018-01-31 16:51:55,218 DEBUG [java.sql.Connection] - <{conn-100094} Connection>
2018-01-31 16:51:55,219 DEBUG [java.sql.Connection] - <{conn-100094} Preparing Statement:    SELECT stat_id value,stat_name text   FROM   fc_station  >
2018-01-31 16:51:55,219 DEBUG [java.sql.PreparedStatement] - <{pstm-100095} Executing Statement:    SELECT stat_id value,stat_name text   FROM   fc_station  >
2018-01-31 16:51:55,219 DEBUG [java.sql.PreparedStatement] - <{pstm-100095} Parameters: []>
2018-01-31 16:51:55,219 DEBUG [java.sql.PreparedStatement] - <{pstm-100095} Types: []>
2018-01-31 16:51:55,222 DEBUG [java.sql.Connection] - <{conn-100096} Connection>
2018-01-31 16:51:55,222 DEBUG [java.sql.ResultSet] - <{rset-100097} ResultSet>
2018-01-31 16:51:55,223 DEBUG [java.sql.ResultSet] - <{rset-100097} Header: [value, text]>
2018-01-31 16:51:55,223 DEBUG [java.sql.ResultSet] - <{rset-100097} Result: [0002, 二中站]>
2018-01-31 16:51:55,223 DEBUG [java.sql.ResultSet] - <{rset-100097} Result: [0003, 一中站]>
2018-01-31 16:51:55,223 DEBUG [java.sql.ResultSet] - <{rset-100097} Result: [0001, 滨河湾站]>
2018-01-31 16:51:55,223 DEBUG [java.sql.ResultSet] - <{rset-100097} Result: [0004, 保障房站]>
2018-01-31 16:51:55,308 DEBUG [java.sql.ResultSet] - <{rset-100097} Result: [0005, 公路段]>
2018-01-31 16:51:55,309 DEBUG [java.sql.ResultSet] - <{rset-100097} Result: [0006, 德胜苑]>
2018-01-31 16:51:55,309 DEBUG [java.sql.ResultSet] - <{rset-100097} Result: [0007, 工会]>
2018-01-31 16:51:55,310 DEBUG [java.sql.ResultSet] - <{rset-100097} Result: [0008, 政府站]>
2018-01-31 16:51:55,310 DEBUG [java.sql.ResultSet] - <{rset-100097} Result: [0009, 农机站]>
2018-01-31 16:51:55,311 DEBUG [java.sql.Connection] - <{conn-100096} Preparing Statement:    SELECT userid value,username text   FROM eauser    >
2018-01-31 16:51:55,312 DEBUG [java.sql.PreparedStatement] - <{pstm-100098} Executing Statement:    SELECT userid value,username text   FROM eauser    >
2018-01-31 16:51:55,312 DEBUG [java.sql.ResultSet] - <{rset-100097} Result: [0010, 制药厂]>
2018-01-31 16:51:55,313 DEBUG [java.sql.ResultSet] - <{rset-100097} Result: [0011, 彩凤站]>
2018-01-31 16:51:55,313 DEBUG [java.sql.ResultSet] - <{rset-100097} Result: [0012, 美特好站]>
2018-01-31 16:51:55,314 DEBUG [java.sql.PreparedStatement] - <{pstm-100098} Parameters: []>
2018-01-31 16:51:55,314 DEBUG [java.sql.PreparedStatement] - <{pstm-100098} Types: []>
2018-01-31 16:51:55,320 DEBUG [java.sql.ResultSet] - <{rset-100099} ResultSet>
2018-01-31 16:51:55,320 DEBUG [java.sql.ResultSet] - <{rset-100099} Header: [value, text]>
2018-01-31 16:51:55,320 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100000, 超级用户]>
2018-01-31 16:51:55,320 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100001, 开发人员]>
2018-01-31 16:51:55,320 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100043, 管理员]>
2018-01-31 16:51:55,320 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100056, 平顺农商行查询用户]>
2018-01-31 16:51:55,321 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100047, 农村信用社]>
2018-01-31 16:51:55,321 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100048, 收费员1]>
2018-01-31 16:51:55,321 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100049, 王赟]>
2018-01-31 16:51:55,321 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100050, 申星]>
2018-01-31 16:51:55,321 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100051, 桑亚琴]>
2018-01-31 16:51:55,322 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100052, 原琳茹]>
2018-01-31 16:51:55,322 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100057, 营业部]>
2018-01-31 16:51:55,322 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100058, 青羊支行]>
2018-01-31 16:51:55,322 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100055, 王海燕]>
2018-01-31 16:51:55,322 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100059, 王庄支行]>
2018-01-31 16:51:55,322 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100060, 府前支行]>
2018-01-31 16:51:55,322 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100061, 东昇支行]>
2018-01-31 16:51:55,322 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100062, 北社支行]>
2018-01-31 16:51:55,323 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100063, 苗庄支行]>
2018-01-31 16:51:55,323 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100064, 西沟支行]>
2018-01-31 16:51:55,323 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100065, 龙镇支行]>
2018-01-31 16:51:55,324 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100066, 新城支行]>
2018-01-31 16:51:55,324 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100067, 杏城支行]>
2018-01-31 16:51:55,324 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100068, 东寺头支行]>
2018-01-31 16:51:55,324 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100069, 虹梯关支行]>
2018-01-31 16:51:55,324 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100070, 中五井支行]>
2018-01-31 16:51:55,324 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100071, 北耽车支行]>
2018-01-31 16:51:55,324 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100072, 阳高支行]>
2018-01-31 16:51:55,324 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [100073, 石城支行]>
2018-01-31 16:51:55,335 DEBUG [java.sql.Connection] - <{conn-100100} Connection>
2018-01-31 16:51:55,336 DEBUG [java.sql.Connection] - <{conn-100100} Preparing Statement:    SELECT STANDARD_ID value,STANDARD_NAME text   FROM SF_STANDARD    where item_code=? and standyear=(select current_year from sf_item where item_code=? )   order by STANDARD_ID  >
2018-01-31 16:51:55,336 DEBUG [java.sql.PreparedStatement] - <{pstm-100101} Executing Statement:    SELECT STANDARD_ID value,STANDARD_NAME text   FROM SF_STANDARD    where item_code=? and standyear=(select current_year from sf_item where item_code=? )   order by STANDARD_ID  >
2018-01-31 16:51:55,336 DEBUG [java.sql.PreparedStatement] - <{pstm-100101} Parameters: [A, A]>
2018-01-31 16:51:55,336 DEBUG [java.sql.PreparedStatement] - <{pstm-100101} Types: [java.lang.String, java.lang.String]>
2018-01-31 16:51:55,341 DEBUG [java.sql.ResultSet] - <{rset-100102} ResultSet>
2018-01-31 16:51:55,341 DEBUG [java.sql.ResultSet] - <{rset-100102} Header: [value, text]>
2018-01-31 16:51:55,342 DEBUG [java.sql.ResultSet] - <{rset-100102} Result: [A1, 居民]>
2018-01-31 16:51:55,342 DEBUG [java.sql.ResultSet] - <{rset-100102} Result: [A2, 公用]>
2018-01-31 16:51:55,342 DEBUG [java.sql.ResultSet] - <{rset-100102} Result: [A3, 商铺]>
2018-01-31 16:51:55,422 DEBUG [java.sql.Connection] - <{conn-100103} Connection>
2018-01-31 16:51:55,423 DEBUG [java.sql.Connection] - <{conn-100103} Preparing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-01-31 16:51:55,423 DEBUG [java.sql.PreparedStatement] - <{pstm-100104} Executing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-01-31 16:51:55,424 DEBUG [java.sql.PreparedStatement] - <{pstm-100104} Parameters: [, , , , , ]>
2018-01-31 16:51:55,424 DEBUG [java.sql.PreparedStatement] - <{pstm-100104} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-31 16:51:55,479 DEBUG [java.sql.ResultSet] - <{rset-100105} ResultSet>
2018-01-31 16:51:55,596 DEBUG [java.sql.Connection] - <{conn-100106} Connection>
2018-01-31 16:51:55,597 DEBUG [java.sql.Connection] - <{conn-100106} Preparing Statement:    SELECT building_code as id, building_code||' '||building_name||' ('||house_count||')' as text,nvl(house_count,0) as child_Count   FROM fc_building a WHERE   a.community_code = '0001'  order by building_code  >
2018-01-31 16:51:55,599 DEBUG [java.sql.PreparedStatement] - <{pstm-100107} Executing Statement:    SELECT building_code as id, building_code||' '||building_name||' ('||house_count||')' as text,nvl(house_count,0) as child_Count   FROM fc_building a WHERE   a.community_code = '0001'  order by building_code  >
2018-01-31 16:51:55,600 DEBUG [java.sql.PreparedStatement] - <{pstm-100107} Parameters: []>
2018-01-31 16:51:55,600 DEBUG [java.sql.PreparedStatement] - <{pstm-100107} Types: []>
2018-01-31 16:51:55,603 DEBUG [java.sql.ResultSet] - <{rset-100108} ResultSet>
2018-01-31 16:51:55,603 DEBUG [java.sql.ResultSet] - <{rset-100108} Header: [id, text, child_count]>
2018-01-31 16:51:55,603 DEBUG [java.sql.ResultSet] - <{rset-100108} Result: [0001-008, 0001-008 8号楼 (17), 17]>
2018-01-31 16:51:56,369 DEBUG [java.sql.Connection] - <{conn-100109} Connection>
2018-01-31 16:51:56,370 DEBUG [java.sql.Connection] - <{conn-100109} Preparing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0001-008'   order by a.house_code  >
2018-01-31 16:51:56,370 DEBUG [java.sql.PreparedStatement] - <{pstm-100110} Executing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0001-008'   order by a.house_code  >
2018-01-31 16:51:56,371 DEBUG [java.sql.PreparedStatement] - <{pstm-100110} Parameters: []>
2018-01-31 16:51:56,371 DEBUG [java.sql.PreparedStatement] - <{pstm-100110} Types: []>
2018-01-31 16:51:56,476 DEBUG [java.sql.ResultSet] - <{rset-100111} ResultSet>
2018-01-31 16:51:56,476 DEBUG [java.sql.ResultSet] - <{rset-100111} Header: [id, text, child_count]>
2018-01-31 16:51:56,476 DEBUG [java.sql.ResultSet] - <{rset-100111} Result: [0001-008-01-01-01, 01-01-01 王建方, 0]>
2018-01-31 16:51:56,476 DEBUG [java.sql.ResultSet] - <{rset-100111} Result: [0001-008-01-01-02, 01-01-02 宋忠义, 0]>
2018-01-31 16:51:56,476 DEBUG [java.sql.ResultSet] - <{rset-100111} Result: [0001-008-01-02-01, 01-02-01 李爱书, 0]>
2018-01-31 16:51:56,476 DEBUG [java.sql.ResultSet] - <{rset-100111} Result: [0001-008-01-02-02, 01-02-02 申刚义, 0]>
2018-01-31 16:51:56,476 DEBUG [java.sql.ResultSet] - <{rset-100111} Result: [0001-008-01-03-01, 01-03-01 李琳, 0]>
2018-01-31 16:51:56,476 DEBUG [java.sql.ResultSet] - <{rset-100111} Result: [0001-008-01-03-02, 01-03-02 李根才, 0]>
2018-01-31 16:51:56,476 DEBUG [java.sql.ResultSet] - <{rset-100111} Result: [0001-008-01-04-01, 01-04-01 李保青, 0]>
2018-01-31 16:51:56,476 DEBUG [java.sql.ResultSet] - <{rset-100111} Result: [0001-008-01-04-02, 01-04-02 王慧玲, 0]>
2018-01-31 16:51:56,476 DEBUG [java.sql.ResultSet] - <{rset-100111} Result: [0001-008-02-01-01, 02-01-01 马爱英, 0]>
2018-01-31 16:51:56,477 DEBUG [java.sql.ResultSet] - <{rset-100111} Result: [0001-008-02-01-02, 02-01-02 王丽娟, 0]>
2018-01-31 16:51:56,477 DEBUG [java.sql.ResultSet] - <{rset-100111} Result: [0001-008-02-02-01, 02-02-01 刘红亮, 0]>
2018-01-31 16:51:56,477 DEBUG [java.sql.ResultSet] - <{rset-100111} Result: [0001-008-02-02-02, 02-02-02 孔文建, 0]>
2018-01-31 16:51:56,477 DEBUG [java.sql.ResultSet] - <{rset-100111} Result: [0001-008-02-03-01, 02-03-01 张小红, 0]>
2018-01-31 16:51:56,478 DEBUG [java.sql.ResultSet] - <{rset-100111} Result: [0001-008-02-03-02, 02-03-02 曹恒文, 0]>
2018-01-31 16:51:56,478 DEBUG [java.sql.ResultSet] - <{rset-100111} Result: [0001-008-02-04-01, 02-04-01 郭建中, 0]>
2018-01-31 16:51:56,478 DEBUG [java.sql.ResultSet] - <{rset-100111} Result: [0001-008-02-04-02, 02-04-02 杨书贤, 0]>
2018-01-31 16:51:57,467 DEBUG [java.sql.Connection] - <{conn-100112} Connection>
2018-01-31 16:51:57,469 DEBUG [java.sql.Connection] - <{conn-100112} Preparing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-01-31 16:51:57,469 DEBUG [java.sql.PreparedStatement] - <{pstm-100113} Executing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-01-31 16:51:57,469 DEBUG [java.sql.PreparedStatement] - <{pstm-100113} Parameters: [0001-008-01-01-01, 0001-008-01-01-01, 0001-008-01-01-01, 0001-008-01-01-01, 0001-008-01-01-01, 0001-008-01-01-01]>
2018-01-31 16:51:57,469 DEBUG [java.sql.PreparedStatement] - <{pstm-100113} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-31 16:51:57,631 DEBUG [java.sql.ResultSet] - <{rset-100114} ResultSet>
2018-01-31 16:51:57,633 DEBUG [java.sql.ResultSet] - <{rset-100114} Header: [h_cell_code, h_floor, h_door_code, h_house_code, h_card_id, h_cluster_code, h_contact_man, h_house_manager_name, h_house_manager, h_owner_name, h_address, h_intoweb_date, h_telephone, h_stat_name, h_stat_id, h_enter_date, h_work_unit, h_apart_status, h_user_kind, h_heat_status, h_intoweb_area, h_mobilephone, h_area_count, h_intoweb_year, h_item_code, h_area_id, h_use_type, h_standard_id, h_standard_name, h_build_area, h_floor_height, h_super_area, h_charge_area, h_item_code1, h_area_id1, h_use_type1, h_standard_id1, h_standard_name1, h_build_area1, h_floor_height1, h_super_area1, h_charge_area1, h_item_code2, h_area_id2, h_use_type2, h_standard_id2, h_standard_name2, h_build_area2, h_floor_height2, h_super_area2, h_charge_area2, h_item_code3, h_area_id3, h_use_type3, h_standard_id3, h_standard_name3, h_build_area3, h_floor_height3, h_super_area3, h_charge_area3, h_item_code4, h_area_id4, h_use_type4, h_standard_id4, h_standard_name4, h_build_area4, h_floor_height4, h_super_area4, h_charge_area4, h_remark]>
2018-01-31 16:51:57,633 DEBUG [java.sql.ResultSet] - <{rset-100114} Result: [01, 01, 01, 0001-008-01-01-01, null, null, null, null, null, 王建方, 冶矿中心8号楼101室, null, null, 公路段, 0005, 2000-01-01, null, null, null, null, null, 13935569475, 1, null, A, 0, 居民, A1, 居民, null, null, null, 109.62, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-01-31 16:52:26,579 DEBUG [java.sql.Connection] - <{conn-100115} Connection>
2018-01-31 16:52:26,580 DEBUG [java.sql.Connection] - <{conn-100115} Preparing Statement:    SELECT count(*) count   FROM   fc_house  where house_code=?||'-'||?||'-'||?||'-'||?  >
2018-01-31 16:52:26,580 DEBUG [java.sql.PreparedStatement] - <{pstm-100116} Executing Statement:    SELECT count(*) count   FROM   fc_house  where house_code=?||'-'||?||'-'||?||'-'||?  >
2018-01-31 16:52:26,580 DEBUG [java.sql.PreparedStatement] - <{pstm-100116} Parameters: [0001-008, 02, 04, 03]>
2018-01-31 16:52:26,581 DEBUG [java.sql.PreparedStatement] - <{pstm-100116} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-31 16:52:26,614 DEBUG [java.sql.ResultSet] - <{rset-100117} ResultSet>
2018-01-31 16:52:26,614 DEBUG [java.sql.ResultSet] - <{rset-100117} Header: [count]>
2018-01-31 16:52:26,614 DEBUG [java.sql.ResultSet] - <{rset-100117} Result: [0]>
2018-01-31 16:52:26,614 DEBUG [java.sql.Connection] - <{conn-100118} Connection>
2018-01-31 16:52:26,615 DEBUG [java.sql.Connection] - <{conn-100118} Preparing Statement:    insert into fc_house(   community_code,   building_code,   house_code,   cell_code,   floor,   door_code,   card_id,   cluster_code,   house_manager,   address,   intoweb_date,   intoweb_area,   stat_id,   apart_status,   user_kind ,   heat_status,cid,operator,operate_date,remark)values(   ?,   ?,   ?||'-'||?||'-'||?||'-'||?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,?,   to_char(sysdate,'YYYY-MM-DD HH24:MI:SS'),   ?)  >
2018-01-31 16:52:26,615 DEBUG [java.sql.PreparedStatement] - <{pstm-100119} Executing Statement:    insert into fc_house(   community_code,   building_code,   house_code,   cell_code,   floor,   door_code,   card_id,   cluster_code,   house_manager,   address,   intoweb_date,   intoweb_area,   stat_id,   apart_status,   user_kind ,   heat_status,cid,operator,operate_date,remark)values(   ?,   ?,   ?||'-'||?||'-'||?||'-'||?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,?,   to_char(sysdate,'YYYY-MM-DD HH24:MI:SS'),   ?)  >
2018-01-31 16:52:26,615 DEBUG [java.sql.PreparedStatement] - <{pstm-100119} Parameters: [0001, 0001-008, 0001-008, 02, 04, 03, 02, 04, 03, , , , , , , , , , , 01, 100043, ]>
2018-01-31 16:52:26,615 DEBUG [java.sql.PreparedStatement] - <{pstm-100119} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-31 16:52:26,633 DEBUG [java.sql.Connection] - <{conn-100120} Connection>
2018-01-31 16:52:26,634 DEBUG [java.sql.Connection] - <{conn-100120} Preparing Statement:    insert into fc_owner(   community_code,   building_code,   house_code,   contact_man,   owner_name,   telephone,   mobilephone,   enter_date,   work_unit,   cid,   operator,   operate_date)values(   ?,   ?,   ?||'-'||?||'-'||?||'-'||?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,?,   to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')   )  >
2018-01-31 16:52:26,634 DEBUG [java.sql.PreparedStatement] - <{pstm-100121} Executing Statement:    insert into fc_owner(   community_code,   building_code,   house_code,   contact_man,   owner_name,   telephone,   mobilephone,   enter_date,   work_unit,   cid,   operator,   operate_date)values(   ?,   ?,   ?||'-'||?||'-'||?||'-'||?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,?,   to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')   )  >
2018-01-31 16:52:26,634 DEBUG [java.sql.PreparedStatement] - <{pstm-100121} Parameters: [0001, 0001-008, 0001-008, 02, 04, 03, , 测试, , , 2018-01-01, , 01, 100043]>
2018-01-31 16:52:26,635 DEBUG [java.sql.PreparedStatement] - <{pstm-100121} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-31 16:52:26,645 DEBUG [java.sql.Connection] - <{conn-100122} Connection>
2018-01-31 16:52:26,646 DEBUG [java.sql.Connection] - <{conn-100122} Preparing Statement:    insert into fc_area(   community_code,   building_code,   house_code,   item_code,   area_id,   use_type,   standard_id,   build_area,   floor_height,   super_area,   charge_area,   cid,   operator,   operate_date)values(   ?,   ?,   ?||'-'||?||'-'||?||'-'||?,   ?,   ?,   ?,   (select standard_id from sf_standard where (standard_name=? or standard_id=?)  and standyear=(select current_year from sf_item where item_code='A')),   ?,   ?,   ?,   ?,   ?,?,   to_char(sysdate,'YYYY-MM-DD HH24:MI:SS'))  >
2018-01-31 16:52:26,648 DEBUG [java.sql.PreparedStatement] - <{pstm-100123} Executing Statement:    insert into fc_area(   community_code,   building_code,   house_code,   item_code,   area_id,   use_type,   standard_id,   build_area,   floor_height,   super_area,   charge_area,   cid,   operator,   operate_date)values(   ?,   ?,   ?||'-'||?||'-'||?||'-'||?,   ?,   ?,   ?,   (select standard_id from sf_standard where (standard_name=? or standard_id=?)  and standyear=(select current_year from sf_item where item_code='A')),   ?,   ?,   ?,   ?,   ?,?,   to_char(sysdate,'YYYY-MM-DD HH24:MI:SS'))  >
2018-01-31 16:52:26,648 DEBUG [java.sql.PreparedStatement] - <{pstm-100123} Parameters: [0001, 0001-008, 0001-008, 02, 04, 03, A, 0, , A1, A1, , , , 0, 01, 100043]>
2018-01-31 16:52:26,648 DEBUG [java.sql.PreparedStatement] - <{pstm-100123} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.lang.String]>
2018-01-31 16:52:26,676 DEBUG [java.sql.Connection] - <{conn-100124} Connection>
2018-01-31 16:52:26,677 DEBUG [java.sql.Connection] - <{conn-100124} Preparing Statement:    UPDATE fc_building SET    house_count=(select count(*) from fc_house where BUILDING_CODE = ? and IS_DESTORY='0')   WHERE BUILDING_CODE = ?    >
2018-01-31 16:52:26,677 DEBUG [java.sql.PreparedStatement] - <{pstm-100125} Executing Statement:    UPDATE fc_building SET    house_count=(select count(*) from fc_house where BUILDING_CODE = ? and IS_DESTORY='0')   WHERE BUILDING_CODE = ?    >
2018-01-31 16:52:26,677 DEBUG [java.sql.PreparedStatement] - <{pstm-100125} Parameters: [0001-008, 0001-008]>
2018-01-31 16:52:26,677 DEBUG [java.sql.PreparedStatement] - <{pstm-100125} Types: [java.lang.String, java.lang.String]>
2018-01-31 16:52:26,681 DEBUG [java.sql.Connection] - <{conn-100126} Connection>
2018-01-31 16:52:26,681 DEBUG [java.sql.Connection] - <{conn-100126} Preparing Statement:    UPDATE fc_community SET    house_count=(select count(*) from fc_house where COMMUNITY_CODE = ? and IS_DESTORY='0')   WHERE COMMUNITY_CODE = ?    >
2018-01-31 16:52:26,682 DEBUG [java.sql.PreparedStatement] - <{pstm-100127} Executing Statement:    UPDATE fc_community SET    house_count=(select count(*) from fc_house where COMMUNITY_CODE = ? and IS_DESTORY='0')   WHERE COMMUNITY_CODE = ?    >
2018-01-31 16:52:26,682 DEBUG [java.sql.PreparedStatement] - <{pstm-100127} Parameters: [0001, 0001]>
2018-01-31 16:52:26,682 DEBUG [java.sql.PreparedStatement] - <{pstm-100127} Types: [java.lang.String, java.lang.String]>
2018-01-31 16:52:26,842 DEBUG [java.sql.Connection] - <{conn-100128} Connection>
2018-01-31 16:52:26,842 DEBUG [java.sql.Connection] - <{conn-100128} Preparing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0001-008'   order by a.house_code  >
2018-01-31 16:52:26,842 DEBUG [java.sql.PreparedStatement] - <{pstm-100129} Executing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0001-008'   order by a.house_code  >
2018-01-31 16:52:26,842 DEBUG [java.sql.PreparedStatement] - <{pstm-100129} Parameters: []>
2018-01-31 16:52:26,842 DEBUG [java.sql.PreparedStatement] - <{pstm-100129} Types: []>
2018-01-31 16:52:26,844 DEBUG [java.sql.ResultSet] - <{rset-100130} ResultSet>
2018-01-31 16:52:26,845 DEBUG [java.sql.ResultSet] - <{rset-100130} Header: [id, text, child_count]>
2018-01-31 16:52:26,845 DEBUG [java.sql.ResultSet] - <{rset-100130} Result: [0001-008-01-01-01, 01-01-01 王建方, 0]>
2018-01-31 16:52:26,845 DEBUG [java.sql.ResultSet] - <{rset-100130} Result: [0001-008-01-01-02, 01-01-02 宋忠义, 0]>
2018-01-31 16:52:26,845 DEBUG [java.sql.ResultSet] - <{rset-100130} Result: [0001-008-01-02-01, 01-02-01 李爱书, 0]>
2018-01-31 16:52:26,845 DEBUG [java.sql.ResultSet] - <{rset-100130} Result: [0001-008-01-02-02, 01-02-02 申刚义, 0]>
2018-01-31 16:52:26,845 DEBUG [java.sql.ResultSet] - <{rset-100130} Result: [0001-008-01-03-01, 01-03-01 李琳, 0]>
2018-01-31 16:52:26,845 DEBUG [java.sql.ResultSet] - <{rset-100130} Result: [0001-008-01-03-02, 01-03-02 李根才, 0]>
2018-01-31 16:52:26,845 DEBUG [java.sql.ResultSet] - <{rset-100130} Result: [0001-008-01-04-01, 01-04-01 李保青, 0]>
2018-01-31 16:52:26,846 DEBUG [java.sql.ResultSet] - <{rset-100130} Result: [0001-008-01-04-02, 01-04-02 王慧玲, 0]>
2018-01-31 16:52:26,846 DEBUG [java.sql.ResultSet] - <{rset-100130} Result: [0001-008-02-01-01, 02-01-01 马爱英, 0]>
2018-01-31 16:52:26,846 DEBUG [java.sql.ResultSet] - <{rset-100130} Result: [0001-008-02-01-02, 02-01-02 王丽娟, 0]>
2018-01-31 16:52:26,846 DEBUG [java.sql.ResultSet] - <{rset-100130} Result: [0001-008-02-02-01, 02-02-01 刘红亮, 0]>
2018-01-31 16:52:26,847 DEBUG [java.sql.ResultSet] - <{rset-100130} Result: [0001-008-02-02-02, 02-02-02 孔文建, 0]>
2018-01-31 16:52:26,847 DEBUG [java.sql.ResultSet] - <{rset-100130} Result: [0001-008-02-03-01, 02-03-01 张小红, 0]>
2018-01-31 16:52:26,847 DEBUG [java.sql.ResultSet] - <{rset-100130} Result: [0001-008-02-03-02, 02-03-02 曹恒文, 0]>
2018-01-31 16:52:26,847 DEBUG [java.sql.ResultSet] - <{rset-100130} Result: [0001-008-02-04-01, 02-04-01 郭建中, 0]>
2018-01-31 16:52:26,847 DEBUG [java.sql.ResultSet] - <{rset-100130} Result: [0001-008-02-04-02, 02-04-02 杨书贤, 0]>
2018-01-31 16:52:26,847 DEBUG [java.sql.ResultSet] - <{rset-100130} Result: [0001-008-02-04-03, 02-04-03 测试, 0]>
2018-01-31 16:52:27,185 DEBUG [java.sql.Connection] - <{conn-100131} Connection>
2018-01-31 16:52:27,185 DEBUG [java.sql.Connection] - <{conn-100131} Preparing Statement:    SELECT building_code,building_name,a.stat_id bu_stat_id,b.stat_name bu_stat_name,   a.house_manager bu_house_manager,c.USERNAME bu_manager_name   FROM   fc_building a,fc_station b,EAUSER c  where building_code= ?    and a.stat_id=b.stat_id(+) and a.house_manager=c.USERID(+)  >
2018-01-31 16:52:27,185 DEBUG [java.sql.PreparedStatement] - <{pstm-100132} Executing Statement:    SELECT building_code,building_name,a.stat_id bu_stat_id,b.stat_name bu_stat_name,   a.house_manager bu_house_manager,c.USERNAME bu_manager_name   FROM   fc_building a,fc_station b,EAUSER c  where building_code= ?    and a.stat_id=b.stat_id(+) and a.house_manager=c.USERID(+)  >
2018-01-31 16:52:27,186 DEBUG [java.sql.PreparedStatement] - <{pstm-100132} Parameters: [0001-008]>
2018-01-31 16:52:27,186 DEBUG [java.sql.PreparedStatement] - <{pstm-100132} Types: [java.lang.String]>
2018-01-31 16:52:27,188 DEBUG [java.sql.ResultSet] - <{rset-100133} ResultSet>
2018-01-31 16:52:27,189 DEBUG [java.sql.ResultSet] - <{rset-100133} Header: [building_code, building_name, bu_stat_id, bu_stat_name, bu_house_manager, bu_manager_name]>
2018-01-31 16:52:27,189 DEBUG [java.sql.ResultSet] - <{rset-100133} Result: [0001-008, 8号楼, 0005, 公路段, null, null]>
2018-01-31 16:52:31,194 DEBUG [java.sql.Connection] - <{conn-100134} Connection>
2018-01-31 16:52:31,197 DEBUG [java.sql.Connection] - <{conn-100134} Preparing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-01-31 16:52:31,197 DEBUG [java.sql.PreparedStatement] - <{pstm-100135} Executing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-01-31 16:52:31,197 DEBUG [java.sql.PreparedStatement] - <{pstm-100135} Parameters: [0001-008-02-04-03, 0001-008-02-04-03, 0001-008-02-04-03, 0001-008-02-04-03, 0001-008-02-04-03, 0001-008-02-04-03]>
2018-01-31 16:52:31,197 DEBUG [java.sql.PreparedStatement] - <{pstm-100135} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-31 16:52:31,200 DEBUG [java.sql.ResultSet] - <{rset-100136} ResultSet>
2018-01-31 16:52:31,201 DEBUG [java.sql.ResultSet] - <{rset-100136} Header: [h_cell_code, h_floor, h_door_code, h_house_code, h_card_id, h_cluster_code, h_contact_man, h_house_manager_name, h_house_manager, h_owner_name, h_address, h_intoweb_date, h_telephone, h_stat_name, h_stat_id, h_enter_date, h_work_unit, h_apart_status, h_user_kind, h_heat_status, h_intoweb_area, h_mobilephone, h_area_count, h_intoweb_year, h_item_code, h_area_id, h_use_type, h_standard_id, h_standard_name, h_build_area, h_floor_height, h_super_area, h_charge_area, h_item_code1, h_area_id1, h_use_type1, h_standard_id1, h_standard_name1, h_build_area1, h_floor_height1, h_super_area1, h_charge_area1, h_item_code2, h_area_id2, h_use_type2, h_standard_id2, h_standard_name2, h_build_area2, h_floor_height2, h_super_area2, h_charge_area2, h_item_code3, h_area_id3, h_use_type3, h_standard_id3, h_standard_name3, h_build_area3, h_floor_height3, h_super_area3, h_charge_area3, h_item_code4, h_area_id4, h_use_type4, h_standard_id4, h_standard_name4, h_build_area4, h_floor_height4, h_super_area4, h_charge_area4, h_remark]>
2018-01-31 16:52:31,201 DEBUG [java.sql.ResultSet] - <{rset-100136} Result: [02, 04, 03, 0001-008-02-04-03, null, null, null, null, null, 测试, null, null, null, null, null, 2018-01-01, null, null, null, null, null, null, 1, null, A, 0, null, A1, 居民, null, null, null, 0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-01-31 16:52:40,095 DEBUG [java.sql.Connection] - <{conn-100137} Connection>
2018-01-31 16:52:40,095 DEBUG [java.sql.Connection] - <{conn-100137} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-01-31 16:52:40,177 DEBUG [java.sql.PreparedStatement] - <{pstm-100138} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-01-31 16:52:40,177 DEBUG [java.sql.PreparedStatement] - <{pstm-100138} Parameters: [A, 2017, '0001','0001-008-02-04-03', 1, 100043]>
2018-01-31 16:52:40,177 DEBUG [java.sql.PreparedStatement] - <{pstm-100138} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-31 16:52:40,578 DEBUG [java.sql.Connection] - <{conn-100139} Connection>
2018-01-31 16:52:40,579 DEBUG [java.sql.Connection] - <{conn-100139} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001','0001-008-02-04-03') or     building_code in ('0001','0001-008-02-04-03') or     house_code in ('0001','0001-008-02-04-03'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-31 16:52:40,579 DEBUG [java.sql.PreparedStatement] - <{pstm-100140} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001','0001-008-02-04-03') or     building_code in ('0001','0001-008-02-04-03') or     house_code in ('0001','0001-008-02-04-03'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-31 16:52:40,579 DEBUG [java.sql.PreparedStatement] - <{pstm-100140} Parameters: [2017, A]>
2018-01-31 16:52:40,579 DEBUG [java.sql.PreparedStatement] - <{pstm-100140} Types: [java.lang.String, java.lang.String]>
2018-01-31 16:52:40,592 DEBUG [java.sql.ResultSet] - <{rset-100141} ResultSet>
2018-01-31 16:52:40,593 DEBUG [java.sql.ResultSet] - <{rset-100141} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-31 16:52:40,593 DEBUG [java.sql.ResultSet] - <{rset-100141} Result: [null, 供热费, 2017, 0001-008-01-01-01, A, 0, 01, 0001, 0001-008, 王建方, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, null, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76468, 1]>
2018-01-31 16:52:40,593 DEBUG [java.sql.ResultSet] - <{rset-100141} Result: [null, 供热费, 2017, 0001-008-01-01-02, A, 0, 01, 0001, 0001-008, 宋忠义, 1753.92, 0, 0, 1753.92, 0, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-01-22, 291.15, null, 291.15, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 90654, 2]>
2018-01-31 16:52:40,593 DEBUG [java.sql.ResultSet] - <{rset-100141} Result: [null, 供热费, 2017, 0001-008-01-02-01, A, 0, 01, 0001, 0001-008, 李爱书, 1753.92, 0, 0, 1753.92, 1753.92, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 84679, 3]>
2018-01-31 16:52:40,594 DEBUG [java.sql.ResultSet] - <{rset-100141} Result: [null, 供热费, 2017, 0001-008-01-02-02, A, 0, 01, 0001, 0001-008, 申刚义, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76449, 4]>
2018-01-31 16:52:40,594 DEBUG [java.sql.ResultSet] - <{rset-100141} Result: [null, 供热费, 2017, 0001-008-01-03-01, A, 0, 01, 0001, 0001-008, 李琳, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 84678, 5]>
2018-01-31 16:52:40,594 DEBUG [java.sql.ResultSet] - <{rset-100141} Result: [null, 供热费, 2017, 0001-008-01-03-02, A, 0, 01, 0001, 0001-008, 李根才, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 84677, 6]>
2018-01-31 16:52:40,594 DEBUG [java.sql.ResultSet] - <{rset-100141} Result: [null, 供热费, 2017, 0001-008-01-04-01, A, 0, 01, 0001, 0001-008, 李保青, 1753.92, 291.15, 0, 1462.77, 1753.92, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-01-22, 291, 291.15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 90653, 7]>
2018-01-31 16:52:40,594 DEBUG [java.sql.ResultSet] - <{rset-100141} Result: [null, 供热费, 2017, 0001-008-01-04-02, A, 0, 01, 0001, 0001-008, 王慧玲, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76453, 8]>
2018-01-31 16:52:40,595 DEBUG [java.sql.ResultSet] - <{rset-100141} Result: [null, 供热费, 2017, 0001-008-02-01-01, A, 0, 01, 0001, 0001-008, 马爱英, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 84675, 9]>
2018-01-31 16:52:40,596 DEBUG [java.sql.ResultSet] - <{rset-100141} Result: [null, 供热费, 2017, 0001-008-02-01-02, A, 0, 01, 0001, 0001-008, 王丽娟, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76455, 10]>
2018-01-31 16:52:40,597 DEBUG [java.sql.ResultSet] - <{rset-100141} Result: [null, 供热费, 2017, 0001-008-02-02-01, A, 0, 01, 0001, 0001-008, 刘红亮, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76456, 11]>
2018-01-31 16:52:40,597 DEBUG [java.sql.ResultSet] - <{rset-100141} Result: [null, 供热费, 2017, 0001-008-02-02-02, A, 0, 01, 0001, 0001-008, 孔文建, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76457, 12]>
2018-01-31 16:52:40,597 DEBUG [java.sql.ResultSet] - <{rset-100141} Result: [null, 供热费, 2017, 0001-008-02-03-01, A, 0, 01, 0001, 0001-008, 张小红, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76458, 13]>
2018-01-31 16:52:40,597 DEBUG [java.sql.ResultSet] - <{rset-100141} Result: [null, 供热费, 2017, 0001-008-02-03-02, A, 0, 01, 0001, 0001-008, 曹恒文, 1753.92, 0, 0, 1753.92, 1753.92, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 84674, 14]>
2018-01-31 16:52:40,598 DEBUG [java.sql.ResultSet] - <{rset-100141} Result: [null, 供热费, 2017, 0001-008-02-04-01, A, 0, 01, 0001, 0001-008, 郭建中, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76460, 15]>
2018-01-31 16:52:40,598 DEBUG [java.sql.ResultSet] - <{rset-100141} Result: [null, 供热费, 2017, 0001-008-02-04-02, A, 0, 01, 0001, 0001-008, 杨书贤, 1753.92, 0, 0, 1753.92, 1753.92, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 84673, 16]>
2018-01-31 16:52:40,598 DEBUG [java.sql.ResultSet] - <{rset-100141} Result: [null, 供热费, 2017, 0001-008-02-04-03, A, 0, 01, 0001, 0001-008, 测试, 0, 0, 0, 0, 0, null, A1, 16, null, null, 0, 2017-11-01, 2018-03-31, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103078, 17]>
2018-01-31 16:52:40,599 DEBUG [java.sql.Connection] - <{conn-100142} Connection>
2018-01-31 16:52:40,600 DEBUG [java.sql.Connection] - <{conn-100142} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001','0001-008-02-04-03') or     building_code in ('0001','0001-008-02-04-03') or     house_code in ('0001','0001-008-02-04-03'))            AND      item_code =?              >
2018-01-31 16:52:40,600 DEBUG [java.sql.PreparedStatement] - <{pstm-100143} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001','0001-008-02-04-03') or     building_code in ('0001','0001-008-02-04-03') or     house_code in ('0001','0001-008-02-04-03'))            AND      item_code =?              >
2018-01-31 16:52:40,600 DEBUG [java.sql.PreparedStatement] - <{pstm-100143} Parameters: [2017, A]>
2018-01-31 16:52:40,600 DEBUG [java.sql.PreparedStatement] - <{pstm-100143} Types: [java.lang.String, java.lang.String]>
2018-01-31 16:52:40,607 DEBUG [java.sql.ResultSet] - <{rset-100144} ResultSet>
2018-01-31 16:52:40,607 DEBUG [java.sql.ResultSet] - <{rset-100144} Header: [count(*)]>
2018-01-31 16:52:40,607 DEBUG [java.sql.ResultSet] - <{rset-100144} Result: [17]>
2018-01-31 16:52:40,787 DEBUG [java.sql.Connection] - <{conn-100145} Connection>
2018-01-31 16:52:40,787 DEBUG [java.sql.Connection] - <{conn-100145} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001','0001-008-02-04-03') or     building_code in ('0001','0001-008-02-04-03') or     house_code in ('0001','0001-008-02-04-03'))            AND      item_code =?          >
2018-01-31 16:52:40,788 DEBUG [java.sql.PreparedStatement] - <{pstm-100146} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001','0001-008-02-04-03') or     building_code in ('0001','0001-008-02-04-03') or     house_code in ('0001','0001-008-02-04-03'))            AND      item_code =?          >
2018-01-31 16:52:40,788 DEBUG [java.sql.PreparedStatement] - <{pstm-100146} Parameters: [2017, A]>
2018-01-31 16:52:40,788 DEBUG [java.sql.PreparedStatement] - <{pstm-100146} Types: [java.lang.String, java.lang.String]>
2018-01-31 16:52:40,796 DEBUG [java.sql.ResultSet] - <{rset-100147} ResultSet>
2018-01-31 16:52:40,797 DEBUG [java.sql.ResultSet] - <{rset-100147} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-01-31 16:52:40,797 DEBUG [java.sql.ResultSet] - <{rset-100147} Result: [共17, 28062.72, 291.15, 0, 27771.57, 26309.68, 1644.3, null, 1753.92, 582.15, 291.15, 291.15, 0, 0]>
2018-01-31 16:52:46,171 DEBUG [java.sql.Connection] - <{conn-100148} Connection>
2018-01-31 16:52:46,173 DEBUG [java.sql.Connection] - <{conn-100148} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-31 16:52:46,173 DEBUG [java.sql.PreparedStatement] - <{pstm-100149} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-31 16:52:46,173 DEBUG [java.sql.PreparedStatement] - <{pstm-100149} Parameters: [2017, A]>
2018-01-31 16:52:46,173 DEBUG [java.sql.PreparedStatement] - <{pstm-100149} Types: [java.lang.String, java.lang.String]>
2018-01-31 16:52:46,187 DEBUG [java.sql.ResultSet] - <{rset-100150} ResultSet>
2018-01-31 16:52:46,187 DEBUG [java.sql.ResultSet] - <{rset-100150} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-31 16:52:46,187 DEBUG [java.sql.ResultSet] - <{rset-100150} Result: [null, 供热费, 2017, 0001-008-02-04-03, A, 0, 01, 0001, 0001-008, 测试, 0, 0, 0, 0, 0, null, A1, 16, null, null, 0, 2017-11-01, 2018-03-31, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103078, 1]>
2018-01-31 16:52:46,188 DEBUG [java.sql.Connection] - <{conn-100151} Connection>
2018-01-31 16:52:46,188 DEBUG [java.sql.Connection] - <{conn-100151} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))            AND      item_code =?              >
2018-01-31 16:52:46,188 DEBUG [java.sql.PreparedStatement] - <{pstm-100152} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))            AND      item_code =?              >
2018-01-31 16:52:46,188 DEBUG [java.sql.PreparedStatement] - <{pstm-100152} Parameters: [2017, A]>
2018-01-31 16:52:46,189 DEBUG [java.sql.PreparedStatement] - <{pstm-100152} Types: [java.lang.String, java.lang.String]>
2018-01-31 16:52:46,192 DEBUG [java.sql.ResultSet] - <{rset-100153} ResultSet>
2018-01-31 16:52:46,193 DEBUG [java.sql.ResultSet] - <{rset-100153} Header: [count(*)]>
2018-01-31 16:52:46,193 DEBUG [java.sql.ResultSet] - <{rset-100153} Result: [1]>
2018-01-31 16:52:46,322 DEBUG [java.sql.Connection] - <{conn-100154} Connection>
2018-01-31 16:52:46,322 DEBUG [java.sql.Connection] - <{conn-100154} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))            AND      item_code =?          >
2018-01-31 16:52:46,322 DEBUG [java.sql.PreparedStatement] - <{pstm-100155} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))            AND      item_code =?          >
2018-01-31 16:52:46,323 DEBUG [java.sql.PreparedStatement] - <{pstm-100155} Parameters: [2017, A]>
2018-01-31 16:52:46,323 DEBUG [java.sql.PreparedStatement] - <{pstm-100155} Types: [java.lang.String, java.lang.String]>
2018-01-31 16:52:46,330 DEBUG [java.sql.ResultSet] - <{rset-100156} ResultSet>
2018-01-31 16:52:46,330 DEBUG [java.sql.ResultSet] - <{rset-100156} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-01-31 16:52:46,330 DEBUG [java.sql.ResultSet] - <{rset-100156} Result: [共1, 0, 0, 0, 0, 0, null, null, 0, 0, 0, 0, 0, 0]>
2018-01-31 16:53:04,039 DEBUG [java.sql.Connection] - <{conn-100157} Connection>
2018-01-31 16:53:04,039 DEBUG [java.sql.Connection] - <{conn-100157} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-31 16:53:04,039 DEBUG [java.sql.PreparedStatement] - <{pstm-100158} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-31 16:53:04,039 DEBUG [java.sql.PreparedStatement] - <{pstm-100158} Parameters: [100043]>
2018-01-31 16:53:04,039 DEBUG [java.sql.PreparedStatement] - <{pstm-100158} Types: [java.lang.String]>
2018-01-31 16:53:04,042 DEBUG [java.sql.ResultSet] - <{rset-100159} ResultSet>
2018-01-31 16:53:04,042 DEBUG [java.sql.ResultSet] - <{rset-100159} Header: [theme]>
2018-01-31 16:53:04,042 DEBUG [java.sql.ResultSet] - <{rset-100159} Result: [default]>
2018-01-31 16:53:04,493 DEBUG [java.sql.Connection] - <{conn-100160} Connection>
2018-01-31 16:53:04,493 DEBUG [java.sql.Connection] - <{conn-100160} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   SELECT   ITEM_CODE, STANDARD_ID, STANDARD_NAME, STANDYEAR,      PRICE,  PERIOD_START_DATE, PERIOD_END_DATE,      ACCOUNTDOT,LATEFEEDOT,LATEFEE_EDATE,LATEFEERATE,b.userName OPERATOR, OPERATE_DATE,CID,STANDARD_ID||STANDYEAR as STANDARD_KEY       FROM sf_standard a,eauser b      WHERE a.OPERATOR = b.userid(+) and  STANDARD_NAME LIKE '%%'            ORDER BY STANDYEAR desc ,standard_id ASC   ) page) WHERE rn BETWEEN 1 AND 50>
2018-01-31 16:53:04,493 DEBUG [java.sql.PreparedStatement] - <{pstm-100161} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   SELECT   ITEM_CODE, STANDARD_ID, STANDARD_NAME, STANDYEAR,      PRICE,  PERIOD_START_DATE, PERIOD_END_DATE,      ACCOUNTDOT,LATEFEEDOT,LATEFEE_EDATE,LATEFEERATE,b.userName OPERATOR, OPERATE_DATE,CID,STANDARD_ID||STANDYEAR as STANDARD_KEY       FROM sf_standard a,eauser b      WHERE a.OPERATOR = b.userid(+) and  STANDARD_NAME LIKE '%%'            ORDER BY STANDYEAR desc ,standard_id ASC   ) page) WHERE rn BETWEEN 1 AND 50>
2018-01-31 16:53:04,493 DEBUG [java.sql.PreparedStatement] - <{pstm-100161} Parameters: []>
2018-01-31 16:53:04,493 DEBUG [java.sql.PreparedStatement] - <{pstm-100161} Types: []>
2018-01-31 16:53:04,538 DEBUG [java.sql.ResultSet] - <{rset-100162} ResultSet>
2018-01-31 16:53:04,538 DEBUG [java.sql.ResultSet] - <{rset-100162} Header: [item_code, standard_id, standard_name, standyear, price, period_start_date, period_end_date, accountdot, latefeedot, latefee_edate, latefeerate, operator, operate_date, cid, standard_key, rn]>
2018-01-31 16:53:04,538 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [A, A1, 居民, 2017, 16, 2017-11-01, 2018-03-31, 2, 2, 2017-11-01, 0.002, 管理员, null, 01, A12017, 1]>
2018-01-31 16:53:04,538 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [A, A2, 公用, 2017, 37.5, 2017-11-01, 2018-03-31, 2, 2, 2017-11-01, 0.002, 管理员, null, 01, A22017, 2]>
2018-01-31 16:53:04,539 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [A, A3, 商铺, 2017, 37.5, 2017-11-01, 2018-03-31, 2, 2, 2017-11-01, 0.002, 管理员, 2017-09-30 00:26:12, 01, A32017, 3]>
2018-01-31 16:53:04,539 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [A, A1, 居民, 2016, 16, 2016-11-01, 2017-03-31, 2, 2, 2016-11-01, 0.002, 管理员, 2017-10-21 15:35:33, 01, A12016, 4]>
2018-01-31 16:53:04,539 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [A, A2, 公用, 2016, 37.5, 2016-11-01, 2017-03-31, 2, 2, 2016-11-01, 0.002, 管理员, 2017-10-21 15:35:33, 01, A22016, 5]>
2018-01-31 16:53:04,539 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [A, A3, 商铺, 2016, 37.5, 2016-11-01, 2017-03-31, 2, 2, 2016-11-01, 0.002, 管理员, 2017-10-21 15:35:33, 01, A32016, 6]>
2018-01-31 16:53:04,539 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [A, A1, 居民, 2015, 16, 2015-11-01, 2016-03-31, 2, 2, 2015-11-01, 0.002, 管理员, 2017-10-21 15:35:26, 01, A12015, 7]>
2018-01-31 16:53:04,539 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [A, A2, 公用, 2015, 37.5, 2015-11-01, 2016-03-31, 2, 2, 2015-11-01, 0.002, 管理员, 2017-10-21 15:35:26, 01, A22015, 8]>
2018-01-31 16:53:04,539 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [A, A3, 商铺, 2015, 37.5, 2015-11-01, 2016-03-31, 2, 2, 2015-11-01, 0.002, 管理员, 2017-10-21 15:35:26, 01, A32015, 9]>
2018-01-31 16:53:04,540 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [A, A1, 居民, 2014, 16, 2014-11-01, 2015-03-31, 2, 2, 2014-11-01, 0.002, 管理员, 2017-10-21 15:35:19, 01, A12014, 10]>
2018-01-31 16:53:04,540 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [A, A2, 公用, 2014, 37.5, 2014-11-01, 2015-03-31, 2, 2, 2014-11-01, 0.002, 管理员, 2017-10-21 15:35:19, 01, A22014, 11]>
2018-01-31 16:53:04,540 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [A, A3, 商铺, 2014, 37.5, 2014-11-01, 2015-03-31, 2, 2, 2014-11-01, 0.002, 管理员, 2017-10-21 15:35:19, 01, A32014, 12]>
2018-01-31 16:53:04,540 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [A, A1, 居民, 2013, 16, 2013-11-01, 2014-03-31, 2, 2, 2013-11-01, 0.002, 管理员, null, 01, A12013, 13]>
2018-01-31 16:53:04,541 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [A, A2, 公用, 2013, 37.5, 2013-11-01, 2014-03-31, 2, 2, 2013-11-01, 0.002, 管理员, null, 01, A22013, 14]>
2018-01-31 16:53:04,541 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [A, A3, 商铺, 2013, 37.5, 2013-11-01, 2014-03-31, 2, 2, 2013-11-01, 0.002, 管理员, 2017-09-30 00:26:12, 01, A32013, 15]>
2018-01-31 16:53:04,541 DEBUG [java.sql.Connection] - <{conn-100163} Connection>
2018-01-31 16:53:04,541 DEBUG [java.sql.Connection] - <{conn-100163} Preparing Statement:    SELECT count(*)     FROM sf_standard WHERE STANDARD_NAME like '%%'                     order by STANDYEAR desc ,standard_id ASC  >
2018-01-31 16:53:04,542 DEBUG [java.sql.PreparedStatement] - <{pstm-100164} Executing Statement:    SELECT count(*)     FROM sf_standard WHERE STANDARD_NAME like '%%'                     order by STANDYEAR desc ,standard_id ASC  >
2018-01-31 16:53:04,542 DEBUG [java.sql.PreparedStatement] - <{pstm-100164} Parameters: []>
2018-01-31 16:53:04,542 DEBUG [java.sql.PreparedStatement] - <{pstm-100164} Types: []>
2018-01-31 16:53:04,544 DEBUG [java.sql.ResultSet] - <{rset-100165} ResultSet>
2018-01-31 16:53:04,544 DEBUG [java.sql.ResultSet] - <{rset-100165} Header: [count(*)]>
2018-01-31 16:53:04,544 DEBUG [java.sql.ResultSet] - <{rset-100165} Result: [15]>
2018-01-31 16:53:18,841 DEBUG [java.sql.Connection] - <{conn-100166} Connection>
2018-01-31 16:53:18,842 DEBUG [java.sql.Connection] - <{conn-100166} Preparing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-01-31 16:53:18,842 DEBUG [java.sql.PreparedStatement] - <{pstm-100167} Executing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-01-31 16:53:18,843 DEBUG [java.sql.PreparedStatement] - <{pstm-100167} Parameters: [0001-008-02-04-03, 0001-008-02-04-03, 0001-008-02-04-03, 0001-008-02-04-03, 0001-008-02-04-03, 0001-008-02-04-03]>
2018-01-31 16:53:18,843 DEBUG [java.sql.PreparedStatement] - <{pstm-100167} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-31 16:53:18,845 DEBUG [java.sql.ResultSet] - <{rset-100168} ResultSet>
2018-01-31 16:53:18,846 DEBUG [java.sql.ResultSet] - <{rset-100168} Header: [h_cell_code, h_floor, h_door_code, h_house_code, h_card_id, h_cluster_code, h_contact_man, h_house_manager_name, h_house_manager, h_owner_name, h_address, h_intoweb_date, h_telephone, h_stat_name, h_stat_id, h_enter_date, h_work_unit, h_apart_status, h_user_kind, h_heat_status, h_intoweb_area, h_mobilephone, h_area_count, h_intoweb_year, h_item_code, h_area_id, h_use_type, h_standard_id, h_standard_name, h_build_area, h_floor_height, h_super_area, h_charge_area, h_item_code1, h_area_id1, h_use_type1, h_standard_id1, h_standard_name1, h_build_area1, h_floor_height1, h_super_area1, h_charge_area1, h_item_code2, h_area_id2, h_use_type2, h_standard_id2, h_standard_name2, h_build_area2, h_floor_height2, h_super_area2, h_charge_area2, h_item_code3, h_area_id3, h_use_type3, h_standard_id3, h_standard_name3, h_build_area3, h_floor_height3, h_super_area3, h_charge_area3, h_item_code4, h_area_id4, h_use_type4, h_standard_id4, h_standard_name4, h_build_area4, h_floor_height4, h_super_area4, h_charge_area4, h_remark]>
2018-01-31 16:53:18,846 DEBUG [java.sql.ResultSet] - <{rset-100168} Result: [02, 04, 03, 0001-008-02-04-03, null, null, null, null, null, 测试, null, null, null, null, null, 2018-01-01, null, null, null, null, null, null, 1, null, A, 0, null, A1, 居民, null, null, null, 0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-01-31 16:53:28,563 DEBUG [java.sql.Connection] - <{conn-100169} Connection>
2018-01-31 16:53:28,564 DEBUG [java.sql.Connection] - <{conn-100169} Preparing Statement:    update fc_house set       card_id=?,   cluster_code=?,   house_manager=?,   address=?,   intoweb_date=?,   intoweb_area=?,   stat_id=?,   apart_status=?,   user_kind=?,   heat_status=?,   operator=?,   operate_date=to_char(sysdate,'YYYY-MM-DD HH24:MI:SS'),   remark=?   where house_code=?  >
2018-01-31 16:53:28,565 DEBUG [java.sql.PreparedStatement] - <{pstm-100170} Executing Statement:    update fc_house set       card_id=?,   cluster_code=?,   house_manager=?,   address=?,   intoweb_date=?,   intoweb_area=?,   stat_id=?,   apart_status=?,   user_kind=?,   heat_status=?,   operator=?,   operate_date=to_char(sysdate,'YYYY-MM-DD HH24:MI:SS'),   remark=?   where house_code=?  >
2018-01-31 16:53:28,565 DEBUG [java.sql.PreparedStatement] - <{pstm-100170} Parameters: [, , , , , , , , , , 100043, , 0001-008-02-04-03]>
2018-01-31 16:53:28,565 DEBUG [java.sql.PreparedStatement] - <{pstm-100170} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-31 16:53:28,568 DEBUG [java.sql.Connection] - <{conn-100171} Connection>
2018-01-31 16:53:28,569 DEBUG [java.sql.Connection] - <{conn-100171} Preparing Statement:    update fc_owner set   contact_man=?,   owner_name=?,   telephone=?,   mobilephone=?,   enter_date=?,   work_unit=?,   operator=?,   operate_date=to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')   where house_code=?  >
2018-01-31 16:53:28,569 DEBUG [java.sql.PreparedStatement] - <{pstm-100172} Executing Statement:    update fc_owner set   contact_man=?,   owner_name=?,   telephone=?,   mobilephone=?,   enter_date=?,   work_unit=?,   operator=?,   operate_date=to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')   where house_code=?  >
2018-01-31 16:53:28,569 DEBUG [java.sql.PreparedStatement] - <{pstm-100172} Parameters: [, 测试, , , 2018-01-01, , 100043, 0001-008-02-04-03]>
2018-01-31 16:53:28,570 DEBUG [java.sql.PreparedStatement] - <{pstm-100172} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-31 16:53:28,572 DEBUG [java.sql.Connection] - <{conn-100173} Connection>
2018-01-31 16:53:28,573 DEBUG [java.sql.Connection] - <{conn-100173} Preparing Statement:    SELECT count(*) as count   FROM   fc_area  where house_code=?   and area_id='0'  >
2018-01-31 16:53:28,573 DEBUG [java.sql.PreparedStatement] - <{pstm-100174} Executing Statement:    SELECT count(*) as count   FROM   fc_area  where house_code=?   and area_id='0'  >
2018-01-31 16:53:28,573 DEBUG [java.sql.PreparedStatement] - <{pstm-100174} Parameters: [0001-008-02-04-03]>
2018-01-31 16:53:28,573 DEBUG [java.sql.PreparedStatement] - <{pstm-100174} Types: [java.lang.String]>
2018-01-31 16:53:28,576 DEBUG [java.sql.ResultSet] - <{rset-100175} ResultSet>
2018-01-31 16:53:28,576 DEBUG [java.sql.ResultSet] - <{rset-100175} Header: [count]>
2018-01-31 16:53:28,576 DEBUG [java.sql.ResultSet] - <{rset-100175} Result: [1]>
2018-01-31 16:53:28,576 DEBUG [java.sql.Connection] - <{conn-100176} Connection>
2018-01-31 16:53:28,577 DEBUG [java.sql.Connection] - <{conn-100176} Preparing Statement:    update fc_area set   use_type=?,   standard_id=?,   build_area=?,   floor_height=?,   super_area=?,   charge_area=?,   operator=?,   operate_date=to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')   where house_code=? and area_id=?  >
2018-01-31 16:53:28,577 DEBUG [java.sql.PreparedStatement] - <{pstm-100177} Executing Statement:    update fc_area set   use_type=?,   standard_id=?,   build_area=?,   floor_height=?,   super_area=?,   charge_area=?,   operator=?,   operate_date=to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')   where house_code=? and area_id=?  >
2018-01-31 16:53:28,577 DEBUG [java.sql.PreparedStatement] - <{pstm-100177} Parameters: [, A1, , , , 109, 100043, 0001-008-02-04-03, 0]>
2018-01-31 16:53:28,578 DEBUG [java.sql.PreparedStatement] - <{pstm-100177} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-31 16:53:28,674 DEBUG [java.sql.Connection] - <{conn-100178} Connection>
2018-01-31 16:53:28,674 DEBUG [java.sql.Connection] - <{conn-100178} Preparing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0001-008'   order by a.house_code  >
2018-01-31 16:53:28,675 DEBUG [java.sql.PreparedStatement] - <{pstm-100179} Executing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0001-008'   order by a.house_code  >
2018-01-31 16:53:28,675 DEBUG [java.sql.PreparedStatement] - <{pstm-100179} Parameters: []>
2018-01-31 16:53:28,675 DEBUG [java.sql.PreparedStatement] - <{pstm-100179} Types: []>
2018-01-31 16:53:28,678 DEBUG [java.sql.ResultSet] - <{rset-100180} ResultSet>
2018-01-31 16:53:28,678 DEBUG [java.sql.ResultSet] - <{rset-100180} Header: [id, text, child_count]>
2018-01-31 16:53:28,678 DEBUG [java.sql.ResultSet] - <{rset-100180} Result: [0001-008-01-01-01, 01-01-01 王建方, 0]>
2018-01-31 16:53:28,678 DEBUG [java.sql.ResultSet] - <{rset-100180} Result: [0001-008-01-01-02, 01-01-02 宋忠义, 0]>
2018-01-31 16:53:28,678 DEBUG [java.sql.ResultSet] - <{rset-100180} Result: [0001-008-01-02-01, 01-02-01 李爱书, 0]>
2018-01-31 16:53:28,678 DEBUG [java.sql.ResultSet] - <{rset-100180} Result: [0001-008-01-02-02, 01-02-02 申刚义, 0]>
2018-01-31 16:53:28,678 DEBUG [java.sql.ResultSet] - <{rset-100180} Result: [0001-008-01-03-01, 01-03-01 李琳, 0]>
2018-01-31 16:53:28,678 DEBUG [java.sql.ResultSet] - <{rset-100180} Result: [0001-008-01-03-02, 01-03-02 李根才, 0]>
2018-01-31 16:53:28,679 DEBUG [java.sql.ResultSet] - <{rset-100180} Result: [0001-008-01-04-01, 01-04-01 李保青, 0]>
2018-01-31 16:53:28,679 DEBUG [java.sql.ResultSet] - <{rset-100180} Result: [0001-008-01-04-02, 01-04-02 王慧玲, 0]>
2018-01-31 16:53:28,679 DEBUG [java.sql.ResultSet] - <{rset-100180} Result: [0001-008-02-01-01, 02-01-01 马爱英, 0]>
2018-01-31 16:53:28,679 DEBUG [java.sql.ResultSet] - <{rset-100180} Result: [0001-008-02-01-02, 02-01-02 王丽娟, 0]>
2018-01-31 16:53:28,679 DEBUG [java.sql.ResultSet] - <{rset-100180} Result: [0001-008-02-02-01, 02-02-01 刘红亮, 0]>
2018-01-31 16:53:28,679 DEBUG [java.sql.ResultSet] - <{rset-100180} Result: [0001-008-02-02-02, 02-02-02 孔文建, 0]>
2018-01-31 16:53:28,680 DEBUG [java.sql.ResultSet] - <{rset-100180} Result: [0001-008-02-03-01, 02-03-01 张小红, 0]>
2018-01-31 16:53:28,680 DEBUG [java.sql.ResultSet] - <{rset-100180} Result: [0001-008-02-03-02, 02-03-02 曹恒文, 0]>
2018-01-31 16:53:28,680 DEBUG [java.sql.ResultSet] - <{rset-100180} Result: [0001-008-02-04-01, 02-04-01 郭建中, 0]>
2018-01-31 16:53:28,680 DEBUG [java.sql.ResultSet] - <{rset-100180} Result: [0001-008-02-04-02, 02-04-02 杨书贤, 0]>
2018-01-31 16:53:28,680 DEBUG [java.sql.ResultSet] - <{rset-100180} Result: [0001-008-02-04-03, 02-04-03 测试, 0]>
2018-01-31 16:53:28,947 DEBUG [java.sql.Connection] - <{conn-100181} Connection>
2018-01-31 16:53:28,948 DEBUG [java.sql.Connection] - <{conn-100181} Preparing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-01-31 16:53:28,948 DEBUG [java.sql.PreparedStatement] - <{pstm-100182} Executing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-01-31 16:53:28,948 DEBUG [java.sql.PreparedStatement] - <{pstm-100182} Parameters: [0001-008-02-04-03, 0001-008-02-04-03, 0001-008-02-04-03, 0001-008-02-04-03, 0001-008-02-04-03, 0001-008-02-04-03]>
2018-01-31 16:53:28,948 DEBUG [java.sql.PreparedStatement] - <{pstm-100182} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-31 16:53:28,951 DEBUG [java.sql.ResultSet] - <{rset-100183} ResultSet>
2018-01-31 16:53:28,952 DEBUG [java.sql.ResultSet] - <{rset-100183} Header: [h_cell_code, h_floor, h_door_code, h_house_code, h_card_id, h_cluster_code, h_contact_man, h_house_manager_name, h_house_manager, h_owner_name, h_address, h_intoweb_date, h_telephone, h_stat_name, h_stat_id, h_enter_date, h_work_unit, h_apart_status, h_user_kind, h_heat_status, h_intoweb_area, h_mobilephone, h_area_count, h_intoweb_year, h_item_code, h_area_id, h_use_type, h_standard_id, h_standard_name, h_build_area, h_floor_height, h_super_area, h_charge_area, h_item_code1, h_area_id1, h_use_type1, h_standard_id1, h_standard_name1, h_build_area1, h_floor_height1, h_super_area1, h_charge_area1, h_item_code2, h_area_id2, h_use_type2, h_standard_id2, h_standard_name2, h_build_area2, h_floor_height2, h_super_area2, h_charge_area2, h_item_code3, h_area_id3, h_use_type3, h_standard_id3, h_standard_name3, h_build_area3, h_floor_height3, h_super_area3, h_charge_area3, h_item_code4, h_area_id4, h_use_type4, h_standard_id4, h_standard_name4, h_build_area4, h_floor_height4, h_super_area4, h_charge_area4, h_remark]>
2018-01-31 16:53:28,952 DEBUG [java.sql.ResultSet] - <{rset-100183} Result: [02, 04, 03, 0001-008-02-04-03, null, null, null, null, null, 测试, null, null, null, null, null, 2018-01-01, null, null, null, null, null, null, 1, null, A, 0, null, A1, 居民, null, null, null, 109, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-01-31 16:54:14,615 DEBUG [java.sql.Connection] - <{conn-100184} Connection>
2018-01-31 16:54:14,615 DEBUG [java.sql.Connection] - <{conn-100184} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-01-31 16:54:14,616 DEBUG [java.sql.PreparedStatement] - <{pstm-100185} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-01-31 16:54:14,616 DEBUG [java.sql.PreparedStatement] - <{pstm-100185} Parameters: [A, 2017, '0001-008-02-04-03', 1, 100043]>
2018-01-31 16:54:14,616 DEBUG [java.sql.PreparedStatement] - <{pstm-100185} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-31 16:54:14,869 DEBUG [java.sql.Connection] - <{conn-100186} Connection>
2018-01-31 16:54:14,870 DEBUG [java.sql.Connection] - <{conn-100186} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-31 16:54:14,870 DEBUG [java.sql.PreparedStatement] - <{pstm-100187} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-31 16:54:14,871 DEBUG [java.sql.PreparedStatement] - <{pstm-100187} Parameters: [2017, A]>
2018-01-31 16:54:14,871 DEBUG [java.sql.PreparedStatement] - <{pstm-100187} Types: [java.lang.String, java.lang.String]>
2018-01-31 16:54:14,876 DEBUG [java.sql.ResultSet] - <{rset-100188} ResultSet>
2018-01-31 16:54:14,876 DEBUG [java.sql.ResultSet] - <{rset-100188} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-31 16:54:14,876 DEBUG [java.sql.ResultSet] - <{rset-100188} Result: [null, 供热费, 2017, 0001-008-02-04-03, A, 0, 01, 0001, 0001-008, 测试, 1744, 0, 0, 1744, 0, null, A1, 16, null, null, 109, 2017-11-01, 2018-03-31, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103078, 1]>
2018-01-31 16:54:14,876 DEBUG [java.sql.Connection] - <{conn-100189} Connection>
2018-01-31 16:54:14,877 DEBUG [java.sql.Connection] - <{conn-100189} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))            AND      item_code =?              >
2018-01-31 16:54:14,877 DEBUG [java.sql.PreparedStatement] - <{pstm-100190} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))            AND      item_code =?              >
2018-01-31 16:54:14,877 DEBUG [java.sql.PreparedStatement] - <{pstm-100190} Parameters: [2017, A]>
2018-01-31 16:54:14,878 DEBUG [java.sql.PreparedStatement] - <{pstm-100190} Types: [java.lang.String, java.lang.String]>
2018-01-31 16:54:14,880 DEBUG [java.sql.ResultSet] - <{rset-100191} ResultSet>
2018-01-31 16:54:14,880 DEBUG [java.sql.ResultSet] - <{rset-100191} Header: [count(*)]>
2018-01-31 16:54:14,880 DEBUG [java.sql.ResultSet] - <{rset-100191} Result: [1]>
2018-01-31 16:54:14,972 DEBUG [java.sql.Connection] - <{conn-100192} Connection>
2018-01-31 16:54:14,973 DEBUG [java.sql.Connection] - <{conn-100192} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))            AND      item_code =?          >
2018-01-31 16:54:14,973 DEBUG [java.sql.PreparedStatement] - <{pstm-100193} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))            AND      item_code =?          >
2018-01-31 16:54:14,973 DEBUG [java.sql.PreparedStatement] - <{pstm-100193} Parameters: [2017, A]>
2018-01-31 16:54:14,974 DEBUG [java.sql.PreparedStatement] - <{pstm-100193} Types: [java.lang.String, java.lang.String]>
2018-01-31 16:54:14,980 DEBUG [java.sql.ResultSet] - <{rset-100194} ResultSet>
2018-01-31 16:54:14,981 DEBUG [java.sql.ResultSet] - <{rset-100194} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-01-31 16:54:14,981 DEBUG [java.sql.ResultSet] - <{rset-100194} Result: [共1, 1744, 0, 0, 1744, 0, null, null, 109, 0, 0, 0, 0, 0]>
2018-01-31 16:54:30,602 DEBUG [java.sql.Connection] - <{conn-100195} Connection>
2018-01-31 16:54:30,603 DEBUG [java.sql.Connection] - <{conn-100195} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-31 16:54:30,603 DEBUG [java.sql.PreparedStatement] - <{pstm-100196} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-31 16:54:30,603 DEBUG [java.sql.PreparedStatement] - <{pstm-100196} Parameters: [2017, A]>
2018-01-31 16:54:30,603 DEBUG [java.sql.PreparedStatement] - <{pstm-100196} Types: [java.lang.String, java.lang.String]>
2018-01-31 16:54:30,609 DEBUG [java.sql.ResultSet] - <{rset-100197} ResultSet>
2018-01-31 16:54:30,609 DEBUG [java.sql.ResultSet] - <{rset-100197} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-31 16:54:30,609 DEBUG [java.sql.ResultSet] - <{rset-100197} Result: [null, 供热费, 2017, 0001-008-02-04-03, A, 0, 01, 0001, 0001-008, 测试, 1744, 0, 0, 1744, 0, null, A1, 16, null, null, 109, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-01-31, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103078, 1]>
2018-01-31 16:54:30,609 DEBUG [java.sql.Connection] - <{conn-100198} Connection>
2018-01-31 16:54:30,610 DEBUG [java.sql.Connection] - <{conn-100198} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))            AND      item_code =?              >
2018-01-31 16:54:30,610 DEBUG [java.sql.PreparedStatement] - <{pstm-100199} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))            AND      item_code =?              >
2018-01-31 16:54:30,610 DEBUG [java.sql.PreparedStatement] - <{pstm-100199} Parameters: [2017, A]>
2018-01-31 16:54:30,610 DEBUG [java.sql.PreparedStatement] - <{pstm-100199} Types: [java.lang.String, java.lang.String]>
2018-01-31 16:54:30,614 DEBUG [java.sql.ResultSet] - <{rset-100200} ResultSet>
2018-01-31 16:54:30,614 DEBUG [java.sql.ResultSet] - <{rset-100200} Header: [count(*)]>
2018-01-31 16:54:30,614 DEBUG [java.sql.ResultSet] - <{rset-100200} Result: [1]>
2018-01-31 16:54:30,668 DEBUG [java.sql.Connection] - <{conn-100201} Connection>
2018-01-31 16:54:30,668 DEBUG [java.sql.Connection] - <{conn-100201} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))            AND      item_code =?          >
2018-01-31 16:54:30,669 DEBUG [java.sql.PreparedStatement] - <{pstm-100202} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))            AND      item_code =?          >
2018-01-31 16:54:30,669 DEBUG [java.sql.PreparedStatement] - <{pstm-100202} Parameters: [2017, A]>
2018-01-31 16:54:30,669 DEBUG [java.sql.PreparedStatement] - <{pstm-100202} Types: [java.lang.String, java.lang.String]>
2018-01-31 16:54:30,673 DEBUG [java.sql.ResultSet] - <{rset-100203} ResultSet>
2018-01-31 16:54:30,673 DEBUG [java.sql.ResultSet] - <{rset-100203} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-01-31 16:54:30,673 DEBUG [java.sql.ResultSet] - <{rset-100203} Result: [共1, 1744, 0, 0, 1744, 0, null, null, 109, null, 0, 0, 0, 0]>
2018-01-31 16:54:31,942 DEBUG [java.sql.Connection] - <{conn-100204} Connection>
2018-01-31 16:54:31,943 DEBUG [java.sql.Connection] - <{conn-100204} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-31 16:54:31,943 DEBUG [java.sql.PreparedStatement] - <{pstm-100205} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-31 16:54:31,943 DEBUG [java.sql.PreparedStatement] - <{pstm-100205} Parameters: [2017, A]>
2018-01-31 16:54:31,943 DEBUG [java.sql.PreparedStatement] - <{pstm-100205} Types: [java.lang.String, java.lang.String]>
2018-01-31 16:54:31,949 DEBUG [java.sql.ResultSet] - <{rset-100206} ResultSet>
2018-01-31 16:54:31,950 DEBUG [java.sql.ResultSet] - <{rset-100206} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-31 16:54:31,950 DEBUG [java.sql.ResultSet] - <{rset-100206} Result: [null, 供热费, 2017, 0001-008-02-04-03, A, 0, 01, 0001, 0001-008, 测试, 1744, 0, 0, 1744, 0, null, A1, 16, null, null, 109, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-01-31, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103078, 1]>
2018-01-31 16:54:31,950 DEBUG [java.sql.Connection] - <{conn-100207} Connection>
2018-01-31 16:54:31,950 DEBUG [java.sql.Connection] - <{conn-100207} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))            AND      item_code =?              >
2018-01-31 16:54:31,950 DEBUG [java.sql.PreparedStatement] - <{pstm-100208} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))            AND      item_code =?              >
2018-01-31 16:54:31,950 DEBUG [java.sql.PreparedStatement] - <{pstm-100208} Parameters: [2017, A]>
2018-01-31 16:54:31,950 DEBUG [java.sql.PreparedStatement] - <{pstm-100208} Types: [java.lang.String, java.lang.String]>
2018-01-31 16:54:31,953 DEBUG [java.sql.ResultSet] - <{rset-100209} ResultSet>
2018-01-31 16:54:31,953 DEBUG [java.sql.ResultSet] - <{rset-100209} Header: [count(*)]>
2018-01-31 16:54:31,953 DEBUG [java.sql.ResultSet] - <{rset-100209} Result: [1]>
2018-01-31 16:54:32,009 DEBUG [java.sql.Connection] - <{conn-100210} Connection>
2018-01-31 16:54:32,010 DEBUG [java.sql.Connection] - <{conn-100210} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))            AND      item_code =?          >
2018-01-31 16:54:32,010 DEBUG [java.sql.PreparedStatement] - <{pstm-100211} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))            AND      item_code =?          >
2018-01-31 16:54:32,010 DEBUG [java.sql.PreparedStatement] - <{pstm-100211} Parameters: [2017, A]>
2018-01-31 16:54:32,010 DEBUG [java.sql.PreparedStatement] - <{pstm-100211} Types: [java.lang.String, java.lang.String]>
2018-01-31 16:54:32,014 DEBUG [java.sql.ResultSet] - <{rset-100212} ResultSet>
2018-01-31 16:54:32,014 DEBUG [java.sql.ResultSet] - <{rset-100212} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-01-31 16:54:32,014 DEBUG [java.sql.ResultSet] - <{rset-100212} Result: [共1, 1744, 0, 0, 1744, 0, null, null, 109, null, 0, 0, 0, 0]>
2018-01-31 17:24:37,759 DEBUG [java.sql.Connection] - <{conn-100213} Connection>
2018-01-31 17:24:37,759 DEBUG [java.sql.Connection] - <{conn-100213} Preparing Statement:    DELETE      FROM eahttpsession   WHERE                sessionid = ?                >
2018-01-31 17:24:37,759 DEBUG [java.sql.PreparedStatement] - <{pstm-100214} Executing Statement:    DELETE      FROM eahttpsession   WHERE                sessionid = ?                >
2018-01-31 17:24:37,759 DEBUG [java.sql.PreparedStatement] - <{pstm-100214} Parameters: [2yajvsrrmv9z]>
2018-01-31 17:24:37,760 DEBUG [java.sql.PreparedStatement] - <{pstm-100214} Types: [java.lang.String]>
2018-01-31 18:07:29,767 DEBUG [java.sql.Connection] - <{conn-100215} Connection>
2018-01-31 18:07:29,768 DEBUG [java.sql.Connection] - <{conn-100215} Preparing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-01-31 18:07:29,768 DEBUG [java.sql.PreparedStatement] - <{pstm-100216} Executing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-01-31 18:07:29,768 DEBUG [java.sql.PreparedStatement] - <{pstm-100216} Parameters: [0, admin]>
2018-01-31 18:07:29,768 DEBUG [java.sql.PreparedStatement] - <{pstm-100216} Types: [java.lang.String, java.lang.String]>
2018-01-31 18:07:29,769 DEBUG [java.sql.ResultSet] - <{rset-100217} ResultSet>
2018-01-31 18:07:29,770 DEBUG [java.sql.ResultSet] - <{rset-100217} Header: [userid, username, account, password, sex, deptid, theme, customid, customname]>
2018-01-31 18:07:29,770 DEBUG [java.sql.ResultSet] - <{rset-100217} Result: [100043, 管理员, admin, kLxefEnNKtb/5nUG9lJcVA==, 0, 001, default, 01, 康馨供热]>
2018-01-31 18:07:36,396 DEBUG [java.sql.Connection] - <{conn-100218} Connection>
2018-01-31 18:07:36,397 DEBUG [java.sql.Connection] - <{conn-100218} Preparing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-01-31 18:07:36,397 DEBUG [java.sql.PreparedStatement] - <{pstm-100219} Executing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-01-31 18:07:36,397 DEBUG [java.sql.PreparedStatement] - <{pstm-100219} Parameters: [0, admin]>
2018-01-31 18:07:36,397 DEBUG [java.sql.PreparedStatement] - <{pstm-100219} Types: [java.lang.String, java.lang.String]>
2018-01-31 18:07:36,399 DEBUG [java.sql.ResultSet] - <{rset-100220} ResultSet>
2018-01-31 18:07:36,399 DEBUG [java.sql.ResultSet] - <{rset-100220} Header: [userid, username, account, password, sex, deptid, theme, customid, customname]>
2018-01-31 18:07:36,399 DEBUG [java.sql.ResultSet] - <{rset-100220} Result: [100043, 管理员, admin, kLxefEnNKtb/5nUG9lJcVA==, 0, 001, default, 01, 康馨供热]>
2018-01-31 18:07:36,400 DEBUG [java.sql.Connection] - <{conn-100221} Connection>
2018-01-31 18:07:36,401 DEBUG [java.sql.Connection] - <{conn-100221} Preparing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-01-31 18:07:36,401 DEBUG [java.sql.PreparedStatement] - <{pstm-100222} Executing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-01-31 18:07:36,401 DEBUG [java.sql.PreparedStatement] - <{pstm-100222} Parameters: [1mcwdtbahxsa7]>
2018-01-31 18:07:36,401 DEBUG [java.sql.PreparedStatement] - <{pstm-100222} Types: [java.lang.String]>
2018-01-31 18:07:36,403 DEBUG [java.sql.ResultSet] - <{rset-100223} ResultSet>
2018-01-31 18:07:36,403 DEBUG [java.sql.Connection] - <{conn-100224} Connection>
2018-01-31 18:07:36,404 DEBUG [java.sql.Connection] - <{conn-100224} Preparing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-01-31 18:07:36,404 DEBUG [java.sql.PreparedStatement] - <{pstm-100225} Executing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-01-31 18:07:36,404 DEBUG [java.sql.PreparedStatement] - <{pstm-100225} Parameters: [1mcwdtbahxsa7, 管理员, admin, 2018-01-31 18:07:36, 127.0.0.1, 100043, FIREFOX/58.]>
2018-01-31 18:07:36,404 DEBUG [java.sql.PreparedStatement] - <{pstm-100225} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-01-31 18:07:36,465 DEBUG [java.sql.Connection] - <{conn-100226} Connection>
2018-01-31 18:07:36,465 DEBUG [java.sql.Connection] - <{conn-100226} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-31 18:07:36,465 DEBUG [java.sql.PreparedStatement] - <{pstm-100227} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-31 18:07:36,465 DEBUG [java.sql.PreparedStatement] - <{pstm-100227} Parameters: [100043]>
2018-01-31 18:07:36,465 DEBUG [java.sql.PreparedStatement] - <{pstm-100227} Types: [java.lang.String]>
2018-01-31 18:07:36,466 DEBUG [java.sql.ResultSet] - <{rset-100228} ResultSet>
2018-01-31 18:07:36,467 DEBUG [java.sql.ResultSet] - <{rset-100228} Header: [theme]>
2018-01-31 18:07:36,467 DEBUG [java.sql.ResultSet] - <{rset-100228} Result: [default]>
2018-01-31 18:07:36,608 DEBUG [java.sql.Connection] - <{conn-100229} Connection>
2018-01-31 18:07:36,609 DEBUG [java.sql.Connection] - <{conn-100229} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-31 18:07:36,609 DEBUG [java.sql.PreparedStatement] - <{pstm-100230} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-31 18:07:36,609 DEBUG [java.sql.PreparedStatement] - <{pstm-100230} Parameters: [100043]>
2018-01-31 18:07:36,609 DEBUG [java.sql.PreparedStatement] - <{pstm-100230} Types: [java.lang.String]>
2018-01-31 18:07:36,611 DEBUG [java.sql.ResultSet] - <{rset-100231} ResultSet>
2018-01-31 18:07:36,611 DEBUG [java.sql.ResultSet] - <{rset-100231} Header: [menuid, menuname, iconcls]>
2018-01-31 18:07:36,611 DEBUG [java.sql.ResultSet] - <{rset-100231} Result: [0103, 基础信息, null]>
2018-01-31 18:07:36,611 DEBUG [java.sql.ResultSet] - <{rset-100231} Result: [0104, 收费管理, null]>
2018-01-31 18:07:36,612 DEBUG [java.sql.ResultSet] - <{rset-100231} Result: [0105, 统计分析, null]>
2018-01-31 18:07:36,612 DEBUG [java.sql.ResultSet] - <{rset-100231} Result: [0101, 系统管理, null]>
2018-01-31 18:07:36,612 DEBUG [java.sql.Connection] - <{conn-100232} Connection>
2018-01-31 18:07:36,612 DEBUG [java.sql.Connection] - <{conn-100232} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-01-31 18:07:36,612 DEBUG [java.sql.PreparedStatement] - <{pstm-100233} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-01-31 18:07:36,612 DEBUG [java.sql.PreparedStatement] - <{pstm-100233} Parameters: [100043]>
2018-01-31 18:07:36,612 DEBUG [java.sql.PreparedStatement] - <{pstm-100233} Types: [java.lang.String]>
2018-01-31 18:07:36,614 DEBUG [java.sql.ResultSet] - <{rset-100234} ResultSet>
2018-01-31 18:07:36,615 DEBUG [java.sql.Connection] - <{conn-100235} Connection>
2018-01-31 18:07:36,616 DEBUG [java.sql.Connection] - <{conn-100235} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-31 18:07:36,616 DEBUG [java.sql.PreparedStatement] - <{pstm-100236} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-31 18:07:36,616 DEBUG [java.sql.PreparedStatement] - <{pstm-100236} Parameters: [001]>
2018-01-31 18:07:36,616 DEBUG [java.sql.PreparedStatement] - <{pstm-100236} Types: [java.lang.String]>
2018-01-31 18:07:36,617 DEBUG [java.sql.ResultSet] - <{rset-100237} ResultSet>
2018-01-31 18:07:36,617 DEBUG [java.sql.ResultSet] - <{rset-100237} Header: [deptid, deptname]>
2018-01-31 18:07:36,617 DEBUG [java.sql.ResultSet] - <{rset-100237} Result: [001, 康馨热力]>
2018-01-31 18:07:36,618 DEBUG [java.sql.Connection] - <{conn-100238} Connection>
2018-01-31 18:07:36,618 DEBUG [java.sql.Connection] - <{conn-100238} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-31 18:07:36,618 DEBUG [java.sql.PreparedStatement] - <{pstm-100239} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-01-31 18:07:36,618 DEBUG [java.sql.PreparedStatement] - <{pstm-100239} Parameters: [001]>
2018-01-31 18:07:36,618 DEBUG [java.sql.PreparedStatement] - <{pstm-100239} Types: [java.lang.String]>
2018-01-31 18:07:36,619 DEBUG [java.sql.ResultSet] - <{rset-100240} ResultSet>
2018-01-31 18:07:36,620 DEBUG [java.sql.ResultSet] - <{rset-100240} Header: [deptid, deptname]>
2018-01-31 18:07:36,620 DEBUG [java.sql.ResultSet] - <{rset-100240} Result: [001, 康馨热力]>
2018-01-31 18:07:36,621 DEBUG [java.sql.Connection] - <{conn-100241} Connection>
2018-01-31 18:07:36,621 DEBUG [java.sql.Connection] - <{conn-100241} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-31 18:07:36,621 DEBUG [java.sql.PreparedStatement] - <{pstm-100242} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-31 18:07:36,621 DEBUG [java.sql.PreparedStatement] - <{pstm-100242} Parameters: [100043]>
2018-01-31 18:07:36,621 DEBUG [java.sql.PreparedStatement] - <{pstm-100242} Types: [java.lang.String]>
2018-01-31 18:07:36,622 DEBUG [java.sql.ResultSet] - <{rset-100243} ResultSet>
2018-01-31 18:07:36,622 DEBUG [java.sql.ResultSet] - <{rset-100243} Header: [theme]>
2018-01-31 18:07:36,622 DEBUG [java.sql.ResultSet] - <{rset-100243} Result: [default]>
2018-01-31 18:07:36,631 DEBUG [java.sql.Connection] - <{conn-100244} Connection>
2018-01-31 18:07:36,631 DEBUG [java.sql.Connection] - <{conn-100244} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-31 18:07:36,631 DEBUG [java.sql.PreparedStatement] - <{pstm-100245} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-31 18:07:36,631 DEBUG [java.sql.PreparedStatement] - <{pstm-100245} Parameters: [100043]>
2018-01-31 18:07:36,631 DEBUG [java.sql.PreparedStatement] - <{pstm-100245} Types: [java.lang.String]>
2018-01-31 18:07:36,633 DEBUG [java.sql.ResultSet] - <{rset-100246} ResultSet>
2018-01-31 18:07:36,634 DEBUG [java.sql.ResultSet] - <{rset-100246} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-31 18:07:36,634 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [010305, 入网管理, null, 0103, module/iw.ered?reqCode=intoWebInit, 0, false, false, tab_blank.png]>
2018-01-31 18:07:36,634 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [01030404, 新建换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,634 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [01030405, 修改换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,634 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [010301, 热源管理, null, 0103, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,635 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [01030401, 新建热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,635 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [01030406, 删除换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,635 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [01030403, 删除热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,635 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [01030311, 修改面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,635 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [01030313, 删除面积1, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,636 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [01030501, 新增入网, null, 010305, null, 1, false, true, tab_blank.png]>
2018-01-31 18:07:36,636 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [01030202, 导入模板下载, null, 010302, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,636 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [01030201, 选择导入文件, null, 010302, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,636 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [010304, 热源站所管理, null, 0103, module/sr.ered?reqCode=sourceInit, 0, false, false, tab_blank.png]>
2018-01-31 18:07:36,637 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [0103, 基础信息, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-31 18:07:36,637 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [01030312, 删除面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,637 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [01030301, 新建小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,637 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [01030310, 添加面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,637 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [01030502, 修改入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,637 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [01030402, 修改热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,638 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [010303, 基础信息维护, null, 0103, module/fc.ered?reqCode=communityInit, 0, false, false, tab_blank.png]>
2018-01-31 18:07:36,638 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [01030302, 修改小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,638 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [01030503, 删除入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,638 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [01030303, 删除小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,638 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [010302, 基础数据导入, null, 0103, module/importHouse.ered?reqCode=importInit, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,638 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [01030304, 新建大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,639 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [01030305, 修改大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,639 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [01030306, 删除大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,639 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [01030307, 新建用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,639 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [01030308, 修改用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,639 DEBUG [java.sql.ResultSet] - <{rset-100246} Result: [01030309, 删除用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,640 DEBUG [java.sql.Connection] - <{conn-100247} Connection>
2018-01-31 18:07:36,640 DEBUG [java.sql.Connection] - <{conn-100247} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-31 18:07:36,640 DEBUG [java.sql.PreparedStatement] - <{pstm-100248} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-31 18:07:36,640 DEBUG [java.sql.PreparedStatement] - <{pstm-100248} Parameters: [100043]>
2018-01-31 18:07:36,640 DEBUG [java.sql.PreparedStatement] - <{pstm-100248} Types: [java.lang.String]>
2018-01-31 18:07:36,641 DEBUG [java.sql.ResultSet] - <{rset-100249} ResultSet>
2018-01-31 18:07:36,642 DEBUG [java.sql.Connection] - <{conn-100250} Connection>
2018-01-31 18:07:36,642 DEBUG [java.sql.Connection] - <{conn-100250} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-31 18:07:36,642 DEBUG [java.sql.PreparedStatement] - <{pstm-100251} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-31 18:07:36,642 DEBUG [java.sql.PreparedStatement] - <{pstm-100251} Parameters: [01]>
2018-01-31 18:07:36,642 DEBUG [java.sql.PreparedStatement] - <{pstm-100251} Types: [java.lang.String]>
2018-01-31 18:07:36,643 DEBUG [java.sql.ResultSet] - <{rset-100252} ResultSet>
2018-01-31 18:07:36,643 DEBUG [java.sql.ResultSet] - <{rset-100252} Header: [menuname]>
2018-01-31 18:07:36,643 DEBUG [java.sql.ResultSet] - <{rset-100252} Result: [供热收费管理信息系统]>
2018-01-31 18:07:36,658 DEBUG [java.sql.Connection] - <{conn-100253} Connection>
2018-01-31 18:07:36,658 DEBUG [java.sql.Connection] - <{conn-100253} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-31 18:07:36,658 DEBUG [java.sql.PreparedStatement] - <{pstm-100254} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-31 18:07:36,658 DEBUG [java.sql.PreparedStatement] - <{pstm-100254} Parameters: [100043]>
2018-01-31 18:07:36,658 DEBUG [java.sql.PreparedStatement] - <{pstm-100254} Types: [java.lang.String]>
2018-01-31 18:07:36,661 DEBUG [java.sql.ResultSet] - <{rset-100255} ResultSet>
2018-01-31 18:07:36,661 DEBUG [java.sql.ResultSet] - <{rset-100255} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-31 18:07:36,662 DEBUG [java.sql.ResultSet] - <{rset-100255} Result: [010402, 收费管理, null, 0104, module/chg.ered?reqCode=chargeInit, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,662 DEBUG [java.sql.ResultSet] - <{rset-100255} Result: [01040503, 作废票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,662 DEBUG [java.sql.ResultSet] - <{rset-100255} Result: [01040501, 票据入库, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,662 DEBUG [java.sql.ResultSet] - <{rset-100255} Result: [01040401, 冲账, null, 010404, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,662 DEBUG [java.sql.ResultSet] - <{rset-100255} Result: [01040101, 生成应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,662 DEBUG [java.sql.ResultSet] - <{rset-100255} Result: [010401, 生成应收, null, 0104, module/crp.ered?reqCode=creatPlanInit, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,662 DEBUG [java.sql.ResultSet] - <{rset-100255} Result: [01040505, 领用票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,662 DEBUG [java.sql.ResultSet] - <{rset-100255} Result: [01040302, 删除减免, null, 010403, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,662 DEBUG [java.sql.ResultSet] - <{rset-100255} Result: [01040301, 减免应收, null, 010403, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,663 DEBUG [java.sql.ResultSet] - <{rset-100255} Result: [01040502, 删除票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,663 DEBUG [java.sql.ResultSet] - <{rset-100255} Result: [01040201, 收费, null, 010402, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,663 DEBUG [java.sql.ResultSet] - <{rset-100255} Result: [01040102, 删除应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,663 DEBUG [java.sql.ResultSet] - <{rset-100255} Result: [01040504, 返还票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,663 DEBUG [java.sql.ResultSet] - <{rset-100255} Result: [010403, 减免管理, null, 0104, module/mns.ered?reqCode=minusInit, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,663 DEBUG [java.sql.ResultSet] - <{rset-100255} Result: [0104, 收费管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-31 18:07:36,663 DEBUG [java.sql.ResultSet] - <{rset-100255} Result: [010404, 冲账管理, null, 0104, module/rlb.ered?reqCode=rollbackInit, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,663 DEBUG [java.sql.ResultSet] - <{rset-100255} Result: [010405, 票据管理, null, 0104, module/inv.ered?reqCode=invoiceInit, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,663 DEBUG [java.sql.ResultSet] - <{rset-100255} Result: [010406, 银行对账, null, 0104, module/bnk.ered?reqCode=bankInit, 0, false, false, tab_blank.png]>
2018-01-31 18:07:36,664 DEBUG [java.sql.Connection] - <{conn-100256} Connection>
2018-01-31 18:07:36,664 DEBUG [java.sql.Connection] - <{conn-100256} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-31 18:07:36,664 DEBUG [java.sql.PreparedStatement] - <{pstm-100257} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-31 18:07:36,664 DEBUG [java.sql.PreparedStatement] - <{pstm-100257} Parameters: [100043]>
2018-01-31 18:07:36,664 DEBUG [java.sql.PreparedStatement] - <{pstm-100257} Types: [java.lang.String]>
2018-01-31 18:07:36,665 DEBUG [java.sql.ResultSet] - <{rset-100258} ResultSet>
2018-01-31 18:07:36,666 DEBUG [java.sql.Connection] - <{conn-100259} Connection>
2018-01-31 18:07:36,666 DEBUG [java.sql.Connection] - <{conn-100259} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-31 18:07:36,666 DEBUG [java.sql.PreparedStatement] - <{pstm-100260} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-31 18:07:36,666 DEBUG [java.sql.PreparedStatement] - <{pstm-100260} Parameters: [01]>
2018-01-31 18:07:36,666 DEBUG [java.sql.PreparedStatement] - <{pstm-100260} Types: [java.lang.String]>
2018-01-31 18:07:36,667 DEBUG [java.sql.ResultSet] - <{rset-100261} ResultSet>
2018-01-31 18:07:36,667 DEBUG [java.sql.ResultSet] - <{rset-100261} Header: [menuname]>
2018-01-31 18:07:36,667 DEBUG [java.sql.ResultSet] - <{rset-100261} Result: [供热收费管理信息系统]>
2018-01-31 18:07:36,679 DEBUG [java.sql.Connection] - <{conn-100262} Connection>
2018-01-31 18:07:36,679 DEBUG [java.sql.Connection] - <{conn-100262} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-31 18:07:36,679 DEBUG [java.sql.PreparedStatement] - <{pstm-100263} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-31 18:07:36,679 DEBUG [java.sql.PreparedStatement] - <{pstm-100263} Parameters: [100043]>
2018-01-31 18:07:36,680 DEBUG [java.sql.PreparedStatement] - <{pstm-100263} Types: [java.lang.String]>
2018-01-31 18:07:36,682 DEBUG [java.sql.ResultSet] - <{rset-100264} ResultSet>
2018-01-31 18:07:36,682 DEBUG [java.sql.ResultSet] - <{rset-100264} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-31 18:07:36,682 DEBUG [java.sql.ResultSet] - <{rset-100264} Result: [010501, 基础报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-01-31 18:07:36,682 DEBUG [java.sql.ResultSet] - <{rset-100264} Result: [010502, 收费报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-01-31 18:07:36,682 DEBUG [java.sql.ResultSet] - <{rset-100264} Result: [01050202, 欠费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050201, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,682 DEBUG [java.sql.ResultSet] - <{rset-100264} Result: [01050101, 用户情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=f01050101, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,682 DEBUG [java.sql.ResultSet] - <{rset-100264} Result: [01050102, 入网情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=w01050301, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,682 DEBUG [java.sql.ResultSet] - <{rset-100264} Result: [01050203, 收费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050202, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,683 DEBUG [java.sql.ResultSet] - <{rset-100264} Result: [01050201, 收费情况表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050401, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,683 DEBUG [java.sql.ResultSet] - <{rset-100264} Result: [0105, 统计分析, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-31 18:07:36,683 DEBUG [java.sql.ResultSet] - <{rset-100264} Result: [01050204, 减免明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050204, 1, false, false, tab_blank.png]>
2018-01-31 18:07:36,683 DEBUG [java.sql.Connection] - <{conn-100265} Connection>
2018-01-31 18:07:36,683 DEBUG [java.sql.Connection] - <{conn-100265} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-31 18:07:36,683 DEBUG [java.sql.PreparedStatement] - <{pstm-100266} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-31 18:07:36,684 DEBUG [java.sql.PreparedStatement] - <{pstm-100266} Parameters: [100043]>
2018-01-31 18:07:36,684 DEBUG [java.sql.PreparedStatement] - <{pstm-100266} Types: [java.lang.String]>
2018-01-31 18:07:36,685 DEBUG [java.sql.ResultSet] - <{rset-100267} ResultSet>
2018-01-31 18:07:36,685 DEBUG [java.sql.Connection] - <{conn-100268} Connection>
2018-01-31 18:07:36,686 DEBUG [java.sql.Connection] - <{conn-100268} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-31 18:07:36,686 DEBUG [java.sql.PreparedStatement] - <{pstm-100269} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-31 18:07:36,686 DEBUG [java.sql.PreparedStatement] - <{pstm-100269} Parameters: [01]>
2018-01-31 18:07:36,686 DEBUG [java.sql.PreparedStatement] - <{pstm-100269} Types: [java.lang.String]>
2018-01-31 18:07:36,687 DEBUG [java.sql.ResultSet] - <{rset-100270} ResultSet>
2018-01-31 18:07:36,687 DEBUG [java.sql.ResultSet] - <{rset-100270} Header: [menuname]>
2018-01-31 18:07:36,687 DEBUG [java.sql.ResultSet] - <{rset-100270} Result: [供热收费管理信息系统]>
2018-01-31 18:07:36,698 DEBUG [java.sql.Connection] - <{conn-100271} Connection>
2018-01-31 18:07:36,698 DEBUG [java.sql.Connection] - <{conn-100271} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-31 18:07:36,698 DEBUG [java.sql.PreparedStatement] - <{pstm-100272} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-01-31 18:07:36,699 DEBUG [java.sql.PreparedStatement] - <{pstm-100272} Parameters: [100043]>
2018-01-31 18:07:36,699 DEBUG [java.sql.PreparedStatement] - <{pstm-100272} Types: [java.lang.String]>
2018-01-31 18:07:36,701 DEBUG [java.sql.ResultSet] - <{rset-100273} ResultSet>
2018-01-31 18:07:36,701 DEBUG [java.sql.ResultSet] - <{rset-100273} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-01-31 18:07:36,701 DEBUG [java.sql.ResultSet] - <{rset-100273} Result: [01010304, 收费标准, server_connectIcon, 010103, module/std.ered?reqCode=standardInit, 1, false, false, server_connect.png]>
2018-01-31 18:07:36,701 DEBUG [java.sql.ResultSet] - <{rset-100273} Result: [010102, 权限管理, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-31 18:07:36,701 DEBUG [java.sql.ResultSet] - <{rset-100273} Result: [01010403, Requst请求跟踪, server_connectIcon, 010104, eventTrack.ered?reqCode=init, 1, false, false, server_connect.png]>
2018-01-31 18:07:36,702 DEBUG [java.sql.ResultSet] - <{rset-100273} Result: [01010201, 组织机构管理, chart_organisationIcon, 010102, organization.ered?reqCode=departmentInit, 1, false, false, chart_organisation.png]>
2018-01-31 18:07:36,702 DEBUG [java.sql.ResultSet] - <{rset-100273} Result: [01010301, 字典维护, application_view_listIcon, 010103, resource.ered?reqCode=codeTableInit, 1, false, false, application_view_list.png]>
2018-01-31 18:07:36,702 DEBUG [java.sql.ResultSet] - <{rset-100273} Result: [01010401, Session会话监控, user_commentIcon, 010104, sessionMonitor.ered?reqCode=init, 1, false, false, user_comment.png]>
2018-01-31 18:07:36,702 DEBUG [java.sql.ResultSet] - <{rset-100273} Result: [01010204, 角色管理与授权, award_star_silver_3Icon, 010102, role.ered?reqCode=roleInit, 1, false, false, award_star_silver_3.png]>
2018-01-31 18:07:36,702 DEBUG [java.sql.ResultSet] - <{rset-100273} Result: [01010303, 全局参数表维护, configIcon, 010103, param.ered?reqCode=init, 1, false, false, config.png]>
2018-01-31 18:07:36,702 DEBUG [java.sql.ResultSet] - <{rset-100273} Result: [010103, 基础数据维护, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-31 18:07:36,703 DEBUG [java.sql.ResultSet] - <{rset-100273} Result: [010104, 运行监控, null, 0101, null, 0, false, true, tab_blank.png]>
2018-01-31 18:07:36,703 DEBUG [java.sql.ResultSet] - <{rset-100273} Result: [01010202, 人员管理与授权, group_linkIcon, 010102, user.ered?reqCode=userInit, 1, false, false, group_link.png]>
2018-01-31 18:07:36,703 DEBUG [java.sql.ResultSet] - <{rset-100273} Result: [01010405, JDBC执行监控, database_refreshIcon, 010104, jdbcMonitor.ered?reqCode=jdbcInit, 1, false, false, database_refresh.png]>
2018-01-31 18:07:36,703 DEBUG [java.sql.ResultSet] - <{rset-100273} Result: [01010406, Service监控, pluginIcon, 010104, beanMonitor.ered?reqCode=init, 1, false, false, plugin.png]>
2018-01-31 18:07:36,703 DEBUG [java.sql.ResultSet] - <{rset-100273} Result: [01010205, 菜单资源管理, layout_contentIcon, 010102, resource.ered?reqCode=menuResourceInit, 1, false, false, layout_content.png]>
2018-01-31 18:07:36,704 DEBUG [java.sql.ResultSet] - <{rset-100273} Result: [0101, 系统管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-01-31 18:07:36,704 DEBUG [java.sql.Connection] - <{conn-100274} Connection>
2018-01-31 18:07:36,704 DEBUG [java.sql.Connection] - <{conn-100274} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-31 18:07:36,704 DEBUG [java.sql.PreparedStatement] - <{pstm-100275} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-01-31 18:07:36,704 DEBUG [java.sql.PreparedStatement] - <{pstm-100275} Parameters: [100043]>
2018-01-31 18:07:36,704 DEBUG [java.sql.PreparedStatement] - <{pstm-100275} Types: [java.lang.String]>
2018-01-31 18:07:36,705 DEBUG [java.sql.ResultSet] - <{rset-100276} ResultSet>
2018-01-31 18:07:36,706 DEBUG [java.sql.Connection] - <{conn-100277} Connection>
2018-01-31 18:07:36,706 DEBUG [java.sql.Connection] - <{conn-100277} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-31 18:07:36,706 DEBUG [java.sql.PreparedStatement] - <{pstm-100278} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-01-31 18:07:36,706 DEBUG [java.sql.PreparedStatement] - <{pstm-100278} Parameters: [01]>
2018-01-31 18:07:36,706 DEBUG [java.sql.PreparedStatement] - <{pstm-100278} Types: [java.lang.String]>
2018-01-31 18:07:36,707 DEBUG [java.sql.ResultSet] - <{rset-100279} ResultSet>
2018-01-31 18:07:36,707 DEBUG [java.sql.ResultSet] - <{rset-100279} Header: [menuname]>
2018-01-31 18:07:36,707 DEBUG [java.sql.ResultSet] - <{rset-100279} Result: [供热收费管理信息系统]>
2018-01-31 18:07:37,074 DEBUG [java.sql.Connection] - <{conn-100280} Connection>
2018-01-31 18:07:37,074 DEBUG [java.sql.Connection] - <{conn-100280} Preparing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-01-31 18:07:37,074 DEBUG [java.sql.PreparedStatement] - <{pstm-100281} Executing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-01-31 18:07:37,075 DEBUG [java.sql.PreparedStatement] - <{pstm-100281} Parameters: []>
2018-01-31 18:07:37,075 DEBUG [java.sql.PreparedStatement] - <{pstm-100281} Types: []>
2018-01-31 18:07:37,077 DEBUG [java.sql.ResultSet] - <{rset-100282} ResultSet>
2018-01-31 18:07:37,077 DEBUG [java.sql.ResultSet] - <{rset-100282} Header: [id, text, child_count]>
2018-01-31 18:07:37,078 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0001, 0001 冶矿中心 (1), 1]>
2018-01-31 18:07:37,078 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0002, 0002 劳动局家属楼 (1), 1]>
2018-01-31 18:07:37,078 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0003, 0003 食品公司 (1), 1]>
2018-01-31 18:07:37,078 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0004, 0004 人社局11号楼 (2), 2]>
2018-01-31 18:07:37,078 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0005, 0005 卫生局家属楼 (1), 1]>
2018-01-31 18:07:37,079 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0006, 0006 水电公司 (2), 2]>
2018-01-31 18:07:37,079 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0007, 0007 水利局陈卿小区 (1), 1]>
2018-01-31 18:07:37,079 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0008, 0008 发改局家属楼 (1), 1]>
2018-01-31 18:07:37,079 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0009, 0009 公路段家属楼 (1), 1]>
2018-01-31 18:07:37,080 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0010, 0010 公路段平房 (1), 1]>
2018-01-31 18:07:37,080 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0011, 0011 公安局家属楼 (1), 1]>
2018-01-31 18:07:37,080 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0012, 0012 人民银行 (2), 2]>
2018-01-31 18:07:37,080 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0013, 0013 文卫路陈卿小区 (1), 1]>
2018-01-31 18:07:37,080 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0014, 0014 中医院家属楼 (1), 1]>
2018-01-31 18:07:37,080 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0015, 0015 腾达鞋业 (3), 3]>
2018-01-31 18:07:37,080 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0016, 0016 城关供销社 (2), 2]>
2018-01-31 18:07:37,080 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0017, 0017 城南便民超市 (1), 1]>
2018-01-31 18:07:37,080 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0018, 0018 祥源便民超市 (1), 1]>
2018-01-31 18:07:37,080 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0019, 0019 老北京饭店 (1), 1]>
2018-01-31 18:07:37,081 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0020, 0020 开门红打印店 (1), 1]>
2018-01-31 18:07:37,081 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0021, 0021 一中状元路拐角楼 (1), 1]>
2018-01-31 18:07:37,081 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0022, 0022 常委家属楼 (1), 1]>
2018-01-31 18:07:37,081 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0023, 0023 府前街002号院 (1), 1]>
2018-01-31 18:07:37,081 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0024, 0024 府前街（新华书店对面） (1), 1]>
2018-01-31 18:07:37,081 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0025, 0025 东厢小区 (2), 2]>
2018-01-31 18:07:37,081 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0026, 0026 凤凰名居旁 (1), 1]>
2018-01-31 18:07:37,081 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0027, 0027 电影公司家属楼 (1), 1]>
2018-01-31 18:07:37,081 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0028, 0028 凤凰名居 (2), 2]>
2018-01-31 18:07:37,081 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0029, 0029 府东006#家属楼 (2), 2]>
2018-01-31 18:07:37,082 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0030, 0030 药材公司窑 (1), 1]>
2018-01-31 18:07:37,082 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0031, 0031 府西小区 (3), 3]>
2018-01-31 18:07:37,082 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0032, 0032 工商局家属楼 (3), 3]>
2018-01-31 18:07:37,082 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0033, 0033 供销合作联合社 (2), 2]>
2018-01-31 18:07:37,082 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0034, 0034 果品公司家属楼 (1), 1]>
2018-01-31 18:07:37,082 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0035, 0035 宏运饮食服务公司 (4), 4]>
2018-01-31 18:07:37,083 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0036, 0036 旧工行家属院 (5), 5]>
2018-01-31 18:07:37,083 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0037, 0037 落子剧团家属楼 (3), 3]>
2018-01-31 18:07:37,083 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0038, 0038 粮食局家属楼 (5), 5]>
2018-01-31 18:07:37,083 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0039, 0039 茂源糖酒公司家属楼 (1), 1]>
2018-01-31 18:07:37,084 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0040, 0040 旅游局旁门市住户 (1), 1]>
2018-01-31 18:07:37,084 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0041, 0041 农行机关家属楼 (1), 1]>
2018-01-31 18:07:37,084 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0042, 0042 青羊社区院内 (1), 1]>
2018-01-31 18:07:37,084 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0043, 0043 人大家属楼   (1), 1]>
2018-01-31 18:07:37,084 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0044, 0044 人民医院家属楼 (9), 9]>
2018-01-31 18:07:37,084 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0045, 0045 水利局家属楼    (1), 1]>
2018-01-31 18:07:37,084 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0046, 0046 水利局附近居民 (1), 1]>
2018-01-31 18:07:37,085 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0047, 0047 水利局新楼 (2), 2]>
2018-01-31 18:07:37,085 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0048, 0048 王庄分社   (2), 2]>
2018-01-31 18:07:37,085 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0049, 0049 卫生监督所家属楼 (1), 1]>
2018-01-31 18:07:37,086 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0050, 0050 武装部家属楼   (1), 1]>
2018-01-31 18:07:37,086 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0051, 0051 新宇百货家属楼 (1), 1]>
2018-01-31 18:07:37,086 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0052, 0052 阳光佳苑（原药材公司院） (1), 1]>
2018-01-31 18:07:37,086 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0053, 0053 药材公司家属楼 (1), 1]>
2018-01-31 18:07:37,086 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0054, 0054 元发兴小院 (1), 1]>
2018-01-31 18:07:37,086 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0055, 0055 周转房家属楼   (1), 1]>
2018-01-31 18:07:37,086 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0056, 0056 自来水家属楼 (4), 4]>
2018-01-31 18:07:37,086 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0057, 0057 自来水公司家属楼（城建局上面） (1), 1]>
2018-01-31 18:07:37,086 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0058, 0058 组织部家属楼  (1), 1]>
2018-01-31 18:07:37,087 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0059, 0059 政府商铺 (36), 36]>
2018-01-31 18:07:37,087 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [0060, 0060 和园小区 (1), 1]>
2018-01-31 18:07:37,087 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1001, 1001 滨河湾家属楼 (47), 47]>
2018-01-31 18:07:37,087 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1002, 1002 地矿局家属楼 (1), 1]>
2018-01-31 18:07:37,087 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1003, 1003 平顺县彩凤祥玉小区 (1), 1]>
2018-01-31 18:07:37,087 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1004, 1004 平顺县交通执法局家属院 (1), 1]>
2018-01-31 18:07:37,087 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1005, 1005 信用联社家属院 (1), 1]>
2018-01-31 18:07:37,088 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1006, 1006 民政局家属院 (1), 1]>
2018-01-31 18:07:37,088 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1007, 1007 青羊山腾飞小区马建楼 (1), 1]>
2018-01-31 18:07:37,088 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1008, 1008 电影院家属楼 (2), 2]>
2018-01-31 18:07:37,088 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1009, 1009 顺安小区 (1), 1]>
2018-01-31 18:07:37,088 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1010, 1010 商务中心 (2), 2]>
2018-01-31 18:07:37,088 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1011, 1011 彩风花苑 (1), 1]>
2018-01-31 18:07:37,089 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1012, 1012 彩凤道城关村 (1), 1]>
2018-01-31 18:07:37,089 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1013, 1013 康乐食品公司 (3), 3]>
2018-01-31 18:07:37,089 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1014, 1014 宏达五交化新楼 (3), 3]>
2018-01-31 18:07:37,089 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1015, 1015 五交化公司南楼 (3), 3]>
2018-01-31 18:07:37,089 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1016, 1016 宏昌汽修铁冶社新楼南楼 (4), 4]>
2018-01-31 18:07:37,089 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1017, 1017 运输公司南楼 (4), 4]>
2018-01-31 18:07:37,089 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1018, 1018 针织厂北楼东小楼 (2), 2]>
2018-01-31 18:07:37,089 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1019, 1019 彩凤花苑 (1), 1]>
2018-01-31 18:07:37,089 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1020, 1020 顺安小区 (1), 1]>
2018-01-31 18:07:37,090 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1021, 1021 运输公司北楼一楼 (1), 1]>
2018-01-31 18:07:37,090 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1022, 1022 五交化公司大门顶楼下鞋店 (1), 1]>
2018-01-31 18:07:37,090 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1023, 1023 针织厂北楼楼下聚美日化 (1), 1]>
2018-01-31 18:07:37,090 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1024, 1024 商务中心楼下卖摩托车 (1), 1]>
2018-01-31 18:07:37,090 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1025, 1025 宏达五交化温馨家园 (1), 1]>
2018-01-31 18:07:37,090 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1026, 1026 康乐食品楼下 (1), 1]>
2018-01-31 18:07:37,090 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1027, 1027 青羊祥玉小区张华显楼 (1), 1]>
2018-01-31 18:07:37,090 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1028, 1028 五交化公司一楼韵达快递 (1), 1]>
2018-01-31 18:07:37,090 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1029, 1029 针织厂三单元302户 (1), 1]>
2018-01-31 18:07:37,091 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1030, 1030 康乐食品北四层楼一单元402户 (1), 1]>
2018-01-31 18:07:37,091 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1031, 1031 彩凤小区贸易货栈二单元302户 (1), 1]>
2018-01-31 18:07:37,091 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1032, 1032 宏达五交化三楼305 (1), 1]>
2018-01-31 18:07:37,091 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1033, 1033 运输公司北楼二楼203户 (1), 1]>
2018-01-31 18:07:37,091 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1034, 1034 国家电网旁春娥批零部 (1), 1]>
2018-01-31 18:07:37,091 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1035, 1035 电影院周小红 (1), 1]>
2018-01-31 18:07:37,091 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1036, 1036 青羊山腾飞小区马建楼 (1), 1]>
2018-01-31 18:07:37,091 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1037, 1037 自来水家属楼 (1), 1]>
2018-01-31 18:07:37,091 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1038, 1038 彩凤小区30号贸易货栈 (1), 1]>
2018-01-31 18:07:37,091 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [1039, 1039 交警队家属楼 (1), 1]>
2018-01-31 18:07:37,092 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [2001, 2001 阳光花苑 (34), 34]>
2018-01-31 18:07:37,092 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [3001, 3001 滨河花园 (4), 4]>
2018-01-31 18:07:37,092 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [3002, 3002 电力小区 (3), 3]>
2018-01-31 18:07:37,092 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [3003, 3003 交通局家属楼 (2), 2]>
2018-01-31 18:07:37,092 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [3004, 3004 进修校家属区 (4), 4]>
2018-01-31 18:07:37,092 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [3005, 3005 水泵厂 (2), 2]>
2018-01-31 18:07:37,092 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [3006, 3006 小东峪新楼 (1), 1]>
2018-01-31 18:07:37,092 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [3007, 3007 一中 (4), 4]>
2018-01-31 18:07:37,093 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [4001, 4001 地税局 (5), 5]>
2018-01-31 18:07:37,093 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [4002, 4002 林业局家属院 (1), 1]>
2018-01-31 18:07:37,093 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [4003, 4003 妇幼保健院 (2), 2]>
2018-01-31 18:07:37,093 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [4004, 4004 物资局 (6), 6]>
2018-01-31 18:07:37,093 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [4005, 4005 计生服务站家属院 (1), 1]>
2018-01-31 18:07:37,093 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [4006, 4006 党校家属院 (1), 1]>
2018-01-31 18:07:37,093 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [4007, 4007 党校小院 (1), 1]>
2018-01-31 18:07:37,093 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [4008, 4008 饲料公司家属院 (1), 1]>
2018-01-31 18:07:37,093 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [4009, 4009 住建局家属院 (1), 1]>
2018-01-31 18:07:37,094 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [4010, 4010 中小企业局家属院 (1), 1]>
2018-01-31 18:07:37,094 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [4011, 4011 康乐小区 (2), 2]>
2018-01-31 18:07:37,094 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [5001, 5001 财政局家属楼 (2), 2]>
2018-01-31 18:07:37,094 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [5002, 5002 城关镇卫生所   (1), 1]>
2018-01-31 18:07:37,094 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [5003, 5003 城镇工业联合社 (1), 1]>
2018-01-31 18:07:37,094 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [5004, 5004 国税局家属楼 (1), 1]>
2018-01-31 18:07:37,094 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [5005, 5005 联通公司家属楼 (1), 1]>
2018-01-31 18:07:37,094 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [5006, 5006 贸易中心五交化 (2), 2]>
2018-01-31 18:07:37,094 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [5007, 5007 农机公司家属楼 (3), 3]>
2018-01-31 18:07:37,094 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [5008, 5008 农机站商铺 (1), 1]>
2018-01-31 18:07:37,095 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [5009, 5009 青羊镇家属楼及平房 (2), 2]>
2018-01-31 18:07:37,095 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [5010, 5010 人保财险家属楼 (2), 2]>
2018-01-31 18:07:37,095 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [5011, 5011 木建厂彩凤小区 (4), 4]>
2018-01-31 18:07:37,095 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [5012, 5012 实验小学 (2), 2]>
2018-01-31 18:07:37,095 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [5013, 5013 农机站土产日杂门市 (1), 1]>
2018-01-31 18:07:37,096 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [5014, 5014 土地局家属楼 (1), 1]>
2018-01-31 18:07:37,096 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [5015, 5015 外贸公司 (7), 7]>
2018-01-31 18:07:37,096 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [5016, 5016 新华书店 (1), 1]>
2018-01-31 18:07:37,096 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [5017, 5017 盐业公司家属楼 (1), 1]>
2018-01-31 18:07:37,096 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [5018, 5018 移动公司宿舍 (1), 1]>
2018-01-31 18:07:37,096 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [5019, 5019 邮政局家属楼 (1), 1]>
2018-01-31 18:07:37,096 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [6001, 6001 监察局家属院 (1), 1]>
2018-01-31 18:07:37,096 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [6002, 6002 环保局家属院 (1), 1]>
2018-01-31 18:07:37,096 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [6003, 6003 生产生活服务中心 (1), 1]>
2018-01-31 18:07:37,097 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [6004, 6004 平顺县朝阳小区 (1), 1]>
2018-01-31 18:07:37,097 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [6005, 6005 城西工行家属院 (1), 1]>
2018-01-31 18:07:37,097 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [6006, 6006 国税局王庄家属院 (1), 1]>
2018-01-31 18:07:37,097 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [6007, 6007 石油公司家属院 (2), 2]>
2018-01-31 18:07:37,097 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [6008, 6008 司法局家属院 (1), 1]>
2018-01-31 18:07:37,097 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [6009, 6009 农委 (2), 2]>
2018-01-31 18:07:37,097 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [6010, 6010 康乐苑小区 (3), 3]>
2018-01-31 18:07:37,097 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [6011, 6011 民政局西家属院 (1), 1]>
2018-01-31 18:07:37,097 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [6012, 6012 农场家属院 (1), 1]>
2018-01-31 18:07:37,098 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [6013, 6013 龙山小区 (5), 5]>
2018-01-31 18:07:37,098 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [6014, 6014 王庄国税局隔壁 (2), 2]>
2018-01-31 18:07:37,098 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [6015, 6015 城关村（春蕾幼儿园片） (1), 1]>
2018-01-31 18:07:37,098 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [6016, 6016 加州假日小镇 (6), 6]>
2018-01-31 18:07:37,098 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [6017, 6017 平顺县人民剧团家属院 (1), 1]>
2018-01-31 18:07:37,098 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [6018, 6018 怡路快捷酒店 (1), 1]>
2018-01-31 18:07:37,098 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [6019, 6019 平顺县物资局 (1), 1]>
2018-01-31 18:07:37,099 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [7001, 7001 万通苑 (5), 5]>
2018-01-31 18:07:37,099 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [7002, 7002 城关新村 (1), 1]>
2018-01-31 18:07:37,099 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [7003, 7003 广播电视台旧家属楼 (1), 1]>
2018-01-31 18:07:37,099 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [7004, 7004 气象局民用 (1), 1]>
2018-01-31 18:07:37,099 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [7005, 7005 紫东家园经济适用房 (16), 16]>
2018-01-31 18:07:37,099 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [7006, 7006 小东峪路保障房商铺 (1), 1]>
2018-01-31 18:07:37,100 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [7010, 7010 粮贸中心 (5), 5]>
2018-01-31 18:07:37,100 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [7011, 7011 安居工程 (1), 1]>
2018-01-31 18:07:37,100 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [7012, 7012 种子公司家属楼 (1), 1]>
2018-01-31 18:07:37,197 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [7013, 7013 青羊小区 (1), 1]>
2018-01-31 18:07:37,198 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [7014, 7014 青羊小区家属院 (1), 1]>
2018-01-31 18:07:37,198 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [7015, 7015 粮食局车队 (1), 1]>
2018-01-31 18:07:37,198 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [7016, 7016 金港100 (3), 3]>
2018-01-31 18:07:37,198 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [7017, 7017 老干居家属楼 (1), 1]>
2018-01-31 18:07:37,198 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [8001, 8001 大修厂 (1), 1]>
2018-01-31 18:07:37,199 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [8002, 8002 冶金公司 (3), 3]>
2018-01-31 18:07:37,199 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [8003, 8003 德盛苑 (9), 9]>
2018-01-31 18:07:37,199 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [8004, 8004 陈卿小区54号 (1), 1]>
2018-01-31 18:07:37,199 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [8005, 8005 青羊家园 (1), 1]>
2018-01-31 18:07:37,199 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [8006, 8006 荣兴加油站 (1), 1]>
2018-01-31 18:07:37,199 DEBUG [java.sql.ResultSet] - <{rset-100282} Result: [9999, 9999 银行测试数据 (1), 1]>
2018-01-31 18:07:37,229 DEBUG [java.sql.Connection] - <{conn-100283} Connection>
2018-01-31 18:07:37,229 DEBUG [java.sql.Connection] - <{conn-100283} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-31 18:07:37,230 DEBUG [java.sql.PreparedStatement] - <{pstm-100284} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-31 18:07:37,230 DEBUG [java.sql.PreparedStatement] - <{pstm-100284} Parameters: [100043]>
2018-01-31 18:07:37,230 DEBUG [java.sql.PreparedStatement] - <{pstm-100284} Types: [java.lang.String]>
2018-01-31 18:07:37,231 DEBUG [java.sql.ResultSet] - <{rset-100285} ResultSet>
2018-01-31 18:07:37,231 DEBUG [java.sql.ResultSet] - <{rset-100285} Header: [theme]>
2018-01-31 18:07:37,231 DEBUG [java.sql.ResultSet] - <{rset-100285} Result: [default]>
2018-01-31 18:07:39,005 DEBUG [java.sql.Connection] - <{conn-100286} Connection>
2018-01-31 18:07:39,006 DEBUG [java.sql.Connection] - <{conn-100286} Preparing Statement:    SELECT building_code as id, building_code||' '||building_name||' ('||house_count||')' as text,nvl(house_count,0) as child_Count   FROM fc_building a WHERE   a.community_code = '0001'  order by building_code  >
2018-01-31 18:07:39,007 DEBUG [java.sql.PreparedStatement] - <{pstm-100287} Executing Statement:    SELECT building_code as id, building_code||' '||building_name||' ('||house_count||')' as text,nvl(house_count,0) as child_Count   FROM fc_building a WHERE   a.community_code = '0001'  order by building_code  >
2018-01-31 18:07:39,007 DEBUG [java.sql.PreparedStatement] - <{pstm-100287} Parameters: []>
2018-01-31 18:07:39,007 DEBUG [java.sql.PreparedStatement] - <{pstm-100287} Types: []>
2018-01-31 18:07:39,008 DEBUG [java.sql.ResultSet] - <{rset-100288} ResultSet>
2018-01-31 18:07:39,008 DEBUG [java.sql.ResultSet] - <{rset-100288} Header: [id, text, child_count]>
2018-01-31 18:07:39,008 DEBUG [java.sql.ResultSet] - <{rset-100288} Result: [0001-008, 0001-008 8号楼 (17), 17]>
2018-01-31 18:07:39,757 DEBUG [java.sql.Connection] - <{conn-100289} Connection>
2018-01-31 18:07:39,757 DEBUG [java.sql.Connection] - <{conn-100289} Preparing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0001-008'   order by a.house_code  >
2018-01-31 18:07:39,757 DEBUG [java.sql.PreparedStatement] - <{pstm-100290} Executing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0001-008'   order by a.house_code  >
2018-01-31 18:07:39,758 DEBUG [java.sql.PreparedStatement] - <{pstm-100290} Parameters: []>
2018-01-31 18:07:39,758 DEBUG [java.sql.PreparedStatement] - <{pstm-100290} Types: []>
2018-01-31 18:07:39,759 DEBUG [java.sql.ResultSet] - <{rset-100291} ResultSet>
2018-01-31 18:07:39,760 DEBUG [java.sql.ResultSet] - <{rset-100291} Header: [id, text, child_count]>
2018-01-31 18:07:39,760 DEBUG [java.sql.ResultSet] - <{rset-100291} Result: [0001-008-01-01-01, 01-01-01 王建方, 0]>
2018-01-31 18:07:39,760 DEBUG [java.sql.ResultSet] - <{rset-100291} Result: [0001-008-01-01-02, 01-01-02 宋忠义, 0]>
2018-01-31 18:07:39,760 DEBUG [java.sql.ResultSet] - <{rset-100291} Result: [0001-008-01-02-01, 01-02-01 李爱书, 0]>
2018-01-31 18:07:39,760 DEBUG [java.sql.ResultSet] - <{rset-100291} Result: [0001-008-01-02-02, 01-02-02 申刚义, 0]>
2018-01-31 18:07:39,760 DEBUG [java.sql.ResultSet] - <{rset-100291} Result: [0001-008-01-03-01, 01-03-01 李琳, 0]>
2018-01-31 18:07:39,760 DEBUG [java.sql.ResultSet] - <{rset-100291} Result: [0001-008-01-03-02, 01-03-02 李根才, 0]>
2018-01-31 18:07:39,760 DEBUG [java.sql.ResultSet] - <{rset-100291} Result: [0001-008-01-04-01, 01-04-01 李保青, 0]>
2018-01-31 18:07:39,760 DEBUG [java.sql.ResultSet] - <{rset-100291} Result: [0001-008-01-04-02, 01-04-02 王慧玲, 0]>
2018-01-31 18:07:39,760 DEBUG [java.sql.ResultSet] - <{rset-100291} Result: [0001-008-02-01-01, 02-01-01 马爱英, 0]>
2018-01-31 18:07:39,761 DEBUG [java.sql.ResultSet] - <{rset-100291} Result: [0001-008-02-01-02, 02-01-02 王丽娟, 0]>
2018-01-31 18:07:39,761 DEBUG [java.sql.ResultSet] - <{rset-100291} Result: [0001-008-02-02-01, 02-02-01 刘红亮, 0]>
2018-01-31 18:07:39,761 DEBUG [java.sql.ResultSet] - <{rset-100291} Result: [0001-008-02-02-02, 02-02-02 孔文建, 0]>
2018-01-31 18:07:39,761 DEBUG [java.sql.ResultSet] - <{rset-100291} Result: [0001-008-02-03-01, 02-03-01 张小红, 0]>
2018-01-31 18:07:39,761 DEBUG [java.sql.ResultSet] - <{rset-100291} Result: [0001-008-02-03-02, 02-03-02 曹恒文, 0]>
2018-01-31 18:07:39,761 DEBUG [java.sql.ResultSet] - <{rset-100291} Result: [0001-008-02-04-01, 02-04-01 郭建中, 0]>
2018-01-31 18:07:39,761 DEBUG [java.sql.ResultSet] - <{rset-100291} Result: [0001-008-02-04-02, 02-04-02 杨书贤, 0]>
2018-01-31 18:07:39,761 DEBUG [java.sql.ResultSet] - <{rset-100291} Result: [0001-008-02-04-03, 02-04-03 测试, 0]>
2018-01-31 18:07:43,780 DEBUG [java.sql.Connection] - <{conn-100292} Connection>
2018-01-31 18:07:43,781 DEBUG [java.sql.Connection] - <{conn-100292} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-31 18:07:43,781 DEBUG [java.sql.PreparedStatement] - <{pstm-100293} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-01-31 18:07:43,781 DEBUG [java.sql.PreparedStatement] - <{pstm-100293} Parameters: [100043]>
2018-01-31 18:07:43,781 DEBUG [java.sql.PreparedStatement] - <{pstm-100293} Types: [java.lang.String]>
2018-01-31 18:07:43,782 DEBUG [java.sql.ResultSet] - <{rset-100294} ResultSet>
2018-01-31 18:07:43,782 DEBUG [java.sql.ResultSet] - <{rset-100294} Header: [theme]>
2018-01-31 18:07:43,782 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [default]>
2018-01-31 18:07:44,007 DEBUG [java.sql.Connection] - <{conn-100295} Connection>
2018-01-31 18:07:44,007 DEBUG [java.sql.Connection] - <{conn-100295} Preparing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-31 18:07:44,007 DEBUG [java.sql.PreparedStatement] - <{pstm-100296} Executing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-01-31 18:07:44,007 DEBUG [java.sql.PreparedStatement] - <{pstm-100296} Parameters: []>
2018-01-31 18:07:44,007 DEBUG [java.sql.PreparedStatement] - <{pstm-100296} Types: []>
2018-01-31 18:07:44,010 DEBUG [java.sql.ResultSet] - <{rset-100297} ResultSet>
2018-01-31 18:07:44,010 DEBUG [java.sql.ResultSet] - <{rset-100297} Header: [value, text]>
2018-01-31 18:07:44,010 DEBUG [java.sql.ResultSet] - <{rset-100297} Result: [A, 供热费]>
2018-01-31 18:07:44,010 DEBUG [java.sql.ResultSet] - <{rset-100297} Result: [B, 入网费]>
2018-01-31 18:07:45,641 DEBUG [java.sql.Connection] - <{conn-100298} Connection>
2018-01-31 18:07:45,643 DEBUG [java.sql.Connection] - <{conn-100298} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE                  (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))                       order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-31 18:07:45,643 DEBUG [java.sql.PreparedStatement] - <{pstm-100299} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE                  (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))                       order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-31 18:07:45,643 DEBUG [java.sql.PreparedStatement] - <{pstm-100299} Parameters: []>
2018-01-31 18:07:45,643 DEBUG [java.sql.PreparedStatement] - <{pstm-100299} Types: []>
2018-01-31 18:07:45,652 DEBUG [java.sql.ResultSet] - <{rset-100300} ResultSet>
2018-01-31 18:07:45,652 DEBUG [java.sql.ResultSet] - <{rset-100300} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-31 18:07:45,652 DEBUG [java.sql.ResultSet] - <{rset-100300} Result: [null, 供热费, 2017, 0001-008-02-04-03, A, 0, 01, 0001, 0001-008, 测试, 1744, 0, 0, 1744, 0, null, A1, 16, null, null, 109, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-01-31, 321, 0, 321, 0, 321, 0, 0, 0, 0, 0, 0, 0, 0, 103078, 1]>
2018-01-31 18:07:45,653 DEBUG [java.sql.Connection] - <{conn-100301} Connection>
2018-01-31 18:07:45,653 DEBUG [java.sql.Connection] - <{conn-100301} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE                  (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))                     >
2018-01-31 18:07:45,653 DEBUG [java.sql.PreparedStatement] - <{pstm-100302} Executing Statement:    select count(*)    from SF_CHARGE    WHERE                  (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))                     >
2018-01-31 18:07:45,653 DEBUG [java.sql.PreparedStatement] - <{pstm-100302} Parameters: []>
2018-01-31 18:07:45,653 DEBUG [java.sql.PreparedStatement] - <{pstm-100302} Types: []>
2018-01-31 18:07:45,657 DEBUG [java.sql.ResultSet] - <{rset-100303} ResultSet>
2018-01-31 18:07:45,657 DEBUG [java.sql.ResultSet] - <{rset-100303} Header: [count(*)]>
2018-01-31 18:07:45,657 DEBUG [java.sql.ResultSet] - <{rset-100303} Result: [1]>
2018-01-31 18:07:45,720 DEBUG [java.sql.Connection] - <{conn-100304} Connection>
2018-01-31 18:07:45,721 DEBUG [java.sql.Connection] - <{conn-100304} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE                  (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))                 >
2018-01-31 18:07:45,721 DEBUG [java.sql.PreparedStatement] - <{pstm-100305} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE                  (community_code in ('0001-008-02-04-03') or     building_code in ('0001-008-02-04-03') or     house_code in ('0001-008-02-04-03'))                 >
2018-01-31 18:07:45,721 DEBUG [java.sql.PreparedStatement] - <{pstm-100305} Parameters: []>
2018-01-31 18:07:45,721 DEBUG [java.sql.PreparedStatement] - <{pstm-100305} Types: []>
2018-01-31 18:07:45,727 DEBUG [java.sql.ResultSet] - <{rset-100306} ResultSet>
2018-01-31 18:07:45,727 DEBUG [java.sql.ResultSet] - <{rset-100306} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-01-31 18:07:45,727 DEBUG [java.sql.ResultSet] - <{rset-100306} Result: [共1, 1744, 0, 0, 1744, 0, null, null, 109, 321, 0, 321, 0, 321]>
2018-01-31 18:07:54,803 DEBUG [java.sql.Connection] - <{conn-100307} Connection>
2018-01-31 18:07:54,804 DEBUG [java.sql.Connection] - <{conn-100307} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE                  (community_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03') or     building_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03') or     house_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03'))                       order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-31 18:07:54,805 DEBUG [java.sql.PreparedStatement] - <{pstm-100308} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE                  (community_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03') or     building_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03') or     house_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03'))                       order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-31 18:07:54,805 DEBUG [java.sql.PreparedStatement] - <{pstm-100308} Parameters: []>
2018-01-31 18:07:54,805 DEBUG [java.sql.PreparedStatement] - <{pstm-100308} Types: []>
2018-01-31 18:07:54,821 DEBUG [java.sql.ResultSet] - <{rset-100309} ResultSet>
2018-01-31 18:07:54,822 DEBUG [java.sql.ResultSet] - <{rset-100309} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-31 18:07:54,822 DEBUG [java.sql.ResultSet] - <{rset-100309} Result: [null, 供热费, 2017, 0001-008-01-01-01, A, 0, 01, 0001, 0001-008, 王建方, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, null, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76468, 1]>
2018-01-31 18:07:54,822 DEBUG [java.sql.ResultSet] - <{rset-100309} Result: [null, 供热费, 2015, 0001-008-01-01-02, A, 0, 01, 0001, 0001-008, 宋忠义, 1754, 0, 0, 1754, 0, 居民, A1, 16, 109.62, null, 109.62, 2015-11-01, 2016-03-31, 0, 2015-11-01, 2018-01-31, 3507.92, null, 3507.92, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 94086, 2]>
2018-01-31 18:07:54,823 DEBUG [java.sql.ResultSet] - <{rset-100309} Result: [null, 供热费, 2016, 0001-008-01-01-02, A, 0, 01, 0001, 0001-008, 宋忠义, 1754, 0, 0, 1754, 0, 居民, A1, 16, 109.62, null, 109.62, 2016-11-01, 2017-03-31, 0, 2016-11-01, 2018-01-31, 3174.51, null, 3174.51, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 94083, 3]>
2018-01-31 18:07:54,823 DEBUG [java.sql.ResultSet] - <{rset-100309} Result: [null, 供热费, 2017, 0001-008-01-01-02, A, 0, 01, 0001, 0001-008, 宋忠义, 1753.92, 0, 0, 1753.92, 0, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-01-31, 649, null, 649, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 90654, 4]>
2018-01-31 18:07:54,824 DEBUG [java.sql.ResultSet] - <{rset-100309} Result: [null, 供热费, 2017, 0001-008-01-02-01, A, 0, 01, 0001, 0001-008, 李爱书, 1753.92, 0, 0, 1753.92, 1753.92, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 84679, 5]>
2018-01-31 18:07:54,824 DEBUG [java.sql.ResultSet] - <{rset-100309} Result: [null, 供热费, 2017, 0001-008-01-02-02, A, 0, 01, 0001, 0001-008, 申刚义, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76449, 6]>
2018-01-31 18:07:54,824 DEBUG [java.sql.ResultSet] - <{rset-100309} Result: [null, 供热费, 2017, 0001-008-01-03-01, A, 0, 01, 0001, 0001-008, 李琳, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 84678, 7]>
2018-01-31 18:07:54,825 DEBUG [java.sql.ResultSet] - <{rset-100309} Result: [null, 供热费, 2017, 0001-008-01-03-02, A, 0, 01, 0001, 0001-008, 李根才, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 84677, 8]>
2018-01-31 18:07:54,825 DEBUG [java.sql.ResultSet] - <{rset-100309} Result: [null, 供热费, 2017, 0001-008-01-04-01, A, 0, 01, 0001, 0001-008, 李保青, 1753.92, 291.15, 0, 1462.77, 1753.92, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-01-22, 291, 291.15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 90653, 9]>
2018-01-31 18:07:54,826 DEBUG [java.sql.ResultSet] - <{rset-100309} Result: [null, 供热费, 2017, 0001-008-01-04-02, A, 0, 01, 0001, 0001-008, 王慧玲, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76453, 10]>
2018-01-31 18:07:54,827 DEBUG [java.sql.ResultSet] - <{rset-100309} Result: [null, 供热费, 2017, 0001-008-02-01-01, A, 0, 01, 0001, 0001-008, 马爱英, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 84675, 11]>
2018-01-31 18:07:54,827 DEBUG [java.sql.ResultSet] - <{rset-100309} Result: [null, 供热费, 2017, 0001-008-02-01-02, A, 0, 01, 0001, 0001-008, 王丽娟, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76455, 12]>
2018-01-31 18:07:54,828 DEBUG [java.sql.ResultSet] - <{rset-100309} Result: [null, 供热费, 2017, 0001-008-02-02-01, A, 0, 01, 0001, 0001-008, 刘红亮, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76456, 13]>
2018-01-31 18:07:54,828 DEBUG [java.sql.ResultSet] - <{rset-100309} Result: [null, 供热费, 2017, 0001-008-02-02-02, A, 0, 01, 0001, 0001-008, 孔文建, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76457, 14]>
2018-01-31 18:07:54,828 DEBUG [java.sql.ResultSet] - <{rset-100309} Result: [null, 供热费, 2017, 0001-008-02-03-01, A, 0, 01, 0001, 0001-008, 张小红, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76458, 15]>
2018-01-31 18:07:54,829 DEBUG [java.sql.ResultSet] - <{rset-100309} Result: [null, 供热费, 2017, 0001-008-02-03-02, A, 0, 01, 0001, 0001-008, 曹恒文, 1753.92, 0, 0, 1753.92, 1753.92, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 84674, 16]>
2018-01-31 18:07:54,829 DEBUG [java.sql.ResultSet] - <{rset-100309} Result: [null, 供热费, 2017, 0001-008-02-04-01, A, 0, 01, 0001, 0001-008, 郭建中, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76460, 17]>
2018-01-31 18:07:54,829 DEBUG [java.sql.ResultSet] - <{rset-100309} Result: [null, 供热费, 2017, 0001-008-02-04-02, A, 0, 01, 0001, 0001-008, 杨书贤, 1753.92, 0, 0, 1753.92, 1753.92, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, 2018-01-22, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 84673, 18]>
2018-01-31 18:07:54,829 DEBUG [java.sql.ResultSet] - <{rset-100309} Result: [null, 供热费, 2017, 0001-008-02-04-03, A, 0, 01, 0001, 0001-008, 测试, 1744, 0, 0, 1744, 0, null, A1, 16, null, null, 109, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-01-31, 321, 0, 321, 0, 321, 0, 0, 0, 0, 0, 0, 0, 0, 103078, 19]>
2018-01-31 18:07:54,829 DEBUG [java.sql.Connection] - <{conn-100310} Connection>
2018-01-31 18:07:54,830 DEBUG [java.sql.Connection] - <{conn-100310} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE                  (community_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03') or     building_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03') or     house_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03'))                     >
2018-01-31 18:07:54,830 DEBUG [java.sql.PreparedStatement] - <{pstm-100311} Executing Statement:    select count(*)    from SF_CHARGE    WHERE                  (community_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03') or     building_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03') or     house_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03'))                     >
2018-01-31 18:07:54,830 DEBUG [java.sql.PreparedStatement] - <{pstm-100311} Parameters: []>
2018-01-31 18:07:54,830 DEBUG [java.sql.PreparedStatement] - <{pstm-100311} Types: []>
2018-01-31 18:07:54,835 DEBUG [java.sql.ResultSet] - <{rset-100312} ResultSet>
2018-01-31 18:07:54,836 DEBUG [java.sql.ResultSet] - <{rset-100312} Header: [count(*)]>
2018-01-31 18:07:54,836 DEBUG [java.sql.ResultSet] - <{rset-100312} Result: [19]>
2018-01-31 18:07:55,000 DEBUG [java.sql.Connection] - <{conn-100313} Connection>
2018-01-31 18:07:55,000 DEBUG [java.sql.Connection] - <{conn-100313} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE                  (community_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03') or     building_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03') or     house_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03'))                 >
2018-01-31 18:07:55,000 DEBUG [java.sql.PreparedStatement] - <{pstm-100314} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE                  (community_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03') or     building_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03') or     house_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03'))                 >
2018-01-31 18:07:55,000 DEBUG [java.sql.PreparedStatement] - <{pstm-100314} Parameters: []>
2018-01-31 18:07:55,000 DEBUG [java.sql.PreparedStatement] - <{pstm-100314} Types: []>
2018-01-31 18:07:55,008 DEBUG [java.sql.ResultSet] - <{rset-100315} ResultSet>
2018-01-31 18:07:55,008 DEBUG [java.sql.ResultSet] - <{rset-100315} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-01-31 18:07:55,008 DEBUG [java.sql.ResultSet] - <{rset-100315} Result: [共19, 33314.72, 291.15, 0, 33023.57, 26309.68, 1863.54, null, 2082.16, 7943.43, 291.15, 7652.43, 0, 321]>
2018-01-31 18:30:53,754 DEBUG [java.sql.Connection] - <{conn-100316} Connection>
2018-01-31 18:30:53,756 DEBUG [java.sql.Connection] - <{conn-100316} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE                  (community_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03') or     building_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03') or     house_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03'))                       order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-31 18:30:53,756 DEBUG [java.sql.PreparedStatement] - <{pstm-100317} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE                  (community_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03') or     building_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03') or     house_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03'))                       order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-01-31 18:30:53,756 DEBUG [java.sql.PreparedStatement] - <{pstm-100317} Parameters: []>
2018-01-31 18:30:53,756 DEBUG [java.sql.PreparedStatement] - <{pstm-100317} Types: []>
2018-01-31 18:30:53,763 DEBUG [java.sql.ResultSet] - <{rset-100318} ResultSet>
2018-01-31 18:30:53,763 DEBUG [java.sql.ResultSet] - <{rset-100318} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-01-31 18:30:53,763 DEBUG [java.sql.ResultSet] - <{rset-100318} Result: [null, 供热费, 2017, 0001-008-01-01-01, A, 0, 01, 0001, 0001-008, 王建方, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, null, null, 109.62, 2017-11-01, 2018-03-31, 0, null, null, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76468, 1]>
2018-01-31 18:30:53,764 DEBUG [java.sql.ResultSet] - <{rset-100318} Result: [null, 供热费, 2015, 0001-008-01-01-02, A, 0, 01, 0001, 0001-008, 宋忠义, 1754, 0, 0, 1754, 0, 居民, A1, 16, 109.62, null, 109.62, 2015-11-01, 2016-03-31, 0, 2015-11-01, 2018-01-31, 3507.92, null, 3507.92, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 94086, 2]>
2018-01-31 18:30:53,764 DEBUG [java.sql.ResultSet] - <{rset-100318} Result: [null, 供热费, 2016, 0001-008-01-01-02, A, 0, 01, 0001, 0001-008, 宋忠义, 1754, 0, 0, 1754, 0, 居民, A1, 16, 109.62, null, 109.62, 2016-11-01, 2017-03-31, 0, 2016-11-01, 2018-01-31, 3174.51, null, 3174.51, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 94083, 3]>
2018-01-31 18:30:53,764 DEBUG [java.sql.ResultSet] - <{rset-100318} Result: [null, 供热费, 2017, 0001-008-01-01-02, A, 0, 01, 0001, 0001-008, 宋忠义, 1753.92, 0, 0, 1753.92, 0, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-01-31, 649, null, 649, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 90654, 4]>
2018-01-31 18:30:53,764 DEBUG [java.sql.ResultSet] - <{rset-100318} Result: [null, 供热费, 2017, 0001-008-01-02-01, A, 0, 01, 0001, 0001-008, 李爱书, 1753.92, 0, 0, 1753.92, 1753.92, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, null, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 84679, 5]>
2018-01-31 18:30:53,765 DEBUG [java.sql.ResultSet] - <{rset-100318} Result: [null, 供热费, 2017, 0001-008-01-02-02, A, 0, 01, 0001, 0001-008, 申刚义, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, null, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76449, 6]>
2018-01-31 18:30:53,765 DEBUG [java.sql.ResultSet] - <{rset-100318} Result: [null, 供热费, 2017, 0001-008-01-03-01, A, 0, 01, 0001, 0001-008, 李琳, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, null, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 84678, 7]>
2018-01-31 18:30:53,765 DEBUG [java.sql.ResultSet] - <{rset-100318} Result: [null, 供热费, 2017, 0001-008-01-03-02, A, 0, 01, 0001, 0001-008, 李根才, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, null, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 84677, 8]>
2018-01-31 18:30:53,765 DEBUG [java.sql.ResultSet] - <{rset-100318} Result: [null, 供热费, 2017, 0001-008-01-04-01, A, 0, 01, 0001, 0001-008, 李保青, 1753.92, 291.15, 0, 1462.77, 1753.92, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, 2017-11-01, null, 291, 291.15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 90653, 9]>
2018-01-31 18:30:53,767 DEBUG [java.sql.ResultSet] - <{rset-100318} Result: [null, 供热费, 2017, 0001-008-01-04-02, A, 0, 01, 0001, 0001-008, 王慧玲, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, null, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76453, 10]>
2018-01-31 18:30:53,767 DEBUG [java.sql.ResultSet] - <{rset-100318} Result: [null, 供热费, 2017, 0001-008-02-01-01, A, 0, 01, 0001, 0001-008, 马爱英, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, null, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 84675, 11]>
2018-01-31 18:30:53,767 DEBUG [java.sql.ResultSet] - <{rset-100318} Result: [null, 供热费, 2017, 0001-008-02-01-02, A, 0, 01, 0001, 0001-008, 王丽娟, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, null, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76455, 12]>
2018-01-31 18:30:53,768 DEBUG [java.sql.ResultSet] - <{rset-100318} Result: [null, 供热费, 2017, 0001-008-02-02-01, A, 0, 01, 0001, 0001-008, 刘红亮, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, null, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76456, 13]>
2018-01-31 18:30:53,768 DEBUG [java.sql.ResultSet] - <{rset-100318} Result: [null, 供热费, 2017, 0001-008-02-02-02, A, 0, 01, 0001, 0001-008, 孔文建, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, null, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76457, 14]>
2018-01-31 18:30:53,768 DEBUG [java.sql.ResultSet] - <{rset-100318} Result: [null, 供热费, 2017, 0001-008-02-03-01, A, 0, 01, 0001, 0001-008, 张小红, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, null, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76458, 15]>
2018-01-31 18:30:53,768 DEBUG [java.sql.ResultSet] - <{rset-100318} Result: [null, 供热费, 2017, 0001-008-02-03-02, A, 0, 01, 0001, 0001-008, 曹恒文, 1753.92, 0, 0, 1753.92, 1753.92, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, null, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 84674, 16]>
2018-01-31 18:30:53,769 DEBUG [java.sql.ResultSet] - <{rset-100318} Result: [null, 供热费, 2017, 0001-008-02-04-01, A, 0, 01, 0001, 0001-008, 郭建中, 1753.92, 0, 0, 1753.92, 1754, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, null, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 76460, 17]>
2018-01-31 18:30:53,769 DEBUG [java.sql.ResultSet] - <{rset-100318} Result: [null, 供热费, 2017, 0001-008-02-04-02, A, 0, 01, 0001, 0001-008, 杨书贤, 1753.92, 0, 0, 1753.92, 1753.92, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, null, null, 0, null, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 84673, 18]>
2018-01-31 18:30:53,770 DEBUG [java.sql.ResultSet] - <{rset-100318} Result: [null, 供热费, 2017, 0001-008-02-04-03, A, 0, 01, 0001, 0001-008, 测试, 1744, 0, 0, 1744, 0, null, A1, 16, null, null, 109, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-01-31, 321, 0, 321, 0, 321, 0, 0, 0, 0, 0, 0, 0, 0, 103078, 19]>
2018-01-31 18:30:53,770 DEBUG [java.sql.Connection] - <{conn-100319} Connection>
2018-01-31 18:30:53,771 DEBUG [java.sql.Connection] - <{conn-100319} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE                  (community_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03') or     building_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03') or     house_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03'))                     >
2018-01-31 18:30:53,771 DEBUG [java.sql.PreparedStatement] - <{pstm-100320} Executing Statement:    select count(*)    from SF_CHARGE    WHERE                  (community_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03') or     building_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03') or     house_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03'))                     >
2018-01-31 18:30:53,771 DEBUG [java.sql.PreparedStatement] - <{pstm-100320} Parameters: []>
2018-01-31 18:30:53,771 DEBUG [java.sql.PreparedStatement] - <{pstm-100320} Types: []>
2018-01-31 18:30:53,775 DEBUG [java.sql.ResultSet] - <{rset-100321} ResultSet>
2018-01-31 18:30:53,776 DEBUG [java.sql.ResultSet] - <{rset-100321} Header: [count(*)]>
2018-01-31 18:30:53,776 DEBUG [java.sql.ResultSet] - <{rset-100321} Result: [19]>
2018-01-31 18:30:53,972 DEBUG [java.sql.Connection] - <{conn-100322} Connection>
2018-01-31 18:30:53,972 DEBUG [java.sql.Connection] - <{conn-100322} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE                  (community_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03') or     building_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03') or     house_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03'))                 >
2018-01-31 18:30:53,972 DEBUG [java.sql.PreparedStatement] - <{pstm-100323} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE                  (community_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03') or     building_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03') or     house_code in ('0001-008','0001-008-02-04-02','0001-008-02-04-03'))                 >
2018-01-31 18:30:53,973 DEBUG [java.sql.PreparedStatement] - <{pstm-100323} Parameters: []>
2018-01-31 18:30:53,973 DEBUG [java.sql.PreparedStatement] - <{pstm-100323} Types: []>
2018-01-31 18:30:53,977 DEBUG [java.sql.ResultSet] - <{rset-100324} ResultSet>
2018-01-31 18:30:53,977 DEBUG [java.sql.ResultSet] - <{rset-100324} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-01-31 18:30:53,977 DEBUG [java.sql.ResultSet] - <{rset-100324} Result: [共19, 33314.72, 291.15, 0, 33023.57, 26309.68, 1863.54, null, 2082.16, 7943.43, 291.15, 7652.43, 0, 321]>
2018-01-31 19:01:08,019 DEBUG [java.sql.Connection] - <{conn-100325} Connection>
2018-01-31 19:01:08,020 DEBUG [java.sql.Connection] - <{conn-100325} Preparing Statement:    DELETE      FROM eahttpsession   WHERE                sessionid = ?                >
2018-01-31 19:01:08,020 DEBUG [java.sql.PreparedStatement] - <{pstm-100326} Executing Statement:    DELETE      FROM eahttpsession   WHERE                sessionid = ?                >
2018-01-31 19:01:08,021 DEBUG [java.sql.PreparedStatement] - <{pstm-100326} Parameters: [1mcwdtbahxsa7]>
2018-01-31 19:01:08,022 DEBUG [java.sql.PreparedStatement] - <{pstm-100326} Types: [java.lang.String]>
2018-02-01 12:15:56,234 DEBUG [java.sql.Connection] - <{conn-100008} Connection>
2018-02-01 12:15:56,264 DEBUG [java.sql.Connection] - <{conn-100008} Preparing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-02-01 12:15:56,265 DEBUG [java.sql.PreparedStatement] - <{pstm-100009} Executing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-02-01 12:15:56,265 DEBUG [java.sql.PreparedStatement] - <{pstm-100009} Parameters: [0, admin]>
2018-02-01 12:15:56,265 DEBUG [java.sql.PreparedStatement] - <{pstm-100009} Types: [java.lang.String, java.lang.String]>
2018-02-01 12:15:56,266 DEBUG [java.sql.ResultSet] - <{rset-100010} ResultSet>
2018-02-01 12:15:56,267 DEBUG [java.sql.ResultSet] - <{rset-100010} Header: [userid, username, account, password, sex, deptid, theme, customid, customname]>
2018-02-01 12:15:56,267 DEBUG [java.sql.ResultSet] - <{rset-100010} Result: [100043, 管理员, admin, kLxefEnNKtb/5nUG9lJcVA==, 0, 001, default, 01, 康馨供热]>
2018-02-01 12:15:56,268 DEBUG [java.sql.Connection] - <{conn-100011} Connection>
2018-02-01 12:15:56,268 DEBUG [java.sql.Connection] - <{conn-100011} Preparing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-02-01 12:15:56,268 DEBUG [java.sql.PreparedStatement] - <{pstm-100012} Executing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-02-01 12:15:56,269 DEBUG [java.sql.PreparedStatement] - <{pstm-100012} Parameters: [b4jb0wqfd915]>
2018-02-01 12:15:56,269 DEBUG [java.sql.PreparedStatement] - <{pstm-100012} Types: [java.lang.String]>
2018-02-01 12:15:56,270 DEBUG [java.sql.ResultSet] - <{rset-100013} ResultSet>
2018-02-01 12:15:56,272 DEBUG [java.sql.Connection] - <{conn-100014} Connection>
2018-02-01 12:15:56,273 DEBUG [java.sql.Connection] - <{conn-100014} Preparing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-02-01 12:15:56,273 DEBUG [java.sql.PreparedStatement] - <{pstm-100015} Executing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-02-01 12:15:56,273 DEBUG [java.sql.PreparedStatement] - <{pstm-100015} Parameters: [b4jb0wqfd915, 管理员, admin, 2018-02-01 12:15:56, 127.0.0.1, 100043, FIREFOX/58.]>
2018-02-01 12:15:56,273 DEBUG [java.sql.PreparedStatement] - <{pstm-100015} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 12:15:56,822 DEBUG [java.sql.Connection] - <{conn-100016} Connection>
2018-02-01 12:15:56,822 DEBUG [java.sql.Connection] - <{conn-100016} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-02-01 12:15:56,822 DEBUG [java.sql.PreparedStatement] - <{pstm-100017} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-02-01 12:15:56,822 DEBUG [java.sql.PreparedStatement] - <{pstm-100017} Parameters: [100043]>
2018-02-01 12:15:56,823 DEBUG [java.sql.PreparedStatement] - <{pstm-100017} Types: [java.lang.String]>
2018-02-01 12:15:56,824 DEBUG [java.sql.ResultSet] - <{rset-100018} ResultSet>
2018-02-01 12:15:56,824 DEBUG [java.sql.ResultSet] - <{rset-100018} Header: [theme]>
2018-02-01 12:15:56,824 DEBUG [java.sql.ResultSet] - <{rset-100018} Result: [default]>
2018-02-01 12:15:56,965 DEBUG [java.sql.Connection] - <{conn-100019} Connection>
2018-02-01 12:15:56,966 DEBUG [java.sql.Connection] - <{conn-100019} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-02-01 12:15:56,966 DEBUG [java.sql.PreparedStatement] - <{pstm-100020} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-02-01 12:15:56,966 DEBUG [java.sql.PreparedStatement] - <{pstm-100020} Parameters: [100043]>
2018-02-01 12:15:56,966 DEBUG [java.sql.PreparedStatement] - <{pstm-100020} Types: [java.lang.String]>
2018-02-01 12:15:56,968 DEBUG [java.sql.ResultSet] - <{rset-100021} ResultSet>
2018-02-01 12:15:56,971 DEBUG [java.sql.ResultSet] - <{rset-100021} Header: [menuid, menuname, iconcls]>
2018-02-01 12:15:56,971 DEBUG [java.sql.ResultSet] - <{rset-100021} Result: [0103, 基础信息, null]>
2018-02-01 12:15:56,971 DEBUG [java.sql.ResultSet] - <{rset-100021} Result: [0104, 收费管理, null]>
2018-02-01 12:15:56,971 DEBUG [java.sql.ResultSet] - <{rset-100021} Result: [0105, 统计分析, null]>
2018-02-01 12:15:56,972 DEBUG [java.sql.ResultSet] - <{rset-100021} Result: [0101, 系统管理, null]>
2018-02-01 12:15:56,972 DEBUG [java.sql.Connection] - <{conn-100022} Connection>
2018-02-01 12:15:56,972 DEBUG [java.sql.Connection] - <{conn-100022} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-02-01 12:15:56,972 DEBUG [java.sql.PreparedStatement] - <{pstm-100023} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-02-01 12:15:56,972 DEBUG [java.sql.PreparedStatement] - <{pstm-100023} Parameters: [100043]>
2018-02-01 12:15:56,972 DEBUG [java.sql.PreparedStatement] - <{pstm-100023} Types: [java.lang.String]>
2018-02-01 12:15:56,974 DEBUG [java.sql.ResultSet] - <{rset-100024} ResultSet>
2018-02-01 12:15:56,980 DEBUG [java.sql.Connection] - <{conn-100025} Connection>
2018-02-01 12:15:56,981 DEBUG [java.sql.Connection] - <{conn-100025} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-02-01 12:15:56,981 DEBUG [java.sql.PreparedStatement] - <{pstm-100026} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-02-01 12:15:56,981 DEBUG [java.sql.PreparedStatement] - <{pstm-100026} Parameters: [001]>
2018-02-01 12:15:56,981 DEBUG [java.sql.PreparedStatement] - <{pstm-100026} Types: [java.lang.String]>
2018-02-01 12:15:56,982 DEBUG [java.sql.ResultSet] - <{rset-100027} ResultSet>
2018-02-01 12:15:56,982 DEBUG [java.sql.ResultSet] - <{rset-100027} Header: [deptid, deptname]>
2018-02-01 12:15:56,982 DEBUG [java.sql.ResultSet] - <{rset-100027} Result: [001, 康馨热力]>
2018-02-01 12:15:56,983 DEBUG [java.sql.Connection] - <{conn-100028} Connection>
2018-02-01 12:15:56,983 DEBUG [java.sql.Connection] - <{conn-100028} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-02-01 12:15:56,983 DEBUG [java.sql.PreparedStatement] - <{pstm-100029} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-02-01 12:15:56,983 DEBUG [java.sql.PreparedStatement] - <{pstm-100029} Parameters: [001]>
2018-02-01 12:15:56,983 DEBUG [java.sql.PreparedStatement] - <{pstm-100029} Types: [java.lang.String]>
2018-02-01 12:15:56,984 DEBUG [java.sql.ResultSet] - <{rset-100030} ResultSet>
2018-02-01 12:15:56,984 DEBUG [java.sql.ResultSet] - <{rset-100030} Header: [deptid, deptname]>
2018-02-01 12:15:56,984 DEBUG [java.sql.ResultSet] - <{rset-100030} Result: [001, 康馨热力]>
2018-02-01 12:15:56,985 DEBUG [java.sql.Connection] - <{conn-100031} Connection>
2018-02-01 12:15:56,985 DEBUG [java.sql.Connection] - <{conn-100031} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-02-01 12:15:56,986 DEBUG [java.sql.PreparedStatement] - <{pstm-100032} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-02-01 12:15:56,986 DEBUG [java.sql.PreparedStatement] - <{pstm-100032} Parameters: [100043]>
2018-02-01 12:15:56,986 DEBUG [java.sql.PreparedStatement] - <{pstm-100032} Types: [java.lang.String]>
2018-02-01 12:15:56,987 DEBUG [java.sql.ResultSet] - <{rset-100033} ResultSet>
2018-02-01 12:15:56,987 DEBUG [java.sql.ResultSet] - <{rset-100033} Header: [theme]>
2018-02-01 12:15:56,987 DEBUG [java.sql.ResultSet] - <{rset-100033} Result: [default]>
2018-02-01 12:15:57,044 DEBUG [java.sql.Connection] - <{conn-100034} Connection>
2018-02-01 12:15:57,045 DEBUG [java.sql.Connection] - <{conn-100034} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-02-01 12:15:57,045 DEBUG [java.sql.PreparedStatement] - <{pstm-100035} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-02-01 12:15:57,045 DEBUG [java.sql.PreparedStatement] - <{pstm-100035} Parameters: [100043]>
2018-02-01 12:15:57,045 DEBUG [java.sql.PreparedStatement] - <{pstm-100035} Types: [java.lang.String]>
2018-02-01 12:15:57,048 DEBUG [java.sql.ResultSet] - <{rset-100036} ResultSet>
2018-02-01 12:15:57,049 DEBUG [java.sql.ResultSet] - <{rset-100036} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-02-01 12:15:57,049 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [010305, 入网管理, null, 0103, module/iw.ered?reqCode=intoWebInit, 0, false, false, tab_blank.png]>
2018-02-01 12:15:57,049 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030404, 新建换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,050 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030405, 修改换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,050 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [010301, 热源管理, null, 0103, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,050 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030401, 新建热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,050 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030406, 删除换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,051 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030403, 删除热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,051 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030311, 修改面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,051 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030313, 删除面积1, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,052 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030501, 新增入网, null, 010305, null, 1, false, true, tab_blank.png]>
2018-02-01 12:15:57,053 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030202, 导入模板下载, null, 010302, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,054 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030201, 选择导入文件, null, 010302, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,054 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [010304, 热源站所管理, null, 0103, module/sr.ered?reqCode=sourceInit, 0, false, false, tab_blank.png]>
2018-02-01 12:15:57,055 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [0103, 基础信息, null, 01, null, 0, true, false, tab_blank.png]>
2018-02-01 12:15:57,055 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030312, 删除面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,056 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030301, 新建小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,056 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030310, 添加面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,057 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030502, 修改入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,057 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030402, 修改热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,058 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [010303, 基础信息维护, null, 0103, module/fc.ered?reqCode=communityInit, 0, false, false, tab_blank.png]>
2018-02-01 12:15:57,058 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030302, 修改小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,058 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030503, 删除入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,058 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030303, 删除小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,058 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [010302, 基础数据导入, null, 0103, module/importHouse.ered?reqCode=importInit, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,059 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030304, 新建大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,059 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030305, 修改大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,059 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030306, 删除大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,059 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030307, 新建用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,059 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030308, 修改用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,060 DEBUG [java.sql.ResultSet] - <{rset-100036} Result: [01030309, 删除用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,060 DEBUG [java.sql.Connection] - <{conn-100037} Connection>
2018-02-01 12:15:57,060 DEBUG [java.sql.Connection] - <{conn-100037} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-02-01 12:15:57,060 DEBUG [java.sql.PreparedStatement] - <{pstm-100038} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-02-01 12:15:57,061 DEBUG [java.sql.PreparedStatement] - <{pstm-100038} Parameters: [100043]>
2018-02-01 12:15:57,061 DEBUG [java.sql.PreparedStatement] - <{pstm-100038} Types: [java.lang.String]>
2018-02-01 12:15:57,062 DEBUG [java.sql.ResultSet] - <{rset-100039} ResultSet>
2018-02-01 12:15:57,062 DEBUG [java.sql.Connection] - <{conn-100040} Connection>
2018-02-01 12:15:57,062 DEBUG [java.sql.Connection] - <{conn-100040} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-02-01 12:15:57,063 DEBUG [java.sql.PreparedStatement] - <{pstm-100041} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-02-01 12:15:57,063 DEBUG [java.sql.PreparedStatement] - <{pstm-100041} Parameters: [01]>
2018-02-01 12:15:57,063 DEBUG [java.sql.PreparedStatement] - <{pstm-100041} Types: [java.lang.String]>
2018-02-01 12:15:57,063 DEBUG [java.sql.ResultSet] - <{rset-100042} ResultSet>
2018-02-01 12:15:57,064 DEBUG [java.sql.ResultSet] - <{rset-100042} Header: [menuname]>
2018-02-01 12:15:57,064 DEBUG [java.sql.ResultSet] - <{rset-100042} Result: [供热收费管理信息系统]>
2018-02-01 12:15:57,224 DEBUG [java.sql.Connection] - <{conn-100043} Connection>
2018-02-01 12:15:57,224 DEBUG [java.sql.Connection] - <{conn-100043} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-02-01 12:15:57,224 DEBUG [java.sql.PreparedStatement] - <{pstm-100044} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-02-01 12:15:57,224 DEBUG [java.sql.PreparedStatement] - <{pstm-100044} Parameters: [100043]>
2018-02-01 12:15:57,225 DEBUG [java.sql.PreparedStatement] - <{pstm-100044} Types: [java.lang.String]>
2018-02-01 12:15:57,229 DEBUG [java.sql.ResultSet] - <{rset-100045} ResultSet>
2018-02-01 12:15:57,229 DEBUG [java.sql.ResultSet] - <{rset-100045} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-02-01 12:15:57,229 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [010402, 收费管理, null, 0104, module/chg.ered?reqCode=chargeInit, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,229 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040503, 作废票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,230 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040501, 票据入库, null, 010405, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,230 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040401, 冲账, null, 010404, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,230 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040101, 生成应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,230 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [010401, 生成应收, null, 0104, module/crp.ered?reqCode=creatPlanInit, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,230 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040505, 领用票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,231 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040302, 删除减免, null, 010403, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,231 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040301, 减免应收, null, 010403, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,232 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040502, 删除票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,232 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040201, 收费, null, 010402, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,232 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040102, 删除应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,232 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [01040504, 返还票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,233 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [010403, 减免管理, null, 0104, module/mns.ered?reqCode=minusInit, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,233 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [0104, 收费管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-02-01 12:15:57,233 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [010404, 冲账管理, null, 0104, module/rlb.ered?reqCode=rollbackInit, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,233 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [010405, 票据管理, null, 0104, module/inv.ered?reqCode=invoiceInit, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,233 DEBUG [java.sql.ResultSet] - <{rset-100045} Result: [010406, 银行对账, null, 0104, module/bnk.ered?reqCode=bankInit, 0, false, false, tab_blank.png]>
2018-02-01 12:15:57,234 DEBUG [java.sql.Connection] - <{conn-100046} Connection>
2018-02-01 12:15:57,234 DEBUG [java.sql.Connection] - <{conn-100046} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-02-01 12:15:57,234 DEBUG [java.sql.PreparedStatement] - <{pstm-100047} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-02-01 12:15:57,234 DEBUG [java.sql.PreparedStatement] - <{pstm-100047} Parameters: [100043]>
2018-02-01 12:15:57,234 DEBUG [java.sql.PreparedStatement] - <{pstm-100047} Types: [java.lang.String]>
2018-02-01 12:15:57,237 DEBUG [java.sql.ResultSet] - <{rset-100048} ResultSet>
2018-02-01 12:15:57,237 DEBUG [java.sql.Connection] - <{conn-100049} Connection>
2018-02-01 12:15:57,238 DEBUG [java.sql.Connection] - <{conn-100049} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-02-01 12:15:57,238 DEBUG [java.sql.PreparedStatement] - <{pstm-100050} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-02-01 12:15:57,238 DEBUG [java.sql.PreparedStatement] - <{pstm-100050} Parameters: [01]>
2018-02-01 12:15:57,238 DEBUG [java.sql.PreparedStatement] - <{pstm-100050} Types: [java.lang.String]>
2018-02-01 12:15:57,240 DEBUG [java.sql.ResultSet] - <{rset-100051} ResultSet>
2018-02-01 12:15:57,240 DEBUG [java.sql.ResultSet] - <{rset-100051} Header: [menuname]>
2018-02-01 12:15:57,241 DEBUG [java.sql.ResultSet] - <{rset-100051} Result: [供热收费管理信息系统]>
2018-02-01 12:15:57,257 DEBUG [java.sql.Connection] - <{conn-100052} Connection>
2018-02-01 12:15:57,257 DEBUG [java.sql.Connection] - <{conn-100052} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-02-01 12:15:57,258 DEBUG [java.sql.PreparedStatement] - <{pstm-100053} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-02-01 12:15:57,258 DEBUG [java.sql.PreparedStatement] - <{pstm-100053} Parameters: [100043]>
2018-02-01 12:15:57,258 DEBUG [java.sql.PreparedStatement] - <{pstm-100053} Types: [java.lang.String]>
2018-02-01 12:15:57,261 DEBUG [java.sql.ResultSet] - <{rset-100054} ResultSet>
2018-02-01 12:15:57,262 DEBUG [java.sql.ResultSet] - <{rset-100054} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-02-01 12:15:57,262 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [010501, 基础报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-02-01 12:15:57,262 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [010502, 收费报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-02-01 12:15:57,262 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [01050202, 欠费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050201, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,262 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [01050101, 用户情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=f01050101, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,262 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [01050102, 入网情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=w01050301, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,262 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [01050203, 收费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050202, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,263 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [01050201, 收费情况表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050401, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,263 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [0105, 统计分析, null, 01, null, 0, true, false, tab_blank.png]>
2018-02-01 12:15:57,263 DEBUG [java.sql.ResultSet] - <{rset-100054} Result: [01050204, 减免明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050204, 1, false, false, tab_blank.png]>
2018-02-01 12:15:57,263 DEBUG [java.sql.Connection] - <{conn-100055} Connection>
2018-02-01 12:15:57,263 DEBUG [java.sql.Connection] - <{conn-100055} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-02-01 12:15:57,264 DEBUG [java.sql.PreparedStatement] - <{pstm-100056} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-02-01 12:15:57,264 DEBUG [java.sql.PreparedStatement] - <{pstm-100056} Parameters: [100043]>
2018-02-01 12:15:57,264 DEBUG [java.sql.PreparedStatement] - <{pstm-100056} Types: [java.lang.String]>
2018-02-01 12:15:57,267 DEBUG [java.sql.ResultSet] - <{rset-100057} ResultSet>
2018-02-01 12:15:57,268 DEBUG [java.sql.Connection] - <{conn-100058} Connection>
2018-02-01 12:15:57,268 DEBUG [java.sql.Connection] - <{conn-100058} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-02-01 12:15:57,268 DEBUG [java.sql.PreparedStatement] - <{pstm-100059} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-02-01 12:15:57,269 DEBUG [java.sql.PreparedStatement] - <{pstm-100059} Parameters: [01]>
2018-02-01 12:15:57,270 DEBUG [java.sql.PreparedStatement] - <{pstm-100059} Types: [java.lang.String]>
2018-02-01 12:15:57,274 DEBUG [java.sql.ResultSet] - <{rset-100060} ResultSet>
2018-02-01 12:15:57,274 DEBUG [java.sql.ResultSet] - <{rset-100060} Header: [menuname]>
2018-02-01 12:15:57,274 DEBUG [java.sql.ResultSet] - <{rset-100060} Result: [供热收费管理信息系统]>
2018-02-01 12:15:57,289 DEBUG [java.sql.Connection] - <{conn-100061} Connection>
2018-02-01 12:15:57,290 DEBUG [java.sql.Connection] - <{conn-100061} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-02-01 12:15:57,290 DEBUG [java.sql.PreparedStatement] - <{pstm-100062} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-02-01 12:15:57,290 DEBUG [java.sql.PreparedStatement] - <{pstm-100062} Parameters: [100043]>
2018-02-01 12:15:57,290 DEBUG [java.sql.PreparedStatement] - <{pstm-100062} Types: [java.lang.String]>
2018-02-01 12:15:57,292 DEBUG [java.sql.ResultSet] - <{rset-100063} ResultSet>
2018-02-01 12:15:57,293 DEBUG [java.sql.ResultSet] - <{rset-100063} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-02-01 12:15:57,293 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010304, 收费标准, server_connectIcon, 010103, module/std.ered?reqCode=standardInit, 1, false, false, server_connect.png]>
2018-02-01 12:15:57,293 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [010102, 权限管理, null, 0101, null, 0, false, true, tab_blank.png]>
2018-02-01 12:15:57,293 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010403, Requst请求跟踪, server_connectIcon, 010104, eventTrack.ered?reqCode=init, 1, false, false, server_connect.png]>
2018-02-01 12:15:57,293 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010201, 组织机构管理, chart_organisationIcon, 010102, organization.ered?reqCode=departmentInit, 1, false, false, chart_organisation.png]>
2018-02-01 12:15:57,293 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010301, 字典维护, application_view_listIcon, 010103, resource.ered?reqCode=codeTableInit, 1, false, false, application_view_list.png]>
2018-02-01 12:15:57,294 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010401, Session会话监控, user_commentIcon, 010104, sessionMonitor.ered?reqCode=init, 1, false, false, user_comment.png]>
2018-02-01 12:15:57,294 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010204, 角色管理与授权, award_star_silver_3Icon, 010102, role.ered?reqCode=roleInit, 1, false, false, award_star_silver_3.png]>
2018-02-01 12:15:57,294 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010303, 全局参数表维护, configIcon, 010103, param.ered?reqCode=init, 1, false, false, config.png]>
2018-02-01 12:15:57,294 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [010103, 基础数据维护, null, 0101, null, 0, false, true, tab_blank.png]>
2018-02-01 12:15:57,295 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [010104, 运行监控, null, 0101, null, 0, false, true, tab_blank.png]>
2018-02-01 12:15:57,295 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010202, 人员管理与授权, group_linkIcon, 010102, user.ered?reqCode=userInit, 1, false, false, group_link.png]>
2018-02-01 12:15:57,295 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010405, JDBC执行监控, database_refreshIcon, 010104, jdbcMonitor.ered?reqCode=jdbcInit, 1, false, false, database_refresh.png]>
2018-02-01 12:15:57,295 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010406, Service监控, pluginIcon, 010104, beanMonitor.ered?reqCode=init, 1, false, false, plugin.png]>
2018-02-01 12:15:57,295 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [01010205, 菜单资源管理, layout_contentIcon, 010102, resource.ered?reqCode=menuResourceInit, 1, false, false, layout_content.png]>
2018-02-01 12:15:57,296 DEBUG [java.sql.ResultSet] - <{rset-100063} Result: [0101, 系统管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-02-01 12:15:57,296 DEBUG [java.sql.Connection] - <{conn-100064} Connection>
2018-02-01 12:15:57,296 DEBUG [java.sql.Connection] - <{conn-100064} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-02-01 12:15:57,296 DEBUG [java.sql.PreparedStatement] - <{pstm-100065} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-02-01 12:15:57,296 DEBUG [java.sql.PreparedStatement] - <{pstm-100065} Parameters: [100043]>
2018-02-01 12:15:57,296 DEBUG [java.sql.PreparedStatement] - <{pstm-100065} Types: [java.lang.String]>
2018-02-01 12:15:57,298 DEBUG [java.sql.ResultSet] - <{rset-100066} ResultSet>
2018-02-01 12:15:57,298 DEBUG [java.sql.Connection] - <{conn-100067} Connection>
2018-02-01 12:15:57,299 DEBUG [java.sql.Connection] - <{conn-100067} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-02-01 12:15:57,299 DEBUG [java.sql.PreparedStatement] - <{pstm-100068} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-02-01 12:15:57,299 DEBUG [java.sql.PreparedStatement] - <{pstm-100068} Parameters: [01]>
2018-02-01 12:15:57,299 DEBUG [java.sql.PreparedStatement] - <{pstm-100068} Types: [java.lang.String]>
2018-02-01 12:15:57,300 DEBUG [java.sql.ResultSet] - <{rset-100069} ResultSet>
2018-02-01 12:15:57,300 DEBUG [java.sql.ResultSet] - <{rset-100069} Header: [menuname]>
2018-02-01 12:15:57,300 DEBUG [java.sql.ResultSet] - <{rset-100069} Result: [供热收费管理信息系统]>
2018-02-01 12:15:57,892 DEBUG [java.sql.Connection] - <{conn-100070} Connection>
2018-02-01 12:15:57,893 DEBUG [java.sql.Connection] - <{conn-100070} Preparing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-02-01 12:15:57,893 DEBUG [java.sql.PreparedStatement] - <{pstm-100071} Executing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-02-01 12:15:57,893 DEBUG [java.sql.PreparedStatement] - <{pstm-100071} Parameters: []>
2018-02-01 12:15:57,893 DEBUG [java.sql.PreparedStatement] - <{pstm-100071} Types: []>
2018-02-01 12:15:57,896 DEBUG [java.sql.ResultSet] - <{rset-100072} ResultSet>
2018-02-01 12:15:57,896 DEBUG [java.sql.ResultSet] - <{rset-100072} Header: [id, text, child_count]>
2018-02-01 12:15:57,897 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0001, 0001 冶矿中心 (1), 1]>
2018-02-01 12:15:57,897 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0002, 0002 劳动局家属楼 (1), 1]>
2018-02-01 12:15:57,897 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0003, 0003 食品公司 (1), 1]>
2018-02-01 12:15:57,898 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0004, 0004 人社局11号楼 (2), 2]>
2018-02-01 12:15:57,898 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0005, 0005 卫生局家属楼 (1), 1]>
2018-02-01 12:15:57,898 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0006, 0006 水电公司 (2), 2]>
2018-02-01 12:15:57,899 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0007, 0007 水利局陈卿小区 (1), 1]>
2018-02-01 12:15:57,899 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0008, 0008 发改局家属楼 (1), 1]>
2018-02-01 12:15:57,899 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0009, 0009 公路段家属楼 (1), 1]>
2018-02-01 12:15:57,900 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0010, 0010 公路段平房 (1), 1]>
2018-02-01 12:15:57,900 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0011, 0011 公安局家属楼 (1), 1]>
2018-02-01 12:15:57,900 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0012, 0012 人民银行 (2), 2]>
2018-02-01 12:15:57,900 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0013, 0013 文卫路陈卿小区 (1), 1]>
2018-02-01 12:15:57,901 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0014, 0014 中医院家属楼 (1), 1]>
2018-02-01 12:15:57,901 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0015, 0015 腾达鞋业 (3), 3]>
2018-02-01 12:15:57,901 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0016, 0016 城关供销社 (2), 2]>
2018-02-01 12:15:57,901 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0017, 0017 城南便民超市 (1), 1]>
2018-02-01 12:15:57,901 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0018, 0018 祥源便民超市 (1), 1]>
2018-02-01 12:15:57,901 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0019, 0019 老北京饭店 (1), 1]>
2018-02-01 12:15:57,902 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0020, 0020 开门红打印店 (1), 1]>
2018-02-01 12:15:57,903 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0021, 0021 一中状元路拐角楼 (1), 1]>
2018-02-01 12:15:57,903 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0022, 0022 常委家属楼 (1), 1]>
2018-02-01 12:15:57,903 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0023, 0023 府前街002号院 (1), 1]>
2018-02-01 12:15:57,903 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0024, 0024 府前街（新华书店对面） (1), 1]>
2018-02-01 12:15:57,903 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0025, 0025 东厢小区 (2), 2]>
2018-02-01 12:15:57,903 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0026, 0026 凤凰名居旁 (1), 1]>
2018-02-01 12:15:57,904 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0027, 0027 电影公司家属楼 (1), 1]>
2018-02-01 12:15:57,904 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0028, 0028 凤凰名居 (2), 2]>
2018-02-01 12:15:57,904 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0029, 0029 府东006#家属楼 (2), 2]>
2018-02-01 12:15:57,905 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0030, 0030 药材公司窑 (1), 1]>
2018-02-01 12:15:57,905 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0031, 0031 府西小区 (3), 3]>
2018-02-01 12:15:57,906 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0032, 0032 工商局家属楼 (3), 3]>
2018-02-01 12:15:57,906 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0033, 0033 供销合作联合社 (2), 2]>
2018-02-01 12:15:57,906 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0034, 0034 果品公司家属楼 (1), 1]>
2018-02-01 12:15:57,906 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0035, 0035 宏运饮食服务公司 (4), 4]>
2018-02-01 12:15:57,906 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0036, 0036 旧工行家属院 (5), 5]>
2018-02-01 12:15:57,906 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0037, 0037 落子剧团家属楼 (3), 3]>
2018-02-01 12:15:57,907 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0038, 0038 粮食局家属楼 (5), 5]>
2018-02-01 12:15:57,907 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0039, 0039 茂源糖酒公司家属楼 (1), 1]>
2018-02-01 12:15:57,908 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0040, 0040 旅游局旁门市住户 (1), 1]>
2018-02-01 12:15:57,908 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0041, 0041 农行机关家属楼 (1), 1]>
2018-02-01 12:15:57,908 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0042, 0042 青羊社区院内 (1), 1]>
2018-02-01 12:15:57,908 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0043, 0043 人大家属楼   (1), 1]>
2018-02-01 12:15:57,908 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0044, 0044 人民医院家属楼 (9), 9]>
2018-02-01 12:15:57,908 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0045, 0045 水利局家属楼    (1), 1]>
2018-02-01 12:15:57,909 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0046, 0046 水利局附近居民 (1), 1]>
2018-02-01 12:15:57,909 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0047, 0047 水利局新楼 (2), 2]>
2018-02-01 12:15:57,909 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0048, 0048 王庄分社   (2), 2]>
2018-02-01 12:15:57,909 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0049, 0049 卫生监督所家属楼 (1), 1]>
2018-02-01 12:15:57,910 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0050, 0050 武装部家属楼   (1), 1]>
2018-02-01 12:15:57,910 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0051, 0051 新宇百货家属楼 (1), 1]>
2018-02-01 12:15:57,910 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0052, 0052 阳光佳苑（原药材公司院） (1), 1]>
2018-02-01 12:15:57,910 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0053, 0053 药材公司家属楼 (1), 1]>
2018-02-01 12:15:57,910 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0054, 0054 元发兴小院 (1), 1]>
2018-02-01 12:15:57,910 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0055, 0055 周转房家属楼   (1), 1]>
2018-02-01 12:15:57,911 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0056, 0056 自来水家属楼 (4), 4]>
2018-02-01 12:15:57,911 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0057, 0057 自来水公司家属楼（城建局上面） (1), 1]>
2018-02-01 12:15:57,911 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0058, 0058 组织部家属楼  (1), 1]>
2018-02-01 12:15:57,911 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0059, 0059 政府商铺 (36), 36]>
2018-02-01 12:15:57,912 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [0060, 0060 和园小区 (1), 1]>
2018-02-01 12:15:57,925 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1001, 1001 滨河湾家属楼 (47), 47]>
2018-02-01 12:15:57,925 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1002, 1002 地矿局家属楼 (1), 1]>
2018-02-01 12:15:57,926 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1003, 1003 平顺县彩凤祥玉小区 (1), 1]>
2018-02-01 12:15:57,926 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1004, 1004 平顺县交通执法局家属院 (1), 1]>
2018-02-01 12:15:57,926 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1005, 1005 信用联社家属院 (1), 1]>
2018-02-01 12:15:57,926 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1006, 1006 民政局家属院 (1), 1]>
2018-02-01 12:15:57,927 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1007, 1007 青羊山腾飞小区马建楼 (1), 1]>
2018-02-01 12:15:57,927 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1008, 1008 电影院家属楼 (2), 2]>
2018-02-01 12:15:57,927 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1009, 1009 顺安小区 (1), 1]>
2018-02-01 12:15:57,928 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1010, 1010 商务中心 (2), 2]>
2018-02-01 12:15:57,928 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1011, 1011 彩风花苑 (1), 1]>
2018-02-01 12:15:57,928 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1012, 1012 彩凤道城关村 (1), 1]>
2018-02-01 12:15:57,928 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1013, 1013 康乐食品公司 (3), 3]>
2018-02-01 12:15:57,929 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1014, 1014 宏达五交化新楼 (3), 3]>
2018-02-01 12:15:57,929 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1015, 1015 五交化公司南楼 (3), 3]>
2018-02-01 12:15:57,929 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1016, 1016 宏昌汽修铁冶社新楼南楼 (4), 4]>
2018-02-01 12:15:57,929 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1017, 1017 运输公司南楼 (4), 4]>
2018-02-01 12:15:57,929 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1018, 1018 针织厂北楼东小楼 (2), 2]>
2018-02-01 12:15:57,929 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1019, 1019 彩凤花苑 (1), 1]>
2018-02-01 12:15:57,930 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1020, 1020 顺安小区 (1), 1]>
2018-02-01 12:15:57,930 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1021, 1021 运输公司北楼一楼 (1), 1]>
2018-02-01 12:15:57,931 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1022, 1022 五交化公司大门顶楼下鞋店 (1), 1]>
2018-02-01 12:15:57,931 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1023, 1023 针织厂北楼楼下聚美日化 (1), 1]>
2018-02-01 12:15:57,931 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1024, 1024 商务中心楼下卖摩托车 (1), 1]>
2018-02-01 12:15:57,931 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1025, 1025 宏达五交化温馨家园 (1), 1]>
2018-02-01 12:15:57,931 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1026, 1026 康乐食品楼下 (1), 1]>
2018-02-01 12:15:57,931 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1027, 1027 青羊祥玉小区张华显楼 (1), 1]>
2018-02-01 12:15:57,931 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1028, 1028 五交化公司一楼韵达快递 (1), 1]>
2018-02-01 12:15:57,932 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1029, 1029 针织厂三单元302户 (1), 1]>
2018-02-01 12:15:57,932 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1030, 1030 康乐食品北四层楼一单元402户 (1), 1]>
2018-02-01 12:15:57,932 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1031, 1031 彩凤小区贸易货栈二单元302户 (1), 1]>
2018-02-01 12:15:57,933 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1032, 1032 宏达五交化三楼305 (1), 1]>
2018-02-01 12:15:57,933 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1033, 1033 运输公司北楼二楼203户 (1), 1]>
2018-02-01 12:15:57,933 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1034, 1034 国家电网旁春娥批零部 (1), 1]>
2018-02-01 12:15:57,933 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1035, 1035 电影院周小红 (1), 1]>
2018-02-01 12:15:57,933 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1036, 1036 青羊山腾飞小区马建楼 (1), 1]>
2018-02-01 12:15:57,933 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1037, 1037 自来水家属楼 (1), 1]>
2018-02-01 12:15:57,933 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1038, 1038 彩凤小区30号贸易货栈 (1), 1]>
2018-02-01 12:15:57,934 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [1039, 1039 交警队家属楼 (1), 1]>
2018-02-01 12:15:57,934 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [2001, 2001 阳光花苑 (34), 34]>
2018-02-01 12:15:57,935 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [3001, 3001 滨河花园 (4), 4]>
2018-02-01 12:15:57,935 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [3002, 3002 电力小区 (3), 3]>
2018-02-01 12:15:57,935 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [3003, 3003 交通局家属楼 (2), 2]>
2018-02-01 12:15:57,935 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [3004, 3004 进修校家属区 (4), 4]>
2018-02-01 12:15:57,935 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [3005, 3005 水泵厂 (2), 2]>
2018-02-01 12:15:57,935 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [3006, 3006 小东峪新楼 (1), 1]>
2018-02-01 12:15:57,936 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [3007, 3007 一中 (4), 4]>
2018-02-01 12:15:57,936 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [4001, 4001 地税局 (5), 5]>
2018-02-01 12:15:57,936 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [4002, 4002 林业局家属院 (1), 1]>
2018-02-01 12:15:57,937 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [4003, 4003 妇幼保健院 (2), 2]>
2018-02-01 12:15:57,937 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [4004, 4004 物资局 (6), 6]>
2018-02-01 12:15:57,937 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [4005, 4005 计生服务站家属院 (1), 1]>
2018-02-01 12:15:57,937 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [4006, 4006 党校家属院 (1), 1]>
2018-02-01 12:15:57,938 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [4007, 4007 党校小院 (1), 1]>
2018-02-01 12:15:57,938 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [4008, 4008 饲料公司家属院 (1), 1]>
2018-02-01 12:15:57,938 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [4009, 4009 住建局家属院 (1), 1]>
2018-02-01 12:15:57,938 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [4010, 4010 中小企业局家属院 (1), 1]>
2018-02-01 12:15:57,938 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [4011, 4011 康乐小区 (2), 2]>
2018-02-01 12:15:57,938 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5001, 5001 财政局家属楼 (2), 2]>
2018-02-01 12:15:57,939 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5002, 5002 城关镇卫生所   (1), 1]>
2018-02-01 12:15:57,939 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5003, 5003 城镇工业联合社 (1), 1]>
2018-02-01 12:15:57,939 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5004, 5004 国税局家属楼 (1), 1]>
2018-02-01 12:15:57,940 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5005, 5005 联通公司家属楼 (1), 1]>
2018-02-01 12:15:57,940 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5006, 5006 贸易中心五交化 (2), 2]>
2018-02-01 12:15:57,940 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5007, 5007 农机公司家属楼 (3), 3]>
2018-02-01 12:15:57,940 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5008, 5008 农机站商铺 (1), 1]>
2018-02-01 12:15:57,940 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5009, 5009 青羊镇家属楼及平房 (2), 2]>
2018-02-01 12:15:57,940 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5010, 5010 人保财险家属楼 (2), 2]>
2018-02-01 12:15:57,940 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5011, 5011 木建厂彩凤小区 (4), 4]>
2018-02-01 12:15:57,941 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5012, 5012 实验小学 (2), 2]>
2018-02-01 12:15:57,942 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5013, 5013 农机站土产日杂门市 (1), 1]>
2018-02-01 12:15:57,942 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5014, 5014 土地局家属楼 (1), 1]>
2018-02-01 12:15:57,942 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5015, 5015 外贸公司 (7), 7]>
2018-02-01 12:15:57,942 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5016, 5016 新华书店 (1), 1]>
2018-02-01 12:15:57,942 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5017, 5017 盐业公司家属楼 (1), 1]>
2018-02-01 12:15:57,942 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5018, 5018 移动公司宿舍 (1), 1]>
2018-02-01 12:15:57,942 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [5019, 5019 邮政局家属楼 (1), 1]>
2018-02-01 12:15:57,943 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6001, 6001 监察局家属院 (1), 1]>
2018-02-01 12:15:57,943 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6002, 6002 环保局家属院 (1), 1]>
2018-02-01 12:15:57,943 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6003, 6003 生产生活服务中心 (1), 1]>
2018-02-01 12:15:57,944 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6004, 6004 平顺县朝阳小区 (1), 1]>
2018-02-01 12:15:57,944 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6005, 6005 城西工行家属院 (1), 1]>
2018-02-01 12:15:57,945 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6006, 6006 国税局王庄家属院 (1), 1]>
2018-02-01 12:15:57,945 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6007, 6007 石油公司家属院 (2), 2]>
2018-02-01 12:15:57,945 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6008, 6008 司法局家属院 (1), 1]>
2018-02-01 12:15:57,945 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6009, 6009 农委 (2), 2]>
2018-02-01 12:15:57,945 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6010, 6010 康乐苑小区 (3), 3]>
2018-02-01 12:15:57,946 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6011, 6011 民政局西家属院 (1), 1]>
2018-02-01 12:15:57,946 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6012, 6012 农场家属院 (1), 1]>
2018-02-01 12:15:57,947 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6013, 6013 龙山小区 (5), 5]>
2018-02-01 12:15:57,947 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6014, 6014 王庄国税局隔壁 (2), 2]>
2018-02-01 12:15:57,947 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6015, 6015 城关村（春蕾幼儿园片） (1), 1]>
2018-02-01 12:15:57,947 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6016, 6016 加州假日小镇 (6), 6]>
2018-02-01 12:15:57,947 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6017, 6017 平顺县人民剧团家属院 (1), 1]>
2018-02-01 12:15:57,948 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6018, 6018 怡路快捷酒店 (1), 1]>
2018-02-01 12:15:57,956 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [6019, 6019 平顺县物资局 (1), 1]>
2018-02-01 12:15:57,956 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7001, 7001 万通苑 (5), 5]>
2018-02-01 12:15:57,956 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7002, 7002 城关新村 (1), 1]>
2018-02-01 12:15:57,956 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7003, 7003 广播电视台旧家属楼 (1), 1]>
2018-02-01 12:15:57,958 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7004, 7004 气象局民用 (1), 1]>
2018-02-01 12:15:57,958 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7005, 7005 紫东家园经济适用房 (16), 16]>
2018-02-01 12:15:57,958 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7006, 7006 小东峪路保障房商铺 (1), 1]>
2018-02-01 12:15:57,958 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7010, 7010 粮贸中心 (5), 5]>
2018-02-01 12:15:57,959 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7011, 7011 安居工程 (1), 1]>
2018-02-01 12:15:57,959 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7012, 7012 种子公司家属楼 (1), 1]>
2018-02-01 12:15:57,959 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7013, 7013 青羊小区 (1), 1]>
2018-02-01 12:15:57,959 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7014, 7014 青羊小区家属院 (1), 1]>
2018-02-01 12:15:57,959 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7015, 7015 粮食局车队 (1), 1]>
2018-02-01 12:15:57,959 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7016, 7016 金港100 (3), 3]>
2018-02-01 12:15:57,961 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [7017, 7017 老干居家属楼 (1), 1]>
2018-02-01 12:15:57,961 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [8001, 8001 大修厂 (1), 1]>
2018-02-01 12:15:57,961 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [8002, 8002 冶金公司 (3), 3]>
2018-02-01 12:15:57,961 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [8003, 8003 德盛苑 (9), 9]>
2018-02-01 12:15:57,961 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [8004, 8004 陈卿小区54号 (1), 1]>
2018-02-01 12:15:57,961 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [8005, 8005 青羊家园 (1), 1]>
2018-02-01 12:15:57,961 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [8006, 8006 荣兴加油站 (1), 1]>
2018-02-01 12:15:57,962 DEBUG [java.sql.ResultSet] - <{rset-100072} Result: [9999, 9999 银行测试数据 (1), 1]>
2018-02-01 12:15:58,172 DEBUG [java.sql.Connection] - <{conn-100073} Connection>
2018-02-01 12:15:58,172 DEBUG [java.sql.Connection] - <{conn-100073} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-02-01 12:15:58,172 DEBUG [java.sql.PreparedStatement] - <{pstm-100074} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-02-01 12:15:58,172 DEBUG [java.sql.PreparedStatement] - <{pstm-100074} Parameters: [100043]>
2018-02-01 12:15:58,173 DEBUG [java.sql.PreparedStatement] - <{pstm-100074} Types: [java.lang.String]>
2018-02-01 12:15:58,174 DEBUG [java.sql.ResultSet] - <{rset-100075} ResultSet>
2018-02-01 12:15:58,175 DEBUG [java.sql.ResultSet] - <{rset-100075} Header: [theme]>
2018-02-01 12:15:58,175 DEBUG [java.sql.ResultSet] - <{rset-100075} Result: [default]>
2018-02-01 12:17:42,896 DEBUG [java.sql.Connection] - <{conn-100076} Connection>
2018-02-01 12:17:42,896 DEBUG [java.sql.Connection] - <{conn-100076} Preparing Statement:    SELECT building_code as id, building_code||' '||building_name||' ('||house_count||')' as text,nvl(house_count,0) as child_Count   FROM fc_building a WHERE   a.community_code = '0001'  order by building_code  >
2018-02-01 12:17:42,897 DEBUG [java.sql.PreparedStatement] - <{pstm-100077} Executing Statement:    SELECT building_code as id, building_code||' '||building_name||' ('||house_count||')' as text,nvl(house_count,0) as child_Count   FROM fc_building a WHERE   a.community_code = '0001'  order by building_code  >
2018-02-01 12:17:42,897 DEBUG [java.sql.PreparedStatement] - <{pstm-100077} Parameters: []>
2018-02-01 12:17:42,897 DEBUG [java.sql.PreparedStatement] - <{pstm-100077} Types: []>
2018-02-01 12:17:42,898 DEBUG [java.sql.ResultSet] - <{rset-100078} ResultSet>
2018-02-01 12:17:42,899 DEBUG [java.sql.ResultSet] - <{rset-100078} Header: [id, text, child_count]>
2018-02-01 12:17:42,899 DEBUG [java.sql.ResultSet] - <{rset-100078} Result: [0001-008, 0001-008 8号楼 (17), 17]>
2018-02-01 12:17:43,596 DEBUG [java.sql.Connection] - <{conn-100079} Connection>
2018-02-01 12:17:43,597 DEBUG [java.sql.Connection] - <{conn-100079} Preparing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0001-008'   order by a.house_code  >
2018-02-01 12:17:43,597 DEBUG [java.sql.PreparedStatement] - <{pstm-100080} Executing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0001-008'   order by a.house_code  >
2018-02-01 12:17:43,597 DEBUG [java.sql.PreparedStatement] - <{pstm-100080} Parameters: []>
2018-02-01 12:17:43,597 DEBUG [java.sql.PreparedStatement] - <{pstm-100080} Types: []>
2018-02-01 12:17:43,600 DEBUG [java.sql.ResultSet] - <{rset-100081} ResultSet>
2018-02-01 12:17:43,600 DEBUG [java.sql.ResultSet] - <{rset-100081} Header: [id, text, child_count]>
2018-02-01 12:17:43,600 DEBUG [java.sql.ResultSet] - <{rset-100081} Result: [0001-008-01-01-01, 01-01-01 王建方, 0]>
2018-02-01 12:17:43,600 DEBUG [java.sql.ResultSet] - <{rset-100081} Result: [0001-008-01-01-02, 01-01-02 宋忠义, 0]>
2018-02-01 12:17:43,600 DEBUG [java.sql.ResultSet] - <{rset-100081} Result: [0001-008-01-02-01, 01-02-01 李爱书, 0]>
2018-02-01 12:17:43,601 DEBUG [java.sql.ResultSet] - <{rset-100081} Result: [0001-008-01-02-02, 01-02-02 申刚义, 0]>
2018-02-01 12:17:43,601 DEBUG [java.sql.ResultSet] - <{rset-100081} Result: [0001-008-01-03-01, 01-03-01 李琳, 0]>
2018-02-01 12:17:43,601 DEBUG [java.sql.ResultSet] - <{rset-100081} Result: [0001-008-01-03-02, 01-03-02 李根才, 0]>
2018-02-01 12:17:43,601 DEBUG [java.sql.ResultSet] - <{rset-100081} Result: [0001-008-01-04-01, 01-04-01 李保青, 0]>
2018-02-01 12:17:43,601 DEBUG [java.sql.ResultSet] - <{rset-100081} Result: [0001-008-01-04-02, 01-04-02 王慧玲, 0]>
2018-02-01 12:17:43,601 DEBUG [java.sql.ResultSet] - <{rset-100081} Result: [0001-008-02-01-01, 02-01-01 马爱英, 0]>
2018-02-01 12:17:43,602 DEBUG [java.sql.ResultSet] - <{rset-100081} Result: [0001-008-02-01-02, 02-01-02 王丽娟, 0]>
2018-02-01 12:17:43,602 DEBUG [java.sql.ResultSet] - <{rset-100081} Result: [0001-008-02-02-01, 02-02-01 刘红亮, 0]>
2018-02-01 12:17:43,602 DEBUG [java.sql.ResultSet] - <{rset-100081} Result: [0001-008-02-02-02, 02-02-02 孔文建, 0]>
2018-02-01 12:17:43,602 DEBUG [java.sql.ResultSet] - <{rset-100081} Result: [0001-008-02-03-01, 02-03-01 张小红, 0]>
2018-02-01 12:17:43,602 DEBUG [java.sql.ResultSet] - <{rset-100081} Result: [0001-008-02-03-02, 02-03-02 曹恒文, 0]>
2018-02-01 12:17:43,603 DEBUG [java.sql.ResultSet] - <{rset-100081} Result: [0001-008-02-04-01, 02-04-01 郭建中, 0]>
2018-02-01 12:17:43,603 DEBUG [java.sql.ResultSet] - <{rset-100081} Result: [0001-008-02-04-02, 02-04-02 杨书贤, 0]>
2018-02-01 12:17:43,603 DEBUG [java.sql.ResultSet] - <{rset-100081} Result: [0001-008-02-04-03, 02-04-03 测试, 0]>
2018-02-01 12:17:44,868 DEBUG [java.sql.Connection] - <{conn-100082} Connection>
2018-02-01 12:17:44,868 DEBUG [java.sql.Connection] - <{conn-100082} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-02-01 12:17:44,868 DEBUG [java.sql.PreparedStatement] - <{pstm-100083} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-02-01 12:17:44,868 DEBUG [java.sql.PreparedStatement] - <{pstm-100083} Parameters: [100043]>
2018-02-01 12:17:44,868 DEBUG [java.sql.PreparedStatement] - <{pstm-100083} Types: [java.lang.String]>
2018-02-01 12:17:44,870 DEBUG [java.sql.ResultSet] - <{rset-100084} ResultSet>
2018-02-01 12:17:44,871 DEBUG [java.sql.ResultSet] - <{rset-100084} Header: [theme]>
2018-02-01 12:17:44,871 DEBUG [java.sql.ResultSet] - <{rset-100084} Result: [default]>
2018-02-01 12:17:45,693 DEBUG [java.sql.Connection] - <{conn-100085} Connection>
2018-02-01 12:17:45,694 DEBUG [java.sql.Connection] - <{conn-100085} Preparing Statement:    SELECT stat_id value,stat_name text   FROM   fc_station  >
2018-02-01 12:17:45,696 DEBUG [java.sql.PreparedStatement] - <{pstm-100086} Executing Statement:    SELECT stat_id value,stat_name text   FROM   fc_station  >
2018-02-01 12:17:45,699 DEBUG [java.sql.PreparedStatement] - <{pstm-100086} Parameters: []>
2018-02-01 12:17:45,699 DEBUG [java.sql.PreparedStatement] - <{pstm-100086} Types: []>
2018-02-01 12:17:45,700 DEBUG [java.sql.ResultSet] - <{rset-100087} ResultSet>
2018-02-01 12:17:45,701 DEBUG [java.sql.ResultSet] - <{rset-100087} Header: [value, text]>
2018-02-01 12:17:45,701 DEBUG [java.sql.ResultSet] - <{rset-100087} Result: [0002, 二中站]>
2018-02-01 12:17:45,701 DEBUG [java.sql.ResultSet] - <{rset-100087} Result: [0003, 一中站]>
2018-02-01 12:17:45,701 DEBUG [java.sql.ResultSet] - <{rset-100087} Result: [0001, 滨河湾站]>
2018-02-01 12:17:45,703 DEBUG [java.sql.Connection] - <{conn-100088} Connection>
2018-02-01 12:17:45,704 DEBUG [java.sql.Connection] - <{conn-100088} Preparing Statement:    SELECT userid value,username text   FROM eauser    >
2018-02-01 12:17:45,704 DEBUG [java.sql.PreparedStatement] - <{pstm-100089} Executing Statement:    SELECT userid value,username text   FROM eauser    >
2018-02-01 12:17:45,704 DEBUG [java.sql.PreparedStatement] - <{pstm-100089} Parameters: []>
2018-02-01 12:17:45,704 DEBUG [java.sql.PreparedStatement] - <{pstm-100089} Types: []>
2018-02-01 12:17:45,705 DEBUG [java.sql.ResultSet] - <{rset-100087} Result: [0004, 保障房站]>
2018-02-01 12:17:45,705 DEBUG [java.sql.ResultSet] - <{rset-100087} Result: [0005, 公路段]>
2018-02-01 12:17:45,705 DEBUG [java.sql.ResultSet] - <{rset-100087} Result: [0006, 德胜苑]>
2018-02-01 12:17:45,705 DEBUG [java.sql.ResultSet] - <{rset-100087} Result: [0007, 工会]>
2018-02-01 12:17:45,705 DEBUG [java.sql.ResultSet] - <{rset-100087} Result: [0008, 政府站]>
2018-02-01 12:17:45,705 DEBUG [java.sql.ResultSet] - <{rset-100087} Result: [0009, 农机站]>
2018-02-01 12:17:45,706 DEBUG [java.sql.ResultSet] - <{rset-100090} ResultSet>
2018-02-01 12:17:45,708 DEBUG [java.sql.ResultSet] - <{rset-100090} Header: [value, text]>
2018-02-01 12:17:45,708 DEBUG [java.sql.ResultSet] - <{rset-100087} Result: [0010, 制药厂]>
2018-02-01 12:17:45,708 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100000, 超级用户]>
2018-02-01 12:17:45,708 DEBUG [java.sql.ResultSet] - <{rset-100087} Result: [0011, 彩凤站]>
2018-02-01 12:17:45,708 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100001, 开发人员]>
2018-02-01 12:17:45,709 DEBUG [java.sql.ResultSet] - <{rset-100087} Result: [0012, 美特好站]>
2018-02-01 12:17:45,709 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100043, 管理员]>
2018-02-01 12:17:45,709 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100056, 平顺农商行查询用户]>
2018-02-01 12:17:45,709 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100047, 农村信用社]>
2018-02-01 12:17:45,709 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100048, 收费员1]>
2018-02-01 12:17:45,709 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100049, 王赟]>
2018-02-01 12:17:45,709 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100050, 申星]>
2018-02-01 12:17:45,709 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100051, 桑亚琴]>
2018-02-01 12:17:45,712 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100052, 原琳茹]>
2018-02-01 12:17:45,712 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100057, 营业部]>
2018-02-01 12:17:45,713 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100058, 青羊支行]>
2018-02-01 12:17:45,713 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100055, 王海燕]>
2018-02-01 12:17:45,713 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100059, 王庄支行]>
2018-02-01 12:17:45,713 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100060, 府前支行]>
2018-02-01 12:17:45,713 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100061, 东昇支行]>
2018-02-01 12:17:45,713 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100062, 北社支行]>
2018-02-01 12:17:45,713 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100063, 苗庄支行]>
2018-02-01 12:17:45,713 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100064, 西沟支行]>
2018-02-01 12:17:45,714 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100065, 龙镇支行]>
2018-02-01 12:17:45,714 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100066, 新城支行]>
2018-02-01 12:17:45,714 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100067, 杏城支行]>
2018-02-01 12:17:45,715 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100068, 东寺头支行]>
2018-02-01 12:17:45,715 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100069, 虹梯关支行]>
2018-02-01 12:17:45,715 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100070, 中五井支行]>
2018-02-01 12:17:45,715 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100071, 北耽车支行]>
2018-02-01 12:17:45,715 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100072, 阳高支行]>
2018-02-01 12:17:45,715 DEBUG [java.sql.ResultSet] - <{rset-100090} Result: [100073, 石城支行]>
2018-02-01 12:17:45,750 DEBUG [java.sql.Connection] - <{conn-100091} Connection>
2018-02-01 12:17:45,751 DEBUG [java.sql.Connection] - <{conn-100091} Preparing Statement:    SELECT STANDARD_ID value,STANDARD_NAME text   FROM SF_STANDARD    where item_code=? and standyear=(select current_year from sf_item where item_code=? )   order by STANDARD_ID  >
2018-02-01 12:17:45,751 DEBUG [java.sql.PreparedStatement] - <{pstm-100092} Executing Statement:    SELECT STANDARD_ID value,STANDARD_NAME text   FROM SF_STANDARD    where item_code=? and standyear=(select current_year from sf_item where item_code=? )   order by STANDARD_ID  >
2018-02-01 12:17:45,751 DEBUG [java.sql.PreparedStatement] - <{pstm-100092} Parameters: [A, A]>
2018-02-01 12:17:45,751 DEBUG [java.sql.PreparedStatement] - <{pstm-100092} Types: [java.lang.String, java.lang.String]>
2018-02-01 12:17:45,754 DEBUG [java.sql.ResultSet] - <{rset-100093} ResultSet>
2018-02-01 12:17:45,754 DEBUG [java.sql.ResultSet] - <{rset-100093} Header: [value, text]>
2018-02-01 12:17:45,754 DEBUG [java.sql.ResultSet] - <{rset-100093} Result: [A1, 居民]>
2018-02-01 12:17:45,754 DEBUG [java.sql.ResultSet] - <{rset-100093} Result: [A2, 公用]>
2018-02-01 12:17:45,754 DEBUG [java.sql.ResultSet] - <{rset-100093} Result: [A3, 商铺]>
2018-02-01 12:17:45,854 DEBUG [java.sql.Connection] - <{conn-100094} Connection>
2018-02-01 12:17:45,855 DEBUG [java.sql.Connection] - <{conn-100094} Preparing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-02-01 12:17:45,856 DEBUG [java.sql.PreparedStatement] - <{pstm-100095} Executing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-02-01 12:17:45,856 DEBUG [java.sql.PreparedStatement] - <{pstm-100095} Parameters: [0001-008-01-01-02, 0001-008-01-01-02, 0001-008-01-01-02, 0001-008-01-01-02, 0001-008-01-01-02, 0001-008-01-01-02]>
2018-02-01 12:17:45,856 DEBUG [java.sql.PreparedStatement] - <{pstm-100095} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 12:17:45,860 DEBUG [java.sql.ResultSet] - <{rset-100096} ResultSet>
2018-02-01 12:17:45,861 DEBUG [java.sql.ResultSet] - <{rset-100096} Header: [h_cell_code, h_floor, h_door_code, h_house_code, h_card_id, h_cluster_code, h_contact_man, h_house_manager_name, h_house_manager, h_owner_name, h_address, h_intoweb_date, h_telephone, h_stat_name, h_stat_id, h_enter_date, h_work_unit, h_apart_status, h_user_kind, h_heat_status, h_intoweb_area, h_mobilephone, h_area_count, h_intoweb_year, h_item_code, h_area_id, h_use_type, h_standard_id, h_standard_name, h_build_area, h_floor_height, h_super_area, h_charge_area, h_item_code1, h_area_id1, h_use_type1, h_standard_id1, h_standard_name1, h_build_area1, h_floor_height1, h_super_area1, h_charge_area1, h_item_code2, h_area_id2, h_use_type2, h_standard_id2, h_standard_name2, h_build_area2, h_floor_height2, h_super_area2, h_charge_area2, h_item_code3, h_area_id3, h_use_type3, h_standard_id3, h_standard_name3, h_build_area3, h_floor_height3, h_super_area3, h_charge_area3, h_item_code4, h_area_id4, h_use_type4, h_standard_id4, h_standard_name4, h_build_area4, h_floor_height4, h_super_area4, h_charge_area4, h_remark]>
2018-02-01 12:17:45,861 DEBUG [java.sql.ResultSet] - <{rset-100096} Result: [01, 01, 02, 0001-008-01-01-02, null, null, null, null, null, 宋忠义, 冶矿中心8号楼102室, null, null, 公路段, 0005, 2000-01-01, null, null, null, null, null, null, 1, null, A, 0, 居民, A1, 居民, 109.62, null, null, 109.62, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-02-01 12:17:50,995 DEBUG [java.sql.Connection] - <{conn-100097} Connection>
2018-02-01 12:17:50,995 DEBUG [java.sql.Connection] - <{conn-100097} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-02-01 12:17:50,995 DEBUG [java.sql.PreparedStatement] - <{pstm-100098} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-02-01 12:17:50,995 DEBUG [java.sql.PreparedStatement] - <{pstm-100098} Parameters: [100043]>
2018-02-01 12:17:50,995 DEBUG [java.sql.PreparedStatement] - <{pstm-100098} Types: [java.lang.String]>
2018-02-01 12:17:50,997 DEBUG [java.sql.ResultSet] - <{rset-100099} ResultSet>
2018-02-01 12:17:50,997 DEBUG [java.sql.ResultSet] - <{rset-100099} Header: [theme]>
2018-02-01 12:17:50,997 DEBUG [java.sql.ResultSet] - <{rset-100099} Result: [default]>
2018-02-01 12:17:51,393 DEBUG [java.sql.Connection] - <{conn-100100} Connection>
2018-02-01 12:17:51,393 DEBUG [java.sql.Connection] - <{conn-100100} Preparing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-02-01 12:17:51,394 DEBUG [java.sql.PreparedStatement] - <{pstm-100101} Executing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-02-01 12:17:51,394 DEBUG [java.sql.PreparedStatement] - <{pstm-100101} Parameters: []>
2018-02-01 12:17:51,394 DEBUG [java.sql.PreparedStatement] - <{pstm-100101} Types: []>
2018-02-01 12:17:51,395 DEBUG [java.sql.ResultSet] - <{rset-100102} ResultSet>
2018-02-01 12:17:51,395 DEBUG [java.sql.ResultSet] - <{rset-100102} Header: [value, text]>
2018-02-01 12:17:51,396 DEBUG [java.sql.ResultSet] - <{rset-100102} Result: [A, 供热费]>
2018-02-01 12:17:51,396 DEBUG [java.sql.ResultSet] - <{rset-100102} Result: [B, 入网费]>
2018-02-01 12:17:53,635 DEBUG [java.sql.Connection] - <{conn-100103} Connection>
2018-02-01 12:17:53,637 DEBUG [java.sql.Connection] - <{conn-100103} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE                  (community_code in ('0001-008-01-01-02') or     building_code in ('0001-008-01-01-02') or     house_code in ('0001-008-01-01-02'))                       order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 12:17:53,637 DEBUG [java.sql.PreparedStatement] - <{pstm-100104} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE                  (community_code in ('0001-008-01-01-02') or     building_code in ('0001-008-01-01-02') or     house_code in ('0001-008-01-01-02'))                       order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 12:17:53,637 DEBUG [java.sql.PreparedStatement] - <{pstm-100104} Parameters: []>
2018-02-01 12:17:53,637 DEBUG [java.sql.PreparedStatement] - <{pstm-100104} Types: []>
2018-02-01 12:17:53,656 DEBUG [java.sql.ResultSet] - <{rset-100105} ResultSet>
2018-02-01 12:17:53,656 DEBUG [java.sql.ResultSet] - <{rset-100105} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 12:17:53,657 DEBUG [java.sql.ResultSet] - <{rset-100105} Result: [null, 供热费, 2015, 0001-008-01-01-02, A, 0, 01, 0001, 0001-008, 宋忠义, 1754, 0, 0, 1754, 0, 居民, A1, 16, 109.62, null, 109.62, 2015-11-01, 2016-03-31, 0, 2015-11-01, 2018-01-31, 5261.92, null, 5261.92, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 94086, 1]>
2018-02-01 12:17:53,657 DEBUG [java.sql.ResultSet] - <{rset-100105} Result: [null, 供热费, 2017, 0001-008-01-01-02, A, 0, 01, 0001, 0001-008, 宋忠义, 1753.92, 0, 0, 1753.92, 0, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-01-31, 972, null, 972, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 90654, 2]>
2018-02-01 12:17:53,657 DEBUG [java.sql.ResultSet] - <{rset-100105} Result: [null, 供热费, 2016, 0001-008-01-01-02, A, 0, 01, 0001, 0001-008, 宋忠义, 1754, 0, 0, 1754, 0, 居民, A1, 16, 109.62, null, 109.62, 2016-11-01, 2017-03-31, 0, 2016-11-01, 2018-01-31, 4777.51, null, 4777.51, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 94083, 3]>
2018-02-01 12:17:53,658 DEBUG [java.sql.Connection] - <{conn-100106} Connection>
2018-02-01 12:17:53,658 DEBUG [java.sql.Connection] - <{conn-100106} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE                  (community_code in ('0001-008-01-01-02') or     building_code in ('0001-008-01-01-02') or     house_code in ('0001-008-01-01-02'))                     >
2018-02-01 12:17:53,658 DEBUG [java.sql.PreparedStatement] - <{pstm-100107} Executing Statement:    select count(*)    from SF_CHARGE    WHERE                  (community_code in ('0001-008-01-01-02') or     building_code in ('0001-008-01-01-02') or     house_code in ('0001-008-01-01-02'))                     >
2018-02-01 12:17:53,658 DEBUG [java.sql.PreparedStatement] - <{pstm-100107} Parameters: []>
2018-02-01 12:17:53,659 DEBUG [java.sql.PreparedStatement] - <{pstm-100107} Types: []>
2018-02-01 12:17:53,666 DEBUG [java.sql.ResultSet] - <{rset-100108} ResultSet>
2018-02-01 12:17:53,666 DEBUG [java.sql.ResultSet] - <{rset-100108} Header: [count(*)]>
2018-02-01 12:17:53,666 DEBUG [java.sql.ResultSet] - <{rset-100108} Result: [3]>
2018-02-01 12:17:53,773 DEBUG [java.sql.Connection] - <{conn-100109} Connection>
2018-02-01 12:17:53,773 DEBUG [java.sql.Connection] - <{conn-100109} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE                  (community_code in ('0001-008-01-01-02') or     building_code in ('0001-008-01-01-02') or     house_code in ('0001-008-01-01-02'))                 >
2018-02-01 12:17:53,774 DEBUG [java.sql.PreparedStatement] - <{pstm-100110} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE                  (community_code in ('0001-008-01-01-02') or     building_code in ('0001-008-01-01-02') or     house_code in ('0001-008-01-01-02'))                 >
2018-02-01 12:17:53,775 DEBUG [java.sql.PreparedStatement] - <{pstm-100110} Parameters: []>
2018-02-01 12:17:53,775 DEBUG [java.sql.PreparedStatement] - <{pstm-100110} Types: []>
2018-02-01 12:17:53,781 DEBUG [java.sql.ResultSet] - <{rset-100111} ResultSet>
2018-02-01 12:17:53,781 DEBUG [java.sql.ResultSet] - <{rset-100111} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 12:17:53,781 DEBUG [java.sql.ResultSet] - <{rset-100111} Result: [共3, 5261.92, 0, 0, 5261.92, 0, 328.86, null, 328.86, 11011.43, null, 11011.43, null, null]>
2018-02-01 12:19:18,800 DEBUG [java.sql.Connection] - <{conn-100112} Connection>
2018-02-01 12:19:18,802 DEBUG [java.sql.Connection] - <{conn-100112} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE                  (community_code in ('0001-008-01-01-02') or     building_code in ('0001-008-01-01-02') or     house_code in ('0001-008-01-01-02'))                       order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 12:19:18,802 DEBUG [java.sql.PreparedStatement] - <{pstm-100113} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE                  (community_code in ('0001-008-01-01-02') or     building_code in ('0001-008-01-01-02') or     house_code in ('0001-008-01-01-02'))                       order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 12:19:18,802 DEBUG [java.sql.PreparedStatement] - <{pstm-100113} Parameters: []>
2018-02-01 12:19:18,802 DEBUG [java.sql.PreparedStatement] - <{pstm-100113} Types: []>
2018-02-01 12:19:18,808 DEBUG [java.sql.ResultSet] - <{rset-100114} ResultSet>
2018-02-01 12:19:18,808 DEBUG [java.sql.ResultSet] - <{rset-100114} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 12:19:18,809 DEBUG [java.sql.ResultSet] - <{rset-100114} Result: [null, 供热费, 2015, 0001-008-01-01-02, A, 0, 01, 0001, 0001-008, 宋忠义, 1754, 0, 0, 1754, 0, 居民, A1, 16, 109.62, null, 109.62, 2015-11-01, 2016-03-31, 0, 2015-11-01, 2018-02-01, 7015.92, null, 7015.92, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 94086, 1]>
2018-02-01 12:19:18,809 DEBUG [java.sql.ResultSet] - <{rset-100114} Result: [null, 供热费, 2017, 0001-008-01-01-02, A, 0, 01, 0001, 0001-008, 宋忠义, 1753.92, 0, 0, 1753.92, 0, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-02-01, 1298, null, 1298, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 90654, 2]>
2018-02-01 12:19:18,809 DEBUG [java.sql.ResultSet] - <{rset-100114} Result: [null, 供热费, 2016, 0001-008-01-01-02, A, 0, 01, 0001, 0001-008, 宋忠义, 1754, 0, 0, 1754, 0, 居民, A1, 16, 109.62, null, 109.62, 2016-11-01, 2017-03-31, 0, 2016-11-01, 2018-02-01, 6384.51, null, 6384.51, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 94083, 3]>
2018-02-01 12:19:18,810 DEBUG [java.sql.Connection] - <{conn-100115} Connection>
2018-02-01 12:19:18,810 DEBUG [java.sql.Connection] - <{conn-100115} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE                  (community_code in ('0001-008-01-01-02') or     building_code in ('0001-008-01-01-02') or     house_code in ('0001-008-01-01-02'))                     >
2018-02-01 12:19:18,810 DEBUG [java.sql.PreparedStatement] - <{pstm-100116} Executing Statement:    select count(*)    from SF_CHARGE    WHERE                  (community_code in ('0001-008-01-01-02') or     building_code in ('0001-008-01-01-02') or     house_code in ('0001-008-01-01-02'))                     >
2018-02-01 12:19:18,810 DEBUG [java.sql.PreparedStatement] - <{pstm-100116} Parameters: []>
2018-02-01 12:19:18,810 DEBUG [java.sql.PreparedStatement] - <{pstm-100116} Types: []>
2018-02-01 12:19:18,814 DEBUG [java.sql.ResultSet] - <{rset-100117} ResultSet>
2018-02-01 12:19:18,814 DEBUG [java.sql.ResultSet] - <{rset-100117} Header: [count(*)]>
2018-02-01 12:19:18,814 DEBUG [java.sql.ResultSet] - <{rset-100117} Result: [3]>
2018-02-01 12:19:18,886 DEBUG [java.sql.Connection] - <{conn-100118} Connection>
2018-02-01 12:19:18,886 DEBUG [java.sql.Connection] - <{conn-100118} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE                  (community_code in ('0001-008-01-01-02') or     building_code in ('0001-008-01-01-02') or     house_code in ('0001-008-01-01-02'))                 >
2018-02-01 12:19:18,887 DEBUG [java.sql.PreparedStatement] - <{pstm-100119} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE                  (community_code in ('0001-008-01-01-02') or     building_code in ('0001-008-01-01-02') or     house_code in ('0001-008-01-01-02'))                 >
2018-02-01 12:19:18,887 DEBUG [java.sql.PreparedStatement] - <{pstm-100119} Parameters: []>
2018-02-01 12:19:18,887 DEBUG [java.sql.PreparedStatement] - <{pstm-100119} Types: []>
2018-02-01 12:19:18,892 DEBUG [java.sql.ResultSet] - <{rset-100120} ResultSet>
2018-02-01 12:19:18,893 DEBUG [java.sql.ResultSet] - <{rset-100120} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 12:19:18,893 DEBUG [java.sql.ResultSet] - <{rset-100120} Result: [共3, 5261.92, 0, 0, 5261.92, 0, 328.86, null, 328.86, 14698.43, null, 14698.43, null, null]>
2018-02-01 12:19:54,963 DEBUG [java.sql.Connection] - <{conn-100121} Connection>
2018-02-01 12:19:54,965 DEBUG [java.sql.Connection] - <{conn-100121} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE                  (community_code in ('0001-008-01-01-02') or     building_code in ('0001-008-01-01-02') or     house_code in ('0001-008-01-01-02'))                       order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 12:19:54,965 DEBUG [java.sql.PreparedStatement] - <{pstm-100122} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE                  (community_code in ('0001-008-01-01-02') or     building_code in ('0001-008-01-01-02') or     house_code in ('0001-008-01-01-02'))                       order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 12:19:54,965 DEBUG [java.sql.PreparedStatement] - <{pstm-100122} Parameters: []>
2018-02-01 12:19:54,965 DEBUG [java.sql.PreparedStatement] - <{pstm-100122} Types: []>
2018-02-01 12:19:54,971 DEBUG [java.sql.ResultSet] - <{rset-100123} ResultSet>
2018-02-01 12:19:54,971 DEBUG [java.sql.ResultSet] - <{rset-100123} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 12:19:54,971 DEBUG [java.sql.ResultSet] - <{rset-100123} Result: [null, 供热费, 2015, 0001-008-01-01-02, A, 0, 01, 0001, 0001-008, 宋忠义, 1754, 0, 0, 1754, 0, 居民, A1, 16, 109.62, null, 109.62, 2015-11-01, 2016-03-31, 0, 2015-11-01, 2018-02-01, 8769.92, null, 8769.92, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 94086, 1]>
2018-02-01 12:19:54,971 DEBUG [java.sql.ResultSet] - <{rset-100123} Result: [null, 供热费, 2017, 0001-008-01-01-02, A, 0, 01, 0001, 0001-008, 宋忠义, 1753.92, 0, 0, 1753.92, 0, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-02-01, 1624, null, 1624, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 90654, 2]>
2018-02-01 12:19:54,972 DEBUG [java.sql.ResultSet] - <{rset-100123} Result: [null, 供热费, 2016, 0001-008-01-01-02, A, 0, 01, 0001, 0001-008, 宋忠义, 1754, 0, 0, 1754, 0, 居民, A1, 16, 109.62, null, 109.62, 2016-11-01, 2017-03-31, 0, 2016-11-01, 2018-02-01, 7991.51, null, 7991.51, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 94083, 3]>
2018-02-01 12:19:54,972 DEBUG [java.sql.Connection] - <{conn-100124} Connection>
2018-02-01 12:19:54,972 DEBUG [java.sql.Connection] - <{conn-100124} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE                  (community_code in ('0001-008-01-01-02') or     building_code in ('0001-008-01-01-02') or     house_code in ('0001-008-01-01-02'))                     >
2018-02-01 12:19:54,973 DEBUG [java.sql.PreparedStatement] - <{pstm-100125} Executing Statement:    select count(*)    from SF_CHARGE    WHERE                  (community_code in ('0001-008-01-01-02') or     building_code in ('0001-008-01-01-02') or     house_code in ('0001-008-01-01-02'))                     >
2018-02-01 12:19:54,973 DEBUG [java.sql.PreparedStatement] - <{pstm-100125} Parameters: []>
2018-02-01 12:19:54,973 DEBUG [java.sql.PreparedStatement] - <{pstm-100125} Types: []>
2018-02-01 12:19:54,976 DEBUG [java.sql.ResultSet] - <{rset-100126} ResultSet>
2018-02-01 12:19:54,976 DEBUG [java.sql.ResultSet] - <{rset-100126} Header: [count(*)]>
2018-02-01 12:19:54,976 DEBUG [java.sql.ResultSet] - <{rset-100126} Result: [3]>
2018-02-01 12:19:55,041 DEBUG [java.sql.Connection] - <{conn-100127} Connection>
2018-02-01 12:19:55,042 DEBUG [java.sql.Connection] - <{conn-100127} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE                  (community_code in ('0001-008-01-01-02') or     building_code in ('0001-008-01-01-02') or     house_code in ('0001-008-01-01-02'))                 >
2018-02-01 12:19:55,042 DEBUG [java.sql.PreparedStatement] - <{pstm-100128} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE                  (community_code in ('0001-008-01-01-02') or     building_code in ('0001-008-01-01-02') or     house_code in ('0001-008-01-01-02'))                 >
2018-02-01 12:19:55,042 DEBUG [java.sql.PreparedStatement] - <{pstm-100128} Parameters: []>
2018-02-01 12:19:55,042 DEBUG [java.sql.PreparedStatement] - <{pstm-100128} Types: []>
2018-02-01 12:19:55,046 DEBUG [java.sql.ResultSet] - <{rset-100129} ResultSet>
2018-02-01 12:19:55,047 DEBUG [java.sql.ResultSet] - <{rset-100129} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 12:19:55,047 DEBUG [java.sql.ResultSet] - <{rset-100129} Result: [共3, 5261.92, 0, 0, 5261.92, 0, 328.86, null, 328.86, 18385.43, null, 18385.43, null, null]>
2018-02-01 12:21:29,321 DEBUG [java.sql.Connection] - <{conn-100130} Connection>
2018-02-01 12:21:29,322 DEBUG [java.sql.Connection] - <{conn-100130} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE                  (community_code in ('0001-008-01-01-02') or     building_code in ('0001-008-01-01-02') or     house_code in ('0001-008-01-01-02'))                       order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 12:21:29,322 DEBUG [java.sql.PreparedStatement] - <{pstm-100131} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE                  (community_code in ('0001-008-01-01-02') or     building_code in ('0001-008-01-01-02') or     house_code in ('0001-008-01-01-02'))                       order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 12:21:29,322 DEBUG [java.sql.PreparedStatement] - <{pstm-100131} Parameters: []>
2018-02-01 12:21:29,322 DEBUG [java.sql.PreparedStatement] - <{pstm-100131} Types: []>
2018-02-01 12:21:29,329 DEBUG [java.sql.ResultSet] - <{rset-100132} ResultSet>
2018-02-01 12:21:29,330 DEBUG [java.sql.ResultSet] - <{rset-100132} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 12:21:29,330 DEBUG [java.sql.ResultSet] - <{rset-100132} Result: [null, 供热费, 2015, 0001-008-01-01-02, A, 0, 01, 0001, 0001-008, 宋忠义, 1754, 0, 0, 1754, 0, 居民, A1, 16, 109.62, null, 109.62, 2015-11-01, 2016-03-31, 0, 2015-11-01, 2018-02-01, 1754, null, 1754, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 94086, 1]>
2018-02-01 12:21:29,330 DEBUG [java.sql.ResultSet] - <{rset-100132} Result: [null, 供热费, 2017, 0001-008-01-01-02, A, 0, 01, 0001, 0001-008, 宋忠义, 1753.92, 0, 0, 1753.92, 0, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-02-01, 326, null, 326, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 90654, 2]>
2018-02-01 12:21:29,330 DEBUG [java.sql.ResultSet] - <{rset-100132} Result: [null, 供热费, 2016, 0001-008-01-01-02, A, 0, 01, 0001, 0001-008, 宋忠义, 1754, 0, 0, 1754, 0, 居民, A1, 16, 109.62, null, 109.62, 2016-11-01, 2017-03-31, 0, 2016-11-01, 2018-02-01, 1607, null, 1607, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 94083, 3]>
2018-02-01 12:21:29,331 DEBUG [java.sql.Connection] - <{conn-100133} Connection>
2018-02-01 12:21:29,331 DEBUG [java.sql.Connection] - <{conn-100133} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE                  (community_code in ('0001-008-01-01-02') or     building_code in ('0001-008-01-01-02') or     house_code in ('0001-008-01-01-02'))                     >
2018-02-01 12:21:29,331 DEBUG [java.sql.PreparedStatement] - <{pstm-100134} Executing Statement:    select count(*)    from SF_CHARGE    WHERE                  (community_code in ('0001-008-01-01-02') or     building_code in ('0001-008-01-01-02') or     house_code in ('0001-008-01-01-02'))                     >
2018-02-01 12:21:29,331 DEBUG [java.sql.PreparedStatement] - <{pstm-100134} Parameters: []>
2018-02-01 12:21:29,331 DEBUG [java.sql.PreparedStatement] - <{pstm-100134} Types: []>
2018-02-01 12:21:29,335 DEBUG [java.sql.ResultSet] - <{rset-100135} ResultSet>
2018-02-01 12:21:29,335 DEBUG [java.sql.ResultSet] - <{rset-100135} Header: [count(*)]>
2018-02-01 12:21:29,335 DEBUG [java.sql.ResultSet] - <{rset-100135} Result: [3]>
2018-02-01 12:21:29,464 DEBUG [java.sql.Connection] - <{conn-100136} Connection>
2018-02-01 12:21:29,464 DEBUG [java.sql.Connection] - <{conn-100136} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE                  (community_code in ('0001-008-01-01-02') or     building_code in ('0001-008-01-01-02') or     house_code in ('0001-008-01-01-02'))                 >
2018-02-01 12:21:29,465 DEBUG [java.sql.PreparedStatement] - <{pstm-100137} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE                  (community_code in ('0001-008-01-01-02') or     building_code in ('0001-008-01-01-02') or     house_code in ('0001-008-01-01-02'))                 >
2018-02-01 12:21:29,465 DEBUG [java.sql.PreparedStatement] - <{pstm-100137} Parameters: []>
2018-02-01 12:21:29,465 DEBUG [java.sql.PreparedStatement] - <{pstm-100137} Types: []>
2018-02-01 12:21:29,469 DEBUG [java.sql.ResultSet] - <{rset-100138} ResultSet>
2018-02-01 12:21:29,470 DEBUG [java.sql.ResultSet] - <{rset-100138} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 12:21:29,470 DEBUG [java.sql.ResultSet] - <{rset-100138} Result: [共3, 5261.92, 0, 0, 5261.92, 0, 328.86, null, 328.86, 3687, null, 3687, null, null]>
2018-02-01 12:21:48,900 DEBUG [java.sql.Connection] - <{conn-100139} Connection>
2018-02-01 12:21:48,902 DEBUG [java.sql.Connection] - <{conn-100139} Preparing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-02-01 12:21:48,903 DEBUG [java.sql.PreparedStatement] - <{pstm-100140} Executing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-02-01 12:21:48,903 DEBUG [java.sql.PreparedStatement] - <{pstm-100140} Parameters: [0001-008-01-02-02, 0001-008-01-02-02, 0001-008-01-02-02, 0001-008-01-02-02, 0001-008-01-02-02, 0001-008-01-02-02]>
2018-02-01 12:21:48,903 DEBUG [java.sql.PreparedStatement] - <{pstm-100140} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 12:21:48,906 DEBUG [java.sql.ResultSet] - <{rset-100141} ResultSet>
2018-02-01 12:21:48,907 DEBUG [java.sql.ResultSet] - <{rset-100141} Header: [h_cell_code, h_floor, h_door_code, h_house_code, h_card_id, h_cluster_code, h_contact_man, h_house_manager_name, h_house_manager, h_owner_name, h_address, h_intoweb_date, h_telephone, h_stat_name, h_stat_id, h_enter_date, h_work_unit, h_apart_status, h_user_kind, h_heat_status, h_intoweb_area, h_mobilephone, h_area_count, h_intoweb_year, h_item_code, h_area_id, h_use_type, h_standard_id, h_standard_name, h_build_area, h_floor_height, h_super_area, h_charge_area, h_item_code1, h_area_id1, h_use_type1, h_standard_id1, h_standard_name1, h_build_area1, h_floor_height1, h_super_area1, h_charge_area1, h_item_code2, h_area_id2, h_use_type2, h_standard_id2, h_standard_name2, h_build_area2, h_floor_height2, h_super_area2, h_charge_area2, h_item_code3, h_area_id3, h_use_type3, h_standard_id3, h_standard_name3, h_build_area3, h_floor_height3, h_super_area3, h_charge_area3, h_item_code4, h_area_id4, h_use_type4, h_standard_id4, h_standard_name4, h_build_area4, h_floor_height4, h_super_area4, h_charge_area4, h_remark]>
2018-02-01 12:21:48,907 DEBUG [java.sql.ResultSet] - <{rset-100141} Result: [01, 02, 02, 0001-008-01-02-02, null, null, null, null, null, 申刚义, 冶矿中心8号楼202室, null, null, 公路段, 0005, 2000-01-01, null, null, null, null, null, 13834053625, 1, null, A, 0, 居民, A1, 居民, 109.62, null, null, 109.62, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-02-01 12:21:50,947 DEBUG [java.sql.Connection] - <{conn-100142} Connection>
2018-02-01 12:21:50,948 DEBUG [java.sql.Connection] - <{conn-100142} Preparing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-02-01 12:21:50,948 DEBUG [java.sql.PreparedStatement] - <{pstm-100143} Executing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-02-01 12:21:50,948 DEBUG [java.sql.PreparedStatement] - <{pstm-100143} Parameters: [0001-008-01-03-02, 0001-008-01-03-02, 0001-008-01-03-02, 0001-008-01-03-02, 0001-008-01-03-02, 0001-008-01-03-02]>
2018-02-01 12:21:50,948 DEBUG [java.sql.PreparedStatement] - <{pstm-100143} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 12:21:50,951 DEBUG [java.sql.ResultSet] - <{rset-100144} ResultSet>
2018-02-01 12:21:50,951 DEBUG [java.sql.ResultSet] - <{rset-100144} Header: [h_cell_code, h_floor, h_door_code, h_house_code, h_card_id, h_cluster_code, h_contact_man, h_house_manager_name, h_house_manager, h_owner_name, h_address, h_intoweb_date, h_telephone, h_stat_name, h_stat_id, h_enter_date, h_work_unit, h_apart_status, h_user_kind, h_heat_status, h_intoweb_area, h_mobilephone, h_area_count, h_intoweb_year, h_item_code, h_area_id, h_use_type, h_standard_id, h_standard_name, h_build_area, h_floor_height, h_super_area, h_charge_area, h_item_code1, h_area_id1, h_use_type1, h_standard_id1, h_standard_name1, h_build_area1, h_floor_height1, h_super_area1, h_charge_area1, h_item_code2, h_area_id2, h_use_type2, h_standard_id2, h_standard_name2, h_build_area2, h_floor_height2, h_super_area2, h_charge_area2, h_item_code3, h_area_id3, h_use_type3, h_standard_id3, h_standard_name3, h_build_area3, h_floor_height3, h_super_area3, h_charge_area3, h_item_code4, h_area_id4, h_use_type4, h_standard_id4, h_standard_name4, h_build_area4, h_floor_height4, h_super_area4, h_charge_area4, h_remark]>
2018-02-01 12:21:50,951 DEBUG [java.sql.ResultSet] - <{rset-100144} Result: [01, 03, 02, 0001-008-01-03-02, null, null, null, null, null, 李根才, 冶矿中心8号楼302室, null, null, 公路段, 0005, 2000-01-01, null, null, null, null, null, 15135515066, 1, null, A, 0, 居民, A1, 居民, 109.62, null, null, 109.62, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-02-01 12:21:52,537 DEBUG [java.sql.Connection] - <{conn-100145} Connection>
2018-02-01 12:21:52,538 DEBUG [java.sql.Connection] - <{conn-100145} Preparing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-02-01 12:21:52,538 DEBUG [java.sql.PreparedStatement] - <{pstm-100146} Executing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-02-01 12:21:52,538 DEBUG [java.sql.PreparedStatement] - <{pstm-100146} Parameters: [0001-008-01-04-01, 0001-008-01-04-01, 0001-008-01-04-01, 0001-008-01-04-01, 0001-008-01-04-01, 0001-008-01-04-01]>
2018-02-01 12:21:52,538 DEBUG [java.sql.PreparedStatement] - <{pstm-100146} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 12:21:52,542 DEBUG [java.sql.ResultSet] - <{rset-100147} ResultSet>
2018-02-01 12:21:52,542 DEBUG [java.sql.ResultSet] - <{rset-100147} Header: [h_cell_code, h_floor, h_door_code, h_house_code, h_card_id, h_cluster_code, h_contact_man, h_house_manager_name, h_house_manager, h_owner_name, h_address, h_intoweb_date, h_telephone, h_stat_name, h_stat_id, h_enter_date, h_work_unit, h_apart_status, h_user_kind, h_heat_status, h_intoweb_area, h_mobilephone, h_area_count, h_intoweb_year, h_item_code, h_area_id, h_use_type, h_standard_id, h_standard_name, h_build_area, h_floor_height, h_super_area, h_charge_area, h_item_code1, h_area_id1, h_use_type1, h_standard_id1, h_standard_name1, h_build_area1, h_floor_height1, h_super_area1, h_charge_area1, h_item_code2, h_area_id2, h_use_type2, h_standard_id2, h_standard_name2, h_build_area2, h_floor_height2, h_super_area2, h_charge_area2, h_item_code3, h_area_id3, h_use_type3, h_standard_id3, h_standard_name3, h_build_area3, h_floor_height3, h_super_area3, h_charge_area3, h_item_code4, h_area_id4, h_use_type4, h_standard_id4, h_standard_name4, h_build_area4, h_floor_height4, h_super_area4, h_charge_area4, h_remark]>
2018-02-01 12:21:52,542 DEBUG [java.sql.ResultSet] - <{rset-100147} Result: [01, 04, 01, 0001-008-01-04-01, null, null, null, null, null, 李保青, 冶矿中心8号楼401室, null, null, 公路段, 0005, 2000-01-01, null, null, null, null, null, 15535591799, 1, null, A, 0, 居民, A1, 居民, 109.62, null, null, 109.62, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-02-01 12:21:57,482 DEBUG [java.sql.Connection] - <{conn-100148} Connection>
2018-02-01 12:21:57,484 DEBUG [java.sql.Connection] - <{conn-100148} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE                  (community_code in ('0001-008-01-04-01') or     building_code in ('0001-008-01-04-01') or     house_code in ('0001-008-01-04-01'))                       order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 12:21:57,484 DEBUG [java.sql.PreparedStatement] - <{pstm-100149} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE                  (community_code in ('0001-008-01-04-01') or     building_code in ('0001-008-01-04-01') or     house_code in ('0001-008-01-04-01'))                       order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 12:21:57,484 DEBUG [java.sql.PreparedStatement] - <{pstm-100149} Parameters: []>
2018-02-01 12:21:57,484 DEBUG [java.sql.PreparedStatement] - <{pstm-100149} Types: []>
2018-02-01 12:21:57,496 DEBUG [java.sql.ResultSet] - <{rset-100150} ResultSet>
2018-02-01 12:21:57,496 DEBUG [java.sql.ResultSet] - <{rset-100150} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 12:21:57,496 DEBUG [java.sql.ResultSet] - <{rset-100150} Result: [null, 供热费, 2017, 0001-008-01-04-01, A, 0, 01, 0001, 0001-008, 李保青, 1753.92, 291.15, 0, 1462.77, 1753.92, 居民, A1, 16, 109.62, null, 109.62, 2017-11-01, 2018-03-31, 0, 2017-11-01, null, 291, 291.15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 90653, 1]>
2018-02-01 12:21:57,497 DEBUG [java.sql.Connection] - <{conn-100151} Connection>
2018-02-01 12:21:57,497 DEBUG [java.sql.Connection] - <{conn-100151} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE                  (community_code in ('0001-008-01-04-01') or     building_code in ('0001-008-01-04-01') or     house_code in ('0001-008-01-04-01'))                     >
2018-02-01 12:21:57,497 DEBUG [java.sql.PreparedStatement] - <{pstm-100152} Executing Statement:    select count(*)    from SF_CHARGE    WHERE                  (community_code in ('0001-008-01-04-01') or     building_code in ('0001-008-01-04-01') or     house_code in ('0001-008-01-04-01'))                     >
2018-02-01 12:21:57,497 DEBUG [java.sql.PreparedStatement] - <{pstm-100152} Parameters: []>
2018-02-01 12:21:57,497 DEBUG [java.sql.PreparedStatement] - <{pstm-100152} Types: []>
2018-02-01 12:21:57,501 DEBUG [java.sql.ResultSet] - <{rset-100153} ResultSet>
2018-02-01 12:21:57,501 DEBUG [java.sql.ResultSet] - <{rset-100153} Header: [count(*)]>
2018-02-01 12:21:57,501 DEBUG [java.sql.ResultSet] - <{rset-100153} Result: [1]>
2018-02-01 12:21:57,621 DEBUG [java.sql.Connection] - <{conn-100154} Connection>
2018-02-01 12:21:57,621 DEBUG [java.sql.Connection] - <{conn-100154} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE                  (community_code in ('0001-008-01-04-01') or     building_code in ('0001-008-01-04-01') or     house_code in ('0001-008-01-04-01'))                 >
2018-02-01 12:21:57,622 DEBUG [java.sql.PreparedStatement] - <{pstm-100155} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE                  (community_code in ('0001-008-01-04-01') or     building_code in ('0001-008-01-04-01') or     house_code in ('0001-008-01-04-01'))                 >
2018-02-01 12:21:57,622 DEBUG [java.sql.PreparedStatement] - <{pstm-100155} Parameters: []>
2018-02-01 12:21:57,622 DEBUG [java.sql.PreparedStatement] - <{pstm-100155} Types: []>
2018-02-01 12:21:57,628 DEBUG [java.sql.ResultSet] - <{rset-100156} ResultSet>
2018-02-01 12:21:57,628 DEBUG [java.sql.ResultSet] - <{rset-100156} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 12:21:57,628 DEBUG [java.sql.ResultSet] - <{rset-100156} Result: [共1, 1753.92, 291.15, 0, 1462.77, 1753.92, 109.62, null, 109.62, 291, 291.15, 0, 0, 0]>
2018-02-01 12:22:05,387 DEBUG [java.sql.Connection] - <{conn-100157} Connection>
2018-02-01 12:22:05,388 DEBUG [java.sql.Connection] - <{conn-100157} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-02-01 12:22:05,389 DEBUG [java.sql.PreparedStatement] - <{pstm-100158} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-02-01 12:22:05,389 DEBUG [java.sql.PreparedStatement] - <{pstm-100158} Parameters: [100043]>
2018-02-01 12:22:05,389 DEBUG [java.sql.PreparedStatement] - <{pstm-100158} Types: [java.lang.String]>
2018-02-01 12:22:05,390 DEBUG [java.sql.ResultSet] - <{rset-100159} ResultSet>
2018-02-01 12:22:05,390 DEBUG [java.sql.ResultSet] - <{rset-100159} Header: [theme]>
2018-02-01 12:22:05,390 DEBUG [java.sql.ResultSet] - <{rset-100159} Result: [default]>
2018-02-01 12:22:05,809 DEBUG [java.sql.Connection] - <{conn-100160} Connection>
2018-02-01 12:22:05,810 DEBUG [java.sql.Connection] - <{conn-100160} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from fc_import    order by excel_row asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 12:22:05,810 DEBUG [java.sql.PreparedStatement] - <{pstm-100161} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from fc_import    order by excel_row asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 12:22:05,810 DEBUG [java.sql.PreparedStatement] - <{pstm-100161} Parameters: []>
2018-02-01 12:22:05,810 DEBUG [java.sql.PreparedStatement] - <{pstm-100161} Types: []>
2018-02-01 12:22:05,865 DEBUG [java.sql.ResultSet] - <{rset-100162} ResultSet>
2018-02-01 12:22:05,866 DEBUG [java.sql.ResultSet] - <{rset-100162} Header: [community_code, community_name, building_code, building_name, cell_code, floor, door_code, enter_date, owner_name, work_unit, use_type, build_area, use_area, charge_area, use_type2, build_area2, use_area2, charge_area2, excel_row, error, telephone, mobilephone, standard_id, standard_id2, address, rn]>
2018-02-01 12:22:05,866 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [7013, 青羊小区, 7013-001, 青羊小区125号, 01, 01, 01, 2017-12-27, 杨子刚, null, null, null, null, 81, null, null, null, null, 2, null, null, 13623555731, 居民, null, 青羊小区125号院1-101, 1]>
2018-02-01 12:22:05,866 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [7013, 青羊小区, 7013-001, 青羊小区125号, 01, 01, 01, 2017-12-27, 杨子刚, null, null, null, null, 81, null, null, null, null, 2, null, null, 13623555731, 居民, null, 青羊小区125号院1-101, 2]>
2018-02-01 12:22:05,866 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [7013, 青羊小区, 7013-001, 青羊小区125号, 01, 01, 01, 2017-12-27, 杨子刚, null, null, null, null, 81, null, null, null, null, 2, null, null, 13623555731, 居民, null, 青羊小区125号院1-101, 3]>
2018-02-01 12:22:05,866 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [7013, 青羊小区, 7013-001, 青羊小区125号, 01, 01, 01, 2017-12-27, 杨子刚, null, null, null, null, 81, null, null, null, null, 2, SqlMapClient operation; SQL [];   
--- The error occurred in org/module/fc/sqlmap/fc.xml.  
--- The error occurred while applying a parameter map.  
--- Check the insertArea-InlineParameterMap.  
--- 请检查您的SQL语句 (update failed).  
--- Cause: java.sql.SQLException: ORA-00001: 违反唯一约束条件 (EXTGR.SYS_C0011881)
; nested exception is com.ibatis.common.jdbc.exception.NestedSQLException:   
--- The error occurred in org/module/fc/sqlmap/fc.xml.  
--- The error occurred while applying a parameter map.  
--- Check the insertArea-InlineParameterMap.  
--- 请检查您的SQL语句 (update failed).  
--- Cause: java.sql.SQLException: ORA-00001: 违反唯一约束条件 (EXTGR.SYS_C0011881)
, null, 13623555731, 居民, null, 青羊小区125号院1-101, 4]>
2018-02-01 12:22:05,867 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [7013, 青羊小区, 7013-001, 青羊小区125号, 01, 01, 01, 2018-01-01, 杨子刚, null, null, null, null, 81, null, null, null, null, 2, null, null, 13623555731, 居民, null, 青羊小区125号院1-101, 5]>
2018-02-01 12:22:05,867 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [7013, 青羊小区, 7013-001, 青羊小区125号, 01, 01, 01, 2017-12-27, 杨子刚, null, null, null, null, 81, null, null, null, null, 2, null, null, 13623555731, 居民, null, 青羊小区125号院1-101, 6]>
2018-02-01 12:22:05,867 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [0060, 和园小区, 0060-001, 和园小区1号, 01, 02, 02, 2018-01-01, 李俊风, null, null, null, null, 110.73, null, null, null, null, 2, null, null, 15534137330, 居民, null, 和园小区1-1-202, 7]>
2018-02-01 12:22:05,867 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [7013, 青羊小区, 7013-001, 青羊小区125号, 01, 01, 02, 2017-12-27, 路书斌, null, null, null, null, 81, null, null, null, null, 3, null, null, 13834790512, 居民, null, 青羊小区125号院1-102, 8]>
2018-02-01 12:22:05,867 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [7013, 青羊小区, 7013-001, 青羊小区125号, 01, 01, 02, 2017-12-27, 路书斌, null, null, null, null, 81, null, null, null, null, 3, SqlMapClient operation; SQL [];   
--- The error occurred in org/module/fc/sqlmap/fc.xml.  
--- The error occurred while applying a parameter map.  
--- Check the insertArea-InlineParameterMap.  
--- 请检查您的SQL语句 (update failed).  
--- Cause: java.sql.SQLException: ORA-00001: 违反唯一约束条件 (EXTGR.SYS_C0011881)
; nested exception is com.ibatis.common.jdbc.exception.NestedSQLException:   
--- The error occurred in org/module/fc/sqlmap/fc.xml.  
--- The error occurred while applying a parameter map.  
--- Check the insertArea-InlineParameterMap.  
--- 请检查您的SQL语句 (update failed).  
--- Cause: java.sql.SQLException: ORA-00001: 违反唯一约束条件 (EXTGR.SYS_C0011881)
, null, 13834790512, 居民, null, 青羊小区125号院1-102, 9]>
2018-02-01 12:22:05,868 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [7013, 青羊小区, 7013-001, 青羊小区125号, 01, 01, 02, 2017-12-27, 路书斌, null, null, null, null, 81, null, null, null, null, 3, null, null, 13834790512, 居民, null, 青羊小区125号院1-102, 10]>
2018-02-01 12:22:05,869 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [7013, 青羊小区, 7013-001, 青羊小区125号, 01, 01, 02, null, 路书斌, null, null, null, null, 81, null, null, null, null, 3, SqlMapClient operation; SQL [];   
--- The error occurred in org/module/fc/sqlmap/fc.xml.  
--- The error occurred while applying a parameter map.  
--- Check the insertOwner-InlineParameterMap.  
--- 请检查您的SQL语句 (update failed).  
--- Cause: java.sql.SQLException: ORA-01400: 无法将 NULL 插入 ("EXTGR"."FC_OWNER"."ENTER_DATE")
; nested exception is com.ibatis.common.jdbc.exception.NestedSQLException:   
--- The error occurred in org/module/fc/sqlmap/fc.xml.  
--- The error occurred while applying a parameter map.  
--- Check the insertOwner-InlineParameterMap.  
--- 请检查您的SQL语句 (update failed).  
--- Cause: java.sql.SQLException: ORA-01400: 无法将 NULL 插入 ("EXTGR"."FC_OWNER"."ENTER_DATE")
, null, 13834790512, 居民, null, 青羊小区125号院1-102, 11]>
2018-02-01 12:22:05,869 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [7013, 青羊小区, 7013-001, 青羊小区125号, 01, 01, 02, 2018-01-01, 路书斌, null, null, null, null, 81, null, null, null, null, 3, null, null, 13834790512, 居民, null, 青羊小区125号院1-102, 12]>
2018-02-01 12:22:05,869 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [7013, 青羊小区, 7013-001, 青羊小区125号, 01, 01, 02, 2017-12-27, 路书斌, null, null, null, null, 81, null, null, null, null, 3, null, null, 13834790512, 居民, null, 青羊小区125号院1-102, 13]>
2018-02-01 12:22:05,870 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [7013, 青羊小区, 7013-001, 青羊小区125号, 01, 01, 02, 2017-12-27, 路书斌, null, null, null, null, 81, null, null, null, null, 3, null, null, 13834790512, 居民, null, 青羊小区125号院1-102, 14]>
2018-02-01 12:22:05,870 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [7013, 青羊小区, 7013-001, 青羊小区125号, 01, 02, 01, 2017-12-27, 赵计明, null, null, null, null, 25.26, null, null, null, null, 4, null, null, 13503550199, 居民, null, 青羊小区125号院1-201, 15]>
2018-02-01 12:22:05,870 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [7013, 青羊小区, 7013-001, 青羊小区125号, 01, 02, 01, 2018-01-01, 赵计明, null, null, null, null, 25.26, null, null, null, null, 4, null, null, 13503550199, 居民, null, 青羊小区125号院1-201, 16]>
2018-02-01 12:22:05,870 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [7013, 青羊小区, 7013-001, 青羊小区125号, 01, 02, 01, 2017-12-27, 赵计明, null, null, null, null, 25.26, null, null, null, null, 4, null, null, 13503550199, 居民, null, 青羊小区125号院1-201, 17]>
2018-02-01 12:22:05,870 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [7013, 青羊小区, 7013-001, 青羊小区125号, 01, 02, 01, 2017-12-27, 赵计明, null, null, null, null, 25.26, null, null, null, null, 4, null, null, 13503550199, 居民, null, 青羊小区125号院1-201, 18]>
2018-02-01 12:22:05,871 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [7013, 青羊小区, 7013-001, 青羊小区125号, 01, 02, 01, 2017-12-27, 赵计明, null, null, null, null, 25.26, null, null, null, null, 4, null, null, 13503550199, 居民, null, 青羊小区125号院1-201, 19]>
2018-02-01 12:22:05,871 DEBUG [java.sql.ResultSet] - <{rset-100162} Result: [7013, 青羊小区, 7013-001, 青羊小区125号, 01, 02, 01, null, 赵计明, null, null, null, null, 25.26, null, null, null, null, 4, SqlMapClient operation; SQL [];   
--- The error occurred in org/module/fc/sqlmap/fc.xml.  
--- The error occurred while applying a parameter map.  
--- Check the insertOwner-InlineParameterMap.  
--- 请检查您的SQL语句 (update failed).  
--- Cause: java.sql.SQLException: ORA-01400: 无法将 NULL 插入 ("EXTGR"."FC_OWNER"."ENTER_DATE")
; nested exception is com.ibatis.common.jdbc.exception.NestedSQLException:   
--- The error occurred in org/module/fc/sqlmap/fc.xml.  
--- The error occurred while applying a parameter map.  
--- Check the insertOwner-InlineParameterMap.  
--- 请检查您的SQL语句 (update failed).  
--- Cause: java.sql.SQLException: ORA-01400: 无法将 NULL 插入 ("EXTGR"."FC_OWNER"."ENTER_DATE")
, null, 13503550199, 居民, null, 青羊小区125号院1-201, 20]>
2018-02-01 12:22:05,872 DEBUG [java.sql.Connection] - <{conn-100163} Connection>
2018-02-01 12:22:05,872 DEBUG [java.sql.Connection] - <{conn-100163} Preparing Statement:    select count(*) from fc_import    >
2018-02-01 12:22:05,872 DEBUG [java.sql.PreparedStatement] - <{pstm-100164} Executing Statement:    select count(*) from fc_import    >
2018-02-01 12:22:05,872 DEBUG [java.sql.PreparedStatement] - <{pstm-100164} Parameters: []>
2018-02-01 12:22:05,872 DEBUG [java.sql.PreparedStatement] - <{pstm-100164} Types: []>
2018-02-01 12:22:05,876 DEBUG [java.sql.ResultSet] - <{rset-100165} ResultSet>
2018-02-01 12:22:05,876 DEBUG [java.sql.ResultSet] - <{rset-100165} Header: [count(*)]>
2018-02-01 12:22:05,876 DEBUG [java.sql.ResultSet] - <{rset-100165} Result: [83]>
2018-02-01 12:22:09,384 DEBUG [java.sql.Connection] - <{conn-100166} Connection>
2018-02-01 12:22:09,386 DEBUG [java.sql.Connection] - <{conn-100166} Preparing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-02-01 12:22:09,386 DEBUG [java.sql.PreparedStatement] - <{pstm-100167} Executing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-02-01 12:22:09,386 DEBUG [java.sql.PreparedStatement] - <{pstm-100167} Parameters: [0001-008-02-04-03, 0001-008-02-04-03, 0001-008-02-04-03, 0001-008-02-04-03, 0001-008-02-04-03, 0001-008-02-04-03]>
2018-02-01 12:22:09,386 DEBUG [java.sql.PreparedStatement] - <{pstm-100167} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 12:22:09,389 DEBUG [java.sql.ResultSet] - <{rset-100168} ResultSet>
2018-02-01 12:22:09,389 DEBUG [java.sql.ResultSet] - <{rset-100168} Header: [h_cell_code, h_floor, h_door_code, h_house_code, h_card_id, h_cluster_code, h_contact_man, h_house_manager_name, h_house_manager, h_owner_name, h_address, h_intoweb_date, h_telephone, h_stat_name, h_stat_id, h_enter_date, h_work_unit, h_apart_status, h_user_kind, h_heat_status, h_intoweb_area, h_mobilephone, h_area_count, h_intoweb_year, h_item_code, h_area_id, h_use_type, h_standard_id, h_standard_name, h_build_area, h_floor_height, h_super_area, h_charge_area, h_item_code1, h_area_id1, h_use_type1, h_standard_id1, h_standard_name1, h_build_area1, h_floor_height1, h_super_area1, h_charge_area1, h_item_code2, h_area_id2, h_use_type2, h_standard_id2, h_standard_name2, h_build_area2, h_floor_height2, h_super_area2, h_charge_area2, h_item_code3, h_area_id3, h_use_type3, h_standard_id3, h_standard_name3, h_build_area3, h_floor_height3, h_super_area3, h_charge_area3, h_item_code4, h_area_id4, h_use_type4, h_standard_id4, h_standard_name4, h_build_area4, h_floor_height4, h_super_area4, h_charge_area4, h_remark]>
2018-02-01 12:22:09,389 DEBUG [java.sql.ResultSet] - <{rset-100168} Result: [02, 04, 03, 0001-008-02-04-03, null, null, null, null, null, 测试, null, null, null, null, null, 2018-01-01, null, null, null, null, null, null, 1, null, A, 0, null, A1, 居民, null, null, null, 109, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-02-01 12:23:47,495 DEBUG [java.sql.Connection] - <{conn-100169} Connection>
2018-02-01 12:23:47,495 DEBUG [java.sql.Connection] - <{conn-100169} Preparing Statement:    SELECT count(*) count   FROM   fc_house  where house_code=?||'-'||?||'-'||?||'-'||?  >
2018-02-01 12:23:47,496 DEBUG [java.sql.PreparedStatement] - <{pstm-100170} Executing Statement:    SELECT count(*) count   FROM   fc_house  where house_code=?||'-'||?||'-'||?||'-'||?  >
2018-02-01 12:23:47,496 DEBUG [java.sql.PreparedStatement] - <{pstm-100170} Parameters: [0001-008, 02, 04, 04]>
2018-02-01 12:23:47,496 DEBUG [java.sql.PreparedStatement] - <{pstm-100170} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 12:23:47,497 DEBUG [java.sql.ResultSet] - <{rset-100171} ResultSet>
2018-02-01 12:23:47,497 DEBUG [java.sql.ResultSet] - <{rset-100171} Header: [count]>
2018-02-01 12:23:47,497 DEBUG [java.sql.ResultSet] - <{rset-100171} Result: [0]>
2018-02-01 12:23:47,497 DEBUG [java.sql.Connection] - <{conn-100172} Connection>
2018-02-01 12:23:47,498 DEBUG [java.sql.Connection] - <{conn-100172} Preparing Statement:    insert into fc_house(   community_code,   building_code,   house_code,   cell_code,   floor,   door_code,   card_id,   cluster_code,   house_manager,   address,   intoweb_date,   intoweb_area,   stat_id,   apart_status,   user_kind ,   heat_status,cid,operator,operate_date,remark)values(   ?,   ?,   ?||'-'||?||'-'||?||'-'||?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,?,   to_char(sysdate,'YYYY-MM-DD HH24:MI:SS'),   ?)  >
2018-02-01 12:23:47,499 DEBUG [java.sql.PreparedStatement] - <{pstm-100173} Executing Statement:    insert into fc_house(   community_code,   building_code,   house_code,   cell_code,   floor,   door_code,   card_id,   cluster_code,   house_manager,   address,   intoweb_date,   intoweb_area,   stat_id,   apart_status,   user_kind ,   heat_status,cid,operator,operate_date,remark)values(   ?,   ?,   ?||'-'||?||'-'||?||'-'||?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,?,   to_char(sysdate,'YYYY-MM-DD HH24:MI:SS'),   ?)  >
2018-02-01 12:23:47,499 DEBUG [java.sql.PreparedStatement] - <{pstm-100173} Parameters: [0001, 0001-008, 0001-008, 02, 04, 04, 02, 04, 04, , , , , , , , , , , 01, 100043, ]>
2018-02-01 12:23:47,499 DEBUG [java.sql.PreparedStatement] - <{pstm-100173} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 12:23:47,500 DEBUG [java.sql.Connection] - <{conn-100174} Connection>
2018-02-01 12:23:47,502 DEBUG [java.sql.Connection] - <{conn-100174} Preparing Statement:    insert into fc_owner(   community_code,   building_code,   house_code,   contact_man,   owner_name,   telephone,   mobilephone,   enter_date,   work_unit,   cid,   operator,   operate_date)values(   ?,   ?,   ?||'-'||?||'-'||?||'-'||?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,?,   to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')   )  >
2018-02-01 12:23:47,503 DEBUG [java.sql.PreparedStatement] - <{pstm-100175} Executing Statement:    insert into fc_owner(   community_code,   building_code,   house_code,   contact_man,   owner_name,   telephone,   mobilephone,   enter_date,   work_unit,   cid,   operator,   operate_date)values(   ?,   ?,   ?||'-'||?||'-'||?||'-'||?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,?,   to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')   )  >
2018-02-01 12:23:47,503 DEBUG [java.sql.PreparedStatement] - <{pstm-100175} Parameters: [0001, 0001-008, 0001-008, 02, 04, 04, , 测试2, , , 2018-02-01, , 01, 100043]>
2018-02-01 12:23:47,503 DEBUG [java.sql.PreparedStatement] - <{pstm-100175} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 12:23:47,504 DEBUG [java.sql.Connection] - <{conn-100176} Connection>
2018-02-01 12:23:47,505 DEBUG [java.sql.Connection] - <{conn-100176} Preparing Statement:    insert into fc_area(   community_code,   building_code,   house_code,   item_code,   area_id,   use_type,   standard_id,   build_area,   floor_height,   super_area,   charge_area,   cid,   operator,   operate_date)values(   ?,   ?,   ?||'-'||?||'-'||?||'-'||?,   ?,   ?,   ?,   (select standard_id from sf_standard where (standard_name=? or standard_id=?)  and standyear=(select current_year from sf_item where item_code='A')),   ?,   ?,   ?,   ?,   ?,?,   to_char(sysdate,'YYYY-MM-DD HH24:MI:SS'))  >
2018-02-01 12:23:47,505 DEBUG [java.sql.PreparedStatement] - <{pstm-100177} Executing Statement:    insert into fc_area(   community_code,   building_code,   house_code,   item_code,   area_id,   use_type,   standard_id,   build_area,   floor_height,   super_area,   charge_area,   cid,   operator,   operate_date)values(   ?,   ?,   ?||'-'||?||'-'||?||'-'||?,   ?,   ?,   ?,   (select standard_id from sf_standard where (standard_name=? or standard_id=?)  and standyear=(select current_year from sf_item where item_code='A')),   ?,   ?,   ?,   ?,   ?,?,   to_char(sysdate,'YYYY-MM-DD HH24:MI:SS'))  >
2018-02-01 12:23:47,505 DEBUG [java.sql.PreparedStatement] - <{pstm-100177} Parameters: [0001, 0001-008, 0001-008, 02, 04, 04, A, 0, , A1, A1, , , , 0, 01, 100043]>
2018-02-01 12:23:47,506 DEBUG [java.sql.PreparedStatement] - <{pstm-100177} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.lang.String]>
2018-02-01 12:23:47,507 DEBUG [java.sql.Connection] - <{conn-100178} Connection>
2018-02-01 12:23:47,508 DEBUG [java.sql.Connection] - <{conn-100178} Preparing Statement:    UPDATE fc_building SET    house_count=(select count(*) from fc_house where BUILDING_CODE = ? and IS_DESTORY='0')   WHERE BUILDING_CODE = ?    >
2018-02-01 12:23:47,508 DEBUG [java.sql.PreparedStatement] - <{pstm-100179} Executing Statement:    UPDATE fc_building SET    house_count=(select count(*) from fc_house where BUILDING_CODE = ? and IS_DESTORY='0')   WHERE BUILDING_CODE = ?    >
2018-02-01 12:23:47,508 DEBUG [java.sql.PreparedStatement] - <{pstm-100179} Parameters: [0001-008, 0001-008]>
2018-02-01 12:23:47,508 DEBUG [java.sql.PreparedStatement] - <{pstm-100179} Types: [java.lang.String, java.lang.String]>
2018-02-01 12:23:47,510 DEBUG [java.sql.Connection] - <{conn-100180} Connection>
2018-02-01 12:23:47,510 DEBUG [java.sql.Connection] - <{conn-100180} Preparing Statement:    UPDATE fc_community SET    house_count=(select count(*) from fc_house where COMMUNITY_CODE = ? and IS_DESTORY='0')   WHERE COMMUNITY_CODE = ?    >
2018-02-01 12:23:47,510 DEBUG [java.sql.PreparedStatement] - <{pstm-100181} Executing Statement:    UPDATE fc_community SET    house_count=(select count(*) from fc_house where COMMUNITY_CODE = ? and IS_DESTORY='0')   WHERE COMMUNITY_CODE = ?    >
2018-02-01 12:23:47,510 DEBUG [java.sql.PreparedStatement] - <{pstm-100181} Parameters: [0001, 0001]>
2018-02-01 12:23:47,510 DEBUG [java.sql.PreparedStatement] - <{pstm-100181} Types: [java.lang.String, java.lang.String]>
2018-02-01 12:23:47,658 DEBUG [java.sql.Connection] - <{conn-100182} Connection>
2018-02-01 12:23:47,658 DEBUG [java.sql.Connection] - <{conn-100182} Preparing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0001-008'   order by a.house_code  >
2018-02-01 12:23:47,658 DEBUG [java.sql.PreparedStatement] - <{pstm-100183} Executing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0001-008'   order by a.house_code  >
2018-02-01 12:23:47,659 DEBUG [java.sql.PreparedStatement] - <{pstm-100183} Parameters: []>
2018-02-01 12:23:47,659 DEBUG [java.sql.PreparedStatement] - <{pstm-100183} Types: []>
2018-02-01 12:23:47,661 DEBUG [java.sql.ResultSet] - <{rset-100184} ResultSet>
2018-02-01 12:23:47,661 DEBUG [java.sql.ResultSet] - <{rset-100184} Header: [id, text, child_count]>
2018-02-01 12:23:47,661 DEBUG [java.sql.ResultSet] - <{rset-100184} Result: [0001-008-01-01-01, 01-01-01 王建方, 0]>
2018-02-01 12:23:47,662 DEBUG [java.sql.ResultSet] - <{rset-100184} Result: [0001-008-01-01-02, 01-01-02 宋忠义, 0]>
2018-02-01 12:23:47,665 DEBUG [java.sql.ResultSet] - <{rset-100184} Result: [0001-008-01-02-01, 01-02-01 李爱书, 0]>
2018-02-01 12:23:47,665 DEBUG [java.sql.ResultSet] - <{rset-100184} Result: [0001-008-01-02-02, 01-02-02 申刚义, 0]>
2018-02-01 12:23:47,665 DEBUG [java.sql.ResultSet] - <{rset-100184} Result: [0001-008-01-03-01, 01-03-01 李琳, 0]>
2018-02-01 12:23:47,665 DEBUG [java.sql.ResultSet] - <{rset-100184} Result: [0001-008-01-03-02, 01-03-02 李根才, 0]>
2018-02-01 12:23:47,666 DEBUG [java.sql.ResultSet] - <{rset-100184} Result: [0001-008-01-04-01, 01-04-01 李保青, 0]>
2018-02-01 12:23:47,666 DEBUG [java.sql.ResultSet] - <{rset-100184} Result: [0001-008-01-04-02, 01-04-02 王慧玲, 0]>
2018-02-01 12:23:47,666 DEBUG [java.sql.ResultSet] - <{rset-100184} Result: [0001-008-02-01-01, 02-01-01 马爱英, 0]>
2018-02-01 12:23:47,667 DEBUG [java.sql.ResultSet] - <{rset-100184} Result: [0001-008-02-01-02, 02-01-02 王丽娟, 0]>
2018-02-01 12:23:47,667 DEBUG [java.sql.ResultSet] - <{rset-100184} Result: [0001-008-02-02-01, 02-02-01 刘红亮, 0]>
2018-02-01 12:23:47,667 DEBUG [java.sql.ResultSet] - <{rset-100184} Result: [0001-008-02-02-02, 02-02-02 孔文建, 0]>
2018-02-01 12:23:47,667 DEBUG [java.sql.ResultSet] - <{rset-100184} Result: [0001-008-02-03-01, 02-03-01 张小红, 0]>
2018-02-01 12:23:47,667 DEBUG [java.sql.ResultSet] - <{rset-100184} Result: [0001-008-02-03-02, 02-03-02 曹恒文, 0]>
2018-02-01 12:23:47,667 DEBUG [java.sql.ResultSet] - <{rset-100184} Result: [0001-008-02-04-01, 02-04-01 郭建中, 0]>
2018-02-01 12:23:47,667 DEBUG [java.sql.ResultSet] - <{rset-100184} Result: [0001-008-02-04-02, 02-04-02 杨书贤, 0]>
2018-02-01 12:23:47,667 DEBUG [java.sql.ResultSet] - <{rset-100184} Result: [0001-008-02-04-03, 02-04-03 测试, 0]>
2018-02-01 12:23:47,667 DEBUG [java.sql.ResultSet] - <{rset-100184} Result: [0001-008-02-04-04, 02-04-04 测试2, 0]>
2018-02-01 12:23:48,036 DEBUG [java.sql.Connection] - <{conn-100185} Connection>
2018-02-01 12:23:48,037 DEBUG [java.sql.Connection] - <{conn-100185} Preparing Statement:    SELECT building_code,building_name,a.stat_id bu_stat_id,b.stat_name bu_stat_name,   a.house_manager bu_house_manager,c.USERNAME bu_manager_name   FROM   fc_building a,fc_station b,EAUSER c  where building_code= ?    and a.stat_id=b.stat_id(+) and a.house_manager=c.USERID(+)  >
2018-02-01 12:23:48,037 DEBUG [java.sql.PreparedStatement] - <{pstm-100186} Executing Statement:    SELECT building_code,building_name,a.stat_id bu_stat_id,b.stat_name bu_stat_name,   a.house_manager bu_house_manager,c.USERNAME bu_manager_name   FROM   fc_building a,fc_station b,EAUSER c  where building_code= ?    and a.stat_id=b.stat_id(+) and a.house_manager=c.USERID(+)  >
2018-02-01 12:23:48,037 DEBUG [java.sql.PreparedStatement] - <{pstm-100186} Parameters: [0001-008]>
2018-02-01 12:23:48,037 DEBUG [java.sql.PreparedStatement] - <{pstm-100186} Types: [java.lang.String]>
2018-02-01 12:23:48,038 DEBUG [java.sql.ResultSet] - <{rset-100187} ResultSet>
2018-02-01 12:23:48,038 DEBUG [java.sql.ResultSet] - <{rset-100187} Header: [building_code, building_name, bu_stat_id, bu_stat_name, bu_house_manager, bu_manager_name]>
2018-02-01 12:23:48,038 DEBUG [java.sql.ResultSet] - <{rset-100187} Result: [0001-008, 8号楼, 0005, 公路段, null, null]>
2018-02-01 12:24:14,839 DEBUG [java.sql.Connection] - <{conn-100188} Connection>
2018-02-01 12:24:14,839 DEBUG [java.sql.Connection] - <{conn-100188} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 12:24:14,871 DEBUG [java.sql.PreparedStatement] - <{pstm-100189} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 12:24:14,871 DEBUG [java.sql.PreparedStatement] - <{pstm-100189} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 12:24:14,871 DEBUG [java.sql.PreparedStatement] - <{pstm-100189} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 12:39:28,322 DEBUG [java.sql.Connection] - <{conn-100190} Connection>
2018-02-01 12:39:28,322 DEBUG [java.sql.Connection] - <{conn-100190} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 12:39:28,323 DEBUG [java.sql.PreparedStatement] - <{pstm-100191} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 12:39:28,323 DEBUG [java.sql.PreparedStatement] - <{pstm-100191} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 12:39:28,323 DEBUG [java.sql.PreparedStatement] - <{pstm-100191} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 12:45:36,883 DEBUG [java.sql.Connection] - <{conn-100192} Connection>
2018-02-01 12:45:36,883 DEBUG [java.sql.Connection] - <{conn-100192} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 12:45:36,883 DEBUG [java.sql.PreparedStatement] - <{pstm-100193} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 12:45:36,884 DEBUG [java.sql.PreparedStatement] - <{pstm-100193} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 12:45:36,884 DEBUG [java.sql.PreparedStatement] - <{pstm-100193} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 12:53:01,811 DEBUG [java.sql.Connection] - <{conn-100194} Connection>
2018-02-01 12:53:01,812 DEBUG [java.sql.Connection] - <{conn-100194} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 12:53:01,812 DEBUG [java.sql.PreparedStatement] - <{pstm-100195} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 12:53:01,812 DEBUG [java.sql.PreparedStatement] - <{pstm-100195} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 12:53:01,812 DEBUG [java.sql.PreparedStatement] - <{pstm-100195} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 13:00:10,114 DEBUG [java.sql.Connection] - <{conn-100196} Connection>
2018-02-01 13:00:10,115 DEBUG [java.sql.Connection] - <{conn-100196} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:00:10,115 DEBUG [java.sql.PreparedStatement] - <{pstm-100197} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:00:10,115 DEBUG [java.sql.PreparedStatement] - <{pstm-100197} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 13:00:10,115 DEBUG [java.sql.PreparedStatement] - <{pstm-100197} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 13:01:13,653 DEBUG [java.sql.Connection] - <{conn-100198} Connection>
2018-02-01 13:01:13,654 DEBUG [java.sql.Connection] - <{conn-100198} Preparing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-02-01 13:01:13,654 DEBUG [java.sql.PreparedStatement] - <{pstm-100199} Executing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-02-01 13:01:13,654 DEBUG [java.sql.PreparedStatement] - <{pstm-100199} Parameters: [0001-008-02-04-04, 0001-008-02-04-04, 0001-008-02-04-04, 0001-008-02-04-04, 0001-008-02-04-04, 0001-008-02-04-04]>
2018-02-01 13:01:13,654 DEBUG [java.sql.PreparedStatement] - <{pstm-100199} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 13:01:13,657 DEBUG [java.sql.ResultSet] - <{rset-100200} ResultSet>
2018-02-01 13:01:13,658 DEBUG [java.sql.ResultSet] - <{rset-100200} Header: [h_cell_code, h_floor, h_door_code, h_house_code, h_card_id, h_cluster_code, h_contact_man, h_house_manager_name, h_house_manager, h_owner_name, h_address, h_intoweb_date, h_telephone, h_stat_name, h_stat_id, h_enter_date, h_work_unit, h_apart_status, h_user_kind, h_heat_status, h_intoweb_area, h_mobilephone, h_area_count, h_intoweb_year, h_item_code, h_area_id, h_use_type, h_standard_id, h_standard_name, h_build_area, h_floor_height, h_super_area, h_charge_area, h_item_code1, h_area_id1, h_use_type1, h_standard_id1, h_standard_name1, h_build_area1, h_floor_height1, h_super_area1, h_charge_area1, h_item_code2, h_area_id2, h_use_type2, h_standard_id2, h_standard_name2, h_build_area2, h_floor_height2, h_super_area2, h_charge_area2, h_item_code3, h_area_id3, h_use_type3, h_standard_id3, h_standard_name3, h_build_area3, h_floor_height3, h_super_area3, h_charge_area3, h_item_code4, h_area_id4, h_use_type4, h_standard_id4, h_standard_name4, h_build_area4, h_floor_height4, h_super_area4, h_charge_area4, h_remark]>
2018-02-01 13:01:13,658 DEBUG [java.sql.ResultSet] - <{rset-100200} Result: [02, 04, 04, 0001-008-02-04-04, null, null, null, null, null, 测试2, null, null, null, null, null, 2018-02-01, null, null, null, null, null, null, 1, null, A, 0, null, A1, 居民, null, null, null, 0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-02-01 13:07:09,045 DEBUG [java.sql.Connection] - <{conn-100201} Connection>
2018-02-01 13:07:09,046 DEBUG [java.sql.Connection] - <{conn-100201} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:07:09,046 DEBUG [java.sql.PreparedStatement] - <{pstm-100202} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:07:09,046 DEBUG [java.sql.PreparedStatement] - <{pstm-100202} Parameters: [2017, A]>
2018-02-01 13:07:09,046 DEBUG [java.sql.PreparedStatement] - <{pstm-100202} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:07:09,057 DEBUG [java.sql.ResultSet] - <{rset-100203} ResultSet>
2018-02-01 13:07:09,058 DEBUG [java.sql.Connection] - <{conn-100204} Connection>
2018-02-01 13:07:09,058 DEBUG [java.sql.Connection] - <{conn-100204} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:07:09,058 DEBUG [java.sql.PreparedStatement] - <{pstm-100205} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:07:09,058 DEBUG [java.sql.PreparedStatement] - <{pstm-100205} Parameters: [2017, A]>
2018-02-01 13:07:09,059 DEBUG [java.sql.PreparedStatement] - <{pstm-100205} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:07:09,063 DEBUG [java.sql.ResultSet] - <{rset-100206} ResultSet>
2018-02-01 13:07:09,063 DEBUG [java.sql.ResultSet] - <{rset-100206} Header: [count(*)]>
2018-02-01 13:07:09,064 DEBUG [java.sql.ResultSet] - <{rset-100206} Result: [0]>
2018-02-01 13:07:09,185 DEBUG [java.sql.Connection] - <{conn-100207} Connection>
2018-02-01 13:07:09,185 DEBUG [java.sql.Connection] - <{conn-100207} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:07:09,186 DEBUG [java.sql.PreparedStatement] - <{pstm-100208} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:07:09,186 DEBUG [java.sql.PreparedStatement] - <{pstm-100208} Parameters: [2017, A]>
2018-02-01 13:07:09,186 DEBUG [java.sql.PreparedStatement] - <{pstm-100208} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:07:09,192 DEBUG [java.sql.ResultSet] - <{rset-100209} ResultSet>
2018-02-01 13:07:09,192 DEBUG [java.sql.ResultSet] - <{rset-100209} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 13:07:09,192 DEBUG [java.sql.ResultSet] - <{rset-100209} Result: [共0, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-02-01 13:07:13,038 DEBUG [java.sql.Connection] - <{conn-100210} Connection>
2018-02-01 13:07:13,038 DEBUG [java.sql.Connection] - <{conn-100210} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:07:13,039 DEBUG [java.sql.PreparedStatement] - <{pstm-100211} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:07:13,039 DEBUG [java.sql.PreparedStatement] - <{pstm-100211} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 13:07:13,039 DEBUG [java.sql.PreparedStatement] - <{pstm-100211} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 13:16:49,996 DEBUG [java.sql.Connection] - <{conn-100212} Connection>
2018-02-01 13:16:49,996 DEBUG [java.sql.Connection] - <{conn-100212} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:16:49,996 DEBUG [java.sql.PreparedStatement] - <{pstm-100213} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:16:49,996 DEBUG [java.sql.PreparedStatement] - <{pstm-100213} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 13:16:49,996 DEBUG [java.sql.PreparedStatement] - <{pstm-100213} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 13:20:39,947 DEBUG [java.sql.Connection] - <{conn-100214} Connection>
2018-02-01 13:20:39,947 DEBUG [java.sql.Connection] - <{conn-100214} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:20:39,948 DEBUG [java.sql.PreparedStatement] - <{pstm-100215} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:20:39,948 DEBUG [java.sql.PreparedStatement] - <{pstm-100215} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 13:20:39,948 DEBUG [java.sql.PreparedStatement] - <{pstm-100215} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 13:24:43,124 DEBUG [java.sql.Connection] - <{conn-100216} Connection>
2018-02-01 13:24:43,124 DEBUG [java.sql.Connection] - <{conn-100216} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:24:43,124 DEBUG [java.sql.PreparedStatement] - <{pstm-100217} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:24:43,124 DEBUG [java.sql.PreparedStatement] - <{pstm-100217} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 13:24:43,124 DEBUG [java.sql.PreparedStatement] - <{pstm-100217} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 13:25:05,635 DEBUG [java.sql.Connection] - <{conn-100218} Connection>
2018-02-01 13:25:05,635 DEBUG [java.sql.Connection] - <{conn-100218} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:25:05,636 DEBUG [java.sql.PreparedStatement] - <{pstm-100219} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:25:05,636 DEBUG [java.sql.PreparedStatement] - <{pstm-100219} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 13:25:05,636 DEBUG [java.sql.PreparedStatement] - <{pstm-100219} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 13:26:31,142 DEBUG [java.sql.Connection] - <{conn-100220} Connection>
2018-02-01 13:26:31,143 DEBUG [java.sql.Connection] - <{conn-100220} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:26:31,143 DEBUG [java.sql.PreparedStatement] - <{pstm-100221} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:26:31,143 DEBUG [java.sql.PreparedStatement] - <{pstm-100221} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 13:26:31,143 DEBUG [java.sql.PreparedStatement] - <{pstm-100221} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 13:27:00,045 DEBUG [java.sql.Connection] - <{conn-100222} Connection>
2018-02-01 13:27:00,045 DEBUG [java.sql.Connection] - <{conn-100222} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:27:00,045 DEBUG [java.sql.PreparedStatement] - <{pstm-100223} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:27:00,046 DEBUG [java.sql.PreparedStatement] - <{pstm-100223} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 13:27:00,046 DEBUG [java.sql.PreparedStatement] - <{pstm-100223} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 13:27:18,950 DEBUG [java.sql.Connection] - <{conn-100224} Connection>
2018-02-01 13:27:18,951 DEBUG [java.sql.Connection] - <{conn-100224} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:27:18,951 DEBUG [java.sql.PreparedStatement] - <{pstm-100225} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:27:18,951 DEBUG [java.sql.PreparedStatement] - <{pstm-100225} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 13:27:18,951 DEBUG [java.sql.PreparedStatement] - <{pstm-100225} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 13:27:19,103 DEBUG [java.sql.Connection] - <{conn-100226} Connection>
2018-02-01 13:27:19,104 DEBUG [java.sql.Connection] - <{conn-100226} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:27:19,104 DEBUG [java.sql.PreparedStatement] - <{pstm-100227} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:27:19,104 DEBUG [java.sql.PreparedStatement] - <{pstm-100227} Parameters: [2017, A]>
2018-02-01 13:27:19,104 DEBUG [java.sql.PreparedStatement] - <{pstm-100227} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:27:19,111 DEBUG [java.sql.ResultSet] - <{rset-100228} ResultSet>
2018-02-01 13:27:19,111 DEBUG [java.sql.ResultSet] - <{rset-100228} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 13:27:19,112 DEBUG [java.sql.ResultSet] - <{rset-100228} Result: [null, 供热费, 2017, 0001-008-02-04-04, A, 0, 01, 0001, 0001-008, 测试2, 0, 0, 0, 0, 0, null, A1, 16, null, null, 0, 2017-11-01, 2018-03-31, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103091, 1]>
2018-02-01 13:27:19,112 DEBUG [java.sql.Connection] - <{conn-100229} Connection>
2018-02-01 13:27:19,112 DEBUG [java.sql.Connection] - <{conn-100229} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:27:19,112 DEBUG [java.sql.PreparedStatement] - <{pstm-100230} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:27:19,112 DEBUG [java.sql.PreparedStatement] - <{pstm-100230} Parameters: [2017, A]>
2018-02-01 13:27:19,112 DEBUG [java.sql.PreparedStatement] - <{pstm-100230} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:27:19,116 DEBUG [java.sql.ResultSet] - <{rset-100231} ResultSet>
2018-02-01 13:27:19,117 DEBUG [java.sql.ResultSet] - <{rset-100231} Header: [count(*)]>
2018-02-01 13:27:19,117 DEBUG [java.sql.ResultSet] - <{rset-100231} Result: [1]>
2018-02-01 13:27:19,237 DEBUG [java.sql.Connection] - <{conn-100232} Connection>
2018-02-01 13:27:19,237 DEBUG [java.sql.Connection] - <{conn-100232} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:27:19,238 DEBUG [java.sql.PreparedStatement] - <{pstm-100233} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:27:19,238 DEBUG [java.sql.PreparedStatement] - <{pstm-100233} Parameters: [2017, A]>
2018-02-01 13:27:19,238 DEBUG [java.sql.PreparedStatement] - <{pstm-100233} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:27:19,243 DEBUG [java.sql.ResultSet] - <{rset-100234} ResultSet>
2018-02-01 13:27:19,243 DEBUG [java.sql.ResultSet] - <{rset-100234} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 13:27:19,243 DEBUG [java.sql.ResultSet] - <{rset-100234} Result: [共1, 0, 0, 0, 0, 0, null, null, 0, 0, 0, 0, 0, 0]>
2018-02-01 13:27:26,696 DEBUG [java.sql.Connection] - <{conn-100235} Connection>
2018-02-01 13:27:26,699 DEBUG [java.sql.Connection] - <{conn-100235} Preparing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-02-01 13:27:26,699 DEBUG [java.sql.PreparedStatement] - <{pstm-100236} Executing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-02-01 13:27:26,700 DEBUG [java.sql.PreparedStatement] - <{pstm-100236} Parameters: [0001-008-02-04-04, 0001-008-02-04-04, 0001-008-02-04-04, 0001-008-02-04-04, 0001-008-02-04-04, 0001-008-02-04-04]>
2018-02-01 13:27:26,700 DEBUG [java.sql.PreparedStatement] - <{pstm-100236} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 13:27:26,703 DEBUG [java.sql.ResultSet] - <{rset-100237} ResultSet>
2018-02-01 13:27:26,704 DEBUG [java.sql.ResultSet] - <{rset-100237} Header: [h_cell_code, h_floor, h_door_code, h_house_code, h_card_id, h_cluster_code, h_contact_man, h_house_manager_name, h_house_manager, h_owner_name, h_address, h_intoweb_date, h_telephone, h_stat_name, h_stat_id, h_enter_date, h_work_unit, h_apart_status, h_user_kind, h_heat_status, h_intoweb_area, h_mobilephone, h_area_count, h_intoweb_year, h_item_code, h_area_id, h_use_type, h_standard_id, h_standard_name, h_build_area, h_floor_height, h_super_area, h_charge_area, h_item_code1, h_area_id1, h_use_type1, h_standard_id1, h_standard_name1, h_build_area1, h_floor_height1, h_super_area1, h_charge_area1, h_item_code2, h_area_id2, h_use_type2, h_standard_id2, h_standard_name2, h_build_area2, h_floor_height2, h_super_area2, h_charge_area2, h_item_code3, h_area_id3, h_use_type3, h_standard_id3, h_standard_name3, h_build_area3, h_floor_height3, h_super_area3, h_charge_area3, h_item_code4, h_area_id4, h_use_type4, h_standard_id4, h_standard_name4, h_build_area4, h_floor_height4, h_super_area4, h_charge_area4, h_remark]>
2018-02-01 13:27:26,704 DEBUG [java.sql.ResultSet] - <{rset-100237} Result: [02, 04, 04, 0001-008-02-04-04, null, null, null, null, null, 测试2, null, null, null, null, null, 2018-02-01, null, null, null, null, null, null, 1, null, A, 0, null, A1, 居民, null, null, null, 0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-02-01 13:27:36,707 DEBUG [java.sql.Connection] - <{conn-100238} Connection>
2018-02-01 13:27:36,708 DEBUG [java.sql.Connection] - <{conn-100238} Preparing Statement:    update fc_house set       card_id=?,   cluster_code=?,   house_manager=?,   address=?,   intoweb_date=?,   intoweb_area=?,   stat_id=?,   apart_status=?,   user_kind=?,   heat_status=?,   operator=?,   operate_date=to_char(sysdate,'YYYY-MM-DD HH24:MI:SS'),   remark=?   where house_code=?  >
2018-02-01 13:27:36,709 DEBUG [java.sql.PreparedStatement] - <{pstm-100239} Executing Statement:    update fc_house set       card_id=?,   cluster_code=?,   house_manager=?,   address=?,   intoweb_date=?,   intoweb_area=?,   stat_id=?,   apart_status=?,   user_kind=?,   heat_status=?,   operator=?,   operate_date=to_char(sysdate,'YYYY-MM-DD HH24:MI:SS'),   remark=?   where house_code=?  >
2018-02-01 13:27:36,709 DEBUG [java.sql.PreparedStatement] - <{pstm-100239} Parameters: [, , , , , , , , , , 100043, , 0001-008-02-04-04]>
2018-02-01 13:27:36,709 DEBUG [java.sql.PreparedStatement] - <{pstm-100239} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 13:27:36,710 DEBUG [java.sql.Connection] - <{conn-100240} Connection>
2018-02-01 13:27:36,711 DEBUG [java.sql.Connection] - <{conn-100240} Preparing Statement:    update fc_owner set   contact_man=?,   owner_name=?,   telephone=?,   mobilephone=?,   enter_date=?,   work_unit=?,   operator=?,   operate_date=to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')   where house_code=?  >
2018-02-01 13:27:36,711 DEBUG [java.sql.PreparedStatement] - <{pstm-100241} Executing Statement:    update fc_owner set   contact_man=?,   owner_name=?,   telephone=?,   mobilephone=?,   enter_date=?,   work_unit=?,   operator=?,   operate_date=to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')   where house_code=?  >
2018-02-01 13:27:36,711 DEBUG [java.sql.PreparedStatement] - <{pstm-100241} Parameters: [, 测试2, , , 2018-02-01, , 100043, 0001-008-02-04-04]>
2018-02-01 13:27:36,711 DEBUG [java.sql.PreparedStatement] - <{pstm-100241} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 13:27:36,715 DEBUG [java.sql.Connection] - <{conn-100242} Connection>
2018-02-01 13:27:36,715 DEBUG [java.sql.Connection] - <{conn-100242} Preparing Statement:    SELECT count(*) as count   FROM   fc_area  where house_code=?   and area_id='0'  >
2018-02-01 13:27:36,715 DEBUG [java.sql.PreparedStatement] - <{pstm-100243} Executing Statement:    SELECT count(*) as count   FROM   fc_area  where house_code=?   and area_id='0'  >
2018-02-01 13:27:36,715 DEBUG [java.sql.PreparedStatement] - <{pstm-100243} Parameters: [0001-008-02-04-04]>
2018-02-01 13:27:36,715 DEBUG [java.sql.PreparedStatement] - <{pstm-100243} Types: [java.lang.String]>
2018-02-01 13:27:36,717 DEBUG [java.sql.ResultSet] - <{rset-100244} ResultSet>
2018-02-01 13:27:36,717 DEBUG [java.sql.ResultSet] - <{rset-100244} Header: [count]>
2018-02-01 13:27:36,717 DEBUG [java.sql.ResultSet] - <{rset-100244} Result: [1]>
2018-02-01 13:27:36,717 DEBUG [java.sql.Connection] - <{conn-100245} Connection>
2018-02-01 13:27:36,717 DEBUG [java.sql.Connection] - <{conn-100245} Preparing Statement:    update fc_area set   use_type=?,   standard_id=?,   build_area=?,   floor_height=?,   super_area=?,   charge_area=?,   operator=?,   operate_date=to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')   where house_code=? and area_id=?  >
2018-02-01 13:27:36,717 DEBUG [java.sql.PreparedStatement] - <{pstm-100246} Executing Statement:    update fc_area set   use_type=?,   standard_id=?,   build_area=?,   floor_height=?,   super_area=?,   charge_area=?,   operator=?,   operate_date=to_char(sysdate,'YYYY-MM-DD HH24:MI:SS')   where house_code=? and area_id=?  >
2018-02-01 13:27:36,718 DEBUG [java.sql.PreparedStatement] - <{pstm-100246} Parameters: [, A1, , , , 23.78, 100043, 0001-008-02-04-04, 0]>
2018-02-01 13:27:36,718 DEBUG [java.sql.PreparedStatement] - <{pstm-100246} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 13:27:36,805 DEBUG [java.sql.Connection] - <{conn-100247} Connection>
2018-02-01 13:27:36,805 DEBUG [java.sql.Connection] - <{conn-100247} Preparing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0001-008'   order by a.house_code  >
2018-02-01 13:27:36,806 DEBUG [java.sql.PreparedStatement] - <{pstm-100248} Executing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0001-008'   order by a.house_code  >
2018-02-01 13:27:36,806 DEBUG [java.sql.PreparedStatement] - <{pstm-100248} Parameters: []>
2018-02-01 13:27:36,806 DEBUG [java.sql.PreparedStatement] - <{pstm-100248} Types: []>
2018-02-01 13:27:36,808 DEBUG [java.sql.ResultSet] - <{rset-100249} ResultSet>
2018-02-01 13:27:36,808 DEBUG [java.sql.ResultSet] - <{rset-100249} Header: [id, text, child_count]>
2018-02-01 13:27:36,808 DEBUG [java.sql.ResultSet] - <{rset-100249} Result: [0001-008-01-01-01, 01-01-01 王建方, 0]>
2018-02-01 13:27:36,808 DEBUG [java.sql.ResultSet] - <{rset-100249} Result: [0001-008-01-01-02, 01-01-02 宋忠义, 0]>
2018-02-01 13:27:36,809 DEBUG [java.sql.ResultSet] - <{rset-100249} Result: [0001-008-01-02-01, 01-02-01 李爱书, 0]>
2018-02-01 13:27:36,809 DEBUG [java.sql.ResultSet] - <{rset-100249} Result: [0001-008-01-02-02, 01-02-02 申刚义, 0]>
2018-02-01 13:27:36,809 DEBUG [java.sql.ResultSet] - <{rset-100249} Result: [0001-008-01-03-01, 01-03-01 李琳, 0]>
2018-02-01 13:27:36,809 DEBUG [java.sql.ResultSet] - <{rset-100249} Result: [0001-008-01-03-02, 01-03-02 李根才, 0]>
2018-02-01 13:27:36,809 DEBUG [java.sql.ResultSet] - <{rset-100249} Result: [0001-008-01-04-01, 01-04-01 李保青, 0]>
2018-02-01 13:27:36,809 DEBUG [java.sql.ResultSet] - <{rset-100249} Result: [0001-008-01-04-02, 01-04-02 王慧玲, 0]>
2018-02-01 13:27:36,809 DEBUG [java.sql.ResultSet] - <{rset-100249} Result: [0001-008-02-01-01, 02-01-01 马爱英, 0]>
2018-02-01 13:27:36,810 DEBUG [java.sql.ResultSet] - <{rset-100249} Result: [0001-008-02-01-02, 02-01-02 王丽娟, 0]>
2018-02-01 13:27:36,810 DEBUG [java.sql.ResultSet] - <{rset-100249} Result: [0001-008-02-02-01, 02-02-01 刘红亮, 0]>
2018-02-01 13:27:36,810 DEBUG [java.sql.ResultSet] - <{rset-100249} Result: [0001-008-02-02-02, 02-02-02 孔文建, 0]>
2018-02-01 13:27:36,810 DEBUG [java.sql.ResultSet] - <{rset-100249} Result: [0001-008-02-03-01, 02-03-01 张小红, 0]>
2018-02-01 13:27:36,810 DEBUG [java.sql.ResultSet] - <{rset-100249} Result: [0001-008-02-03-02, 02-03-02 曹恒文, 0]>
2018-02-01 13:27:36,810 DEBUG [java.sql.ResultSet] - <{rset-100249} Result: [0001-008-02-04-01, 02-04-01 郭建中, 0]>
2018-02-01 13:27:36,810 DEBUG [java.sql.ResultSet] - <{rset-100249} Result: [0001-008-02-04-02, 02-04-02 杨书贤, 0]>
2018-02-01 13:27:36,810 DEBUG [java.sql.ResultSet] - <{rset-100249} Result: [0001-008-02-04-03, 02-04-03 测试, 0]>
2018-02-01 13:27:36,810 DEBUG [java.sql.ResultSet] - <{rset-100249} Result: [0001-008-02-04-04, 02-04-04 测试2, 0]>
2018-02-01 13:27:37,099 DEBUG [java.sql.Connection] - <{conn-100250} Connection>
2018-02-01 13:27:37,100 DEBUG [java.sql.Connection] - <{conn-100250} Preparing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-02-01 13:27:37,101 DEBUG [java.sql.PreparedStatement] - <{pstm-100251} Executing Statement:      SELECT a.cell_code h_cell_code,a.floor h_floor,a.door_code h_door_code,   a.house_code h_house_code,card_id h_card_id,cluster_code h_cluster_code,contact_man h_contact_man,   house_manager_name h_house_manager_name,   house_manager h_house_manager,owner_name h_owner_name,   address h_address,intoweb_date h_intoweb_date,telephone h_telephone,stat_name h_stat_name,   stat_id h_stat_id,enter_date h_enter_date,work_unit h_work_unit,apart_status h_apart_status,   user_kind h_user_kind,heat_status h_heat_status,    intoweb_area h_intoweb_area,   mobilephone h_mobilephone,   area_count h_area_count,   intoweb_year h_intoweb_year,                       b.item_code h_item_code,   b.area_id h_area_id,   b.use_type h_use_type,   b.standard_id h_standard_id,   (select standard_name from sf_standard where standard_id=b.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name,   b.build_area h_build_area,   b.floor_height h_floor_height,   b.super_area h_super_area,   b.charge_area h_charge_area,                       c.item_code h_item_code1,   c.area_id h_area_id1,   c.use_type h_use_type1,   c.standard_id h_standard_id1,   (select standard_name from sf_standard where standard_id=c.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name1,   c.build_area h_build_area1,   c.floor_height h_floor_height1,   c.super_area h_super_area1,   c.charge_area h_charge_area1,                       d.item_code h_item_code2,   d.area_id h_area_id2,   d.use_type h_use_type2,   d.standard_id h_standard_id2,   (select standard_name from sf_standard where standard_id=d.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name2,   d.build_area h_build_area2,   d.floor_height h_floor_height2,   d.super_area h_super_area2,   d.charge_area h_charge_area2,      e.item_code h_item_code3,   e.area_id h_area_id3,   e.use_type h_use_type3,   e.standard_id h_standard_id3,   (select standard_name from sf_standard where standard_id=e.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name3,   e.build_area h_build_area3,   e.floor_height h_floor_height3,   e.super_area h_super_area3,   e.charge_area h_charge_area3,      f.item_code h_item_code4,   f.area_id h_area_id4,   f.use_type h_use_type4,   f.standard_id h_standard_id4,   (select standard_name from sf_standard where standard_id=f.standard_id  and standyear=(select current_year from sf_item where item_code='A')) h_standard_name4,   f.build_area h_build_area4,   f.floor_height h_floor_height4,   f.super_area h_super_area4,   f.charge_area h_charge_area4,      a.REMARK h_remark   FROM   v_house a,                 (select * from fc_area where house_code=? and area_id=0) b,                 (select * from fc_area where house_code=? and area_id=1) c,                 (select * from fc_area where house_code=? and area_id=2) d,                 (select * from fc_area where house_code=? and area_id=3) e,                 (select * from fc_area where house_code=? and area_id=4) f                 where                  a.house_code=? and                  a.house_code=b.house_code(+) and                  a.house_code=c.house_code(+) and                 a.house_code=d.house_code(+) and                 a.house_code=e.house_code(+) and                 a.house_code=f.house_code(+)       >
2018-02-01 13:27:37,101 DEBUG [java.sql.PreparedStatement] - <{pstm-100251} Parameters: [0001-008-02-04-04, 0001-008-02-04-04, 0001-008-02-04-04, 0001-008-02-04-04, 0001-008-02-04-04, 0001-008-02-04-04]>
2018-02-01 13:27:37,101 DEBUG [java.sql.PreparedStatement] - <{pstm-100251} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 13:27:37,104 DEBUG [java.sql.ResultSet] - <{rset-100252} ResultSet>
2018-02-01 13:27:37,104 DEBUG [java.sql.ResultSet] - <{rset-100252} Header: [h_cell_code, h_floor, h_door_code, h_house_code, h_card_id, h_cluster_code, h_contact_man, h_house_manager_name, h_house_manager, h_owner_name, h_address, h_intoweb_date, h_telephone, h_stat_name, h_stat_id, h_enter_date, h_work_unit, h_apart_status, h_user_kind, h_heat_status, h_intoweb_area, h_mobilephone, h_area_count, h_intoweb_year, h_item_code, h_area_id, h_use_type, h_standard_id, h_standard_name, h_build_area, h_floor_height, h_super_area, h_charge_area, h_item_code1, h_area_id1, h_use_type1, h_standard_id1, h_standard_name1, h_build_area1, h_floor_height1, h_super_area1, h_charge_area1, h_item_code2, h_area_id2, h_use_type2, h_standard_id2, h_standard_name2, h_build_area2, h_floor_height2, h_super_area2, h_charge_area2, h_item_code3, h_area_id3, h_use_type3, h_standard_id3, h_standard_name3, h_build_area3, h_floor_height3, h_super_area3, h_charge_area3, h_item_code4, h_area_id4, h_use_type4, h_standard_id4, h_standard_name4, h_build_area4, h_floor_height4, h_super_area4, h_charge_area4, h_remark]>
2018-02-01 13:27:37,104 DEBUG [java.sql.ResultSet] - <{rset-100252} Result: [02, 04, 04, 0001-008-02-04-04, null, null, null, null, null, 测试2, null, null, null, null, null, 2018-02-01, null, null, null, null, null, null, 1, null, A, 0, null, A1, 居民, null, null, null, 23.78, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-02-01 13:27:42,589 DEBUG [java.sql.Connection] - <{conn-100253} Connection>
2018-02-01 13:27:42,589 DEBUG [java.sql.Connection] - <{conn-100253} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:27:42,589 DEBUG [java.sql.PreparedStatement] - <{pstm-100254} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:27:42,590 DEBUG [java.sql.PreparedStatement] - <{pstm-100254} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 13:27:42,590 DEBUG [java.sql.PreparedStatement] - <{pstm-100254} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 13:27:42,785 DEBUG [java.sql.Connection] - <{conn-100255} Connection>
2018-02-01 13:27:42,786 DEBUG [java.sql.Connection] - <{conn-100255} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:27:42,787 DEBUG [java.sql.PreparedStatement] - <{pstm-100256} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:27:42,787 DEBUG [java.sql.PreparedStatement] - <{pstm-100256} Parameters: [2017, A]>
2018-02-01 13:27:42,787 DEBUG [java.sql.PreparedStatement] - <{pstm-100256} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:27:42,794 DEBUG [java.sql.ResultSet] - <{rset-100257} ResultSet>
2018-02-01 13:27:42,794 DEBUG [java.sql.ResultSet] - <{rset-100257} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 13:27:42,795 DEBUG [java.sql.ResultSet] - <{rset-100257} Result: [null, 供热费, 2017, 0001-008-02-04-04, A, 0, 01, 0001, 0001-008, 测试2, 380.48, 0, 0, 380.48, 0, null, A1, 16, null, null, 23.78, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-02-01, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103091, 1]>
2018-02-01 13:27:42,795 DEBUG [java.sql.Connection] - <{conn-100258} Connection>
2018-02-01 13:27:42,795 DEBUG [java.sql.Connection] - <{conn-100258} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:27:42,795 DEBUG [java.sql.PreparedStatement] - <{pstm-100259} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:27:42,796 DEBUG [java.sql.PreparedStatement] - <{pstm-100259} Parameters: [2017, A]>
2018-02-01 13:27:42,796 DEBUG [java.sql.PreparedStatement] - <{pstm-100259} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:27:42,799 DEBUG [java.sql.ResultSet] - <{rset-100260} ResultSet>
2018-02-01 13:27:42,799 DEBUG [java.sql.ResultSet] - <{rset-100260} Header: [count(*)]>
2018-02-01 13:27:42,799 DEBUG [java.sql.ResultSet] - <{rset-100260} Result: [1]>
2018-02-01 13:27:42,906 DEBUG [java.sql.Connection] - <{conn-100261} Connection>
2018-02-01 13:27:42,907 DEBUG [java.sql.Connection] - <{conn-100261} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:27:42,911 DEBUG [java.sql.PreparedStatement] - <{pstm-100262} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:27:42,911 DEBUG [java.sql.PreparedStatement] - <{pstm-100262} Parameters: [2017, A]>
2018-02-01 13:27:42,911 DEBUG [java.sql.PreparedStatement] - <{pstm-100262} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:27:42,916 DEBUG [java.sql.ResultSet] - <{rset-100263} ResultSet>
2018-02-01 13:27:42,916 DEBUG [java.sql.ResultSet] - <{rset-100263} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 13:27:42,916 DEBUG [java.sql.ResultSet] - <{rset-100263} Result: [共1, 380.48, 0, 0, 380.48, 0, null, null, 23.78, null, 0, 0, 0, 0]>
2018-02-01 13:29:45,840 DEBUG [java.sql.Connection] - <{conn-100264} Connection>
2018-02-01 13:29:45,841 DEBUG [java.sql.Connection] - <{conn-100264} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:29:45,841 DEBUG [java.sql.PreparedStatement] - <{pstm-100265} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:29:45,841 DEBUG [java.sql.PreparedStatement] - <{pstm-100265} Parameters: [2017, A]>
2018-02-01 13:29:45,841 DEBUG [java.sql.PreparedStatement] - <{pstm-100265} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:29:45,848 DEBUG [java.sql.ResultSet] - <{rset-100266} ResultSet>
2018-02-01 13:29:45,849 DEBUG [java.sql.ResultSet] - <{rset-100266} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 13:29:45,849 DEBUG [java.sql.ResultSet] - <{rset-100266} Result: [null, 供热费, 2017, 0001-008-02-04-04, A, 0, 01, 0001, 0001-008, 测试2, 380.48, 0, 0, 380.48, 0, null, A1, 16, null, null, 23.78, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-02-01, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103091, 1]>
2018-02-01 13:29:45,849 DEBUG [java.sql.Connection] - <{conn-100267} Connection>
2018-02-01 13:29:45,850 DEBUG [java.sql.Connection] - <{conn-100267} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:29:45,850 DEBUG [java.sql.PreparedStatement] - <{pstm-100268} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:29:45,850 DEBUG [java.sql.PreparedStatement] - <{pstm-100268} Parameters: [2017, A]>
2018-02-01 13:29:45,850 DEBUG [java.sql.PreparedStatement] - <{pstm-100268} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:29:45,853 DEBUG [java.sql.ResultSet] - <{rset-100269} ResultSet>
2018-02-01 13:29:45,854 DEBUG [java.sql.ResultSet] - <{rset-100269} Header: [count(*)]>
2018-02-01 13:29:45,854 DEBUG [java.sql.ResultSet] - <{rset-100269} Result: [1]>
2018-02-01 13:29:45,975 DEBUG [java.sql.Connection] - <{conn-100270} Connection>
2018-02-01 13:29:45,975 DEBUG [java.sql.Connection] - <{conn-100270} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:29:45,976 DEBUG [java.sql.PreparedStatement] - <{pstm-100271} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:29:45,976 DEBUG [java.sql.PreparedStatement] - <{pstm-100271} Parameters: [2017, A]>
2018-02-01 13:29:45,976 DEBUG [java.sql.PreparedStatement] - <{pstm-100271} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:29:45,980 DEBUG [java.sql.ResultSet] - <{rset-100272} ResultSet>
2018-02-01 13:29:45,980 DEBUG [java.sql.ResultSet] - <{rset-100272} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 13:29:45,981 DEBUG [java.sql.ResultSet] - <{rset-100272} Result: [共1, 380.48, 0, 0, 380.48, 0, null, null, 23.78, null, 0, 0, 0, 0]>
2018-02-01 13:29:51,872 DEBUG [java.sql.Connection] - <{conn-100273} Connection>
2018-02-01 13:29:51,872 DEBUG [java.sql.Connection] - <{conn-100273} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:29:51,872 DEBUG [java.sql.PreparedStatement] - <{pstm-100274} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:29:51,872 DEBUG [java.sql.PreparedStatement] - <{pstm-100274} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 13:29:51,872 DEBUG [java.sql.PreparedStatement] - <{pstm-100274} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 13:29:52,021 DEBUG [java.sql.Connection] - <{conn-100275} Connection>
2018-02-01 13:29:52,022 DEBUG [java.sql.Connection] - <{conn-100275} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:29:52,022 DEBUG [java.sql.PreparedStatement] - <{pstm-100276} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:29:52,022 DEBUG [java.sql.PreparedStatement] - <{pstm-100276} Parameters: [2017, A]>
2018-02-01 13:29:52,022 DEBUG [java.sql.PreparedStatement] - <{pstm-100276} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:29:52,028 DEBUG [java.sql.ResultSet] - <{rset-100277} ResultSet>
2018-02-01 13:29:52,028 DEBUG [java.sql.ResultSet] - <{rset-100277} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 13:29:52,028 DEBUG [java.sql.ResultSet] - <{rset-100277} Result: [null, 供热费, 2017, 0001-008-02-04-04, A, 0, 01, 0001, 0001-008, 测试2, 380.48, 0, 0, 380.48, 0, null, A1, 16, null, null, 23.78, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-02-01, 142, 0, 142, 0, 142, 0, 0, 0, 0, 0, 0, 0, 0, 103091, 1]>
2018-02-01 13:29:52,029 DEBUG [java.sql.Connection] - <{conn-100278} Connection>
2018-02-01 13:29:52,029 DEBUG [java.sql.Connection] - <{conn-100278} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:29:52,029 DEBUG [java.sql.PreparedStatement] - <{pstm-100279} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:29:52,030 DEBUG [java.sql.PreparedStatement] - <{pstm-100279} Parameters: [2017, A]>
2018-02-01 13:29:52,030 DEBUG [java.sql.PreparedStatement] - <{pstm-100279} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:29:52,033 DEBUG [java.sql.ResultSet] - <{rset-100280} ResultSet>
2018-02-01 13:29:52,033 DEBUG [java.sql.ResultSet] - <{rset-100280} Header: [count(*)]>
2018-02-01 13:29:52,033 DEBUG [java.sql.ResultSet] - <{rset-100280} Result: [1]>
2018-02-01 13:29:52,097 DEBUG [java.sql.Connection] - <{conn-100281} Connection>
2018-02-01 13:29:52,098 DEBUG [java.sql.Connection] - <{conn-100281} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:29:52,098 DEBUG [java.sql.PreparedStatement] - <{pstm-100282} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:29:52,098 DEBUG [java.sql.PreparedStatement] - <{pstm-100282} Parameters: [2017, A]>
2018-02-01 13:29:52,098 DEBUG [java.sql.PreparedStatement] - <{pstm-100282} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:29:52,102 DEBUG [java.sql.ResultSet] - <{rset-100283} ResultSet>
2018-02-01 13:29:52,103 DEBUG [java.sql.ResultSet] - <{rset-100283} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 13:29:52,103 DEBUG [java.sql.ResultSet] - <{rset-100283} Result: [共1, 380.48, 0, 0, 380.48, 0, null, null, 23.78, 142, 0, 142, 0, 142]>
2018-02-01 13:30:00,431 DEBUG [java.sql.Connection] - <{conn-100284} Connection>
2018-02-01 13:30:00,432 DEBUG [java.sql.Connection] - <{conn-100284} Preparing Statement:         DELETE FROM sf_charge        WHERE                        p_id in (103091)        AND       now_cash = 0             >
2018-02-01 13:30:00,432 DEBUG [java.sql.PreparedStatement] - <{pstm-100285} Executing Statement:         DELETE FROM sf_charge        WHERE                        p_id in (103091)        AND       now_cash = 0             >
2018-02-01 13:30:00,433 DEBUG [java.sql.PreparedStatement] - <{pstm-100285} Parameters: []>
2018-02-01 13:30:00,433 DEBUG [java.sql.PreparedStatement] - <{pstm-100285} Types: []>
2018-02-01 13:30:00,536 DEBUG [java.sql.Connection] - <{conn-100286} Connection>
2018-02-01 13:30:00,538 DEBUG [java.sql.Connection] - <{conn-100286} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:30:00,538 DEBUG [java.sql.PreparedStatement] - <{pstm-100287} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:30:00,538 DEBUG [java.sql.PreparedStatement] - <{pstm-100287} Parameters: [2017, A]>
2018-02-01 13:30:00,539 DEBUG [java.sql.PreparedStatement] - <{pstm-100287} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:30:00,544 DEBUG [java.sql.ResultSet] - <{rset-100288} ResultSet>
2018-02-01 13:30:00,544 DEBUG [java.sql.Connection] - <{conn-100289} Connection>
2018-02-01 13:30:00,545 DEBUG [java.sql.Connection] - <{conn-100289} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:30:00,545 DEBUG [java.sql.PreparedStatement] - <{pstm-100290} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:30:00,545 DEBUG [java.sql.PreparedStatement] - <{pstm-100290} Parameters: [2017, A]>
2018-02-01 13:30:00,545 DEBUG [java.sql.PreparedStatement] - <{pstm-100290} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:30:00,548 DEBUG [java.sql.ResultSet] - <{rset-100291} ResultSet>
2018-02-01 13:30:00,548 DEBUG [java.sql.ResultSet] - <{rset-100291} Header: [count(*)]>
2018-02-01 13:30:00,549 DEBUG [java.sql.ResultSet] - <{rset-100291} Result: [0]>
2018-02-01 13:30:00,673 DEBUG [java.sql.Connection] - <{conn-100292} Connection>
2018-02-01 13:30:00,673 DEBUG [java.sql.Connection] - <{conn-100292} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:30:00,673 DEBUG [java.sql.PreparedStatement] - <{pstm-100293} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:30:00,673 DEBUG [java.sql.PreparedStatement] - <{pstm-100293} Parameters: [2017, A]>
2018-02-01 13:30:00,674 DEBUG [java.sql.PreparedStatement] - <{pstm-100293} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:30:00,677 DEBUG [java.sql.ResultSet] - <{rset-100294} ResultSet>
2018-02-01 13:30:00,677 DEBUG [java.sql.ResultSet] - <{rset-100294} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 13:30:00,677 DEBUG [java.sql.ResultSet] - <{rset-100294} Result: [共0, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-02-01 13:30:03,699 DEBUG [java.sql.Connection] - <{conn-100295} Connection>
2018-02-01 13:30:03,699 DEBUG [java.sql.Connection] - <{conn-100295} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:30:03,700 DEBUG [java.sql.PreparedStatement] - <{pstm-100296} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:30:03,700 DEBUG [java.sql.PreparedStatement] - <{pstm-100296} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 13:30:03,700 DEBUG [java.sql.PreparedStatement] - <{pstm-100296} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 13:30:03,851 DEBUG [java.sql.Connection] - <{conn-100297} Connection>
2018-02-01 13:30:03,852 DEBUG [java.sql.Connection] - <{conn-100297} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:30:03,852 DEBUG [java.sql.PreparedStatement] - <{pstm-100298} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:30:03,852 DEBUG [java.sql.PreparedStatement] - <{pstm-100298} Parameters: [2017, A]>
2018-02-01 13:30:03,853 DEBUG [java.sql.PreparedStatement] - <{pstm-100298} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:30:03,859 DEBUG [java.sql.ResultSet] - <{rset-100299} ResultSet>
2018-02-01 13:30:03,860 DEBUG [java.sql.ResultSet] - <{rset-100299} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 13:30:03,860 DEBUG [java.sql.ResultSet] - <{rset-100299} Result: [null, 供热费, 2017, 0001-008-02-04-04, A, 0, 01, 0001, 0001-008, 测试2, 380.48, 0, 0, 380.48, 0, null, A1, 16, null, null, 23.78, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-02-01, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103092, 1]>
2018-02-01 13:30:03,860 DEBUG [java.sql.Connection] - <{conn-100300} Connection>
2018-02-01 13:30:03,861 DEBUG [java.sql.Connection] - <{conn-100300} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:30:03,861 DEBUG [java.sql.PreparedStatement] - <{pstm-100301} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:30:03,861 DEBUG [java.sql.PreparedStatement] - <{pstm-100301} Parameters: [2017, A]>
2018-02-01 13:30:03,861 DEBUG [java.sql.PreparedStatement] - <{pstm-100301} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:30:03,865 DEBUG [java.sql.ResultSet] - <{rset-100302} ResultSet>
2018-02-01 13:30:03,865 DEBUG [java.sql.ResultSet] - <{rset-100302} Header: [count(*)]>
2018-02-01 13:30:03,865 DEBUG [java.sql.ResultSet] - <{rset-100302} Result: [1]>
2018-02-01 13:30:03,979 DEBUG [java.sql.Connection] - <{conn-100303} Connection>
2018-02-01 13:30:03,979 DEBUG [java.sql.Connection] - <{conn-100303} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:30:03,980 DEBUG [java.sql.PreparedStatement] - <{pstm-100304} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:30:03,980 DEBUG [java.sql.PreparedStatement] - <{pstm-100304} Parameters: [2017, A]>
2018-02-01 13:30:03,980 DEBUG [java.sql.PreparedStatement] - <{pstm-100304} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:30:03,983 DEBUG [java.sql.ResultSet] - <{rset-100305} ResultSet>
2018-02-01 13:30:03,983 DEBUG [java.sql.ResultSet] - <{rset-100305} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 13:30:03,984 DEBUG [java.sql.ResultSet] - <{rset-100305} Result: [共1, 380.48, 0, 0, 380.48, 0, null, null, 23.78, null, 0, 0, 0, 0]>
2018-02-01 13:30:09,237 DEBUG [java.sql.Connection] - <{conn-100306} Connection>
2018-02-01 13:30:09,238 DEBUG [java.sql.Connection] - <{conn-100306} Preparing Statement:         select count(*) cnt FROM sf_charge        WHERE                      (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))               AND       now_cash = 0             >
2018-02-01 13:30:09,239 DEBUG [java.sql.PreparedStatement] - <{pstm-100307} Executing Statement:         select count(*) cnt FROM sf_charge        WHERE                      (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))               AND       now_cash = 0             >
2018-02-01 13:30:09,239 DEBUG [java.sql.PreparedStatement] - <{pstm-100307} Parameters: []>
2018-02-01 13:30:09,239 DEBUG [java.sql.PreparedStatement] - <{pstm-100307} Types: []>
2018-02-01 13:30:09,243 DEBUG [java.sql.ResultSet] - <{rset-100308} ResultSet>
2018-02-01 13:30:09,244 DEBUG [java.sql.ResultSet] - <{rset-100308} Header: [cnt]>
2018-02-01 13:30:09,244 DEBUG [java.sql.ResultSet] - <{rset-100308} Result: [1]>
2018-02-01 13:30:10,389 DEBUG [java.sql.Connection] - <{conn-100309} Connection>
2018-02-01 13:30:10,390 DEBUG [java.sql.Connection] - <{conn-100309} Preparing Statement:         DELETE FROM sf_charge        WHERE                      (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))               AND       now_cash = 0             >
2018-02-01 13:30:10,391 DEBUG [java.sql.PreparedStatement] - <{pstm-100310} Executing Statement:         DELETE FROM sf_charge        WHERE                      (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))               AND       now_cash = 0             >
2018-02-01 13:30:10,391 DEBUG [java.sql.PreparedStatement] - <{pstm-100310} Parameters: []>
2018-02-01 13:30:10,391 DEBUG [java.sql.PreparedStatement] - <{pstm-100310} Types: []>
2018-02-01 13:30:10,489 DEBUG [java.sql.Connection] - <{conn-100311} Connection>
2018-02-01 13:30:10,489 DEBUG [java.sql.Connection] - <{conn-100311} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:30:10,490 DEBUG [java.sql.PreparedStatement] - <{pstm-100312} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:30:10,490 DEBUG [java.sql.PreparedStatement] - <{pstm-100312} Parameters: [2017, A]>
2018-02-01 13:30:10,490 DEBUG [java.sql.PreparedStatement] - <{pstm-100312} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:30:10,496 DEBUG [java.sql.ResultSet] - <{rset-100313} ResultSet>
2018-02-01 13:30:10,496 DEBUG [java.sql.Connection] - <{conn-100314} Connection>
2018-02-01 13:30:10,497 DEBUG [java.sql.Connection] - <{conn-100314} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:30:10,497 DEBUG [java.sql.PreparedStatement] - <{pstm-100315} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:30:10,497 DEBUG [java.sql.PreparedStatement] - <{pstm-100315} Parameters: [2017, A]>
2018-02-01 13:30:10,497 DEBUG [java.sql.PreparedStatement] - <{pstm-100315} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:30:10,501 DEBUG [java.sql.ResultSet] - <{rset-100316} ResultSet>
2018-02-01 13:30:10,501 DEBUG [java.sql.ResultSet] - <{rset-100316} Header: [count(*)]>
2018-02-01 13:30:10,501 DEBUG [java.sql.ResultSet] - <{rset-100316} Result: [0]>
2018-02-01 13:30:10,634 DEBUG [java.sql.Connection] - <{conn-100317} Connection>
2018-02-01 13:30:10,635 DEBUG [java.sql.Connection] - <{conn-100317} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:30:10,636 DEBUG [java.sql.PreparedStatement] - <{pstm-100318} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:30:10,636 DEBUG [java.sql.PreparedStatement] - <{pstm-100318} Parameters: [2017, A]>
2018-02-01 13:30:10,636 DEBUG [java.sql.PreparedStatement] - <{pstm-100318} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:30:10,639 DEBUG [java.sql.ResultSet] - <{rset-100319} ResultSet>
2018-02-01 13:30:10,640 DEBUG [java.sql.ResultSet] - <{rset-100319} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 13:30:10,640 DEBUG [java.sql.ResultSet] - <{rset-100319} Result: [共0, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-02-01 13:37:52,078 DEBUG [java.sql.Connection] - <{conn-100320} Connection>
2018-02-01 13:37:52,078 DEBUG [java.sql.Connection] - <{conn-100320} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:37:52,078 DEBUG [java.sql.PreparedStatement] - <{pstm-100321} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:37:52,078 DEBUG [java.sql.PreparedStatement] - <{pstm-100321} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 13:37:52,078 DEBUG [java.sql.PreparedStatement] - <{pstm-100321} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 13:37:52,189 DEBUG [java.sql.Connection] - <{conn-100322} Connection>
2018-02-01 13:37:52,190 DEBUG [java.sql.Connection] - <{conn-100322} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:37:52,192 DEBUG [java.sql.PreparedStatement] - <{pstm-100323} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:37:52,192 DEBUG [java.sql.PreparedStatement] - <{pstm-100323} Parameters: [2017, A]>
2018-02-01 13:37:52,192 DEBUG [java.sql.PreparedStatement] - <{pstm-100323} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:37:52,197 DEBUG [java.sql.ResultSet] - <{rset-100324} ResultSet>
2018-02-01 13:37:52,197 DEBUG [java.sql.ResultSet] - <{rset-100324} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 13:37:52,197 DEBUG [java.sql.ResultSet] - <{rset-100324} Result: [null, 供热费, 2017, 0001-008-02-04-04, A, 0, 01, 0001, 0001-008, 测试2, 380.48, 0, 0, 380.48, 0, null, A1, 16, null, null, 23.78, 2017-11-01, 2018-03-31, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103093, 1]>
2018-02-01 13:37:52,197 DEBUG [java.sql.Connection] - <{conn-100325} Connection>
2018-02-01 13:37:52,198 DEBUG [java.sql.Connection] - <{conn-100325} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:37:52,198 DEBUG [java.sql.PreparedStatement] - <{pstm-100326} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:37:52,198 DEBUG [java.sql.PreparedStatement] - <{pstm-100326} Parameters: [2017, A]>
2018-02-01 13:37:52,198 DEBUG [java.sql.PreparedStatement] - <{pstm-100326} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:37:52,201 DEBUG [java.sql.ResultSet] - <{rset-100327} ResultSet>
2018-02-01 13:37:52,201 DEBUG [java.sql.ResultSet] - <{rset-100327} Header: [count(*)]>
2018-02-01 13:37:52,201 DEBUG [java.sql.ResultSet] - <{rset-100327} Result: [1]>
2018-02-01 13:37:52,325 DEBUG [java.sql.Connection] - <{conn-100328} Connection>
2018-02-01 13:37:52,326 DEBUG [java.sql.Connection] - <{conn-100328} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:37:52,326 DEBUG [java.sql.PreparedStatement] - <{pstm-100329} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:37:52,326 DEBUG [java.sql.PreparedStatement] - <{pstm-100329} Parameters: [2017, A]>
2018-02-01 13:37:52,327 DEBUG [java.sql.PreparedStatement] - <{pstm-100329} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:37:52,331 DEBUG [java.sql.ResultSet] - <{rset-100330} ResultSet>
2018-02-01 13:37:52,332 DEBUG [java.sql.ResultSet] - <{rset-100330} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 13:37:52,332 DEBUG [java.sql.ResultSet] - <{rset-100330} Result: [共1, 380.48, 0, 0, 380.48, 0, null, null, 23.78, 0, 0, 0, 0, 0]>
2018-02-01 13:38:45,014 DEBUG [java.sql.Connection] - <{conn-100331} Connection>
2018-02-01 13:38:45,014 DEBUG [java.sql.Connection] - <{conn-100331} Preparing Statement:         DELETE FROM sf_charge        WHERE                        p_id in (103093)        AND       now_cash = 0             >
2018-02-01 13:38:45,014 DEBUG [java.sql.PreparedStatement] - <{pstm-100332} Executing Statement:         DELETE FROM sf_charge        WHERE                        p_id in (103093)        AND       now_cash = 0             >
2018-02-01 13:38:45,015 DEBUG [java.sql.PreparedStatement] - <{pstm-100332} Parameters: []>
2018-02-01 13:38:45,015 DEBUG [java.sql.PreparedStatement] - <{pstm-100332} Types: []>
2018-02-01 13:38:45,118 DEBUG [java.sql.Connection] - <{conn-100333} Connection>
2018-02-01 13:38:45,119 DEBUG [java.sql.Connection] - <{conn-100333} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:38:45,119 DEBUG [java.sql.PreparedStatement] - <{pstm-100334} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:38:45,120 DEBUG [java.sql.PreparedStatement] - <{pstm-100334} Parameters: [2017, A]>
2018-02-01 13:38:45,120 DEBUG [java.sql.PreparedStatement] - <{pstm-100334} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:38:45,125 DEBUG [java.sql.ResultSet] - <{rset-100335} ResultSet>
2018-02-01 13:38:45,126 DEBUG [java.sql.Connection] - <{conn-100336} Connection>
2018-02-01 13:38:45,126 DEBUG [java.sql.Connection] - <{conn-100336} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:38:45,126 DEBUG [java.sql.PreparedStatement] - <{pstm-100337} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:38:45,127 DEBUG [java.sql.PreparedStatement] - <{pstm-100337} Parameters: [2017, A]>
2018-02-01 13:38:45,127 DEBUG [java.sql.PreparedStatement] - <{pstm-100337} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:38:45,130 DEBUG [java.sql.ResultSet] - <{rset-100338} ResultSet>
2018-02-01 13:38:45,130 DEBUG [java.sql.ResultSet] - <{rset-100338} Header: [count(*)]>
2018-02-01 13:38:45,130 DEBUG [java.sql.ResultSet] - <{rset-100338} Result: [0]>
2018-02-01 13:38:45,264 DEBUG [java.sql.Connection] - <{conn-100339} Connection>
2018-02-01 13:38:45,265 DEBUG [java.sql.Connection] - <{conn-100339} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:38:45,265 DEBUG [java.sql.PreparedStatement] - <{pstm-100340} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:38:45,265 DEBUG [java.sql.PreparedStatement] - <{pstm-100340} Parameters: [2017, A]>
2018-02-01 13:38:45,265 DEBUG [java.sql.PreparedStatement] - <{pstm-100340} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:38:45,269 DEBUG [java.sql.ResultSet] - <{rset-100341} ResultSet>
2018-02-01 13:38:45,269 DEBUG [java.sql.ResultSet] - <{rset-100341} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 13:38:45,269 DEBUG [java.sql.ResultSet] - <{rset-100341} Result: [共0, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-02-01 13:38:57,938 DEBUG [java.sql.Connection] - <{conn-100342} Connection>
2018-02-01 13:38:57,939 DEBUG [java.sql.Connection] - <{conn-100342} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:38:57,939 DEBUG [java.sql.PreparedStatement] - <{pstm-100343} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 13:38:57,939 DEBUG [java.sql.PreparedStatement] - <{pstm-100343} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 13:38:57,939 DEBUG [java.sql.PreparedStatement] - <{pstm-100343} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 13:38:58,099 DEBUG [java.sql.Connection] - <{conn-100344} Connection>
2018-02-01 13:38:58,100 DEBUG [java.sql.Connection] - <{conn-100344} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:38:58,101 DEBUG [java.sql.PreparedStatement] - <{pstm-100345} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:38:58,101 DEBUG [java.sql.PreparedStatement] - <{pstm-100345} Parameters: [2017, A]>
2018-02-01 13:38:58,101 DEBUG [java.sql.PreparedStatement] - <{pstm-100345} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:38:58,108 DEBUG [java.sql.ResultSet] - <{rset-100346} ResultSet>
2018-02-01 13:38:58,109 DEBUG [java.sql.ResultSet] - <{rset-100346} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 13:38:58,109 DEBUG [java.sql.ResultSet] - <{rset-100346} Result: [null, 供热费, 2017, 0001-008-02-04-04, A, 0, 01, 0001, 0001-008, 测试2, 380.48, 0, 0, 380.48, 0, null, A1, 16, null, null, 23.78, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-02-01, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103094, 1]>
2018-02-01 13:38:58,109 DEBUG [java.sql.Connection] - <{conn-100347} Connection>
2018-02-01 13:38:58,109 DEBUG [java.sql.Connection] - <{conn-100347} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:38:58,110 DEBUG [java.sql.PreparedStatement] - <{pstm-100348} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:38:58,110 DEBUG [java.sql.PreparedStatement] - <{pstm-100348} Parameters: [2017, A]>
2018-02-01 13:38:58,110 DEBUG [java.sql.PreparedStatement] - <{pstm-100348} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:38:58,113 DEBUG [java.sql.ResultSet] - <{rset-100349} ResultSet>
2018-02-01 13:38:58,114 DEBUG [java.sql.ResultSet] - <{rset-100349} Header: [count(*)]>
2018-02-01 13:38:58,114 DEBUG [java.sql.ResultSet] - <{rset-100349} Result: [1]>
2018-02-01 13:38:58,174 DEBUG [java.sql.Connection] - <{conn-100350} Connection>
2018-02-01 13:38:58,175 DEBUG [java.sql.Connection] - <{conn-100350} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:38:58,175 DEBUG [java.sql.PreparedStatement] - <{pstm-100351} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:38:58,176 DEBUG [java.sql.PreparedStatement] - <{pstm-100351} Parameters: [2017, A]>
2018-02-01 13:38:58,176 DEBUG [java.sql.PreparedStatement] - <{pstm-100351} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:38:58,180 DEBUG [java.sql.ResultSet] - <{rset-100352} ResultSet>
2018-02-01 13:38:58,181 DEBUG [java.sql.ResultSet] - <{rset-100352} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 13:38:58,181 DEBUG [java.sql.ResultSet] - <{rset-100352} Result: [共1, 380.48, 0, 0, 380.48, 0, null, null, 23.78, null, 0, 0, 0, 0]>
2018-02-01 13:45:34,451 DEBUG [java.sql.Connection] - <{conn-100353} Connection>
2018-02-01 13:45:34,451 DEBUG [java.sql.Connection] - <{conn-100353} Preparing Statement:         DELETE FROM sf_charge        WHERE                        p_id in (103094)        AND       now_cash = 0             >
2018-02-01 13:45:34,452 DEBUG [java.sql.PreparedStatement] - <{pstm-100354} Executing Statement:         DELETE FROM sf_charge        WHERE                        p_id in (103094)        AND       now_cash = 0             >
2018-02-01 13:45:34,452 DEBUG [java.sql.PreparedStatement] - <{pstm-100354} Parameters: []>
2018-02-01 13:45:34,452 DEBUG [java.sql.PreparedStatement] - <{pstm-100354} Types: []>
2018-02-01 13:45:34,560 DEBUG [java.sql.Connection] - <{conn-100355} Connection>
2018-02-01 13:45:34,561 DEBUG [java.sql.Connection] - <{conn-100355} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:45:34,561 DEBUG [java.sql.PreparedStatement] - <{pstm-100356} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:45:34,561 DEBUG [java.sql.PreparedStatement] - <{pstm-100356} Parameters: [2017, A]>
2018-02-01 13:45:34,561 DEBUG [java.sql.PreparedStatement] - <{pstm-100356} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:45:34,567 DEBUG [java.sql.ResultSet] - <{rset-100357} ResultSet>
2018-02-01 13:45:34,568 DEBUG [java.sql.Connection] - <{conn-100358} Connection>
2018-02-01 13:45:34,569 DEBUG [java.sql.Connection] - <{conn-100358} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:45:34,569 DEBUG [java.sql.PreparedStatement] - <{pstm-100359} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:45:34,569 DEBUG [java.sql.PreparedStatement] - <{pstm-100359} Parameters: [2017, A]>
2018-02-01 13:45:34,569 DEBUG [java.sql.PreparedStatement] - <{pstm-100359} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:45:34,572 DEBUG [java.sql.ResultSet] - <{rset-100360} ResultSet>
2018-02-01 13:45:34,573 DEBUG [java.sql.ResultSet] - <{rset-100360} Header: [count(*)]>
2018-02-01 13:45:34,573 DEBUG [java.sql.ResultSet] - <{rset-100360} Result: [0]>
2018-02-01 13:45:34,708 DEBUG [java.sql.Connection] - <{conn-100361} Connection>
2018-02-01 13:45:34,709 DEBUG [java.sql.Connection] - <{conn-100361} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:45:34,709 DEBUG [java.sql.PreparedStatement] - <{pstm-100362} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:45:34,709 DEBUG [java.sql.PreparedStatement] - <{pstm-100362} Parameters: [2017, A]>
2018-02-01 13:45:34,709 DEBUG [java.sql.PreparedStatement] - <{pstm-100362} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:45:34,713 DEBUG [java.sql.ResultSet] - <{rset-100363} ResultSet>
2018-02-01 13:45:34,714 DEBUG [java.sql.ResultSet] - <{rset-100363} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 13:45:34,714 DEBUG [java.sql.ResultSet] - <{rset-100363} Result: [共0, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-02-01 13:53:24,121 DEBUG [java.sql.Connection] - <{conn-100364} Connection>
2018-02-01 13:53:24,131 DEBUG [java.sql.Connection] - <{conn-100364} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:53:24,131 DEBUG [java.sql.PreparedStatement] - <{pstm-100365} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 13:53:24,131 DEBUG [java.sql.PreparedStatement] - <{pstm-100365} Parameters: [2017, A]>
2018-02-01 13:53:24,131 DEBUG [java.sql.PreparedStatement] - <{pstm-100365} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:53:24,137 DEBUG [java.sql.ResultSet] - <{rset-100366} ResultSet>
2018-02-01 13:53:24,137 DEBUG [java.sql.Connection] - <{conn-100367} Connection>
2018-02-01 13:53:24,137 DEBUG [java.sql.Connection] - <{conn-100367} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:53:24,138 DEBUG [java.sql.PreparedStatement] - <{pstm-100368} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 13:53:24,138 DEBUG [java.sql.PreparedStatement] - <{pstm-100368} Parameters: [2017, A]>
2018-02-01 13:53:24,138 DEBUG [java.sql.PreparedStatement] - <{pstm-100368} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:53:24,141 DEBUG [java.sql.ResultSet] - <{rset-100369} ResultSet>
2018-02-01 13:53:24,141 DEBUG [java.sql.ResultSet] - <{rset-100369} Header: [count(*)]>
2018-02-01 13:53:24,141 DEBUG [java.sql.ResultSet] - <{rset-100369} Result: [0]>
2018-02-01 13:53:24,197 DEBUG [java.sql.Connection] - <{conn-100370} Connection>
2018-02-01 13:53:24,197 DEBUG [java.sql.Connection] - <{conn-100370} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:53:24,197 DEBUG [java.sql.PreparedStatement] - <{pstm-100371} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 13:53:24,197 DEBUG [java.sql.PreparedStatement] - <{pstm-100371} Parameters: [2017, A]>
2018-02-01 13:53:24,197 DEBUG [java.sql.PreparedStatement] - <{pstm-100371} Types: [java.lang.String, java.lang.String]>
2018-02-01 13:53:24,201 DEBUG [java.sql.ResultSet] - <{rset-100372} ResultSet>
2018-02-01 13:53:24,201 DEBUG [java.sql.ResultSet] - <{rset-100372} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 13:53:24,201 DEBUG [java.sql.ResultSet] - <{rset-100372} Result: [共0, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-02-01 14:11:50,994 DEBUG [java.sql.Connection] - <{conn-100373} Connection>
2018-02-01 14:11:50,994 DEBUG [java.sql.Connection] - <{conn-100373} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 14:11:50,994 DEBUG [java.sql.PreparedStatement] - <{pstm-100374} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 14:11:50,995 DEBUG [java.sql.PreparedStatement] - <{pstm-100374} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 14:11:50,995 DEBUG [java.sql.PreparedStatement] - <{pstm-100374} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 14:11:51,213 DEBUG [java.sql.Connection] - <{conn-100375} Connection>
2018-02-01 14:11:51,215 DEBUG [java.sql.Connection] - <{conn-100375} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 14:11:51,215 DEBUG [java.sql.PreparedStatement] - <{pstm-100376} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 14:11:51,215 DEBUG [java.sql.PreparedStatement] - <{pstm-100376} Parameters: [2017, A]>
2018-02-01 14:11:51,215 DEBUG [java.sql.PreparedStatement] - <{pstm-100376} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:11:51,224 DEBUG [java.sql.ResultSet] - <{rset-100377} ResultSet>
2018-02-01 14:11:51,225 DEBUG [java.sql.ResultSet] - <{rset-100377} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 14:11:51,228 DEBUG [java.sql.ResultSet] - <{rset-100377} Result: [null, 供热费, 2017, 0001-008-02-04-04, A, 0, 01, 0001, 0001-008, 测试2, 380.48, 0, 0, 380.48, 0, null, A1, 16, null, null, 23.78, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-02-01, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103097, 1]>
2018-02-01 14:11:51,228 DEBUG [java.sql.Connection] - <{conn-100378} Connection>
2018-02-01 14:11:51,228 DEBUG [java.sql.Connection] - <{conn-100378} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 14:11:51,228 DEBUG [java.sql.PreparedStatement] - <{pstm-100379} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 14:11:51,229 DEBUG [java.sql.PreparedStatement] - <{pstm-100379} Parameters: [2017, A]>
2018-02-01 14:11:51,229 DEBUG [java.sql.PreparedStatement] - <{pstm-100379} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:11:51,232 DEBUG [java.sql.ResultSet] - <{rset-100380} ResultSet>
2018-02-01 14:11:51,233 DEBUG [java.sql.ResultSet] - <{rset-100380} Header: [count(*)]>
2018-02-01 14:11:51,233 DEBUG [java.sql.ResultSet] - <{rset-100380} Result: [1]>
2018-02-01 14:11:51,338 DEBUG [java.sql.Connection] - <{conn-100381} Connection>
2018-02-01 14:11:51,343 DEBUG [java.sql.Connection] - <{conn-100381} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 14:11:51,343 DEBUG [java.sql.PreparedStatement] - <{pstm-100382} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 14:11:51,343 DEBUG [java.sql.PreparedStatement] - <{pstm-100382} Parameters: [2017, A]>
2018-02-01 14:11:51,343 DEBUG [java.sql.PreparedStatement] - <{pstm-100382} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:11:51,348 DEBUG [java.sql.ResultSet] - <{rset-100383} ResultSet>
2018-02-01 14:11:51,348 DEBUG [java.sql.ResultSet] - <{rset-100383} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 14:11:51,348 DEBUG [java.sql.ResultSet] - <{rset-100383} Result: [共1, 380.48, 0, 0, 380.48, 0, null, null, 23.78, null, 0, 0, 0, 0]>
2018-02-01 14:11:57,467 DEBUG [java.sql.Connection] - <{conn-100384} Connection>
2018-02-01 14:11:57,468 DEBUG [java.sql.Connection] - <{conn-100384} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 14:11:57,470 DEBUG [java.sql.PreparedStatement] - <{pstm-100385} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 14:11:57,470 DEBUG [java.sql.PreparedStatement] - <{pstm-100385} Parameters: [2017, A]>
2018-02-01 14:11:57,470 DEBUG [java.sql.PreparedStatement] - <{pstm-100385} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:11:57,476 DEBUG [java.sql.ResultSet] - <{rset-100386} ResultSet>
2018-02-01 14:11:57,476 DEBUG [java.sql.ResultSet] - <{rset-100386} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 14:11:57,476 DEBUG [java.sql.ResultSet] - <{rset-100386} Result: [null, 供热费, 2017, 0001-008-02-04-04, A, 0, 01, 0001, 0001-008, 测试2, 380.48, 0, 0, 380.48, 0, null, A1, 16, null, null, 23.78, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-02-01, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103097, 1]>
2018-02-01 14:11:57,477 DEBUG [java.sql.Connection] - <{conn-100387} Connection>
2018-02-01 14:11:57,477 DEBUG [java.sql.Connection] - <{conn-100387} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 14:11:57,479 DEBUG [java.sql.PreparedStatement] - <{pstm-100388} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 14:11:57,479 DEBUG [java.sql.PreparedStatement] - <{pstm-100388} Parameters: [2017, A]>
2018-02-01 14:11:57,479 DEBUG [java.sql.PreparedStatement] - <{pstm-100388} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:11:57,483 DEBUG [java.sql.ResultSet] - <{rset-100389} ResultSet>
2018-02-01 14:11:57,483 DEBUG [java.sql.ResultSet] - <{rset-100389} Header: [count(*)]>
2018-02-01 14:11:57,483 DEBUG [java.sql.ResultSet] - <{rset-100389} Result: [1]>
2018-02-01 14:11:57,540 DEBUG [java.sql.Connection] - <{conn-100390} Connection>
2018-02-01 14:11:57,541 DEBUG [java.sql.Connection] - <{conn-100390} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 14:11:57,541 DEBUG [java.sql.PreparedStatement] - <{pstm-100391} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 14:11:57,541 DEBUG [java.sql.PreparedStatement] - <{pstm-100391} Parameters: [2017, A]>
2018-02-01 14:11:57,541 DEBUG [java.sql.PreparedStatement] - <{pstm-100391} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:11:57,544 DEBUG [java.sql.ResultSet] - <{rset-100392} ResultSet>
2018-02-01 14:11:57,544 DEBUG [java.sql.ResultSet] - <{rset-100392} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 14:11:57,544 DEBUG [java.sql.ResultSet] - <{rset-100392} Result: [共1, 380.48, 0, 0, 380.48, 0, null, null, 23.78, null, 0, 0, 0, 0]>
2018-02-01 14:12:45,166 DEBUG [java.sql.Connection] - <{conn-100393} Connection>
2018-02-01 14:12:45,166 DEBUG [java.sql.Connection] - <{conn-100393} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 14:12:45,166 DEBUG [java.sql.PreparedStatement] - <{pstm-100394} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 14:12:45,167 DEBUG [java.sql.PreparedStatement] - <{pstm-100394} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 14:12:45,167 DEBUG [java.sql.PreparedStatement] - <{pstm-100394} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 14:12:45,366 DEBUG [java.sql.Connection] - <{conn-100395} Connection>
2018-02-01 14:12:45,367 DEBUG [java.sql.Connection] - <{conn-100395} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 14:12:45,368 DEBUG [java.sql.PreparedStatement] - <{pstm-100396} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 14:12:45,368 DEBUG [java.sql.PreparedStatement] - <{pstm-100396} Parameters: [2017, A]>
2018-02-01 14:12:45,368 DEBUG [java.sql.PreparedStatement] - <{pstm-100396} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:12:45,374 DEBUG [java.sql.ResultSet] - <{rset-100397} ResultSet>
2018-02-01 14:12:45,374 DEBUG [java.sql.ResultSet] - <{rset-100397} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 14:12:45,374 DEBUG [java.sql.ResultSet] - <{rset-100397} Result: [null, 供热费, 2017, 0001-008-02-04-04, A, 0, 01, 0001, 0001-008, 测试2, 380.48, 0, 0, 380.48, 0, null, A1, 16, null, null, 23.78, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-02-01, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103098, 1]>
2018-02-01 14:12:45,375 DEBUG [java.sql.Connection] - <{conn-100398} Connection>
2018-02-01 14:12:45,375 DEBUG [java.sql.Connection] - <{conn-100398} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 14:12:45,375 DEBUG [java.sql.PreparedStatement] - <{pstm-100399} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 14:12:45,375 DEBUG [java.sql.PreparedStatement] - <{pstm-100399} Parameters: [2017, A]>
2018-02-01 14:12:45,375 DEBUG [java.sql.PreparedStatement] - <{pstm-100399} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:12:45,379 DEBUG [java.sql.ResultSet] - <{rset-100400} ResultSet>
2018-02-01 14:12:45,379 DEBUG [java.sql.ResultSet] - <{rset-100400} Header: [count(*)]>
2018-02-01 14:12:45,379 DEBUG [java.sql.ResultSet] - <{rset-100400} Result: [1]>
2018-02-01 14:12:45,435 DEBUG [java.sql.Connection] - <{conn-100401} Connection>
2018-02-01 14:12:45,438 DEBUG [java.sql.Connection] - <{conn-100401} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 14:12:45,439 DEBUG [java.sql.PreparedStatement] - <{pstm-100402} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 14:12:45,439 DEBUG [java.sql.PreparedStatement] - <{pstm-100402} Parameters: [2017, A]>
2018-02-01 14:12:45,439 DEBUG [java.sql.PreparedStatement] - <{pstm-100402} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:12:45,442 DEBUG [java.sql.ResultSet] - <{rset-100403} ResultSet>
2018-02-01 14:12:45,443 DEBUG [java.sql.ResultSet] - <{rset-100403} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 14:12:45,443 DEBUG [java.sql.ResultSet] - <{rset-100403} Result: [共1, 380.48, 0, 0, 380.48, 0, null, null, 23.78, null, 0, 0, 0, 0]>
2018-02-01 14:14:54,720 DEBUG [java.sql.Connection] - <{conn-100404} Connection>
2018-02-01 14:14:54,720 DEBUG [java.sql.Connection] - <{conn-100404} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 14:14:54,720 DEBUG [java.sql.PreparedStatement] - <{pstm-100405} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 14:14:54,720 DEBUG [java.sql.PreparedStatement] - <{pstm-100405} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 14:14:54,720 DEBUG [java.sql.PreparedStatement] - <{pstm-100405} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 14:14:54,877 DEBUG [java.sql.Connection] - <{conn-100406} Connection>
2018-02-01 14:14:54,879 DEBUG [java.sql.Connection] - <{conn-100406} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 14:14:54,880 DEBUG [java.sql.PreparedStatement] - <{pstm-100407} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 14:14:54,880 DEBUG [java.sql.PreparedStatement] - <{pstm-100407} Parameters: [2017, A]>
2018-02-01 14:14:54,880 DEBUG [java.sql.PreparedStatement] - <{pstm-100407} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:14:54,886 DEBUG [java.sql.ResultSet] - <{rset-100408} ResultSet>
2018-02-01 14:14:54,887 DEBUG [java.sql.ResultSet] - <{rset-100408} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 14:14:54,887 DEBUG [java.sql.ResultSet] - <{rset-100408} Result: [null, 供热费, 2017, 0001-008-02-04-04, A, 0, 01, 0001, 0001-008, 测试2, 380.48, 0, 0, 380.48, 0, null, A1, 16, null, null, 23.78, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-02-01, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103099, 1]>
2018-02-01 14:14:54,887 DEBUG [java.sql.Connection] - <{conn-100409} Connection>
2018-02-01 14:14:54,888 DEBUG [java.sql.Connection] - <{conn-100409} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 14:14:54,888 DEBUG [java.sql.PreparedStatement] - <{pstm-100410} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 14:14:54,888 DEBUG [java.sql.PreparedStatement] - <{pstm-100410} Parameters: [2017, A]>
2018-02-01 14:14:54,888 DEBUG [java.sql.PreparedStatement] - <{pstm-100410} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:14:54,892 DEBUG [java.sql.ResultSet] - <{rset-100411} ResultSet>
2018-02-01 14:14:54,892 DEBUG [java.sql.ResultSet] - <{rset-100411} Header: [count(*)]>
2018-02-01 14:14:54,892 DEBUG [java.sql.ResultSet] - <{rset-100411} Result: [1]>
2018-02-01 14:14:55,011 DEBUG [java.sql.Connection] - <{conn-100412} Connection>
2018-02-01 14:14:55,015 DEBUG [java.sql.Connection] - <{conn-100412} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 14:14:55,015 DEBUG [java.sql.PreparedStatement] - <{pstm-100413} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 14:14:55,015 DEBUG [java.sql.PreparedStatement] - <{pstm-100413} Parameters: [2017, A]>
2018-02-01 14:14:55,015 DEBUG [java.sql.PreparedStatement] - <{pstm-100413} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:14:55,021 DEBUG [java.sql.ResultSet] - <{rset-100414} ResultSet>
2018-02-01 14:14:55,021 DEBUG [java.sql.ResultSet] - <{rset-100414} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 14:14:55,022 DEBUG [java.sql.ResultSet] - <{rset-100414} Result: [共1, 380.48, 0, 0, 380.48, 0, null, null, 23.78, null, 0, 0, 0, 0]>
2018-02-01 14:14:57,942 DEBUG [java.sql.Connection] - <{conn-100415} Connection>
2018-02-01 14:14:57,944 DEBUG [java.sql.Connection] - <{conn-100415} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 14:14:57,944 DEBUG [java.sql.PreparedStatement] - <{pstm-100416} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 14:14:57,944 DEBUG [java.sql.PreparedStatement] - <{pstm-100416} Parameters: [2017, A]>
2018-02-01 14:14:57,944 DEBUG [java.sql.PreparedStatement] - <{pstm-100416} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:14:57,950 DEBUG [java.sql.ResultSet] - <{rset-100417} ResultSet>
2018-02-01 14:14:57,950 DEBUG [java.sql.ResultSet] - <{rset-100417} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 14:14:57,950 DEBUG [java.sql.ResultSet] - <{rset-100417} Result: [null, 供热费, 2017, 0001-008-02-04-04, A, 0, 01, 0001, 0001-008, 测试2, 380.48, 0, 0, 380.48, 0, null, A1, 16, null, null, 23.78, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-02-01, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103099, 1]>
2018-02-01 14:14:57,950 DEBUG [java.sql.Connection] - <{conn-100418} Connection>
2018-02-01 14:14:57,950 DEBUG [java.sql.Connection] - <{conn-100418} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 14:14:57,951 DEBUG [java.sql.PreparedStatement] - <{pstm-100419} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 14:14:57,951 DEBUG [java.sql.PreparedStatement] - <{pstm-100419} Parameters: [2017, A]>
2018-02-01 14:14:57,951 DEBUG [java.sql.PreparedStatement] - <{pstm-100419} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:14:57,954 DEBUG [java.sql.ResultSet] - <{rset-100420} ResultSet>
2018-02-01 14:14:57,954 DEBUG [java.sql.ResultSet] - <{rset-100420} Header: [count(*)]>
2018-02-01 14:14:57,954 DEBUG [java.sql.ResultSet] - <{rset-100420} Result: [1]>
2018-02-01 14:14:58,008 DEBUG [java.sql.Connection] - <{conn-100421} Connection>
2018-02-01 14:14:58,008 DEBUG [java.sql.Connection] - <{conn-100421} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 14:14:58,009 DEBUG [java.sql.PreparedStatement] - <{pstm-100422} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 14:14:58,009 DEBUG [java.sql.PreparedStatement] - <{pstm-100422} Parameters: [2017, A]>
2018-02-01 14:14:58,009 DEBUG [java.sql.PreparedStatement] - <{pstm-100422} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:14:58,012 DEBUG [java.sql.ResultSet] - <{rset-100423} ResultSet>
2018-02-01 14:14:58,012 DEBUG [java.sql.ResultSet] - <{rset-100423} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 14:14:58,012 DEBUG [java.sql.ResultSet] - <{rset-100423} Result: [共1, 380.48, 0, 0, 380.48, 0, null, null, 23.78, null, 0, 0, 0, 0]>
2018-02-01 14:19:11,034 DEBUG [java.sql.Connection] - <{conn-100424} Connection>
2018-02-01 14:19:11,035 DEBUG [java.sql.Connection] - <{conn-100424} Preparing Statement:         DELETE FROM sf_charge        WHERE                        p_id in (103099)        AND       now_cash = 0             >
2018-02-01 14:19:11,035 DEBUG [java.sql.PreparedStatement] - <{pstm-100425} Executing Statement:         DELETE FROM sf_charge        WHERE                        p_id in (103099)        AND       now_cash = 0             >
2018-02-01 14:19:11,035 DEBUG [java.sql.PreparedStatement] - <{pstm-100425} Parameters: []>
2018-02-01 14:19:11,035 DEBUG [java.sql.PreparedStatement] - <{pstm-100425} Types: []>
2018-02-01 14:19:11,148 DEBUG [java.sql.Connection] - <{conn-100426} Connection>
2018-02-01 14:19:11,148 DEBUG [java.sql.Connection] - <{conn-100426} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 14:19:11,149 DEBUG [java.sql.PreparedStatement] - <{pstm-100427} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 14:19:11,149 DEBUG [java.sql.PreparedStatement] - <{pstm-100427} Parameters: [2017, A]>
2018-02-01 14:19:11,149 DEBUG [java.sql.PreparedStatement] - <{pstm-100427} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:19:11,154 DEBUG [java.sql.ResultSet] - <{rset-100428} ResultSet>
2018-02-01 14:19:11,155 DEBUG [java.sql.Connection] - <{conn-100429} Connection>
2018-02-01 14:19:11,155 DEBUG [java.sql.Connection] - <{conn-100429} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 14:19:11,155 DEBUG [java.sql.PreparedStatement] - <{pstm-100430} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 14:19:11,155 DEBUG [java.sql.PreparedStatement] - <{pstm-100430} Parameters: [2017, A]>
2018-02-01 14:19:11,155 DEBUG [java.sql.PreparedStatement] - <{pstm-100430} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:19:11,158 DEBUG [java.sql.ResultSet] - <{rset-100431} ResultSet>
2018-02-01 14:19:11,158 DEBUG [java.sql.ResultSet] - <{rset-100431} Header: [count(*)]>
2018-02-01 14:19:11,158 DEBUG [java.sql.ResultSet] - <{rset-100431} Result: [0]>
2018-02-01 14:19:11,281 DEBUG [java.sql.Connection] - <{conn-100432} Connection>
2018-02-01 14:19:11,282 DEBUG [java.sql.Connection] - <{conn-100432} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 14:19:11,282 DEBUG [java.sql.PreparedStatement] - <{pstm-100433} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 14:19:11,282 DEBUG [java.sql.PreparedStatement] - <{pstm-100433} Parameters: [2017, A]>
2018-02-01 14:19:11,282 DEBUG [java.sql.PreparedStatement] - <{pstm-100433} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:19:11,286 DEBUG [java.sql.ResultSet] - <{rset-100434} ResultSet>
2018-02-01 14:19:11,286 DEBUG [java.sql.ResultSet] - <{rset-100434} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 14:19:11,286 DEBUG [java.sql.ResultSet] - <{rset-100434} Result: [共0, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-02-01 14:20:16,850 DEBUG [java.sql.Connection] - <{conn-100435} Connection>
2018-02-01 14:20:16,853 DEBUG [java.sql.Connection] - <{conn-100435} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 14:20:16,853 DEBUG [java.sql.PreparedStatement] - <{pstm-100436} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 14:20:16,853 DEBUG [java.sql.PreparedStatement] - <{pstm-100436} Parameters: [2017, A]>
2018-02-01 14:20:16,853 DEBUG [java.sql.PreparedStatement] - <{pstm-100436} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:20:16,858 DEBUG [java.sql.ResultSet] - <{rset-100437} ResultSet>
2018-02-01 14:20:16,858 DEBUG [java.sql.ResultSet] - <{rset-100437} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 14:20:16,859 DEBUG [java.sql.ResultSet] - <{rset-100437} Result: [null, 供热费, 2017, 0001-008-02-04-04, A, 0, 01, 0001, 0001-008, 测试2, 380.48, 0, 0, 380.48, 0, null, A1, 16, null, null, 23.78, 2017-11-01, 2018-03-31, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103100, 1]>
2018-02-01 14:20:16,859 DEBUG [java.sql.Connection] - <{conn-100438} Connection>
2018-02-01 14:20:16,859 DEBUG [java.sql.Connection] - <{conn-100438} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 14:20:16,859 DEBUG [java.sql.PreparedStatement] - <{pstm-100439} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 14:20:16,859 DEBUG [java.sql.PreparedStatement] - <{pstm-100439} Parameters: [2017, A]>
2018-02-01 14:20:16,860 DEBUG [java.sql.PreparedStatement] - <{pstm-100439} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:20:16,863 DEBUG [java.sql.ResultSet] - <{rset-100440} ResultSet>
2018-02-01 14:20:16,863 DEBUG [java.sql.ResultSet] - <{rset-100440} Header: [count(*)]>
2018-02-01 14:20:16,863 DEBUG [java.sql.ResultSet] - <{rset-100440} Result: [1]>
2018-02-01 14:20:16,917 DEBUG [java.sql.Connection] - <{conn-100441} Connection>
2018-02-01 14:20:16,917 DEBUG [java.sql.Connection] - <{conn-100441} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 14:20:16,917 DEBUG [java.sql.PreparedStatement] - <{pstm-100442} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 14:20:16,918 DEBUG [java.sql.PreparedStatement] - <{pstm-100442} Parameters: [2017, A]>
2018-02-01 14:20:16,918 DEBUG [java.sql.PreparedStatement] - <{pstm-100442} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:20:16,921 DEBUG [java.sql.ResultSet] - <{rset-100443} ResultSet>
2018-02-01 14:20:16,921 DEBUG [java.sql.ResultSet] - <{rset-100443} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 14:20:16,921 DEBUG [java.sql.ResultSet] - <{rset-100443} Result: [共1, 380.48, 0, 0, 380.48, 0, null, null, 23.78, 0, 0, 0, 0, 0]>
2018-02-01 14:37:57,965 DEBUG [java.sql.Connection] - <{conn-100444} Connection>
2018-02-01 14:37:57,967 DEBUG [java.sql.Connection] - <{conn-100444} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 14:37:57,967 DEBUG [java.sql.PreparedStatement] - <{pstm-100445} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 14:37:57,967 DEBUG [java.sql.PreparedStatement] - <{pstm-100445} Parameters: [2017, A]>
2018-02-01 14:37:57,967 DEBUG [java.sql.PreparedStatement] - <{pstm-100445} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:37:57,972 DEBUG [java.sql.ResultSet] - <{rset-100446} ResultSet>
2018-02-01 14:37:57,972 DEBUG [java.sql.Connection] - <{conn-100447} Connection>
2018-02-01 14:37:57,972 DEBUG [java.sql.Connection] - <{conn-100447} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 14:37:57,973 DEBUG [java.sql.PreparedStatement] - <{pstm-100448} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 14:37:57,973 DEBUG [java.sql.PreparedStatement] - <{pstm-100448} Parameters: [2017, A]>
2018-02-01 14:37:57,973 DEBUG [java.sql.PreparedStatement] - <{pstm-100448} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:37:57,976 DEBUG [java.sql.ResultSet] - <{rset-100449} ResultSet>
2018-02-01 14:37:57,976 DEBUG [java.sql.ResultSet] - <{rset-100449} Header: [count(*)]>
2018-02-01 14:37:57,976 DEBUG [java.sql.ResultSet] - <{rset-100449} Result: [0]>
2018-02-01 14:37:58,044 DEBUG [java.sql.Connection] - <{conn-100450} Connection>
2018-02-01 14:37:58,045 DEBUG [java.sql.Connection] - <{conn-100450} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 14:37:58,045 DEBUG [java.sql.PreparedStatement] - <{pstm-100451} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 14:37:58,045 DEBUG [java.sql.PreparedStatement] - <{pstm-100451} Parameters: [2017, A]>
2018-02-01 14:37:58,045 DEBUG [java.sql.PreparedStatement] - <{pstm-100451} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:37:58,048 DEBUG [java.sql.ResultSet] - <{rset-100452} ResultSet>
2018-02-01 14:37:58,049 DEBUG [java.sql.ResultSet] - <{rset-100452} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 14:37:58,049 DEBUG [java.sql.ResultSet] - <{rset-100452} Result: [共0, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-02-01 14:38:00,513 DEBUG [java.sql.Connection] - <{conn-100453} Connection>
2018-02-01 14:38:00,514 DEBUG [java.sql.Connection] - <{conn-100453} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 14:38:00,514 DEBUG [java.sql.PreparedStatement] - <{pstm-100454} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 14:38:00,514 DEBUG [java.sql.PreparedStatement] - <{pstm-100454} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 14:38:00,514 DEBUG [java.sql.PreparedStatement] - <{pstm-100454} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 14:38:00,662 DEBUG [java.sql.Connection] - <{conn-100455} Connection>
2018-02-01 14:38:00,663 DEBUG [java.sql.Connection] - <{conn-100455} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 14:38:00,663 DEBUG [java.sql.PreparedStatement] - <{pstm-100456} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 14:38:00,663 DEBUG [java.sql.PreparedStatement] - <{pstm-100456} Parameters: [2017, A]>
2018-02-01 14:38:00,663 DEBUG [java.sql.PreparedStatement] - <{pstm-100456} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:38:00,668 DEBUG [java.sql.ResultSet] - <{rset-100457} ResultSet>
2018-02-01 14:38:00,669 DEBUG [java.sql.ResultSet] - <{rset-100457} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 14:38:00,669 DEBUG [java.sql.ResultSet] - <{rset-100457} Result: [null, 供热费, 2017, 0001-008-02-04-04, A, 0, 01, 0001, 0001-008, 测试2, 380.48, 0, 0, 380.48, 0, null, A1, 16, null, null, 23.78, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-02-01, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103103, 1]>
2018-02-01 14:38:00,670 DEBUG [java.sql.Connection] - <{conn-100458} Connection>
2018-02-01 14:38:00,670 DEBUG [java.sql.Connection] - <{conn-100458} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 14:38:00,670 DEBUG [java.sql.PreparedStatement] - <{pstm-100459} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 14:38:00,670 DEBUG [java.sql.PreparedStatement] - <{pstm-100459} Parameters: [2017, A]>
2018-02-01 14:38:00,670 DEBUG [java.sql.PreparedStatement] - <{pstm-100459} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:38:00,674 DEBUG [java.sql.ResultSet] - <{rset-100460} ResultSet>
2018-02-01 14:38:00,674 DEBUG [java.sql.ResultSet] - <{rset-100460} Header: [count(*)]>
2018-02-01 14:38:00,674 DEBUG [java.sql.ResultSet] - <{rset-100460} Result: [1]>
2018-02-01 14:38:00,761 DEBUG [java.sql.Connection] - <{conn-100461} Connection>
2018-02-01 14:38:00,762 DEBUG [java.sql.Connection] - <{conn-100461} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 14:38:00,762 DEBUG [java.sql.PreparedStatement] - <{pstm-100462} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 14:38:00,762 DEBUG [java.sql.PreparedStatement] - <{pstm-100462} Parameters: [2017, A]>
2018-02-01 14:38:00,762 DEBUG [java.sql.PreparedStatement] - <{pstm-100462} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:38:00,766 DEBUG [java.sql.ResultSet] - <{rset-100463} ResultSet>
2018-02-01 14:38:00,766 DEBUG [java.sql.ResultSet] - <{rset-100463} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 14:38:00,766 DEBUG [java.sql.ResultSet] - <{rset-100463} Result: [共1, 380.48, 0, 0, 380.48, 0, null, null, 23.78, null, 0, 0, 0, 0]>
2018-02-01 14:45:21,151 DEBUG [java.sql.Connection] - <{conn-100464} Connection>
2018-02-01 14:45:21,151 DEBUG [java.sql.Connection] - <{conn-100464} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 14:45:21,152 DEBUG [java.sql.PreparedStatement] - <{pstm-100465} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 14:45:21,152 DEBUG [java.sql.PreparedStatement] - <{pstm-100465} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 14:45:21,152 DEBUG [java.sql.PreparedStatement] - <{pstm-100465} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 14:45:21,355 DEBUG [java.sql.Connection] - <{conn-100466} Connection>
2018-02-01 14:45:21,356 DEBUG [java.sql.Connection] - <{conn-100466} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 14:45:21,358 DEBUG [java.sql.PreparedStatement] - <{pstm-100467} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 14:45:21,358 DEBUG [java.sql.PreparedStatement] - <{pstm-100467} Parameters: [2017, A]>
2018-02-01 14:45:21,358 DEBUG [java.sql.PreparedStatement] - <{pstm-100467} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:45:21,364 DEBUG [java.sql.ResultSet] - <{rset-100468} ResultSet>
2018-02-01 14:45:21,365 DEBUG [java.sql.ResultSet] - <{rset-100468} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 14:45:21,369 DEBUG [java.sql.ResultSet] - <{rset-100468} Result: [null, 供热费, 2017, 0001-008-02-04-04, A, 0, 01, 0001, 0001-008, 测试2, 380.48, 0, 0, 380.48, 0, null, A1, 16, null, null, 23.78, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-02-01, 142, 0, 142, 0, 142, 0, 0, 0, 0, 0, 0, 0, 0, 103103, 1]>
2018-02-01 14:45:21,370 DEBUG [java.sql.Connection] - <{conn-100469} Connection>
2018-02-01 14:45:21,370 DEBUG [java.sql.Connection] - <{conn-100469} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 14:45:21,382 DEBUG [java.sql.PreparedStatement] - <{pstm-100470} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 14:45:21,382 DEBUG [java.sql.PreparedStatement] - <{pstm-100470} Parameters: [2017, A]>
2018-02-01 14:45:21,382 DEBUG [java.sql.PreparedStatement] - <{pstm-100470} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:45:21,386 DEBUG [java.sql.ResultSet] - <{rset-100471} ResultSet>
2018-02-01 14:45:21,386 DEBUG [java.sql.ResultSet] - <{rset-100471} Header: [count(*)]>
2018-02-01 14:45:21,387 DEBUG [java.sql.ResultSet] - <{rset-100471} Result: [1]>
2018-02-01 14:45:21,495 DEBUG [java.sql.Connection] - <{conn-100472} Connection>
2018-02-01 14:45:21,496 DEBUG [java.sql.Connection] - <{conn-100472} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 14:45:21,496 DEBUG [java.sql.PreparedStatement] - <{pstm-100473} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 14:45:21,496 DEBUG [java.sql.PreparedStatement] - <{pstm-100473} Parameters: [2017, A]>
2018-02-01 14:45:21,496 DEBUG [java.sql.PreparedStatement] - <{pstm-100473} Types: [java.lang.String, java.lang.String]>
2018-02-01 14:45:21,502 DEBUG [java.sql.ResultSet] - <{rset-100474} ResultSet>
2018-02-01 14:45:21,502 DEBUG [java.sql.ResultSet] - <{rset-100474} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 14:45:21,502 DEBUG [java.sql.ResultSet] - <{rset-100474} Result: [共1, 380.48, 0, 0, 380.48, 0, null, null, 23.78, 142, 0, 142, 0, 142]>
2018-02-01 15:15:39,876 DEBUG [java.sql.Connection] - <{conn-100475} Connection>
2018-02-01 15:15:39,876 DEBUG [java.sql.Connection] - <{conn-100475} Preparing Statement:    DELETE      FROM eahttpsession   WHERE                sessionid = ?                >
2018-02-01 15:15:39,876 DEBUG [java.sql.PreparedStatement] - <{pstm-100476} Executing Statement:    DELETE      FROM eahttpsession   WHERE                sessionid = ?                >
2018-02-01 15:15:39,877 DEBUG [java.sql.PreparedStatement] - <{pstm-100476} Parameters: [b4jb0wqfd915]>
2018-02-01 15:15:39,878 DEBUG [java.sql.PreparedStatement] - <{pstm-100476} Types: [java.lang.String]>
2018-02-01 15:20:32,727 DEBUG [java.sql.Connection] - <{conn-100477} Connection>
2018-02-01 15:20:32,728 DEBUG [java.sql.Connection] - <{conn-100477} Preparing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-02-01 15:20:32,728 DEBUG [java.sql.PreparedStatement] - <{pstm-100478} Executing Statement:    SELECT a.userid, a.username, a.ACCOUNT, a.PASSWORD, a.sex, a.deptid, b.theme,          (SELECT customid             FROM eadept            WHERE deptid = a.deptid) AS customid,            (SELECT customName             FROM xt_custom            WHERE customid = (SELECT customid             FROM eadept            WHERE deptid = a.deptid)) AS customName                 FROM eauser a, eausersubinfo b     WHERE a.userid = b.userid and a.locked = ?       AND      a.account = ?                 >
2018-02-01 15:20:32,728 DEBUG [java.sql.PreparedStatement] - <{pstm-100478} Parameters: [0, admin]>
2018-02-01 15:20:32,728 DEBUG [java.sql.PreparedStatement] - <{pstm-100478} Types: [java.lang.String, java.lang.String]>
2018-02-01 15:20:32,729 DEBUG [java.sql.ResultSet] - <{rset-100479} ResultSet>
2018-02-01 15:20:32,729 DEBUG [java.sql.ResultSet] - <{rset-100479} Header: [userid, username, account, password, sex, deptid, theme, customid, customname]>
2018-02-01 15:20:32,729 DEBUG [java.sql.ResultSet] - <{rset-100479} Result: [100043, 管理员, admin, kLxefEnNKtb/5nUG9lJcVA==, 0, 001, default, 01, 康馨供热]>
2018-02-01 15:20:32,731 DEBUG [java.sql.Connection] - <{conn-100480} Connection>
2018-02-01 15:20:32,731 DEBUG [java.sql.Connection] - <{conn-100480} Preparing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-02-01 15:20:32,731 DEBUG [java.sql.PreparedStatement] - <{pstm-100481} Executing Statement:     SELECT        sessionid as sessionID, userid, username, account, createtime as sessionCreatedTime, explorer, loginip as loginIP        FROM eahttpsession where sessionid = ?  >
2018-02-01 15:20:32,731 DEBUG [java.sql.PreparedStatement] - <{pstm-100481} Parameters: [15pva4de432c8]>
2018-02-01 15:20:32,731 DEBUG [java.sql.PreparedStatement] - <{pstm-100481} Types: [java.lang.String]>
2018-02-01 15:20:32,732 DEBUG [java.sql.ResultSet] - <{rset-100482} ResultSet>
2018-02-01 15:20:32,733 DEBUG [java.sql.Connection] - <{conn-100483} Connection>
2018-02-01 15:20:32,733 DEBUG [java.sql.Connection] - <{conn-100483} Preparing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-02-01 15:20:32,733 DEBUG [java.sql.PreparedStatement] - <{pstm-100484} Executing Statement:    INSERT INTO eahttpsession (      sessionid, username, account,       createtime, loginip,userid,explorer)    VALUES (?, ?, ?,       ?, ?, ?,?)  >
2018-02-01 15:20:32,733 DEBUG [java.sql.PreparedStatement] - <{pstm-100484} Parameters: [15pva4de432c8, 管理员, admin, 2018-02-01 15:20:32, 127.0.0.1, 100043, FIREFOX/58.]>
2018-02-01 15:20:32,733 DEBUG [java.sql.PreparedStatement] - <{pstm-100484} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 15:20:32,801 DEBUG [java.sql.Connection] - <{conn-100485} Connection>
2018-02-01 15:20:32,805 DEBUG [java.sql.Connection] - <{conn-100485} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-02-01 15:20:32,806 DEBUG [java.sql.PreparedStatement] - <{pstm-100486} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-02-01 15:20:32,806 DEBUG [java.sql.PreparedStatement] - <{pstm-100486} Parameters: [100043]>
2018-02-01 15:20:32,806 DEBUG [java.sql.PreparedStatement] - <{pstm-100486} Types: [java.lang.String]>
2018-02-01 15:20:32,807 DEBUG [java.sql.ResultSet] - <{rset-100487} ResultSet>
2018-02-01 15:20:32,808 DEBUG [java.sql.ResultSet] - <{rset-100487} Header: [theme]>
2018-02-01 15:20:32,808 DEBUG [java.sql.ResultSet] - <{rset-100487} Result: [default]>
2018-02-01 15:20:32,954 DEBUG [java.sql.Connection] - <{conn-100488} Connection>
2018-02-01 15:20:32,955 DEBUG [java.sql.Connection] - <{conn-100488} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-02-01 15:20:32,955 DEBUG [java.sql.PreparedStatement] - <{pstm-100489} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid               AND LENGTH(a.menuid) = 4               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-02-01 15:20:32,955 DEBUG [java.sql.PreparedStatement] - <{pstm-100489} Parameters: [100043]>
2018-02-01 15:20:32,955 DEBUG [java.sql.PreparedStatement] - <{pstm-100489} Types: [java.lang.String]>
2018-02-01 15:20:32,957 DEBUG [java.sql.ResultSet] - <{rset-100490} ResultSet>
2018-02-01 15:20:32,957 DEBUG [java.sql.ResultSet] - <{rset-100490} Header: [menuid, menuname, iconcls]>
2018-02-01 15:20:32,957 DEBUG [java.sql.ResultSet] - <{rset-100490} Result: [0103, 基础信息, null]>
2018-02-01 15:20:32,957 DEBUG [java.sql.ResultSet] - <{rset-100490} Result: [0104, 收费管理, null]>
2018-02-01 15:20:32,957 DEBUG [java.sql.ResultSet] - <{rset-100490} Result: [0105, 统计分析, null]>
2018-02-01 15:20:32,957 DEBUG [java.sql.ResultSet] - <{rset-100490} Result: [0101, 系统管理, null]>
2018-02-01 15:20:32,957 DEBUG [java.sql.Connection] - <{conn-100491} Connection>
2018-02-01 15:20:32,957 DEBUG [java.sql.Connection] - <{conn-100491} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-02-01 15:20:32,958 DEBUG [java.sql.PreparedStatement] - <{pstm-100492} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls, a.authorizelevel, b.sortno              FROM eausermenumap a, eamenu b                   WHERE a.menuid = b.menuid and a.userid=? and a.authorizelevel = '1' AND LENGTH(a.menuid) = 4                ORDER BY b.sortno asc             >
2018-02-01 15:20:32,958 DEBUG [java.sql.PreparedStatement] - <{pstm-100492} Parameters: [100043]>
2018-02-01 15:20:32,958 DEBUG [java.sql.PreparedStatement] - <{pstm-100492} Types: [java.lang.String]>
2018-02-01 15:20:32,958 DEBUG [java.sql.ResultSet] - <{rset-100493} ResultSet>
2018-02-01 15:20:32,960 DEBUG [java.sql.Connection] - <{conn-100494} Connection>
2018-02-01 15:20:32,960 DEBUG [java.sql.Connection] - <{conn-100494} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-02-01 15:20:32,960 DEBUG [java.sql.PreparedStatement] - <{pstm-100495} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-02-01 15:20:32,960 DEBUG [java.sql.PreparedStatement] - <{pstm-100495} Parameters: [001]>
2018-02-01 15:20:32,960 DEBUG [java.sql.PreparedStatement] - <{pstm-100495} Types: [java.lang.String]>
2018-02-01 15:20:32,961 DEBUG [java.sql.ResultSet] - <{rset-100496} ResultSet>
2018-02-01 15:20:32,961 DEBUG [java.sql.ResultSet] - <{rset-100496} Header: [deptid, deptname]>
2018-02-01 15:20:32,961 DEBUG [java.sql.ResultSet] - <{rset-100496} Result: [001, 康馨热力]>
2018-02-01 15:20:32,961 DEBUG [java.sql.Connection] - <{conn-100497} Connection>
2018-02-01 15:20:32,961 DEBUG [java.sql.Connection] - <{conn-100497} Preparing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-02-01 15:20:32,962 DEBUG [java.sql.PreparedStatement] - <{pstm-100498} Executing Statement:    SELECT deptid, deptname from eadept a     WHERE a.deptid = ?  >
2018-02-01 15:20:32,962 DEBUG [java.sql.PreparedStatement] - <{pstm-100498} Parameters: [001]>
2018-02-01 15:20:32,962 DEBUG [java.sql.PreparedStatement] - <{pstm-100498} Types: [java.lang.String]>
2018-02-01 15:20:32,962 DEBUG [java.sql.ResultSet] - <{rset-100499} ResultSet>
2018-02-01 15:20:32,963 DEBUG [java.sql.ResultSet] - <{rset-100499} Header: [deptid, deptname]>
2018-02-01 15:20:32,963 DEBUG [java.sql.ResultSet] - <{rset-100499} Result: [001, 康馨热力]>
2018-02-01 15:20:32,963 DEBUG [java.sql.Connection] - <{conn-100500} Connection>
2018-02-01 15:20:32,964 DEBUG [java.sql.Connection] - <{conn-100500} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-02-01 15:20:32,964 DEBUG [java.sql.PreparedStatement] - <{pstm-100501} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-02-01 15:20:32,964 DEBUG [java.sql.PreparedStatement] - <{pstm-100501} Parameters: [100043]>
2018-02-01 15:20:32,964 DEBUG [java.sql.PreparedStatement] - <{pstm-100501} Types: [java.lang.String]>
2018-02-01 15:20:32,965 DEBUG [java.sql.ResultSet] - <{rset-100502} ResultSet>
2018-02-01 15:20:32,965 DEBUG [java.sql.ResultSet] - <{rset-100502} Header: [theme]>
2018-02-01 15:20:32,965 DEBUG [java.sql.ResultSet] - <{rset-100502} Result: [default]>
2018-02-01 15:20:32,972 DEBUG [java.sql.Connection] - <{conn-100503} Connection>
2018-02-01 15:20:32,972 DEBUG [java.sql.Connection] - <{conn-100503} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-02-01 15:20:32,972 DEBUG [java.sql.PreparedStatement] - <{pstm-100504} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0103%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-02-01 15:20:32,972 DEBUG [java.sql.PreparedStatement] - <{pstm-100504} Parameters: [100043]>
2018-02-01 15:20:32,972 DEBUG [java.sql.PreparedStatement] - <{pstm-100504} Types: [java.lang.String]>
2018-02-01 15:20:32,975 DEBUG [java.sql.ResultSet] - <{rset-100505} ResultSet>
2018-02-01 15:20:32,975 DEBUG [java.sql.ResultSet] - <{rset-100505} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-02-01 15:20:32,975 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [010305, 入网管理, null, 0103, module/iw.ered?reqCode=intoWebInit, 0, false, false, tab_blank.png]>
2018-02-01 15:20:32,975 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [01030404, 新建换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,975 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [01030405, 修改换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,975 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [010301, 热源管理, null, 0103, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,975 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [01030401, 新建热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,975 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [01030406, 删除换热站, null, 010304, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,975 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [01030403, 删除热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,976 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [01030311, 修改面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,976 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [01030313, 删除面积1, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,976 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [01030501, 新增入网, null, 010305, null, 1, false, true, tab_blank.png]>
2018-02-01 15:20:32,976 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [01030202, 导入模板下载, null, 010302, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,976 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [01030201, 选择导入文件, null, 010302, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,976 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [010304, 热源站所管理, null, 0103, module/sr.ered?reqCode=sourceInit, 0, false, false, tab_blank.png]>
2018-02-01 15:20:32,976 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [0103, 基础信息, null, 01, null, 0, true, false, tab_blank.png]>
2018-02-01 15:20:32,976 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [01030312, 删除面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,977 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [01030301, 新建小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,977 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [01030310, 添加面积2, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,977 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [01030502, 修改入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,977 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [01030402, 修改热源, null, 010304, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,977 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [010303, 基础信息维护, null, 0103, module/fc.ered?reqCode=communityInit, 0, false, false, tab_blank.png]>
2018-02-01 15:20:32,977 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [01030302, 修改小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,977 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [01030503, 删除入网, null, 010305, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,977 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [01030303, 删除小区, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,977 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [010302, 基础数据导入, null, 0103, module/importHouse.ered?reqCode=importInit, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,977 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [01030304, 新建大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,978 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [01030305, 修改大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,978 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [01030306, 删除大楼, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,978 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [01030307, 新建用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,978 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [01030308, 修改用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,978 DEBUG [java.sql.ResultSet] - <{rset-100505} Result: [01030309, 删除用户, null, 010303, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:32,978 DEBUG [java.sql.Connection] - <{conn-100506} Connection>
2018-02-01 15:20:32,979 DEBUG [java.sql.Connection] - <{conn-100506} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-02-01 15:20:32,979 DEBUG [java.sql.PreparedStatement] - <{pstm-100507} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-02-01 15:20:32,979 DEBUG [java.sql.PreparedStatement] - <{pstm-100507} Parameters: [100043]>
2018-02-01 15:20:32,979 DEBUG [java.sql.PreparedStatement] - <{pstm-100507} Types: [java.lang.String]>
2018-02-01 15:20:32,980 DEBUG [java.sql.ResultSet] - <{rset-100508} ResultSet>
2018-02-01 15:20:32,980 DEBUG [java.sql.Connection] - <{conn-100509} Connection>
2018-02-01 15:20:32,980 DEBUG [java.sql.Connection] - <{conn-100509} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-02-01 15:20:32,980 DEBUG [java.sql.PreparedStatement] - <{pstm-100510} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-02-01 15:20:32,980 DEBUG [java.sql.PreparedStatement] - <{pstm-100510} Parameters: [01]>
2018-02-01 15:20:32,980 DEBUG [java.sql.PreparedStatement] - <{pstm-100510} Types: [java.lang.String]>
2018-02-01 15:20:32,981 DEBUG [java.sql.ResultSet] - <{rset-100511} ResultSet>
2018-02-01 15:20:32,981 DEBUG [java.sql.ResultSet] - <{rset-100511} Header: [menuname]>
2018-02-01 15:20:32,981 DEBUG [java.sql.ResultSet] - <{rset-100511} Result: [供热收费管理信息系统]>
2018-02-01 15:20:32,992 DEBUG [java.sql.Connection] - <{conn-100512} Connection>
2018-02-01 15:20:32,992 DEBUG [java.sql.Connection] - <{conn-100512} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-02-01 15:20:32,992 DEBUG [java.sql.PreparedStatement] - <{pstm-100513} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0104%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-02-01 15:20:32,998 DEBUG [java.sql.PreparedStatement] - <{pstm-100513} Parameters: [100043]>
2018-02-01 15:20:32,998 DEBUG [java.sql.PreparedStatement] - <{pstm-100513} Types: [java.lang.String]>
2018-02-01 15:20:33,000 DEBUG [java.sql.ResultSet] - <{rset-100514} ResultSet>
2018-02-01 15:20:33,000 DEBUG [java.sql.ResultSet] - <{rset-100514} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-02-01 15:20:33,000 DEBUG [java.sql.ResultSet] - <{rset-100514} Result: [010402, 收费管理, null, 0104, module/chg.ered?reqCode=chargeInit, 1, false, false, tab_blank.png]>
2018-02-01 15:20:33,000 DEBUG [java.sql.ResultSet] - <{rset-100514} Result: [01040503, 作废票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:33,001 DEBUG [java.sql.ResultSet] - <{rset-100514} Result: [01040501, 票据入库, null, 010405, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:33,001 DEBUG [java.sql.ResultSet] - <{rset-100514} Result: [01040401, 冲账, null, 010404, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:33,001 DEBUG [java.sql.ResultSet] - <{rset-100514} Result: [01040101, 生成应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:33,001 DEBUG [java.sql.ResultSet] - <{rset-100514} Result: [010401, 生成应收, null, 0104, module/crp.ered?reqCode=creatPlanInit, 1, false, false, tab_blank.png]>
2018-02-01 15:20:33,001 DEBUG [java.sql.ResultSet] - <{rset-100514} Result: [01040505, 领用票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:33,001 DEBUG [java.sql.ResultSet] - <{rset-100514} Result: [01040302, 删除减免, null, 010403, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:33,001 DEBUG [java.sql.ResultSet] - <{rset-100514} Result: [01040301, 减免应收, null, 010403, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:33,002 DEBUG [java.sql.ResultSet] - <{rset-100514} Result: [01040502, 删除票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:33,002 DEBUG [java.sql.ResultSet] - <{rset-100514} Result: [01040201, 收费, null, 010402, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:33,002 DEBUG [java.sql.ResultSet] - <{rset-100514} Result: [01040102, 删除应收, null, 010401, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:33,002 DEBUG [java.sql.ResultSet] - <{rset-100514} Result: [01040504, 返还票据, null, 010405, null, 1, false, false, tab_blank.png]>
2018-02-01 15:20:33,003 DEBUG [java.sql.ResultSet] - <{rset-100514} Result: [010403, 减免管理, null, 0104, module/mns.ered?reqCode=minusInit, 1, false, false, tab_blank.png]>
2018-02-01 15:20:33,003 DEBUG [java.sql.ResultSet] - <{rset-100514} Result: [0104, 收费管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-02-01 15:20:33,003 DEBUG [java.sql.ResultSet] - <{rset-100514} Result: [010404, 冲账管理, null, 0104, module/rlb.ered?reqCode=rollbackInit, 1, false, false, tab_blank.png]>
2018-02-01 15:20:33,003 DEBUG [java.sql.ResultSet] - <{rset-100514} Result: [010405, 票据管理, null, 0104, module/inv.ered?reqCode=invoiceInit, 1, false, false, tab_blank.png]>
2018-02-01 15:20:33,003 DEBUG [java.sql.ResultSet] - <{rset-100514} Result: [010406, 银行对账, null, 0104, module/bnk.ered?reqCode=bankInit, 0, false, false, tab_blank.png]>
2018-02-01 15:20:33,004 DEBUG [java.sql.Connection] - <{conn-100515} Connection>
2018-02-01 15:20:33,004 DEBUG [java.sql.Connection] - <{conn-100515} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-02-01 15:20:33,005 DEBUG [java.sql.PreparedStatement] - <{pstm-100516} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-02-01 15:20:33,005 DEBUG [java.sql.PreparedStatement] - <{pstm-100516} Parameters: [100043]>
2018-02-01 15:20:33,005 DEBUG [java.sql.PreparedStatement] - <{pstm-100516} Types: [java.lang.String]>
2018-02-01 15:20:33,006 DEBUG [java.sql.ResultSet] - <{rset-100517} ResultSet>
2018-02-01 15:20:33,006 DEBUG [java.sql.Connection] - <{conn-100518} Connection>
2018-02-01 15:20:33,006 DEBUG [java.sql.Connection] - <{conn-100518} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-02-01 15:20:33,006 DEBUG [java.sql.PreparedStatement] - <{pstm-100519} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-02-01 15:20:33,006 DEBUG [java.sql.PreparedStatement] - <{pstm-100519} Parameters: [01]>
2018-02-01 15:20:33,006 DEBUG [java.sql.PreparedStatement] - <{pstm-100519} Types: [java.lang.String]>
2018-02-01 15:20:33,007 DEBUG [java.sql.ResultSet] - <{rset-100520} ResultSet>
2018-02-01 15:20:33,007 DEBUG [java.sql.ResultSet] - <{rset-100520} Header: [menuname]>
2018-02-01 15:20:33,007 DEBUG [java.sql.ResultSet] - <{rset-100520} Result: [供热收费管理信息系统]>
2018-02-01 15:20:33,017 DEBUG [java.sql.Connection] - <{conn-100521} Connection>
2018-02-01 15:20:33,017 DEBUG [java.sql.Connection] - <{conn-100521} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-02-01 15:20:33,017 DEBUG [java.sql.PreparedStatement] - <{pstm-100522} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0105%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-02-01 15:20:33,017 DEBUG [java.sql.PreparedStatement] - <{pstm-100522} Parameters: [100043]>
2018-02-01 15:20:33,017 DEBUG [java.sql.PreparedStatement] - <{pstm-100522} Types: [java.lang.String]>
2018-02-01 15:20:33,019 DEBUG [java.sql.ResultSet] - <{rset-100523} ResultSet>
2018-02-01 15:20:33,020 DEBUG [java.sql.ResultSet] - <{rset-100523} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-02-01 15:20:33,020 DEBUG [java.sql.ResultSet] - <{rset-100523} Result: [010501, 基础报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-02-01 15:20:33,020 DEBUG [java.sql.ResultSet] - <{rset-100523} Result: [010502, 收费报表, null, 0105, null, 0, false, true, tab_blank.png]>
2018-02-01 15:20:33,020 DEBUG [java.sql.ResultSet] - <{rset-100523} Result: [01050202, 欠费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050201, 1, false, false, tab_blank.png]>
2018-02-01 15:20:33,020 DEBUG [java.sql.ResultSet] - <{rset-100523} Result: [01050101, 用户情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=f01050101, 1, false, false, tab_blank.png]>
2018-02-01 15:20:33,020 DEBUG [java.sql.ResultSet] - <{rset-100523} Result: [01050102, 入网情况汇总表, null, 010501, module/rpt.ered?reqCode=reportInit&rpt_id=w01050301, 1, false, false, tab_blank.png]>
2018-02-01 15:20:33,020 DEBUG [java.sql.ResultSet] - <{rset-100523} Result: [01050203, 收费明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050202, 1, false, false, tab_blank.png]>
2018-02-01 15:20:33,020 DEBUG [java.sql.ResultSet] - <{rset-100523} Result: [01050201, 收费情况表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050401, 1, false, false, tab_blank.png]>
2018-02-01 15:20:33,020 DEBUG [java.sql.ResultSet] - <{rset-100523} Result: [0105, 统计分析, null, 01, null, 0, true, false, tab_blank.png]>
2018-02-01 15:20:33,020 DEBUG [java.sql.ResultSet] - <{rset-100523} Result: [01050204, 减免明细表, null, 010502, module/rpt.ered?reqCode=reportInit&rpt_id=c01050204, 1, false, false, tab_blank.png]>
2018-02-01 15:20:33,020 DEBUG [java.sql.Connection] - <{conn-100524} Connection>
2018-02-01 15:20:33,021 DEBUG [java.sql.Connection] - <{conn-100524} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-02-01 15:20:33,021 DEBUG [java.sql.PreparedStatement] - <{pstm-100525} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-02-01 15:20:33,021 DEBUG [java.sql.PreparedStatement] - <{pstm-100525} Parameters: [100043]>
2018-02-01 15:20:33,021 DEBUG [java.sql.PreparedStatement] - <{pstm-100525} Types: [java.lang.String]>
2018-02-01 15:20:33,022 DEBUG [java.sql.ResultSet] - <{rset-100526} ResultSet>
2018-02-01 15:20:33,022 DEBUG [java.sql.Connection] - <{conn-100527} Connection>
2018-02-01 15:20:33,023 DEBUG [java.sql.Connection] - <{conn-100527} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-02-01 15:20:33,023 DEBUG [java.sql.PreparedStatement] - <{pstm-100528} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-02-01 15:20:33,023 DEBUG [java.sql.PreparedStatement] - <{pstm-100528} Parameters: [01]>
2018-02-01 15:20:33,023 DEBUG [java.sql.PreparedStatement] - <{pstm-100528} Types: [java.lang.String]>
2018-02-01 15:20:33,024 DEBUG [java.sql.ResultSet] - <{rset-100529} ResultSet>
2018-02-01 15:20:33,024 DEBUG [java.sql.ResultSet] - <{rset-100529} Header: [menuname]>
2018-02-01 15:20:33,024 DEBUG [java.sql.ResultSet] - <{rset-100529} Result: [供热收费管理信息系统]>
2018-02-01 15:20:33,034 DEBUG [java.sql.Connection] - <{conn-100530} Connection>
2018-02-01 15:20:33,034 DEBUG [java.sql.Connection] - <{conn-100530} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-02-01 15:20:33,034 DEBUG [java.sql.PreparedStatement] - <{pstm-100531} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM earoleauthorize a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.menuid like '0101%'               AND a.roleid IN (SELECT roleid                                    FROM eauserauthorize                                   WHERE userid = ?)          ORDER BY b.sortno asc  >
2018-02-01 15:20:33,035 DEBUG [java.sql.PreparedStatement] - <{pstm-100531} Parameters: [100043]>
2018-02-01 15:20:33,035 DEBUG [java.sql.PreparedStatement] - <{pstm-100531} Types: [java.lang.String]>
2018-02-01 15:20:33,038 DEBUG [java.sql.ResultSet] - <{rset-100532} ResultSet>
2018-02-01 15:20:33,038 DEBUG [java.sql.ResultSet] - <{rset-100532} Header: [menuid, menuname, iconcls, parentid, request, leaf, isroot, expanded, icon]>
2018-02-01 15:20:33,038 DEBUG [java.sql.ResultSet] - <{rset-100532} Result: [01010304, 收费标准, server_connectIcon, 010103, module/std.ered?reqCode=standardInit, 1, false, false, server_connect.png]>
2018-02-01 15:20:33,038 DEBUG [java.sql.ResultSet] - <{rset-100532} Result: [010102, 权限管理, null, 0101, null, 0, false, true, tab_blank.png]>
2018-02-01 15:20:33,039 DEBUG [java.sql.ResultSet] - <{rset-100532} Result: [01010403, Requst请求跟踪, server_connectIcon, 010104, eventTrack.ered?reqCode=init, 1, false, false, server_connect.png]>
2018-02-01 15:20:33,039 DEBUG [java.sql.ResultSet] - <{rset-100532} Result: [01010201, 组织机构管理, chart_organisationIcon, 010102, organization.ered?reqCode=departmentInit, 1, false, false, chart_organisation.png]>
2018-02-01 15:20:33,039 DEBUG [java.sql.ResultSet] - <{rset-100532} Result: [01010301, 字典维护, application_view_listIcon, 010103, resource.ered?reqCode=codeTableInit, 1, false, false, application_view_list.png]>
2018-02-01 15:20:33,040 DEBUG [java.sql.ResultSet] - <{rset-100532} Result: [01010401, Session会话监控, user_commentIcon, 010104, sessionMonitor.ered?reqCode=init, 1, false, false, user_comment.png]>
2018-02-01 15:20:33,040 DEBUG [java.sql.ResultSet] - <{rset-100532} Result: [01010204, 角色管理与授权, award_star_silver_3Icon, 010102, role.ered?reqCode=roleInit, 1, false, false, award_star_silver_3.png]>
2018-02-01 15:20:33,040 DEBUG [java.sql.ResultSet] - <{rset-100532} Result: [01010303, 全局参数表维护, configIcon, 010103, param.ered?reqCode=init, 1, false, false, config.png]>
2018-02-01 15:20:33,040 DEBUG [java.sql.ResultSet] - <{rset-100532} Result: [010103, 基础数据维护, null, 0101, null, 0, false, true, tab_blank.png]>
2018-02-01 15:20:33,041 DEBUG [java.sql.ResultSet] - <{rset-100532} Result: [010104, 运行监控, null, 0101, null, 0, false, true, tab_blank.png]>
2018-02-01 15:20:33,041 DEBUG [java.sql.ResultSet] - <{rset-100532} Result: [01010202, 人员管理与授权, group_linkIcon, 010102, user.ered?reqCode=userInit, 1, false, false, group_link.png]>
2018-02-01 15:20:33,041 DEBUG [java.sql.ResultSet] - <{rset-100532} Result: [01010405, JDBC执行监控, database_refreshIcon, 010104, jdbcMonitor.ered?reqCode=jdbcInit, 1, false, false, database_refresh.png]>
2018-02-01 15:20:33,041 DEBUG [java.sql.ResultSet] - <{rset-100532} Result: [01010406, Service监控, pluginIcon, 010104, beanMonitor.ered?reqCode=init, 1, false, false, plugin.png]>
2018-02-01 15:20:33,041 DEBUG [java.sql.ResultSet] - <{rset-100532} Result: [01010205, 菜单资源管理, layout_contentIcon, 010102, resource.ered?reqCode=menuResourceInit, 1, false, false, layout_content.png]>
2018-02-01 15:20:33,041 DEBUG [java.sql.ResultSet] - <{rset-100532} Result: [0101, 系统管理, null, 01, null, 0, true, false, tab_blank.png]>
2018-02-01 15:20:33,041 DEBUG [java.sql.Connection] - <{conn-100533} Connection>
2018-02-01 15:20:33,042 DEBUG [java.sql.Connection] - <{conn-100533} Preparing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-02-01 15:20:33,042 DEBUG [java.sql.PreparedStatement] - <{pstm-100534} Executing Statement:    SELECT DISTINCT a.menuid, b.menuname, b.iconcls,b.parentid,b.request,b.sortno, b.leaf,decode(length(b.menuid),4,'true','false') as isRoot,                    decode(b.expanded,'1','true','0','false',null) as expanded,a.authorizelevel, decode(b.icon,null,'tab_blank.png',b.icon) as icon              FROM eausermenumap a, eamenu b             WHERE a.authorizelevel = '1'               AND a.menuid = b.menuid and a.userid = ?          ORDER BY b.sortno asc  >
2018-02-01 15:20:33,042 DEBUG [java.sql.PreparedStatement] - <{pstm-100534} Parameters: [100043]>
2018-02-01 15:20:33,042 DEBUG [java.sql.PreparedStatement] - <{pstm-100534} Types: [java.lang.String]>
2018-02-01 15:20:33,043 DEBUG [java.sql.ResultSet] - <{rset-100535} ResultSet>
2018-02-01 15:20:33,043 DEBUG [java.sql.Connection] - <{conn-100536} Connection>
2018-02-01 15:20:33,043 DEBUG [java.sql.Connection] - <{conn-100536} Preparing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-02-01 15:20:33,044 DEBUG [java.sql.PreparedStatement] - <{pstm-100537} Executing Statement:    SELECT menuname FROM eamenu WHERE menuid = ?  >
2018-02-01 15:20:33,044 DEBUG [java.sql.PreparedStatement] - <{pstm-100537} Parameters: [01]>
2018-02-01 15:20:33,044 DEBUG [java.sql.PreparedStatement] - <{pstm-100537} Types: [java.lang.String]>
2018-02-01 15:20:33,045 DEBUG [java.sql.ResultSet] - <{rset-100538} ResultSet>
2018-02-01 15:20:33,045 DEBUG [java.sql.ResultSet] - <{rset-100538} Header: [menuname]>
2018-02-01 15:20:33,045 DEBUG [java.sql.ResultSet] - <{rset-100538} Result: [供热收费管理信息系统]>
2018-02-01 15:20:33,517 DEBUG [java.sql.Connection] - <{conn-100539} Connection>
2018-02-01 15:20:33,518 DEBUG [java.sql.Connection] - <{conn-100539} Preparing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-02-01 15:20:33,519 DEBUG [java.sql.PreparedStatement] - <{pstm-100540} Executing Statement:    SELECT community_code as id, community_code||' '||community_name||' ('||building_count||')' as text,nvl(building_count,0) as child_Count   FROM   fc_community order by community_code  >
2018-02-01 15:20:33,519 DEBUG [java.sql.PreparedStatement] - <{pstm-100540} Parameters: []>
2018-02-01 15:20:33,519 DEBUG [java.sql.PreparedStatement] - <{pstm-100540} Types: []>
2018-02-01 15:20:33,522 DEBUG [java.sql.ResultSet] - <{rset-100541} ResultSet>
2018-02-01 15:20:33,522 DEBUG [java.sql.ResultSet] - <{rset-100541} Header: [id, text, child_count]>
2018-02-01 15:20:33,522 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0001, 0001 冶矿中心 (1), 1]>
2018-02-01 15:20:33,522 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0002, 0002 劳动局家属楼 (1), 1]>
2018-02-01 15:20:33,522 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0003, 0003 食品公司 (1), 1]>
2018-02-01 15:20:33,522 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0004, 0004 人社局11号楼 (2), 2]>
2018-02-01 15:20:33,523 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0005, 0005 卫生局家属楼 (1), 1]>
2018-02-01 15:20:33,523 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0006, 0006 水电公司 (2), 2]>
2018-02-01 15:20:33,523 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0007, 0007 水利局陈卿小区 (1), 1]>
2018-02-01 15:20:33,523 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0008, 0008 发改局家属楼 (1), 1]>
2018-02-01 15:20:33,523 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0009, 0009 公路段家属楼 (1), 1]>
2018-02-01 15:20:33,524 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0010, 0010 公路段平房 (1), 1]>
2018-02-01 15:20:33,524 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0011, 0011 公安局家属楼 (1), 1]>
2018-02-01 15:20:33,526 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0012, 0012 人民银行 (2), 2]>
2018-02-01 15:20:33,526 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0013, 0013 文卫路陈卿小区 (1), 1]>
2018-02-01 15:20:33,526 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0014, 0014 中医院家属楼 (1), 1]>
2018-02-01 15:20:33,526 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0015, 0015 腾达鞋业 (3), 3]>
2018-02-01 15:20:33,526 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0016, 0016 城关供销社 (2), 2]>
2018-02-01 15:20:33,526 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0017, 0017 城南便民超市 (1), 1]>
2018-02-01 15:20:33,526 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0018, 0018 祥源便民超市 (1), 1]>
2018-02-01 15:20:33,526 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0019, 0019 老北京饭店 (1), 1]>
2018-02-01 15:20:33,527 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0020, 0020 开门红打印店 (1), 1]>
2018-02-01 15:20:33,527 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0021, 0021 一中状元路拐角楼 (1), 1]>
2018-02-01 15:20:33,527 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0022, 0022 常委家属楼 (1), 1]>
2018-02-01 15:20:33,527 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0023, 0023 府前街002号院 (1), 1]>
2018-02-01 15:20:33,527 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0024, 0024 府前街（新华书店对面） (1), 1]>
2018-02-01 15:20:33,527 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0025, 0025 东厢小区 (2), 2]>
2018-02-01 15:20:33,527 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0026, 0026 凤凰名居旁 (1), 1]>
2018-02-01 15:20:33,528 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0027, 0027 电影公司家属楼 (1), 1]>
2018-02-01 15:20:33,528 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0028, 0028 凤凰名居 (2), 2]>
2018-02-01 15:20:33,528 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0029, 0029 府东006#家属楼 (2), 2]>
2018-02-01 15:20:33,528 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0030, 0030 药材公司窑 (1), 1]>
2018-02-01 15:20:33,529 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0031, 0031 府西小区 (3), 3]>
2018-02-01 15:20:33,529 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0032, 0032 工商局家属楼 (3), 3]>
2018-02-01 15:20:33,529 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0033, 0033 供销合作联合社 (2), 2]>
2018-02-01 15:20:33,529 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0034, 0034 果品公司家属楼 (1), 1]>
2018-02-01 15:20:33,529 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0035, 0035 宏运饮食服务公司 (4), 4]>
2018-02-01 15:20:33,529 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0036, 0036 旧工行家属院 (5), 5]>
2018-02-01 15:20:33,529 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0037, 0037 落子剧团家属楼 (3), 3]>
2018-02-01 15:20:33,529 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0038, 0038 粮食局家属楼 (5), 5]>
2018-02-01 15:20:33,529 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0039, 0039 茂源糖酒公司家属楼 (1), 1]>
2018-02-01 15:20:33,530 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0040, 0040 旅游局旁门市住户 (1), 1]>
2018-02-01 15:20:33,530 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0041, 0041 农行机关家属楼 (1), 1]>
2018-02-01 15:20:33,530 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0042, 0042 青羊社区院内 (1), 1]>
2018-02-01 15:20:33,530 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0043, 0043 人大家属楼   (1), 1]>
2018-02-01 15:20:33,530 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0044, 0044 人民医院家属楼 (9), 9]>
2018-02-01 15:20:33,530 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0045, 0045 水利局家属楼    (1), 1]>
2018-02-01 15:20:33,531 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0046, 0046 水利局附近居民 (1), 1]>
2018-02-01 15:20:33,531 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0047, 0047 水利局新楼 (2), 2]>
2018-02-01 15:20:33,531 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0048, 0048 王庄分社   (2), 2]>
2018-02-01 15:20:33,531 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0049, 0049 卫生监督所家属楼 (1), 1]>
2018-02-01 15:20:33,531 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0050, 0050 武装部家属楼   (1), 1]>
2018-02-01 15:20:33,532 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0051, 0051 新宇百货家属楼 (1), 1]>
2018-02-01 15:20:33,532 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0052, 0052 阳光佳苑（原药材公司院） (1), 1]>
2018-02-01 15:20:33,532 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0053, 0053 药材公司家属楼 (1), 1]>
2018-02-01 15:20:33,532 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0054, 0054 元发兴小院 (1), 1]>
2018-02-01 15:20:33,532 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0055, 0055 周转房家属楼   (1), 1]>
2018-02-01 15:20:33,532 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0056, 0056 自来水家属楼 (4), 4]>
2018-02-01 15:20:33,532 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0057, 0057 自来水公司家属楼（城建局上面） (1), 1]>
2018-02-01 15:20:33,532 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0058, 0058 组织部家属楼  (1), 1]>
2018-02-01 15:20:33,533 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0059, 0059 政府商铺 (36), 36]>
2018-02-01 15:20:33,533 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [0060, 0060 和园小区 (1), 1]>
2018-02-01 15:20:33,533 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1001, 1001 滨河湾家属楼 (47), 47]>
2018-02-01 15:20:33,533 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1002, 1002 地矿局家属楼 (1), 1]>
2018-02-01 15:20:33,534 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1003, 1003 平顺县彩凤祥玉小区 (1), 1]>
2018-02-01 15:20:33,534 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1004, 1004 平顺县交通执法局家属院 (1), 1]>
2018-02-01 15:20:33,534 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1005, 1005 信用联社家属院 (1), 1]>
2018-02-01 15:20:33,534 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1006, 1006 民政局家属院 (1), 1]>
2018-02-01 15:20:33,534 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1007, 1007 青羊山腾飞小区马建楼 (1), 1]>
2018-02-01 15:20:33,534 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1008, 1008 电影院家属楼 (2), 2]>
2018-02-01 15:20:33,535 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1009, 1009 顺安小区 (1), 1]>
2018-02-01 15:20:33,536 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1010, 1010 商务中心 (2), 2]>
2018-02-01 15:20:33,537 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1011, 1011 彩风花苑 (1), 1]>
2018-02-01 15:20:33,537 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1012, 1012 彩凤道城关村 (1), 1]>
2018-02-01 15:20:33,537 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1013, 1013 康乐食品公司 (3), 3]>
2018-02-01 15:20:33,538 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1014, 1014 宏达五交化新楼 (3), 3]>
2018-02-01 15:20:33,538 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1015, 1015 五交化公司南楼 (3), 3]>
2018-02-01 15:20:33,538 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1016, 1016 宏昌汽修铁冶社新楼南楼 (4), 4]>
2018-02-01 15:20:33,538 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1017, 1017 运输公司南楼 (4), 4]>
2018-02-01 15:20:33,538 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1018, 1018 针织厂北楼东小楼 (2), 2]>
2018-02-01 15:20:33,538 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1019, 1019 彩凤花苑 (1), 1]>
2018-02-01 15:20:33,539 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1020, 1020 顺安小区 (1), 1]>
2018-02-01 15:20:33,539 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1021, 1021 运输公司北楼一楼 (1), 1]>
2018-02-01 15:20:33,539 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1022, 1022 五交化公司大门顶楼下鞋店 (1), 1]>
2018-02-01 15:20:33,539 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1023, 1023 针织厂北楼楼下聚美日化 (1), 1]>
2018-02-01 15:20:33,539 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1024, 1024 商务中心楼下卖摩托车 (1), 1]>
2018-02-01 15:20:33,540 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1025, 1025 宏达五交化温馨家园 (1), 1]>
2018-02-01 15:20:33,540 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1026, 1026 康乐食品楼下 (1), 1]>
2018-02-01 15:20:33,540 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1027, 1027 青羊祥玉小区张华显楼 (1), 1]>
2018-02-01 15:20:33,540 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1028, 1028 五交化公司一楼韵达快递 (1), 1]>
2018-02-01 15:20:33,540 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1029, 1029 针织厂三单元302户 (1), 1]>
2018-02-01 15:20:33,540 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1030, 1030 康乐食品北四层楼一单元402户 (1), 1]>
2018-02-01 15:20:33,541 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1031, 1031 彩凤小区贸易货栈二单元302户 (1), 1]>
2018-02-01 15:20:33,541 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1032, 1032 宏达五交化三楼305 (1), 1]>
2018-02-01 15:20:33,541 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1033, 1033 运输公司北楼二楼203户 (1), 1]>
2018-02-01 15:20:33,541 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1034, 1034 国家电网旁春娥批零部 (1), 1]>
2018-02-01 15:20:33,541 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1035, 1035 电影院周小红 (1), 1]>
2018-02-01 15:20:33,541 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1036, 1036 青羊山腾飞小区马建楼 (1), 1]>
2018-02-01 15:20:33,541 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1037, 1037 自来水家属楼 (1), 1]>
2018-02-01 15:20:33,541 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1038, 1038 彩凤小区30号贸易货栈 (1), 1]>
2018-02-01 15:20:33,541 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [1039, 1039 交警队家属楼 (1), 1]>
2018-02-01 15:20:33,542 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [2001, 2001 阳光花苑 (34), 34]>
2018-02-01 15:20:33,542 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [3001, 3001 滨河花园 (4), 4]>
2018-02-01 15:20:33,542 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [3002, 3002 电力小区 (3), 3]>
2018-02-01 15:20:33,542 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [3003, 3003 交通局家属楼 (2), 2]>
2018-02-01 15:20:33,542 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [3004, 3004 进修校家属区 (4), 4]>
2018-02-01 15:20:33,542 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [3005, 3005 水泵厂 (2), 2]>
2018-02-01 15:20:33,547 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [3006, 3006 小东峪新楼 (1), 1]>
2018-02-01 15:20:33,547 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [3007, 3007 一中 (4), 4]>
2018-02-01 15:20:33,547 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [4001, 4001 地税局 (5), 5]>
2018-02-01 15:20:33,547 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [4002, 4002 林业局家属院 (1), 1]>
2018-02-01 15:20:33,547 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [4003, 4003 妇幼保健院 (2), 2]>
2018-02-01 15:20:33,548 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [4004, 4004 物资局 (6), 6]>
2018-02-01 15:20:33,548 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [4005, 4005 计生服务站家属院 (1), 1]>
2018-02-01 15:20:33,548 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [4006, 4006 党校家属院 (1), 1]>
2018-02-01 15:20:33,548 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [4007, 4007 党校小院 (1), 1]>
2018-02-01 15:20:33,548 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [4008, 4008 饲料公司家属院 (1), 1]>
2018-02-01 15:20:33,556 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [4009, 4009 住建局家属院 (1), 1]>
2018-02-01 15:20:33,556 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [4010, 4010 中小企业局家属院 (1), 1]>
2018-02-01 15:20:33,556 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [4011, 4011 康乐小区 (2), 2]>
2018-02-01 15:20:33,556 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [5001, 5001 财政局家属楼 (2), 2]>
2018-02-01 15:20:33,557 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [5002, 5002 城关镇卫生所   (1), 1]>
2018-02-01 15:20:33,557 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [5003, 5003 城镇工业联合社 (1), 1]>
2018-02-01 15:20:33,557 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [5004, 5004 国税局家属楼 (1), 1]>
2018-02-01 15:20:33,557 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [5005, 5005 联通公司家属楼 (1), 1]>
2018-02-01 15:20:33,557 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [5006, 5006 贸易中心五交化 (2), 2]>
2018-02-01 15:20:33,557 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [5007, 5007 农机公司家属楼 (3), 3]>
2018-02-01 15:20:33,557 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [5008, 5008 农机站商铺 (1), 1]>
2018-02-01 15:20:33,557 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [5009, 5009 青羊镇家属楼及平房 (2), 2]>
2018-02-01 15:20:33,558 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [5010, 5010 人保财险家属楼 (2), 2]>
2018-02-01 15:20:33,558 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [5011, 5011 木建厂彩凤小区 (4), 4]>
2018-02-01 15:20:33,558 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [5012, 5012 实验小学 (2), 2]>
2018-02-01 15:20:33,558 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [5013, 5013 农机站土产日杂门市 (1), 1]>
2018-02-01 15:20:33,558 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [5014, 5014 土地局家属楼 (1), 1]>
2018-02-01 15:20:33,558 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [5015, 5015 外贸公司 (7), 7]>
2018-02-01 15:20:33,559 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [5016, 5016 新华书店 (1), 1]>
2018-02-01 15:20:33,559 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [5017, 5017 盐业公司家属楼 (1), 1]>
2018-02-01 15:20:33,559 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [5018, 5018 移动公司宿舍 (1), 1]>
2018-02-01 15:20:33,559 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [5019, 5019 邮政局家属楼 (1), 1]>
2018-02-01 15:20:33,559 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [6001, 6001 监察局家属院 (1), 1]>
2018-02-01 15:20:33,559 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [6002, 6002 环保局家属院 (1), 1]>
2018-02-01 15:20:33,559 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [6003, 6003 生产生活服务中心 (1), 1]>
2018-02-01 15:20:33,559 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [6004, 6004 平顺县朝阳小区 (1), 1]>
2018-02-01 15:20:33,560 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [6005, 6005 城西工行家属院 (1), 1]>
2018-02-01 15:20:33,560 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [6006, 6006 国税局王庄家属院 (1), 1]>
2018-02-01 15:20:33,560 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [6007, 6007 石油公司家属院 (2), 2]>
2018-02-01 15:20:33,560 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [6008, 6008 司法局家属院 (1), 1]>
2018-02-01 15:20:33,560 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [6009, 6009 农委 (2), 2]>
2018-02-01 15:20:33,560 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [6010, 6010 康乐苑小区 (3), 3]>
2018-02-01 15:20:33,560 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [6011, 6011 民政局西家属院 (1), 1]>
2018-02-01 15:20:33,560 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [6012, 6012 农场家属院 (1), 1]>
2018-02-01 15:20:33,561 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [6013, 6013 龙山小区 (5), 5]>
2018-02-01 15:20:33,561 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [6014, 6014 王庄国税局隔壁 (2), 2]>
2018-02-01 15:20:33,561 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [6015, 6015 城关村（春蕾幼儿园片） (1), 1]>
2018-02-01 15:20:33,561 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [6016, 6016 加州假日小镇 (6), 6]>
2018-02-01 15:20:33,561 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [6017, 6017 平顺县人民剧团家属院 (1), 1]>
2018-02-01 15:20:33,561 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [6018, 6018 怡路快捷酒店 (1), 1]>
2018-02-01 15:20:33,561 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [6019, 6019 平顺县物资局 (1), 1]>
2018-02-01 15:20:33,561 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [7001, 7001 万通苑 (5), 5]>
2018-02-01 15:20:33,561 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [7002, 7002 城关新村 (1), 1]>
2018-02-01 15:20:33,561 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [7003, 7003 广播电视台旧家属楼 (1), 1]>
2018-02-01 15:20:33,562 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [7004, 7004 气象局民用 (1), 1]>
2018-02-01 15:20:33,562 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [7005, 7005 紫东家园经济适用房 (16), 16]>
2018-02-01 15:20:33,562 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [7006, 7006 小东峪路保障房商铺 (1), 1]>
2018-02-01 15:20:33,562 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [7010, 7010 粮贸中心 (5), 5]>
2018-02-01 15:20:33,562 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [7011, 7011 安居工程 (1), 1]>
2018-02-01 15:20:33,562 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [7012, 7012 种子公司家属楼 (1), 1]>
2018-02-01 15:20:33,562 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [7013, 7013 青羊小区 (1), 1]>
2018-02-01 15:20:33,562 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [7014, 7014 青羊小区家属院 (1), 1]>
2018-02-01 15:20:33,562 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [7015, 7015 粮食局车队 (1), 1]>
2018-02-01 15:20:33,562 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [7016, 7016 金港100 (3), 3]>
2018-02-01 15:20:33,563 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [7017, 7017 老干居家属楼 (1), 1]>
2018-02-01 15:20:33,563 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [8001, 8001 大修厂 (1), 1]>
2018-02-01 15:20:33,563 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [8002, 8002 冶金公司 (3), 3]>
2018-02-01 15:20:33,563 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [8003, 8003 德盛苑 (9), 9]>
2018-02-01 15:20:33,563 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [8004, 8004 陈卿小区54号 (1), 1]>
2018-02-01 15:20:33,563 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [8005, 8005 青羊家园 (1), 1]>
2018-02-01 15:20:33,563 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [8006, 8006 荣兴加油站 (1), 1]>
2018-02-01 15:20:33,563 DEBUG [java.sql.ResultSet] - <{rset-100541} Result: [9999, 9999 银行测试数据 (1), 1]>
2018-02-01 15:20:33,683 DEBUG [java.sql.Connection] - <{conn-100542} Connection>
2018-02-01 15:20:33,683 DEBUG [java.sql.Connection] - <{conn-100542} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-02-01 15:20:33,686 DEBUG [java.sql.PreparedStatement] - <{pstm-100543} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-02-01 15:20:33,686 DEBUG [java.sql.PreparedStatement] - <{pstm-100543} Parameters: [100043]>
2018-02-01 15:20:33,686 DEBUG [java.sql.PreparedStatement] - <{pstm-100543} Types: [java.lang.String]>
2018-02-01 15:20:33,687 DEBUG [java.sql.ResultSet] - <{rset-100544} ResultSet>
2018-02-01 15:20:33,688 DEBUG [java.sql.ResultSet] - <{rset-100544} Header: [theme]>
2018-02-01 15:20:33,688 DEBUG [java.sql.ResultSet] - <{rset-100544} Result: [default]>
2018-02-01 15:20:36,007 DEBUG [java.sql.Connection] - <{conn-100545} Connection>
2018-02-01 15:20:36,008 DEBUG [java.sql.Connection] - <{conn-100545} Preparing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-02-01 15:20:36,008 DEBUG [java.sql.PreparedStatement] - <{pstm-100546} Executing Statement:    SELECT theme FROM eausersubinfo     WHERE userid = ?  >
2018-02-01 15:20:36,008 DEBUG [java.sql.PreparedStatement] - <{pstm-100546} Parameters: [100043]>
2018-02-01 15:20:36,008 DEBUG [java.sql.PreparedStatement] - <{pstm-100546} Types: [java.lang.String]>
2018-02-01 15:20:36,010 DEBUG [java.sql.ResultSet] - <{rset-100547} ResultSet>
2018-02-01 15:20:36,010 DEBUG [java.sql.ResultSet] - <{rset-100547} Header: [theme]>
2018-02-01 15:20:36,010 DEBUG [java.sql.ResultSet] - <{rset-100547} Result: [default]>
2018-02-01 15:20:36,262 DEBUG [java.sql.Connection] - <{conn-100548} Connection>
2018-02-01 15:20:36,262 DEBUG [java.sql.Connection] - <{conn-100548} Preparing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-02-01 15:20:36,262 DEBUG [java.sql.PreparedStatement] - <{pstm-100549} Executing Statement:    SELECT item_code value,item_name text   FROM   sf_item  >
2018-02-01 15:20:36,262 DEBUG [java.sql.PreparedStatement] - <{pstm-100549} Parameters: []>
2018-02-01 15:20:36,263 DEBUG [java.sql.PreparedStatement] - <{pstm-100549} Types: []>
2018-02-01 15:20:36,264 DEBUG [java.sql.ResultSet] - <{rset-100550} ResultSet>
2018-02-01 15:20:36,264 DEBUG [java.sql.ResultSet] - <{rset-100550} Header: [value, text]>
2018-02-01 15:20:36,264 DEBUG [java.sql.ResultSet] - <{rset-100550} Result: [A, 供热费]>
2018-02-01 15:20:36,265 DEBUG [java.sql.ResultSet] - <{rset-100550} Result: [B, 入网费]>
2018-02-01 15:20:38,609 DEBUG [java.sql.Connection] - <{conn-100551} Connection>
2018-02-01 15:20:38,609 DEBUG [java.sql.Connection] - <{conn-100551} Preparing Statement:    SELECT building_code as id, building_code||' '||building_name||' ('||house_count||')' as text,nvl(house_count,0) as child_Count   FROM fc_building a WHERE   a.community_code = '0001'  order by building_code  >
2018-02-01 15:20:38,610 DEBUG [java.sql.PreparedStatement] - <{pstm-100552} Executing Statement:    SELECT building_code as id, building_code||' '||building_name||' ('||house_count||')' as text,nvl(house_count,0) as child_Count   FROM fc_building a WHERE   a.community_code = '0001'  order by building_code  >
2018-02-01 15:20:38,610 DEBUG [java.sql.PreparedStatement] - <{pstm-100552} Parameters: []>
2018-02-01 15:20:38,610 DEBUG [java.sql.PreparedStatement] - <{pstm-100552} Types: []>
2018-02-01 15:20:38,611 DEBUG [java.sql.ResultSet] - <{rset-100553} ResultSet>
2018-02-01 15:20:38,612 DEBUG [java.sql.ResultSet] - <{rset-100553} Header: [id, text, child_count]>
2018-02-01 15:20:38,612 DEBUG [java.sql.ResultSet] - <{rset-100553} Result: [0001-008, 0001-008 8号楼 (18), 18]>
2018-02-01 15:20:39,468 DEBUG [java.sql.Connection] - <{conn-100554} Connection>
2018-02-01 15:20:39,468 DEBUG [java.sql.Connection] - <{conn-100554} Preparing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0001-008'   order by a.house_code  >
2018-02-01 15:20:39,468 DEBUG [java.sql.PreparedStatement] - <{pstm-100555} Executing Statement:    SELECT a.house_code as id, a.CELL_CODE||'-'||a.FLOOR||'-'||a.DOOR_CODE||' '||b.OWNER_NAME as text,0 as child_Count   FROM fc_house a,fc_owner b WHERE   a.house_code=b.house_code(+) and b.is_owner(+)='1' and a.building_code = '0001-008'   order by a.house_code  >
2018-02-01 15:20:39,468 DEBUG [java.sql.PreparedStatement] - <{pstm-100555} Parameters: []>
2018-02-01 15:20:39,468 DEBUG [java.sql.PreparedStatement] - <{pstm-100555} Types: []>
2018-02-01 15:20:39,470 DEBUG [java.sql.ResultSet] - <{rset-100556} ResultSet>
2018-02-01 15:20:39,470 DEBUG [java.sql.ResultSet] - <{rset-100556} Header: [id, text, child_count]>
2018-02-01 15:20:39,470 DEBUG [java.sql.ResultSet] - <{rset-100556} Result: [0001-008-01-01-01, 01-01-01 王建方, 0]>
2018-02-01 15:20:39,470 DEBUG [java.sql.ResultSet] - <{rset-100556} Result: [0001-008-01-01-02, 01-01-02 宋忠义, 0]>
2018-02-01 15:20:39,470 DEBUG [java.sql.ResultSet] - <{rset-100556} Result: [0001-008-01-02-01, 01-02-01 李爱书, 0]>
2018-02-01 15:20:39,470 DEBUG [java.sql.ResultSet] - <{rset-100556} Result: [0001-008-01-02-02, 01-02-02 申刚义, 0]>
2018-02-01 15:20:39,470 DEBUG [java.sql.ResultSet] - <{rset-100556} Result: [0001-008-01-03-01, 01-03-01 李琳, 0]>
2018-02-01 15:20:39,470 DEBUG [java.sql.ResultSet] - <{rset-100556} Result: [0001-008-01-03-02, 01-03-02 李根才, 0]>
2018-02-01 15:20:39,470 DEBUG [java.sql.ResultSet] - <{rset-100556} Result: [0001-008-01-04-01, 01-04-01 李保青, 0]>
2018-02-01 15:20:39,470 DEBUG [java.sql.ResultSet] - <{rset-100556} Result: [0001-008-01-04-02, 01-04-02 王慧玲, 0]>
2018-02-01 15:20:39,471 DEBUG [java.sql.ResultSet] - <{rset-100556} Result: [0001-008-02-01-01, 02-01-01 马爱英, 0]>
2018-02-01 15:20:39,471 DEBUG [java.sql.ResultSet] - <{rset-100556} Result: [0001-008-02-01-02, 02-01-02 王丽娟, 0]>
2018-02-01 15:20:39,471 DEBUG [java.sql.ResultSet] - <{rset-100556} Result: [0001-008-02-02-01, 02-02-01 刘红亮, 0]>
2018-02-01 15:20:39,471 DEBUG [java.sql.ResultSet] - <{rset-100556} Result: [0001-008-02-02-02, 02-02-02 孔文建, 0]>
2018-02-01 15:20:39,471 DEBUG [java.sql.ResultSet] - <{rset-100556} Result: [0001-008-02-03-01, 02-03-01 张小红, 0]>
2018-02-01 15:20:39,471 DEBUG [java.sql.ResultSet] - <{rset-100556} Result: [0001-008-02-03-02, 02-03-02 曹恒文, 0]>
2018-02-01 15:20:39,471 DEBUG [java.sql.ResultSet] - <{rset-100556} Result: [0001-008-02-04-01, 02-04-01 郭建中, 0]>
2018-02-01 15:20:39,471 DEBUG [java.sql.ResultSet] - <{rset-100556} Result: [0001-008-02-04-02, 02-04-02 杨书贤, 0]>
2018-02-01 15:20:39,472 DEBUG [java.sql.ResultSet] - <{rset-100556} Result: [0001-008-02-04-03, 02-04-03 测试, 0]>
2018-02-01 15:20:39,472 DEBUG [java.sql.ResultSet] - <{rset-100556} Result: [0001-008-02-04-04, 02-04-04 测试2, 0]>
2018-02-01 15:20:49,962 DEBUG [java.sql.Connection] - <{conn-100557} Connection>
2018-02-01 15:20:49,962 DEBUG [java.sql.Connection] - <{conn-100557} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 15:20:49,962 DEBUG [java.sql.PreparedStatement] - <{pstm-100558} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 15:20:49,962 DEBUG [java.sql.PreparedStatement] - <{pstm-100558} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 15:20:49,962 DEBUG [java.sql.PreparedStatement] - <{pstm-100558} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 15:20:50,208 DEBUG [java.sql.Connection] - <{conn-100559} Connection>
2018-02-01 15:20:50,209 DEBUG [java.sql.Connection] - <{conn-100559} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 15:20:50,209 DEBUG [java.sql.PreparedStatement] - <{pstm-100560} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 15:20:50,209 DEBUG [java.sql.PreparedStatement] - <{pstm-100560} Parameters: [2017, A]>
2018-02-01 15:20:50,210 DEBUG [java.sql.PreparedStatement] - <{pstm-100560} Types: [java.lang.String, java.lang.String]>
2018-02-01 15:20:50,215 DEBUG [java.sql.ResultSet] - <{rset-100561} ResultSet>
2018-02-01 15:20:50,215 DEBUG [java.sql.ResultSet] - <{rset-100561} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 15:20:50,215 DEBUG [java.sql.ResultSet] - <{rset-100561} Result: [null, 供热费, 2017, 0001-008-02-04-04, A, 0, 01, 0001, 0001-008, 测试2, 380.48, 0, 0, 380.48, 0, null, A1, 16, null, null, 23.78, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-02-01, 71, 0, 71, 0, 71, 0, 0, 0, 0, 0, 0, 0, 0, 103106, 1]>
2018-02-01 15:20:50,216 DEBUG [java.sql.Connection] - <{conn-100562} Connection>
2018-02-01 15:20:50,216 DEBUG [java.sql.Connection] - <{conn-100562} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 15:20:50,216 DEBUG [java.sql.PreparedStatement] - <{pstm-100563} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 15:20:50,216 DEBUG [java.sql.PreparedStatement] - <{pstm-100563} Parameters: [2017, A]>
2018-02-01 15:20:50,216 DEBUG [java.sql.PreparedStatement] - <{pstm-100563} Types: [java.lang.String, java.lang.String]>
2018-02-01 15:20:50,219 DEBUG [java.sql.ResultSet] - <{rset-100564} ResultSet>
2018-02-01 15:20:50,219 DEBUG [java.sql.ResultSet] - <{rset-100564} Header: [count(*)]>
2018-02-01 15:20:50,219 DEBUG [java.sql.ResultSet] - <{rset-100564} Result: [1]>
2018-02-01 15:20:50,293 DEBUG [java.sql.Connection] - <{conn-100565} Connection>
2018-02-01 15:20:50,297 DEBUG [java.sql.Connection] - <{conn-100565} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 15:20:50,297 DEBUG [java.sql.PreparedStatement] - <{pstm-100566} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 15:20:50,303 DEBUG [java.sql.PreparedStatement] - <{pstm-100566} Parameters: [2017, A]>
2018-02-01 15:20:50,303 DEBUG [java.sql.PreparedStatement] - <{pstm-100566} Types: [java.lang.String, java.lang.String]>
2018-02-01 15:20:50,308 DEBUG [java.sql.ResultSet] - <{rset-100567} ResultSet>
2018-02-01 15:20:50,308 DEBUG [java.sql.ResultSet] - <{rset-100567} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 15:20:50,308 DEBUG [java.sql.ResultSet] - <{rset-100567} Result: [共1, 380.48, 0, 0, 380.48, 0, null, null, 23.78, 71, 0, 71, 0, 71]>
2018-02-01 15:33:21,607 DEBUG [java.sql.Connection] - <{conn-100568} Connection>
2018-02-01 15:33:21,608 DEBUG [java.sql.Connection] - <{conn-100568} Preparing Statement:         DELETE FROM sf_charge        WHERE                        p_id in (103106)        AND       now_cash = 0             >
2018-02-01 15:33:21,609 DEBUG [java.sql.PreparedStatement] - <{pstm-100569} Executing Statement:         DELETE FROM sf_charge        WHERE                        p_id in (103106)        AND       now_cash = 0             >
2018-02-01 15:33:21,610 DEBUG [java.sql.PreparedStatement] - <{pstm-100569} Parameters: []>
2018-02-01 15:33:21,610 DEBUG [java.sql.PreparedStatement] - <{pstm-100569} Types: []>
2018-02-01 15:33:21,722 DEBUG [java.sql.Connection] - <{conn-100570} Connection>
2018-02-01 15:33:21,722 DEBUG [java.sql.Connection] - <{conn-100570} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 15:33:21,723 DEBUG [java.sql.PreparedStatement] - <{pstm-100571} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 15:33:21,723 DEBUG [java.sql.PreparedStatement] - <{pstm-100571} Parameters: [2017, A]>
2018-02-01 15:33:21,723 DEBUG [java.sql.PreparedStatement] - <{pstm-100571} Types: [java.lang.String, java.lang.String]>
2018-02-01 15:33:21,729 DEBUG [java.sql.ResultSet] - <{rset-100572} ResultSet>
2018-02-01 15:33:21,729 DEBUG [java.sql.Connection] - <{conn-100573} Connection>
2018-02-01 15:33:21,730 DEBUG [java.sql.Connection] - <{conn-100573} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 15:33:21,730 DEBUG [java.sql.PreparedStatement] - <{pstm-100574} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 15:33:21,730 DEBUG [java.sql.PreparedStatement] - <{pstm-100574} Parameters: [2017, A]>
2018-02-01 15:33:21,730 DEBUG [java.sql.PreparedStatement] - <{pstm-100574} Types: [java.lang.String, java.lang.String]>
2018-02-01 15:33:21,733 DEBUG [java.sql.ResultSet] - <{rset-100575} ResultSet>
2018-02-01 15:33:21,733 DEBUG [java.sql.ResultSet] - <{rset-100575} Header: [count(*)]>
2018-02-01 15:33:21,733 DEBUG [java.sql.ResultSet] - <{rset-100575} Result: [0]>
2018-02-01 15:33:21,821 DEBUG [java.sql.Connection] - <{conn-100576} Connection>
2018-02-01 15:33:21,822 DEBUG [java.sql.Connection] - <{conn-100576} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 15:33:21,822 DEBUG [java.sql.PreparedStatement] - <{pstm-100577} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 15:33:21,822 DEBUG [java.sql.PreparedStatement] - <{pstm-100577} Parameters: [2017, A]>
2018-02-01 15:33:21,822 DEBUG [java.sql.PreparedStatement] - <{pstm-100577} Types: [java.lang.String, java.lang.String]>
2018-02-01 15:33:21,827 DEBUG [java.sql.ResultSet] - <{rset-100578} ResultSet>
2018-02-01 15:33:21,827 DEBUG [java.sql.ResultSet] - <{rset-100578} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 15:33:21,827 DEBUG [java.sql.ResultSet] - <{rset-100578} Result: [共0, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-02-01 15:33:34,653 DEBUG [java.sql.Connection] - <{conn-100579} Connection>
2018-02-01 15:33:34,657 DEBUG [java.sql.Connection] - <{conn-100579} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 15:33:34,657 DEBUG [java.sql.PreparedStatement] - <{pstm-100580} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 15:33:34,657 DEBUG [java.sql.PreparedStatement] - <{pstm-100580} Parameters: [2017, A]>
2018-02-01 15:33:34,657 DEBUG [java.sql.PreparedStatement] - <{pstm-100580} Types: [java.lang.String, java.lang.String]>
2018-02-01 15:33:34,663 DEBUG [java.sql.ResultSet] - <{rset-100581} ResultSet>
2018-02-01 15:33:34,663 DEBUG [java.sql.Connection] - <{conn-100582} Connection>
2018-02-01 15:33:34,664 DEBUG [java.sql.Connection] - <{conn-100582} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 15:33:34,664 DEBUG [java.sql.PreparedStatement] - <{pstm-100583} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 15:33:34,664 DEBUG [java.sql.PreparedStatement] - <{pstm-100583} Parameters: [2017, A]>
2018-02-01 15:33:34,664 DEBUG [java.sql.PreparedStatement] - <{pstm-100583} Types: [java.lang.String, java.lang.String]>
2018-02-01 15:33:34,668 DEBUG [java.sql.ResultSet] - <{rset-100584} ResultSet>
2018-02-01 15:33:34,668 DEBUG [java.sql.ResultSet] - <{rset-100584} Header: [count(*)]>
2018-02-01 15:33:34,668 DEBUG [java.sql.ResultSet] - <{rset-100584} Result: [0]>
2018-02-01 15:33:34,721 DEBUG [java.sql.Connection] - <{conn-100585} Connection>
2018-02-01 15:33:34,721 DEBUG [java.sql.Connection] - <{conn-100585} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 15:33:34,722 DEBUG [java.sql.PreparedStatement] - <{pstm-100586} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 15:33:34,722 DEBUG [java.sql.PreparedStatement] - <{pstm-100586} Parameters: [2017, A]>
2018-02-01 15:33:34,722 DEBUG [java.sql.PreparedStatement] - <{pstm-100586} Types: [java.lang.String, java.lang.String]>
2018-02-01 15:33:34,726 DEBUG [java.sql.ResultSet] - <{rset-100587} ResultSet>
2018-02-01 15:33:34,726 DEBUG [java.sql.ResultSet] - <{rset-100587} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 15:33:34,726 DEBUG [java.sql.ResultSet] - <{rset-100587} Result: [共0, null, null, null, null, null, null, null, null, null, null, null, null, null]>
2018-02-01 15:34:07,670 DEBUG [java.sql.Connection] - <{conn-100588} Connection>
2018-02-01 15:34:07,670 DEBUG [java.sql.Connection] - <{conn-100588} Preparing Call: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 15:34:07,670 DEBUG [java.sql.PreparedStatement] - <{pstm-100589} Executing Statement: {call pkg_charge.createPlan(?,?,?,?,?,?,?,?)}>
2018-02-01 15:34:07,670 DEBUG [java.sql.PreparedStatement] - <{pstm-100589} Parameters: [A, 2017, '0001-008-02-04-04', 1, 100043]>
2018-02-01 15:34:07,670 DEBUG [java.sql.PreparedStatement] - <{pstm-100589} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]>
2018-02-01 15:34:07,762 DEBUG [java.sql.Connection] - <{conn-100590} Connection>
2018-02-01 15:34:07,762 DEBUG [java.sql.Connection] - <{conn-100590} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 15:34:07,763 DEBUG [java.sql.PreparedStatement] - <{pstm-100591} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 15:34:07,763 DEBUG [java.sql.PreparedStatement] - <{pstm-100591} Parameters: [2017, A]>
2018-02-01 15:34:07,763 DEBUG [java.sql.PreparedStatement] - <{pstm-100591} Types: [java.lang.String, java.lang.String]>
2018-02-01 15:34:07,767 DEBUG [java.sql.ResultSet] - <{rset-100592} ResultSet>
2018-02-01 15:34:07,768 DEBUG [java.sql.ResultSet] - <{rset-100592} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 15:34:07,768 DEBUG [java.sql.ResultSet] - <{rset-100592} Result: [null, 供热费, 2017, 0001-008-02-04-04, A, 0, 01, 0001, 0001-008, 测试2, 380.48, 0, 0, 380.48, 0, null, A1, 16, null, null, 23.78, 2017-11-01, 2018-03-31, 0, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103107, 1]>
2018-02-01 15:34:07,768 DEBUG [java.sql.Connection] - <{conn-100593} Connection>
2018-02-01 15:34:07,768 DEBUG [java.sql.Connection] - <{conn-100593} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 15:34:07,768 DEBUG [java.sql.PreparedStatement] - <{pstm-100594} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 15:34:07,769 DEBUG [java.sql.PreparedStatement] - <{pstm-100594} Parameters: [2017, A]>
2018-02-01 15:34:07,769 DEBUG [java.sql.PreparedStatement] - <{pstm-100594} Types: [java.lang.String, java.lang.String]>
2018-02-01 15:34:07,772 DEBUG [java.sql.ResultSet] - <{rset-100595} ResultSet>
2018-02-01 15:34:07,772 DEBUG [java.sql.ResultSet] - <{rset-100595} Header: [count(*)]>
2018-02-01 15:34:07,772 DEBUG [java.sql.ResultSet] - <{rset-100595} Result: [1]>
2018-02-01 15:34:07,839 DEBUG [java.sql.Connection] - <{conn-100596} Connection>
2018-02-01 15:34:07,840 DEBUG [java.sql.Connection] - <{conn-100596} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 15:34:07,840 DEBUG [java.sql.PreparedStatement] - <{pstm-100597} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 15:34:07,840 DEBUG [java.sql.PreparedStatement] - <{pstm-100597} Parameters: [2017, A]>
2018-02-01 15:34:07,840 DEBUG [java.sql.PreparedStatement] - <{pstm-100597} Types: [java.lang.String, java.lang.String]>
2018-02-01 15:34:07,848 DEBUG [java.sql.ResultSet] - <{rset-100598} ResultSet>
2018-02-01 15:34:07,848 DEBUG [java.sql.ResultSet] - <{rset-100598} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 15:34:07,853 DEBUG [java.sql.ResultSet] - <{rset-100598} Result: [共1, 380.48, 0, 0, 380.48, 0, null, null, 23.78, 0, 0, 0, 0, 0]>
2018-02-01 15:39:42,580 DEBUG [java.sql.Connection] - <{conn-100599} Connection>
2018-02-01 15:39:42,584 DEBUG [java.sql.Connection] - <{conn-100599} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 15:39:42,584 DEBUG [java.sql.PreparedStatement] - <{pstm-100600} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 15:39:42,584 DEBUG [java.sql.PreparedStatement] - <{pstm-100600} Parameters: [2017, A]>
2018-02-01 15:39:42,584 DEBUG [java.sql.PreparedStatement] - <{pstm-100600} Types: [java.lang.String, java.lang.String]>
2018-02-01 15:39:42,590 DEBUG [java.sql.ResultSet] - <{rset-100601} ResultSet>
2018-02-01 15:39:42,591 DEBUG [java.sql.ResultSet] - <{rset-100601} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 15:39:42,591 DEBUG [java.sql.ResultSet] - <{rset-100601} Result: [null, 供热费, 2017, 0001-008-02-04-04, A, 0, 01, 0001, 0001-008, 测试2, 380.48, 0, 0, 380.48, 0, null, A1, 16, null, null, 23.78, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-02-01, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103107, 1]>
2018-02-01 15:39:42,591 DEBUG [java.sql.Connection] - <{conn-100602} Connection>
2018-02-01 15:39:42,592 DEBUG [java.sql.Connection] - <{conn-100602} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 15:39:42,594 DEBUG [java.sql.PreparedStatement] - <{pstm-100603} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 15:39:42,594 DEBUG [java.sql.PreparedStatement] - <{pstm-100603} Parameters: [2017, A]>
2018-02-01 15:39:42,594 DEBUG [java.sql.PreparedStatement] - <{pstm-100603} Types: [java.lang.String, java.lang.String]>
2018-02-01 15:39:42,598 DEBUG [java.sql.ResultSet] - <{rset-100604} ResultSet>
2018-02-01 15:39:42,598 DEBUG [java.sql.ResultSet] - <{rset-100604} Header: [count(*)]>
2018-02-01 15:39:42,598 DEBUG [java.sql.ResultSet] - <{rset-100604} Result: [1]>
2018-02-01 15:39:42,719 DEBUG [java.sql.Connection] - <{conn-100605} Connection>
2018-02-01 15:39:42,719 DEBUG [java.sql.Connection] - <{conn-100605} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 15:39:42,719 DEBUG [java.sql.PreparedStatement] - <{pstm-100606} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 15:39:42,720 DEBUG [java.sql.PreparedStatement] - <{pstm-100606} Parameters: [2017, A]>
2018-02-01 15:39:42,720 DEBUG [java.sql.PreparedStatement] - <{pstm-100606} Types: [java.lang.String, java.lang.String]>
2018-02-01 15:39:42,724 DEBUG [java.sql.ResultSet] - <{rset-100607} ResultSet>
2018-02-01 15:39:42,724 DEBUG [java.sql.ResultSet] - <{rset-100607} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 15:39:42,724 DEBUG [java.sql.ResultSet] - <{rset-100607} Result: [共1, 380.48, 0, 0, 380.48, 0, null, null, 23.78, null, 0, 0, 0, 0]>
2018-02-01 15:56:59,369 DEBUG [java.sql.Connection] - <{conn-100608} Connection>
2018-02-01 15:56:59,371 DEBUG [java.sql.Connection] - <{conn-100608} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 15:56:59,371 DEBUG [java.sql.PreparedStatement] - <{pstm-100609} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 15:56:59,371 DEBUG [java.sql.PreparedStatement] - <{pstm-100609} Parameters: [2017, A]>
2018-02-01 15:56:59,371 DEBUG [java.sql.PreparedStatement] - <{pstm-100609} Types: [java.lang.String, java.lang.String]>
2018-02-01 15:56:59,376 DEBUG [java.sql.ResultSet] - <{rset-100610} ResultSet>
2018-02-01 15:56:59,377 DEBUG [java.sql.ResultSet] - <{rset-100610} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 15:56:59,377 DEBUG [java.sql.ResultSet] - <{rset-100610} Result: [null, 供热费, 2017, 0001-008-02-04-04, A, 0, 01, 0001, 0001-008, 测试2, 380.48, 0, 0, 380.48, 0, null, A1, 16, null, null, 23.78, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-02-01, 213, 0, 213, 0, 213, 0, 0, 0, 0, 0, 0, 0, 0, 103107, 1]>
2018-02-01 15:56:59,377 DEBUG [java.sql.Connection] - <{conn-100611} Connection>
2018-02-01 15:56:59,377 DEBUG [java.sql.Connection] - <{conn-100611} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 15:56:59,377 DEBUG [java.sql.PreparedStatement] - <{pstm-100612} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 15:56:59,378 DEBUG [java.sql.PreparedStatement] - <{pstm-100612} Parameters: [2017, A]>
2018-02-01 15:56:59,378 DEBUG [java.sql.PreparedStatement] - <{pstm-100612} Types: [java.lang.String, java.lang.String]>
2018-02-01 15:56:59,380 DEBUG [java.sql.ResultSet] - <{rset-100613} ResultSet>
2018-02-01 15:56:59,380 DEBUG [java.sql.ResultSet] - <{rset-100613} Header: [count(*)]>
2018-02-01 15:56:59,380 DEBUG [java.sql.ResultSet] - <{rset-100613} Result: [1]>
2018-02-01 15:56:59,455 DEBUG [java.sql.Connection] - <{conn-100614} Connection>
2018-02-01 15:56:59,456 DEBUG [java.sql.Connection] - <{conn-100614} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 15:56:59,456 DEBUG [java.sql.PreparedStatement] - <{pstm-100615} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 15:56:59,456 DEBUG [java.sql.PreparedStatement] - <{pstm-100615} Parameters: [2017, A]>
2018-02-01 15:56:59,456 DEBUG [java.sql.PreparedStatement] - <{pstm-100615} Types: [java.lang.String, java.lang.String]>
2018-02-01 15:56:59,461 DEBUG [java.sql.ResultSet] - <{rset-100616} ResultSet>
2018-02-01 15:56:59,461 DEBUG [java.sql.ResultSet] - <{rset-100616} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 15:56:59,461 DEBUG [java.sql.ResultSet] - <{rset-100616} Result: [共1, 380.48, 0, 0, 380.48, 0, null, null, 23.78, 213, 0, 213, 0, 213]>
2018-02-01 16:00:38,928 DEBUG [java.sql.Connection] - <{conn-100617} Connection>
2018-02-01 16:00:38,929 DEBUG [java.sql.Connection] - <{conn-100617} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 16:00:38,929 DEBUG [java.sql.PreparedStatement] - <{pstm-100618} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 16:00:38,930 DEBUG [java.sql.PreparedStatement] - <{pstm-100618} Parameters: [2017, A]>
2018-02-01 16:00:38,930 DEBUG [java.sql.PreparedStatement] - <{pstm-100618} Types: [java.lang.String, java.lang.String]>
2018-02-01 16:00:38,934 DEBUG [java.sql.ResultSet] - <{rset-100619} ResultSet>
2018-02-01 16:00:38,934 DEBUG [java.sql.ResultSet] - <{rset-100619} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 16:00:38,934 DEBUG [java.sql.ResultSet] - <{rset-100619} Result: [null, 供热费, 2017, 0001-008-02-04-04, A, 0, 01, 0001, 0001-008, 测试2, 380.48, 0, 0, 380.48, 0, null, A1, 16, null, null, 23.78, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-02-01, 213, 0, 213, 0, 213, 0, 0, 0, 0, 0, 0, 0, 0, 103107, 1]>
2018-02-01 16:00:38,935 DEBUG [java.sql.Connection] - <{conn-100620} Connection>
2018-02-01 16:00:38,935 DEBUG [java.sql.Connection] - <{conn-100620} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 16:00:38,935 DEBUG [java.sql.PreparedStatement] - <{pstm-100621} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 16:00:38,935 DEBUG [java.sql.PreparedStatement] - <{pstm-100621} Parameters: [2017, A]>
2018-02-01 16:00:38,935 DEBUG [java.sql.PreparedStatement] - <{pstm-100621} Types: [java.lang.String, java.lang.String]>
2018-02-01 16:00:38,938 DEBUG [java.sql.ResultSet] - <{rset-100622} ResultSet>
2018-02-01 16:00:38,938 DEBUG [java.sql.ResultSet] - <{rset-100622} Header: [count(*)]>
2018-02-01 16:00:38,938 DEBUG [java.sql.ResultSet] - <{rset-100622} Result: [1]>
2018-02-01 16:00:38,999 DEBUG [java.sql.Connection] - <{conn-100623} Connection>
2018-02-01 16:00:39,000 DEBUG [java.sql.Connection] - <{conn-100623} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 16:00:39,000 DEBUG [java.sql.PreparedStatement] - <{pstm-100624} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 16:00:39,000 DEBUG [java.sql.PreparedStatement] - <{pstm-100624} Parameters: [2017, A]>
2018-02-01 16:00:39,000 DEBUG [java.sql.PreparedStatement] - <{pstm-100624} Types: [java.lang.String, java.lang.String]>
2018-02-01 16:00:39,004 DEBUG [java.sql.ResultSet] - <{rset-100625} ResultSet>
2018-02-01 16:00:39,004 DEBUG [java.sql.ResultSet] - <{rset-100625} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 16:00:39,004 DEBUG [java.sql.ResultSet] - <{rset-100625} Result: [共1, 380.48, 0, 0, 380.48, 0, null, null, 23.78, 213, 0, 213, 0, 213]>
2018-02-01 16:00:40,231 DEBUG [java.sql.Connection] - <{conn-100626} Connection>
2018-02-01 16:00:40,232 DEBUG [java.sql.Connection] - <{conn-100626} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 16:00:40,232 DEBUG [java.sql.PreparedStatement] - <{pstm-100627} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 16:00:40,233 DEBUG [java.sql.PreparedStatement] - <{pstm-100627} Parameters: [2017, A]>
2018-02-01 16:00:40,233 DEBUG [java.sql.PreparedStatement] - <{pstm-100627} Types: [java.lang.String, java.lang.String]>
2018-02-01 16:00:40,238 DEBUG [java.sql.ResultSet] - <{rset-100628} ResultSet>
2018-02-01 16:00:40,238 DEBUG [java.sql.ResultSet] - <{rset-100628} Header: [username, item_name, charge_month, house_code, item_code, meter_id, cid, community_code, building_code, owner_name, total_account, minus_money, subtract_money, real_account, now_cash, use_type, standard_code, price, build_area, floor_area, charge_area, plan_begin_date, plan_end_date, days, latefee_startdate, latefee_enddate, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf, las_reading, this_reading, point_number, waste, stopheating, stoptotalaccount, back_money, is_input, p_id, rn]>
2018-02-01 16:00:40,238 DEBUG [java.sql.ResultSet] - <{rset-100628} Result: [null, 供热费, 2017, 0001-008-02-04-04, A, 0, 01, 0001, 0001-008, 测试2, 380.48, 0, 0, 380.48, 0, null, A1, 16, null, null, 23.78, 2017-11-01, 2018-03-31, 0, 2017-11-01, 2018-02-01, 213, 0, 213, 0, 213, 0, 0, 0, 0, 0, 0, 0, 0, 103107, 1]>
2018-02-01 16:00:40,238 DEBUG [java.sql.Connection] - <{conn-100629} Connection>
2018-02-01 16:00:40,239 DEBUG [java.sql.Connection] - <{conn-100629} Preparing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 16:00:40,239 DEBUG [java.sql.PreparedStatement] - <{pstm-100630} Executing Statement:    select count(*)    from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?              >
2018-02-01 16:00:40,239 DEBUG [java.sql.PreparedStatement] - <{pstm-100630} Parameters: [2017, A]>
2018-02-01 16:00:40,239 DEBUG [java.sql.PreparedStatement] - <{pstm-100630} Types: [java.lang.String, java.lang.String]>
2018-02-01 16:00:40,243 DEBUG [java.sql.ResultSet] - <{rset-100631} ResultSet>
2018-02-01 16:00:40,243 DEBUG [java.sql.ResultSet] - <{rset-100631} Header: [count(*)]>
2018-02-01 16:00:40,243 DEBUG [java.sql.ResultSet] - <{rset-100631} Result: [1]>
2018-02-01 16:00:40,302 DEBUG [java.sql.Connection] - <{conn-100632} Connection>
2018-02-01 16:00:40,302 DEBUG [java.sql.Connection] - <{conn-100632} Preparing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 16:00:40,303 DEBUG [java.sql.PreparedStatement] - <{pstm-100633} Executing Statement:         select   '共' || COUNT(house_code) || '' AS house_count,     sum(TOTAL_ACCOUNT)    TOTAL_ACCOUNT        ,     sum(MINUS_MONEY)  MINUS_MONEY            ,     sum(SUBTRACT_MONEY)   SUBTRACT_MONEY        ,     sum(REAL_ACCOUNT)  REAL_ACCOUNT          ,     sum(NOW_CASH)  NOW_CASH               ,     sum(BUILD_AREA)  BUILD_AREA             ,     sum(FLOOR_AREA)  FLOOR_AREA             ,     sum(CHARGE_AREA) CHARGE_AREA             ,          sum(LATEFEE_TOTALACCOUNT) LATEFEE_TOTALACCOUNT     ,     sum(LATEFEE_MINUS )    LATEFEE_MINUS       ,     sum(LATEFEE_REALACCOUNT)     LATEFEE_REALACCOUNT ,     sum(LATEFEE_NOWCASH)    LATEFEE_NOWCASH,     sum(LATEFEE_REALACCOUNT-LATEFEE_NOWCASH)    LATEFEE_QF              from SF_CHARGE    WHERE               charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?          >
2018-02-01 16:00:40,303 DEBUG [java.sql.PreparedStatement] - <{pstm-100633} Parameters: [2017, A]>
2018-02-01 16:00:40,303 DEBUG [java.sql.PreparedStatement] - <{pstm-100633} Types: [java.lang.String, java.lang.String]>
2018-02-01 16:00:40,306 DEBUG [java.sql.ResultSet] - <{rset-100634} ResultSet>
2018-02-01 16:00:40,307 DEBUG [java.sql.ResultSet] - <{rset-100634} Header: [house_count, total_account, minus_money, subtract_money, real_account, now_cash, build_area, floor_area, charge_area, latefee_totalaccount, latefee_minus, latefee_realaccount, latefee_nowcash, latefee_qf]>
2018-02-01 16:00:40,307 DEBUG [java.sql.ResultSet] - <{rset-100634} Result: [共1, 380.48, 0, 0, 380.48, 0, null, null, 23.78, 213, 0, 213, 0, 213]>
2018-02-01 16:01:02,002 DEBUG [java.sql.Connection] - <{conn-100635} Connection>
2018-02-01 16:01:02,003 DEBUG [java.sql.Connection] - <{conn-100635} Preparing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
2018-02-01 16:01:02,003 DEBUG [java.sql.PreparedStatement] - <{pstm-100636} Executing Statement: SELECT * FROM (SELECT page.*, ROWNUM AS rn FROM (   select * from    (select      b.userName,     c.item_name,CHARGE_MONTH             ,     HOUSE_CODE               ,     a.ITEM_CODE                ,     METER_ID                 ,     a.CID                      ,     COMMUNITY_CODE           ,     BUILDING_CODE            ,     OWNER_NAME               ,     TOTAL_ACCOUNT            ,     MINUS_MONEY              ,     SUBTRACT_MONEY           ,     REAL_ACCOUNT             ,     NOW_CASH                 ,     USE_TYPE                 ,     STANDARD_CODE            ,     PRICE                    ,     BUILD_AREA               ,     FLOOR_AREA               ,     CHARGE_AREA              ,     PLAN_BEGIN_DATE          ,     PLAN_END_DATE            ,     DAYS                     ,     LATEFEE_STARTDATE        ,     LATEFEE_ENDDATE          ,     LATEFEE_TOTALACCOUNT     ,     LATEFEE_MINUS            ,     LATEFEE_REALACCOUNT      ,     LATEFEE_NOWCASH          ,     LATEFEE_REALACCOUNT-LATEFEE_NOWCASH LATEFEE_QF,     LAS_READING              ,     THIS_READING             ,     POINT_NUMBER             ,     WASTE                    ,     STOPHEATING              ,     STOPTOTALACCOUNT         ,     BACK_MONEY               ,     IS_INPUT ,     a.p_id   from SF_CHARGE a,EAUSER b,sf_item c where a.house_manager=b.USERID(+)   and a.item_code=c.item_code(+)   ) a    WHERE          charge_month in (?)        AND          (community_code in ('0001-008-02-04-04') or     building_code in ('0001-008-02-04-04') or     house_code in ('0001-008-02-04-04'))            AND      item_code =?                order by house_code asc  ) page) WHERE rn BETWEEN 1 AND 20>
